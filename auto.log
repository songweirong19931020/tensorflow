[2020-07-02 16:41:01] [INFO]  
                 insert into his_bi.dw_work_yj_doctor_d
		(
			st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
			diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
			item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
		)
		SELECT st_date,
			项目父编码 item_code,
			项目父名称 item_name,
			开单科室编码 dept_code,
			开单科室 dept_name,
			parent_dept_code,
			parent_dept_name,
			diag_emp_id,
			diag_emp_name, 
			执行科室编码 AS performed_dept_code,
			执行科室 AS performed_dept_name,
			in_out_flag,
			item_class,
			次数 AS amount, 
			人次 AS patient_num,
			费用 AS charges,
			area_code,
			work_dept AS work_dept_code,
			NAME AS work_dept_name,
			now()
 FROM 
			(
			SELECT to_char(m.enter_date,'yyyymmdd') st_date,
						 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
						 m.in_out_flag,
						 t2.property1 AS area_code,
						 m.performed_by 执行科室编码,     
						 t1.name AS 执行科室,
						 m.ordered_by 开单科室编码,
						 t2.name AS 开单科室, 
						 n1.code as parent_dept_code,
						 n1.name as parent_dept_name,
						 m.diag_emp_id,
						 m.diag_emp_name,
						 SUM(m.charges) 费用,
						 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
						 m.clinic_id 项目父编码,
						 tt.item_name 项目父名称,
						 m.item_class, 
						 u.work_dept,  
						 n2.name
		FROM his_bi.bms_bill_item  m
		left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
		left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
		left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
		LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
		left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
		left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
		WHERE m.item_name <> '体检费'    --排除体检
		AND m.refund_flag IS NULL 
		AND m.rel_refund_id IS NULL
		AND m.item_class IN ('C','D')
		and t2.property1 in ('H0001')
		AND t1.property3='4'   --执行科室为医技科室
		AND m.in_out_flag='O'
		AND m.clinic_id IS NOT NULL
		AND m.enter_date>= to_date('20200101','yyyyMMdd')
		AND m.enter_date<  to_date('20200101','yyyyMMdd') + 1
		GROUP BY   to_char(m.enter_date,'yyyymmdd'),
						 m.in_out_flag, 
						 t2.property1 ,
						 m.performed_by,
						 t1.name ,
						 m.ordered_by, 
						 t2.name,
						 tt.item_name,
						 m.clinic_id ,
						 m.item_class,
							m.diag_emp_id,
						 m.diag_emp_name,
						 u.work_dept,  
						 n2.name,
						 n1.code ,
						 n1.name
		UNION ALL
		SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
						 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
						 m.in_out_flag,
						 t2.property1 AS area_code,
						 m.performed_by 执行科室编码,     
						 t1.name AS 执行科室,
						 m.ordered_by 开单科室编码,
						 t2.name AS 开单科室,
						 n1.code as parent_dept_code,
						 n1.name as parent_dept_name, 
						 m.diag_emp_id,
						 m.diag_emp_name,
						 SUM(m.charges) 费用,
						 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
						 m.clinic_id 项目父编码,
						 tt.item_name 项目父名称,
						 m.item_class,
						 u.work_dept,  
						 n2.name
		FROM his_bi.bms_bill_item  m
		left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
		left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
		left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
		LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
		left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
		left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
		WHERE m.item_class IN ('C','D')
		AND m.refund_flag IS NULL 
		AND m.rel_refund_id IS NULL
		and t2.property1 in ('H0001')
		AND t1.property3='4'  --执行科室为医技科室
		AND m.in_out_flag='I'
		AND m.clinic_id IS NOT NULL
		AND m.enter_date>= to_date('20200101','yyyyMMdd')
		AND m.enter_date<  to_date('20200101','yyyyMMdd') + 1
		GROUP BY   to_char(m.enter_date,'yyyymmdd'),
						 m.in_out_flag, 
						 t2.property1 ,
						 m.performed_by,
						 t1.name ,
						 m.ordered_by, 
						 t2.name,
						 tt.item_name,
						 m.clinic_id ,
						 m.item_class,
							m.diag_emp_id,
						 m.diag_emp_name,
						 u.work_dept,  
						 n2.name,
						 n1.code ,
						 n1.name
						 ) as total
			;
                 
[2020-07-02 16:41:13] [INFO]  
                 insert into his_bi.dw_work_yj_doctor_d
		(
			st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
			diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
			item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
		)
		SELECT st_date,
			项目父编码 item_code,
			项目父名称 item_name,
			开单科室编码 dept_code,
			开单科室 dept_name,
			parent_dept_code,
			parent_dept_name,
			diag_emp_id,
			diag_emp_name, 
			执行科室编码 AS performed_dept_code,
			执行科室 AS performed_dept_name,
			in_out_flag,
			item_class,
			次数 AS amount, 
			人次 AS patient_num,
			费用 AS charges,
			area_code,
			work_dept AS work_dept_code,
			NAME AS work_dept_name,
			now()
 FROM 
			(
			SELECT to_char(m.enter_date,'yyyymmdd') st_date,
						 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
						 m.in_out_flag,
						 t2.property1 AS area_code,
						 m.performed_by 执行科室编码,     
						 t1.name AS 执行科室,
						 m.ordered_by 开单科室编码,
						 t2.name AS 开单科室, 
						 n1.code as parent_dept_code,
						 n1.name as parent_dept_name,
						 m.diag_emp_id,
						 m.diag_emp_name,
						 SUM(m.charges) 费用,
						 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
						 m.clinic_id 项目父编码,
						 tt.item_name 项目父名称,
						 m.item_class, 
						 u.work_dept,  
						 n2.name
		FROM his_bi.bms_bill_item  m
		left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
		left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
		left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
		LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
		left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
		left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
		WHERE m.item_name <> '体检费'    --排除体检
		AND m.refund_flag IS NULL 
		AND m.rel_refund_id IS NULL
		AND m.item_class IN ('C','D')
		and t2.property1 in ('H0001')
		AND t1.property3='4'   --执行科室为医技科室
		AND m.in_out_flag='O'
		AND m.clinic_id IS NOT NULL
		AND m.enter_date>= to_date('20200102','yyyyMMdd')
		AND m.enter_date<  to_date('20200102','yyyyMMdd') + 1
		GROUP BY   to_char(m.enter_date,'yyyymmdd'),
						 m.in_out_flag, 
						 t2.property1 ,
						 m.performed_by,
						 t1.name ,
						 m.ordered_by, 
						 t2.name,
						 tt.item_name,
						 m.clinic_id ,
						 m.item_class,
							m.diag_emp_id,
						 m.diag_emp_name,
						 u.work_dept,  
						 n2.name,
						 n1.code ,
						 n1.name
		UNION ALL
		SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
						 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
						 m.in_out_flag,
						 t2.property1 AS area_code,
						 m.performed_by 执行科室编码,     
						 t1.name AS 执行科室,
						 m.ordered_by 开单科室编码,
						 t2.name AS 开单科室,
						 n1.code as parent_dept_code,
						 n1.name as parent_dept_name, 
						 m.diag_emp_id,
						 m.diag_emp_name,
						 SUM(m.charges) 费用,
						 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
						 m.clinic_id 项目父编码,
						 tt.item_name 项目父名称,
						 m.item_class,
						 u.work_dept,  
						 n2.name
		FROM his_bi.bms_bill_item  m
		left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
		left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
		left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
		LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
		left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
		left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
		WHERE m.item_class IN ('C','D')
		AND m.refund_flag IS NULL 
		AND m.rel_refund_id IS NULL
		and t2.property1 in ('H0001')
		AND t1.property3='4'  --执行科室为医技科室
		AND m.in_out_flag='I'
		AND m.clinic_id IS NOT NULL
		AND m.enter_date>= to_date('20200102','yyyyMMdd')
		AND m.enter_date<  to_date('20200102','yyyyMMdd') + 1
		GROUP BY   to_char(m.enter_date,'yyyymmdd'),
						 m.in_out_flag, 
						 t2.property1 ,
						 m.performed_by,
						 t1.name ,
						 m.ordered_by, 
						 t2.name,
						 tt.item_name,
						 m.clinic_id ,
						 m.item_class,
							m.diag_emp_id,
						 m.diag_emp_name,
						 u.work_dept,  
						 n2.name,
						 n1.code ,
						 n1.name
						 ) as total
			;
                 
[2020-07-02 16:41:27] [INFO]  
                 insert into his_bi.dw_work_yj_doctor_d
		(
			st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
			diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
			item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
		)
		SELECT st_date,
			项目父编码 item_code,
			项目父名称 item_name,
			开单科室编码 dept_code,
			开单科室 dept_name,
			parent_dept_code,
			parent_dept_name,
			diag_emp_id,
			diag_emp_name, 
			执行科室编码 AS performed_dept_code,
			执行科室 AS performed_dept_name,
			in_out_flag,
			item_class,
			次数 AS amount, 
			人次 AS patient_num,
			费用 AS charges,
			area_code,
			work_dept AS work_dept_code,
			NAME AS work_dept_name,
			now()
 FROM 
			(
			SELECT to_char(m.enter_date,'yyyymmdd') st_date,
						 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
						 m.in_out_flag,
						 t2.property1 AS area_code,
						 m.performed_by 执行科室编码,     
						 t1.name AS 执行科室,
						 m.ordered_by 开单科室编码,
						 t2.name AS 开单科室, 
						 n1.code as parent_dept_code,
						 n1.name as parent_dept_name,
						 m.diag_emp_id,
						 m.diag_emp_name,
						 SUM(m.charges) 费用,
						 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
						 m.clinic_id 项目父编码,
						 tt.item_name 项目父名称,
						 m.item_class, 
						 u.work_dept,  
						 n2.name
		FROM his_bi.bms_bill_item  m
		left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
		left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
		left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
		LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
		left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
		left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
		WHERE m.item_name <> '体检费'    --排除体检
		AND m.refund_flag IS NULL 
		AND m.rel_refund_id IS NULL
		AND m.item_class IN ('C','D')
		and t2.property1 in ('H0001')
		AND t1.property3='4'   --执行科室为医技科室
		AND m.in_out_flag='O'
		AND m.clinic_id IS NOT NULL
		AND m.enter_date>= to_date('20200103','yyyyMMdd')
		AND m.enter_date<  to_date('20200103','yyyyMMdd') + 1
		GROUP BY   to_char(m.enter_date,'yyyymmdd'),
						 m.in_out_flag, 
						 t2.property1 ,
						 m.performed_by,
						 t1.name ,
						 m.ordered_by, 
						 t2.name,
						 tt.item_name,
						 m.clinic_id ,
						 m.item_class,
							m.diag_emp_id,
						 m.diag_emp_name,
						 u.work_dept,  
						 n2.name,
						 n1.code ,
						 n1.name
		UNION ALL
		SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
						 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
						 m.in_out_flag,
						 t2.property1 AS area_code,
						 m.performed_by 执行科室编码,     
						 t1.name AS 执行科室,
						 m.ordered_by 开单科室编码,
						 t2.name AS 开单科室,
						 n1.code as parent_dept_code,
						 n1.name as parent_dept_name, 
						 m.diag_emp_id,
						 m.diag_emp_name,
						 SUM(m.charges) 费用,
						 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
						 m.clinic_id 项目父编码,
						 tt.item_name 项目父名称,
						 m.item_class,
						 u.work_dept,  
						 n2.name
		FROM his_bi.bms_bill_item  m
		left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
		left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
		left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
		LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
		left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
		left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
		WHERE m.item_class IN ('C','D')
		AND m.refund_flag IS NULL 
		AND m.rel_refund_id IS NULL
		and t2.property1 in ('H0001')
		AND t1.property3='4'  --执行科室为医技科室
		AND m.in_out_flag='I'
		AND m.clinic_id IS NOT NULL
		AND m.enter_date>= to_date('20200103','yyyyMMdd')
		AND m.enter_date<  to_date('20200103','yyyyMMdd') + 1
		GROUP BY   to_char(m.enter_date,'yyyymmdd'),
						 m.in_out_flag, 
						 t2.property1 ,
						 m.performed_by,
						 t1.name ,
						 m.ordered_by, 
						 t2.name,
						 tt.item_name,
						 m.clinic_id ,
						 m.item_class,
							m.diag_emp_id,
						 m.diag_emp_name,
						 u.work_dept,  
						 n2.name,
						 n1.code ,
						 n1.name
						 ) as total
			;
                 
[2020-07-02 16:41:43] [INFO]  
                 insert into his_bi.dw_work_yj_doctor_d
		(
			st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
			diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
			item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
		)
		SELECT st_date,
			项目父编码 item_code,
			项目父名称 item_name,
			开单科室编码 dept_code,
			开单科室 dept_name,
			parent_dept_code,
			parent_dept_name,
			diag_emp_id,
			diag_emp_name, 
			执行科室编码 AS performed_dept_code,
			执行科室 AS performed_dept_name,
			in_out_flag,
			item_class,
			次数 AS amount, 
			人次 AS patient_num,
			费用 AS charges,
			area_code,
			work_dept AS work_dept_code,
			NAME AS work_dept_name,
			now()
 FROM 
			(
			SELECT to_char(m.enter_date,'yyyymmdd') st_date,
						 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
						 m.in_out_flag,
						 t2.property1 AS area_code,
						 m.performed_by 执行科室编码,     
						 t1.name AS 执行科室,
						 m.ordered_by 开单科室编码,
						 t2.name AS 开单科室, 
						 n1.code as parent_dept_code,
						 n1.name as parent_dept_name,
						 m.diag_emp_id,
						 m.diag_emp_name,
						 SUM(m.charges) 费用,
						 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
						 m.clinic_id 项目父编码,
						 tt.item_name 项目父名称,
						 m.item_class, 
						 u.work_dept,  
						 n2.name
		FROM his_bi.bms_bill_item  m
		left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
		left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
		left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
		LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
		left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
		left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
		WHERE m.item_name <> '体检费'    --排除体检
		AND m.refund_flag IS NULL 
		AND m.rel_refund_id IS NULL
		AND m.item_class IN ('C','D')
		and t2.property1 in ('H0001')
		AND t1.property3='4'   --执行科室为医技科室
		AND m.in_out_flag='O'
		AND m.clinic_id IS NOT NULL
		AND m.enter_date>= to_date('20200104','yyyyMMdd')
		AND m.enter_date<  to_date('20200104','yyyyMMdd') + 1
		GROUP BY   to_char(m.enter_date,'yyyymmdd'),
						 m.in_out_flag, 
						 t2.property1 ,
						 m.performed_by,
						 t1.name ,
						 m.ordered_by, 
						 t2.name,
						 tt.item_name,
						 m.clinic_id ,
						 m.item_class,
							m.diag_emp_id,
						 m.diag_emp_name,
						 u.work_dept,  
						 n2.name,
						 n1.code ,
						 n1.name
		UNION ALL
		SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
						 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
						 m.in_out_flag,
						 t2.property1 AS area_code,
						 m.performed_by 执行科室编码,     
						 t1.name AS 执行科室,
						 m.ordered_by 开单科室编码,
						 t2.name AS 开单科室,
						 n1.code as parent_dept_code,
						 n1.name as parent_dept_name, 
						 m.diag_emp_id,
						 m.diag_emp_name,
						 SUM(m.charges) 费用,
						 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
						 m.clinic_id 项目父编码,
						 tt.item_name 项目父名称,
						 m.item_class,
						 u.work_dept,  
						 n2.name
		FROM his_bi.bms_bill_item  m
		left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
		left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
		left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
		LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
		left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
		left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
		WHERE m.item_class IN ('C','D')
		AND m.refund_flag IS NULL 
		AND m.rel_refund_id IS NULL
		and t2.property1 in ('H0001')
		AND t1.property3='4'  --执行科室为医技科室
		AND m.in_out_flag='I'
		AND m.clinic_id IS NOT NULL
		AND m.enter_date>= to_date('20200104','yyyyMMdd')
		AND m.enter_date<  to_date('20200104','yyyyMMdd') + 1
		GROUP BY   to_char(m.enter_date,'yyyymmdd'),
						 m.in_out_flag, 
						 t2.property1 ,
						 m.performed_by,
						 t1.name ,
						 m.ordered_by, 
						 t2.name,
						 tt.item_name,
						 m.clinic_id ,
						 m.item_class,
							m.diag_emp_id,
						 m.diag_emp_name,
						 u.work_dept,  
						 n2.name,
						 n1.code ,
						 n1.name
						 ) as total
			;
                 
[2020-07-02 16:41:55] [INFO]  
                 insert into his_bi.dw_work_yj_doctor_d
		(
			st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
			diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
			item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
		)
		SELECT st_date,
			项目父编码 item_code,
			项目父名称 item_name,
			开单科室编码 dept_code,
			开单科室 dept_name,
			parent_dept_code,
			parent_dept_name,
			diag_emp_id,
			diag_emp_name, 
			执行科室编码 AS performed_dept_code,
			执行科室 AS performed_dept_name,
			in_out_flag,
			item_class,
			次数 AS amount, 
			人次 AS patient_num,
			费用 AS charges,
			area_code,
			work_dept AS work_dept_code,
			NAME AS work_dept_name,
			now()
 FROM 
			(
			SELECT to_char(m.enter_date,'yyyymmdd') st_date,
						 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
						 m.in_out_flag,
						 t2.property1 AS area_code,
						 m.performed_by 执行科室编码,     
						 t1.name AS 执行科室,
						 m.ordered_by 开单科室编码,
						 t2.name AS 开单科室, 
						 n1.code as parent_dept_code,
						 n1.name as parent_dept_name,
						 m.diag_emp_id,
						 m.diag_emp_name,
						 SUM(m.charges) 费用,
						 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
						 m.clinic_id 项目父编码,
						 tt.item_name 项目父名称,
						 m.item_class, 
						 u.work_dept,  
						 n2.name
		FROM his_bi.bms_bill_item  m
		left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
		left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
		left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
		LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
		left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
		left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
		WHERE m.item_name <> '体检费'    --排除体检
		AND m.refund_flag IS NULL 
		AND m.rel_refund_id IS NULL
		AND m.item_class IN ('C','D')
		and t2.property1 in ('H0001')
		AND t1.property3='4'   --执行科室为医技科室
		AND m.in_out_flag='O'
		AND m.clinic_id IS NOT NULL
		AND m.enter_date>= to_date('20200105','yyyyMMdd')
		AND m.enter_date<  to_date('20200105','yyyyMMdd') + 1
		GROUP BY   to_char(m.enter_date,'yyyymmdd'),
						 m.in_out_flag, 
						 t2.property1 ,
						 m.performed_by,
						 t1.name ,
						 m.ordered_by, 
						 t2.name,
						 tt.item_name,
						 m.clinic_id ,
						 m.item_class,
							m.diag_emp_id,
						 m.diag_emp_name,
						 u.work_dept,  
						 n2.name,
						 n1.code ,
						 n1.name
		UNION ALL
		SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
						 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
						 m.in_out_flag,
						 t2.property1 AS area_code,
						 m.performed_by 执行科室编码,     
						 t1.name AS 执行科室,
						 m.ordered_by 开单科室编码,
						 t2.name AS 开单科室,
						 n1.code as parent_dept_code,
						 n1.name as parent_dept_name, 
						 m.diag_emp_id,
						 m.diag_emp_name,
						 SUM(m.charges) 费用,
						 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
						 m.clinic_id 项目父编码,
						 tt.item_name 项目父名称,
						 m.item_class,
						 u.work_dept,  
						 n2.name
		FROM his_bi.bms_bill_item  m
		left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
		left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
		left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
		LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
		left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
		left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
		WHERE m.item_class IN ('C','D')
		AND m.refund_flag IS NULL 
		AND m.rel_refund_id IS NULL
		and t2.property1 in ('H0001')
		AND t1.property3='4'  --执行科室为医技科室
		AND m.in_out_flag='I'
		AND m.clinic_id IS NOT NULL
		AND m.enter_date>= to_date('20200105','yyyyMMdd')
		AND m.enter_date<  to_date('20200105','yyyyMMdd') + 1
		GROUP BY   to_char(m.enter_date,'yyyymmdd'),
						 m.in_out_flag, 
						 t2.property1 ,
						 m.performed_by,
						 t1.name ,
						 m.ordered_by, 
						 t2.name,
						 tt.item_name,
						 m.clinic_id ,
						 m.item_class,
							m.diag_emp_id,
						 m.diag_emp_name,
						 u.work_dept,  
						 n2.name,
						 n1.code ,
						 n1.name
						 ) as total
			;
                 
[2020-07-02 16:42:06] [INFO]  
                 insert into his_bi.dw_work_yj_doctor_d
		(
			st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
			diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
			item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
		)
		SELECT st_date,
			项目父编码 item_code,
			项目父名称 item_name,
			开单科室编码 dept_code,
			开单科室 dept_name,
			parent_dept_code,
			parent_dept_name,
			diag_emp_id,
			diag_emp_name, 
			执行科室编码 AS performed_dept_code,
			执行科室 AS performed_dept_name,
			in_out_flag,
			item_class,
			次数 AS amount, 
			人次 AS patient_num,
			费用 AS charges,
			area_code,
			work_dept AS work_dept_code,
			NAME AS work_dept_name,
			now()
 FROM 
			(
			SELECT to_char(m.enter_date,'yyyymmdd') st_date,
						 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
						 m.in_out_flag,
						 t2.property1 AS area_code,
						 m.performed_by 执行科室编码,     
						 t1.name AS 执行科室,
						 m.ordered_by 开单科室编码,
						 t2.name AS 开单科室, 
						 n1.code as parent_dept_code,
						 n1.name as parent_dept_name,
						 m.diag_emp_id,
						 m.diag_emp_name,
						 SUM(m.charges) 费用,
						 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
						 m.clinic_id 项目父编码,
						 tt.item_name 项目父名称,
						 m.item_class, 
						 u.work_dept,  
						 n2.name
		FROM his_bi.bms_bill_item  m
		left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
		left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
		left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
		LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
		left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
		left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
		WHERE m.item_name <> '体检费'    --排除体检
		AND m.refund_flag IS NULL 
		AND m.rel_refund_id IS NULL
		AND m.item_class IN ('C','D')
		and t2.property1 in ('H0001')
		AND t1.property3='4'   --执行科室为医技科室
		AND m.in_out_flag='O'
		AND m.clinic_id IS NOT NULL
		AND m.enter_date>= to_date('20200106','yyyyMMdd')
		AND m.enter_date<  to_date('20200106','yyyyMMdd') + 1
		GROUP BY   to_char(m.enter_date,'yyyymmdd'),
						 m.in_out_flag, 
						 t2.property1 ,
						 m.performed_by,
						 t1.name ,
						 m.ordered_by, 
						 t2.name,
						 tt.item_name,
						 m.clinic_id ,
						 m.item_class,
							m.diag_emp_id,
						 m.diag_emp_name,
						 u.work_dept,  
						 n2.name,
						 n1.code ,
						 n1.name
		UNION ALL
		SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
						 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
						 m.in_out_flag,
						 t2.property1 AS area_code,
						 m.performed_by 执行科室编码,     
						 t1.name AS 执行科室,
						 m.ordered_by 开单科室编码,
						 t2.name AS 开单科室,
						 n1.code as parent_dept_code,
						 n1.name as parent_dept_name, 
						 m.diag_emp_id,
						 m.diag_emp_name,
						 SUM(m.charges) 费用,
						 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
						 m.clinic_id 项目父编码,
						 tt.item_name 项目父名称,
						 m.item_class,
						 u.work_dept,  
						 n2.name
		FROM his_bi.bms_bill_item  m
		left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
		left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
		left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
		LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
		left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
		left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
		WHERE m.item_class IN ('C','D')
		AND m.refund_flag IS NULL 
		AND m.rel_refund_id IS NULL
		and t2.property1 in ('H0001')
		AND t1.property3='4'  --执行科室为医技科室
		AND m.in_out_flag='I'
		AND m.clinic_id IS NOT NULL
		AND m.enter_date>= to_date('20200106','yyyyMMdd')
		AND m.enter_date<  to_date('20200106','yyyyMMdd') + 1
		GROUP BY   to_char(m.enter_date,'yyyymmdd'),
						 m.in_out_flag, 
						 t2.property1 ,
						 m.performed_by,
						 t1.name ,
						 m.ordered_by, 
						 t2.name,
						 tt.item_name,
						 m.clinic_id ,
						 m.item_class,
							m.diag_emp_id,
						 m.diag_emp_name,
						 u.work_dept,  
						 n2.name,
						 n1.code ,
						 n1.name
						 ) as total
			;
                 
[2020-07-02 16:43:54] [INFO]  
                 insert into his_bi.dw_work_yj_doctor_d
		(
			st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
			diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
			item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
		)
		SELECT st_date,
			项目父编码 item_code,
			项目父名称 item_name,
			开单科室编码 dept_code,
			开单科室 dept_name,
			parent_dept_code,
			parent_dept_name,
			diag_emp_id,
			diag_emp_name, 
			执行科室编码 AS performed_dept_code,
			执行科室 AS performed_dept_name,
			in_out_flag,
			item_class,
			次数 AS amount, 
			人次 AS patient_num,
			费用 AS charges,
			area_code,
			work_dept AS work_dept_code,
			NAME AS work_dept_name,
			now()
 FROM 
			(
			SELECT to_char(m.enter_date,'yyyymmdd') st_date,
						 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
						 m.in_out_flag,
						 t2.property1 AS area_code,
						 m.performed_by 执行科室编码,     
						 t1.name AS 执行科室,
						 m.ordered_by 开单科室编码,
						 t2.name AS 开单科室, 
						 n1.code as parent_dept_code,
						 n1.name as parent_dept_name,
						 m.diag_emp_id,
						 m.diag_emp_name,
						 SUM(m.charges) 费用,
						 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
						 m.clinic_id 项目父编码,
						 tt.item_name 项目父名称,
						 m.item_class, 
						 u.work_dept,  
						 n2.name
		FROM his_bi.bms_bill_item  m
		left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
		left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
		left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
		LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
		left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
		left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
		WHERE m.item_name <> '体检费'    --排除体检
		AND m.refund_flag IS NULL 
		AND m.rel_refund_id IS NULL
		AND m.item_class IN ('C','D')
		and t2.property1 in ('H0001')
		AND t1.property3='4'   --执行科室为医技科室
		AND m.in_out_flag='O'
		AND m.clinic_id IS NOT NULL
		AND m.enter_date>= to_date('20200101','yyyyMMdd')
		AND m.enter_date<  to_date('20200101','yyyyMMdd') + 1
		GROUP BY   to_char(m.enter_date,'yyyymmdd'),
						 m.in_out_flag, 
						 t2.property1 ,
						 m.performed_by,
						 t1.name ,
						 m.ordered_by, 
						 t2.name,
						 tt.item_name,
						 m.clinic_id ,
						 m.item_class,
							m.diag_emp_id,
						 m.diag_emp_name,
						 u.work_dept,  
						 n2.name,
						 n1.code ,
						 n1.name
		UNION ALL
		SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
						 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
						 m.in_out_flag,
						 t2.property1 AS area_code,
						 m.performed_by 执行科室编码,     
						 t1.name AS 执行科室,
						 m.ordered_by 开单科室编码,
						 t2.name AS 开单科室,
						 n1.code as parent_dept_code,
						 n1.name as parent_dept_name, 
						 m.diag_emp_id,
						 m.diag_emp_name,
						 SUM(m.charges) 费用,
						 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
						 m.clinic_id 项目父编码,
						 tt.item_name 项目父名称,
						 m.item_class,
						 u.work_dept,  
						 n2.name
		FROM his_bi.bms_bill_item  m
		left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
		left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
		left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
		LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
		left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
		left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
		WHERE m.item_class IN ('C','D')
		AND m.refund_flag IS NULL 
		AND m.rel_refund_id IS NULL
		and t2.property1 in ('H0001')
		AND t1.property3='4'  --执行科室为医技科室
		AND m.in_out_flag='I'
		AND m.clinic_id IS NOT NULL
		AND m.enter_date>= to_date('20200101','yyyyMMdd')
		AND m.enter_date<  to_date('20200101','yyyyMMdd') + 1
		GROUP BY   to_char(m.enter_date,'yyyymmdd'),
						 m.in_out_flag, 
						 t2.property1 ,
						 m.performed_by,
						 t1.name ,
						 m.ordered_by, 
						 t2.name,
						 tt.item_name,
						 m.clinic_id ,
						 m.item_class,
							m.diag_emp_id,
						 m.diag_emp_name,
						 u.work_dept,  
						 n2.name,
						 n1.code ,
						 n1.name
						 ) as total
			;
                 
[2020-07-02 16:44:06] [INFO]  
                 insert into his_bi.dw_work_yj_doctor_d
		(
			st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
			diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
			item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
		)
		SELECT st_date,
			项目父编码 item_code,
			项目父名称 item_name,
			开单科室编码 dept_code,
			开单科室 dept_name,
			parent_dept_code,
			parent_dept_name,
			diag_emp_id,
			diag_emp_name, 
			执行科室编码 AS performed_dept_code,
			执行科室 AS performed_dept_name,
			in_out_flag,
			item_class,
			次数 AS amount, 
			人次 AS patient_num,
			费用 AS charges,
			area_code,
			work_dept AS work_dept_code,
			NAME AS work_dept_name,
			now()
 FROM 
			(
			SELECT to_char(m.enter_date,'yyyymmdd') st_date,
						 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
						 m.in_out_flag,
						 t2.property1 AS area_code,
						 m.performed_by 执行科室编码,     
						 t1.name AS 执行科室,
						 m.ordered_by 开单科室编码,
						 t2.name AS 开单科室, 
						 n1.code as parent_dept_code,
						 n1.name as parent_dept_name,
						 m.diag_emp_id,
						 m.diag_emp_name,
						 SUM(m.charges) 费用,
						 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
						 m.clinic_id 项目父编码,
						 tt.item_name 项目父名称,
						 m.item_class, 
						 u.work_dept,  
						 n2.name
		FROM his_bi.bms_bill_item  m
		left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
		left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
		left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
		LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
		left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
		left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
		WHERE m.item_name <> '体检费'    --排除体检
		AND m.refund_flag IS NULL 
		AND m.rel_refund_id IS NULL
		AND m.item_class IN ('C','D')
		and t2.property1 in ('H0001')
		AND t1.property3='4'   --执行科室为医技科室
		AND m.in_out_flag='O'
		AND m.clinic_id IS NOT NULL
		AND m.enter_date>= to_date('20200102','yyyyMMdd')
		AND m.enter_date<  to_date('20200102','yyyyMMdd') + 1
		GROUP BY   to_char(m.enter_date,'yyyymmdd'),
						 m.in_out_flag, 
						 t2.property1 ,
						 m.performed_by,
						 t1.name ,
						 m.ordered_by, 
						 t2.name,
						 tt.item_name,
						 m.clinic_id ,
						 m.item_class,
							m.diag_emp_id,
						 m.diag_emp_name,
						 u.work_dept,  
						 n2.name,
						 n1.code ,
						 n1.name
		UNION ALL
		SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
						 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
						 m.in_out_flag,
						 t2.property1 AS area_code,
						 m.performed_by 执行科室编码,     
						 t1.name AS 执行科室,
						 m.ordered_by 开单科室编码,
						 t2.name AS 开单科室,
						 n1.code as parent_dept_code,
						 n1.name as parent_dept_name, 
						 m.diag_emp_id,
						 m.diag_emp_name,
						 SUM(m.charges) 费用,
						 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
						 m.clinic_id 项目父编码,
						 tt.item_name 项目父名称,
						 m.item_class,
						 u.work_dept,  
						 n2.name
		FROM his_bi.bms_bill_item  m
		left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
		left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
		left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
		LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
		left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
		left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
		WHERE m.item_class IN ('C','D')
		AND m.refund_flag IS NULL 
		AND m.rel_refund_id IS NULL
		and t2.property1 in ('H0001')
		AND t1.property3='4'  --执行科室为医技科室
		AND m.in_out_flag='I'
		AND m.clinic_id IS NOT NULL
		AND m.enter_date>= to_date('20200102','yyyyMMdd')
		AND m.enter_date<  to_date('20200102','yyyyMMdd') + 1
		GROUP BY   to_char(m.enter_date,'yyyymmdd'),
						 m.in_out_flag, 
						 t2.property1 ,
						 m.performed_by,
						 t1.name ,
						 m.ordered_by, 
						 t2.name,
						 tt.item_name,
						 m.clinic_id ,
						 m.item_class,
							m.diag_emp_id,
						 m.diag_emp_name,
						 u.work_dept,  
						 n2.name,
						 n1.code ,
						 n1.name
						 ) as total
			;
                 
[2020-07-02 16:44:19] [INFO]  
                 insert into his_bi.dw_work_yj_doctor_d
		(
			st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
			diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
			item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
		)
		SELECT st_date,
			项目父编码 item_code,
			项目父名称 item_name,
			开单科室编码 dept_code,
			开单科室 dept_name,
			parent_dept_code,
			parent_dept_name,
			diag_emp_id,
			diag_emp_name, 
			执行科室编码 AS performed_dept_code,
			执行科室 AS performed_dept_name,
			in_out_flag,
			item_class,
			次数 AS amount, 
			人次 AS patient_num,
			费用 AS charges,
			area_code,
			work_dept AS work_dept_code,
			NAME AS work_dept_name,
			now()
 FROM 
			(
			SELECT to_char(m.enter_date,'yyyymmdd') st_date,
						 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
						 m.in_out_flag,
						 t2.property1 AS area_code,
						 m.performed_by 执行科室编码,     
						 t1.name AS 执行科室,
						 m.ordered_by 开单科室编码,
						 t2.name AS 开单科室, 
						 n1.code as parent_dept_code,
						 n1.name as parent_dept_name,
						 m.diag_emp_id,
						 m.diag_emp_name,
						 SUM(m.charges) 费用,
						 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
						 m.clinic_id 项目父编码,
						 tt.item_name 项目父名称,
						 m.item_class, 
						 u.work_dept,  
						 n2.name
		FROM his_bi.bms_bill_item  m
		left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
		left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
		left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
		LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
		left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
		left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
		WHERE m.item_name <> '体检费'    --排除体检
		AND m.refund_flag IS NULL 
		AND m.rel_refund_id IS NULL
		AND m.item_class IN ('C','D')
		and t2.property1 in ('H0001')
		AND t1.property3='4'   --执行科室为医技科室
		AND m.in_out_flag='O'
		AND m.clinic_id IS NOT NULL
		AND m.enter_date>= to_date('20200103','yyyyMMdd')
		AND m.enter_date<  to_date('20200103','yyyyMMdd') + 1
		GROUP BY   to_char(m.enter_date,'yyyymmdd'),
						 m.in_out_flag, 
						 t2.property1 ,
						 m.performed_by,
						 t1.name ,
						 m.ordered_by, 
						 t2.name,
						 tt.item_name,
						 m.clinic_id ,
						 m.item_class,
							m.diag_emp_id,
						 m.diag_emp_name,
						 u.work_dept,  
						 n2.name,
						 n1.code ,
						 n1.name
		UNION ALL
		SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
						 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
						 m.in_out_flag,
						 t2.property1 AS area_code,
						 m.performed_by 执行科室编码,     
						 t1.name AS 执行科室,
						 m.ordered_by 开单科室编码,
						 t2.name AS 开单科室,
						 n1.code as parent_dept_code,
						 n1.name as parent_dept_name, 
						 m.diag_emp_id,
						 m.diag_emp_name,
						 SUM(m.charges) 费用,
						 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
						 m.clinic_id 项目父编码,
						 tt.item_name 项目父名称,
						 m.item_class,
						 u.work_dept,  
						 n2.name
		FROM his_bi.bms_bill_item  m
		left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
		left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
		left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
		LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
		left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
		left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
		WHERE m.item_class IN ('C','D')
		AND m.refund_flag IS NULL 
		AND m.rel_refund_id IS NULL
		and t2.property1 in ('H0001')
		AND t1.property3='4'  --执行科室为医技科室
		AND m.in_out_flag='I'
		AND m.clinic_id IS NOT NULL
		AND m.enter_date>= to_date('20200103','yyyyMMdd')
		AND m.enter_date<  to_date('20200103','yyyyMMdd') + 1
		GROUP BY   to_char(m.enter_date,'yyyymmdd'),
						 m.in_out_flag, 
						 t2.property1 ,
						 m.performed_by,
						 t1.name ,
						 m.ordered_by, 
						 t2.name,
						 tt.item_name,
						 m.clinic_id ,
						 m.item_class,
							m.diag_emp_id,
						 m.diag_emp_name,
						 u.work_dept,  
						 n2.name,
						 n1.code ,
						 n1.name
						 ) as total
			;
                 
[2020-07-02 16:44:36] [INFO]  
                 insert into his_bi.dw_work_yj_doctor_d
		(
			st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
			diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
			item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
		)
		SELECT st_date,
			项目父编码 item_code,
			项目父名称 item_name,
			开单科室编码 dept_code,
			开单科室 dept_name,
			parent_dept_code,
			parent_dept_name,
			diag_emp_id,
			diag_emp_name, 
			执行科室编码 AS performed_dept_code,
			执行科室 AS performed_dept_name,
			in_out_flag,
			item_class,
			次数 AS amount, 
			人次 AS patient_num,
			费用 AS charges,
			area_code,
			work_dept AS work_dept_code,
			NAME AS work_dept_name,
			now()
 FROM 
			(
			SELECT to_char(m.enter_date,'yyyymmdd') st_date,
						 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
						 m.in_out_flag,
						 t2.property1 AS area_code,
						 m.performed_by 执行科室编码,     
						 t1.name AS 执行科室,
						 m.ordered_by 开单科室编码,
						 t2.name AS 开单科室, 
						 n1.code as parent_dept_code,
						 n1.name as parent_dept_name,
						 m.diag_emp_id,
						 m.diag_emp_name,
						 SUM(m.charges) 费用,
						 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
						 m.clinic_id 项目父编码,
						 tt.item_name 项目父名称,
						 m.item_class, 
						 u.work_dept,  
						 n2.name
		FROM his_bi.bms_bill_item  m
		left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
		left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
		left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
		LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
		left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
		left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
		WHERE m.item_name <> '体检费'    --排除体检
		AND m.refund_flag IS NULL 
		AND m.rel_refund_id IS NULL
		AND m.item_class IN ('C','D')
		and t2.property1 in ('H0001')
		AND t1.property3='4'   --执行科室为医技科室
		AND m.in_out_flag='O'
		AND m.clinic_id IS NOT NULL
		AND m.enter_date>= to_date('20200104','yyyyMMdd')
		AND m.enter_date<  to_date('20200104','yyyyMMdd') + 1
		GROUP BY   to_char(m.enter_date,'yyyymmdd'),
						 m.in_out_flag, 
						 t2.property1 ,
						 m.performed_by,
						 t1.name ,
						 m.ordered_by, 
						 t2.name,
						 tt.item_name,
						 m.clinic_id ,
						 m.item_class,
							m.diag_emp_id,
						 m.diag_emp_name,
						 u.work_dept,  
						 n2.name,
						 n1.code ,
						 n1.name
		UNION ALL
		SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
						 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
						 m.in_out_flag,
						 t2.property1 AS area_code,
						 m.performed_by 执行科室编码,     
						 t1.name AS 执行科室,
						 m.ordered_by 开单科室编码,
						 t2.name AS 开单科室,
						 n1.code as parent_dept_code,
						 n1.name as parent_dept_name, 
						 m.diag_emp_id,
						 m.diag_emp_name,
						 SUM(m.charges) 费用,
						 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
						 m.clinic_id 项目父编码,
						 tt.item_name 项目父名称,
						 m.item_class,
						 u.work_dept,  
						 n2.name
		FROM his_bi.bms_bill_item  m
		left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
		left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
		left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
		LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
		left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
		left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
		WHERE m.item_class IN ('C','D')
		AND m.refund_flag IS NULL 
		AND m.rel_refund_id IS NULL
		and t2.property1 in ('H0001')
		AND t1.property3='4'  --执行科室为医技科室
		AND m.in_out_flag='I'
		AND m.clinic_id IS NOT NULL
		AND m.enter_date>= to_date('20200104','yyyyMMdd')
		AND m.enter_date<  to_date('20200104','yyyyMMdd') + 1
		GROUP BY   to_char(m.enter_date,'yyyymmdd'),
						 m.in_out_flag, 
						 t2.property1 ,
						 m.performed_by,
						 t1.name ,
						 m.ordered_by, 
						 t2.name,
						 tt.item_name,
						 m.clinic_id ,
						 m.item_class,
							m.diag_emp_id,
						 m.diag_emp_name,
						 u.work_dept,  
						 n2.name,
						 n1.code ,
						 n1.name
						 ) as total
			;
                 
[2020-07-02 16:44:45] [INFO]  
                 insert into his_bi.dw_work_yj_doctor_d
		(
			st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
			diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
			item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
		)
		SELECT st_date,
			项目父编码 item_code,
			项目父名称 item_name,
			开单科室编码 dept_code,
			开单科室 dept_name,
			parent_dept_code,
			parent_dept_name,
			diag_emp_id,
			diag_emp_name, 
			执行科室编码 AS performed_dept_code,
			执行科室 AS performed_dept_name,
			in_out_flag,
			item_class,
			次数 AS amount, 
			人次 AS patient_num,
			费用 AS charges,
			area_code,
			work_dept AS work_dept_code,
			NAME AS work_dept_name,
			now()
 FROM 
			(
			SELECT to_char(m.enter_date,'yyyymmdd') st_date,
						 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
						 m.in_out_flag,
						 t2.property1 AS area_code,
						 m.performed_by 执行科室编码,     
						 t1.name AS 执行科室,
						 m.ordered_by 开单科室编码,
						 t2.name AS 开单科室, 
						 n1.code as parent_dept_code,
						 n1.name as parent_dept_name,
						 m.diag_emp_id,
						 m.diag_emp_name,
						 SUM(m.charges) 费用,
						 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
						 m.clinic_id 项目父编码,
						 tt.item_name 项目父名称,
						 m.item_class, 
						 u.work_dept,  
						 n2.name
		FROM his_bi.bms_bill_item  m
		left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
		left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
		left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
		LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
		left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
		left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
		WHERE m.item_name <> '体检费'    --排除体检
		AND m.refund_flag IS NULL 
		AND m.rel_refund_id IS NULL
		AND m.item_class IN ('C','D')
		and t2.property1 in ('H0001')
		AND t1.property3='4'   --执行科室为医技科室
		AND m.in_out_flag='O'
		AND m.clinic_id IS NOT NULL
		AND m.enter_date>= to_date('20200105','yyyyMMdd')
		AND m.enter_date<  to_date('20200105','yyyyMMdd') + 1
		GROUP BY   to_char(m.enter_date,'yyyymmdd'),
						 m.in_out_flag, 
						 t2.property1 ,
						 m.performed_by,
						 t1.name ,
						 m.ordered_by, 
						 t2.name,
						 tt.item_name,
						 m.clinic_id ,
						 m.item_class,
							m.diag_emp_id,
						 m.diag_emp_name,
						 u.work_dept,  
						 n2.name,
						 n1.code ,
						 n1.name
		UNION ALL
		SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
						 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
						 m.in_out_flag,
						 t2.property1 AS area_code,
						 m.performed_by 执行科室编码,     
						 t1.name AS 执行科室,
						 m.ordered_by 开单科室编码,
						 t2.name AS 开单科室,
						 n1.code as parent_dept_code,
						 n1.name as parent_dept_name, 
						 m.diag_emp_id,
						 m.diag_emp_name,
						 SUM(m.charges) 费用,
						 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
						 m.clinic_id 项目父编码,
						 tt.item_name 项目父名称,
						 m.item_class,
						 u.work_dept,  
						 n2.name
		FROM his_bi.bms_bill_item  m
		left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
		left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
		left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
		LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
		left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
		left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
		WHERE m.item_class IN ('C','D')
		AND m.refund_flag IS NULL 
		AND m.rel_refund_id IS NULL
		and t2.property1 in ('H0001')
		AND t1.property3='4'  --执行科室为医技科室
		AND m.in_out_flag='I'
		AND m.clinic_id IS NOT NULL
		AND m.enter_date>= to_date('20200105','yyyyMMdd')
		AND m.enter_date<  to_date('20200105','yyyyMMdd') + 1
		GROUP BY   to_char(m.enter_date,'yyyymmdd'),
						 m.in_out_flag, 
						 t2.property1 ,
						 m.performed_by,
						 t1.name ,
						 m.ordered_by, 
						 t2.name,
						 tt.item_name,
						 m.clinic_id ,
						 m.item_class,
							m.diag_emp_id,
						 m.diag_emp_name,
						 u.work_dept,  
						 n2.name,
						 n1.code ,
						 n1.name
						 ) as total
			;
                 
[2020-07-02 16:48:14] [INFO]  
                 insert into his_bi.dw_work_yj_doctor_d
		(
			st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
			diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
			item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
		)
		SELECT st_date,
			项目父编码 item_code,
			项目父名称 item_name,
			开单科室编码 dept_code,
			开单科室 dept_name,
			parent_dept_code,
			parent_dept_name,
			diag_emp_id,
			diag_emp_name, 
			执行科室编码 AS performed_dept_code,
			执行科室 AS performed_dept_name,
			in_out_flag,
			item_class,
			次数 AS amount, 
			人次 AS patient_num,
			费用 AS charges,
			area_code,
			work_dept AS work_dept_code,
			NAME AS work_dept_name,
			now()
 FROM 
			(
			SELECT to_char(m.enter_date,'yyyymmdd') st_date,
						 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
						 m.in_out_flag,
						 t2.property1 AS area_code,
						 m.performed_by 执行科室编码,     
						 t1.name AS 执行科室,
						 m.ordered_by 开单科室编码,
						 t2.name AS 开单科室, 
						 n1.code as parent_dept_code,
						 n1.name as parent_dept_name,
						 m.diag_emp_id,
						 m.diag_emp_name,
						 SUM(m.charges) 费用,
						 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
						 m.clinic_id 项目父编码,
						 tt.item_name 项目父名称,
						 m.item_class, 
						 u.work_dept,  
						 n2.name
		FROM his_bi.bms_bill_item  m
		left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
		left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
		left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
		LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
		left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
		left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
		WHERE m.item_name <> '体检费'    --排除体检
		AND m.refund_flag IS NULL 
		AND m.rel_refund_id IS NULL
		AND m.item_class IN ('C','D')
		and t2.property1 in ('H0001')
		AND t1.property3='4'   --执行科室为医技科室
		AND m.in_out_flag='O'
		AND m.clinic_id IS NOT NULL
		AND m.enter_date>= to_date('20200101','yyyyMMdd')
		AND m.enter_date<  to_date('20200101','yyyyMMdd') + 1
		GROUP BY   to_char(m.enter_date,'yyyymmdd'),
						 m.in_out_flag, 
						 t2.property1 ,
						 m.performed_by,
						 t1.name ,
						 m.ordered_by, 
						 t2.name,
						 tt.item_name,
						 m.clinic_id ,
						 m.item_class,
							m.diag_emp_id,
						 m.diag_emp_name,
						 u.work_dept,  
						 n2.name,
						 n1.code ,
						 n1.name
		UNION ALL
		SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
						 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
						 m.in_out_flag,
						 t2.property1 AS area_code,
						 m.performed_by 执行科室编码,     
						 t1.name AS 执行科室,
						 m.ordered_by 开单科室编码,
						 t2.name AS 开单科室,
						 n1.code as parent_dept_code,
						 n1.name as parent_dept_name, 
						 m.diag_emp_id,
						 m.diag_emp_name,
						 SUM(m.charges) 费用,
						 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
						 m.clinic_id 项目父编码,
						 tt.item_name 项目父名称,
						 m.item_class,
						 u.work_dept,  
						 n2.name
		FROM his_bi.bms_bill_item  m
		left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
		left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
		left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
		LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
		left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
		left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
		WHERE m.item_class IN ('C','D')
		AND m.refund_flag IS NULL 
		AND m.rel_refund_id IS NULL
		and t2.property1 in ('H0001')
		AND t1.property3='4'  --执行科室为医技科室
		AND m.in_out_flag='I'
		AND m.clinic_id IS NOT NULL
		AND m.enter_date>= to_date('20200101','yyyyMMdd')
		AND m.enter_date<  to_date('20200101','yyyyMMdd') + 1
		GROUP BY   to_char(m.enter_date,'yyyymmdd'),
						 m.in_out_flag, 
						 t2.property1 ,
						 m.performed_by,
						 t1.name ,
						 m.ordered_by, 
						 t2.name,
						 tt.item_name,
						 m.clinic_id ,
						 m.item_class,
							m.diag_emp_id,
						 m.diag_emp_name,
						 u.work_dept,  
						 n2.name,
						 n1.code ,
						 n1.name
						 ) as total
			;
                 
[2020-07-02 16:48:24] [INFO]  
                 insert into his_bi.dw_work_yj_doctor_d
		(
			st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
			diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
			item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
		)
		SELECT st_date,
			项目父编码 item_code,
			项目父名称 item_name,
			开单科室编码 dept_code,
			开单科室 dept_name,
			parent_dept_code,
			parent_dept_name,
			diag_emp_id,
			diag_emp_name, 
			执行科室编码 AS performed_dept_code,
			执行科室 AS performed_dept_name,
			in_out_flag,
			item_class,
			次数 AS amount, 
			人次 AS patient_num,
			费用 AS charges,
			area_code,
			work_dept AS work_dept_code,
			NAME AS work_dept_name,
			now()
 FROM 
			(
			SELECT to_char(m.enter_date,'yyyymmdd') st_date,
						 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
						 m.in_out_flag,
						 t2.property1 AS area_code,
						 m.performed_by 执行科室编码,     
						 t1.name AS 执行科室,
						 m.ordered_by 开单科室编码,
						 t2.name AS 开单科室, 
						 n1.code as parent_dept_code,
						 n1.name as parent_dept_name,
						 m.diag_emp_id,
						 m.diag_emp_name,
						 SUM(m.charges) 费用,
						 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
						 m.clinic_id 项目父编码,
						 tt.item_name 项目父名称,
						 m.item_class, 
						 u.work_dept,  
						 n2.name
		FROM his_bi.bms_bill_item  m
		left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
		left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
		left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
		LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
		left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
		left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
		WHERE m.item_name <> '体检费'    --排除体检
		AND m.refund_flag IS NULL 
		AND m.rel_refund_id IS NULL
		AND m.item_class IN ('C','D')
		and t2.property1 in ('H0001')
		AND t1.property3='4'   --执行科室为医技科室
		AND m.in_out_flag='O'
		AND m.clinic_id IS NOT NULL
		AND m.enter_date>= to_date('20200102','yyyyMMdd')
		AND m.enter_date<  to_date('20200102','yyyyMMdd') + 1
		GROUP BY   to_char(m.enter_date,'yyyymmdd'),
						 m.in_out_flag, 
						 t2.property1 ,
						 m.performed_by,
						 t1.name ,
						 m.ordered_by, 
						 t2.name,
						 tt.item_name,
						 m.clinic_id ,
						 m.item_class,
							m.diag_emp_id,
						 m.diag_emp_name,
						 u.work_dept,  
						 n2.name,
						 n1.code ,
						 n1.name
		UNION ALL
		SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
						 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
						 m.in_out_flag,
						 t2.property1 AS area_code,
						 m.performed_by 执行科室编码,     
						 t1.name AS 执行科室,
						 m.ordered_by 开单科室编码,
						 t2.name AS 开单科室,
						 n1.code as parent_dept_code,
						 n1.name as parent_dept_name, 
						 m.diag_emp_id,
						 m.diag_emp_name,
						 SUM(m.charges) 费用,
						 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
						 m.clinic_id 项目父编码,
						 tt.item_name 项目父名称,
						 m.item_class,
						 u.work_dept,  
						 n2.name
		FROM his_bi.bms_bill_item  m
		left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
		left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
		left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
		LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
		left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
		left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
		WHERE m.item_class IN ('C','D')
		AND m.refund_flag IS NULL 
		AND m.rel_refund_id IS NULL
		and t2.property1 in ('H0001')
		AND t1.property3='4'  --执行科室为医技科室
		AND m.in_out_flag='I'
		AND m.clinic_id IS NOT NULL
		AND m.enter_date>= to_date('20200102','yyyyMMdd')
		AND m.enter_date<  to_date('20200102','yyyyMMdd') + 1
		GROUP BY   to_char(m.enter_date,'yyyymmdd'),
						 m.in_out_flag, 
						 t2.property1 ,
						 m.performed_by,
						 t1.name ,
						 m.ordered_by, 
						 t2.name,
						 tt.item_name,
						 m.clinic_id ,
						 m.item_class,
							m.diag_emp_id,
						 m.diag_emp_name,
						 u.work_dept,  
						 n2.name,
						 n1.code ,
						 n1.name
						 ) as total
			;
                 
[2020-07-02 16:48:43] [INFO]  
                 insert into his_bi.dw_work_yj_doctor_d
		(
			st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
			diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
			item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
		)
		SELECT st_date,
			项目父编码 item_code,
			项目父名称 item_name,
			开单科室编码 dept_code,
			开单科室 dept_name,
			parent_dept_code,
			parent_dept_name,
			diag_emp_id,
			diag_emp_name, 
			执行科室编码 AS performed_dept_code,
			执行科室 AS performed_dept_name,
			in_out_flag,
			item_class,
			次数 AS amount, 
			人次 AS patient_num,
			费用 AS charges,
			area_code,
			work_dept AS work_dept_code,
			NAME AS work_dept_name,
			now()
 FROM 
			(
			SELECT to_char(m.enter_date,'yyyymmdd') st_date,
						 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
						 m.in_out_flag,
						 t2.property1 AS area_code,
						 m.performed_by 执行科室编码,     
						 t1.name AS 执行科室,
						 m.ordered_by 开单科室编码,
						 t2.name AS 开单科室, 
						 n1.code as parent_dept_code,
						 n1.name as parent_dept_name,
						 m.diag_emp_id,
						 m.diag_emp_name,
						 SUM(m.charges) 费用,
						 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
						 m.clinic_id 项目父编码,
						 tt.item_name 项目父名称,
						 m.item_class, 
						 u.work_dept,  
						 n2.name
		FROM his_bi.bms_bill_item  m
		left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
		left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
		left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
		LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
		left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
		left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
		WHERE m.item_name <> '体检费'    --排除体检
		AND m.refund_flag IS NULL 
		AND m.rel_refund_id IS NULL
		AND m.item_class IN ('C','D')
		and t2.property1 in ('H0001')
		AND t1.property3='4'   --执行科室为医技科室
		AND m.in_out_flag='O'
		AND m.clinic_id IS NOT NULL
		AND m.enter_date>= to_date('20200103','yyyyMMdd')
		AND m.enter_date<  to_date('20200103','yyyyMMdd') + 1
		GROUP BY   to_char(m.enter_date,'yyyymmdd'),
						 m.in_out_flag, 
						 t2.property1 ,
						 m.performed_by,
						 t1.name ,
						 m.ordered_by, 
						 t2.name,
						 tt.item_name,
						 m.clinic_id ,
						 m.item_class,
							m.diag_emp_id,
						 m.diag_emp_name,
						 u.work_dept,  
						 n2.name,
						 n1.code ,
						 n1.name
		UNION ALL
		SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
						 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
						 m.in_out_flag,
						 t2.property1 AS area_code,
						 m.performed_by 执行科室编码,     
						 t1.name AS 执行科室,
						 m.ordered_by 开单科室编码,
						 t2.name AS 开单科室,
						 n1.code as parent_dept_code,
						 n1.name as parent_dept_name, 
						 m.diag_emp_id,
						 m.diag_emp_name,
						 SUM(m.charges) 费用,
						 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
						 m.clinic_id 项目父编码,
						 tt.item_name 项目父名称,
						 m.item_class,
						 u.work_dept,  
						 n2.name
		FROM his_bi.bms_bill_item  m
		left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
		left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
		left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
		LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
		left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
		left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
		WHERE m.item_class IN ('C','D')
		AND m.refund_flag IS NULL 
		AND m.rel_refund_id IS NULL
		and t2.property1 in ('H0001')
		AND t1.property3='4'  --执行科室为医技科室
		AND m.in_out_flag='I'
		AND m.clinic_id IS NOT NULL
		AND m.enter_date>= to_date('20200103','yyyyMMdd')
		AND m.enter_date<  to_date('20200103','yyyyMMdd') + 1
		GROUP BY   to_char(m.enter_date,'yyyymmdd'),
						 m.in_out_flag, 
						 t2.property1 ,
						 m.performed_by,
						 t1.name ,
						 m.ordered_by, 
						 t2.name,
						 tt.item_name,
						 m.clinic_id ,
						 m.item_class,
							m.diag_emp_id,
						 m.diag_emp_name,
						 u.work_dept,  
						 n2.name,
						 n1.code ,
						 n1.name
						 ) as total
			;
                 
[2020-07-02 16:48:59] [INFO]  
                 insert into his_bi.dw_work_yj_doctor_d
		(
			st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
			diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
			item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
		)
		SELECT st_date,
			项目父编码 item_code,
			项目父名称 item_name,
			开单科室编码 dept_code,
			开单科室 dept_name,
			parent_dept_code,
			parent_dept_name,
			diag_emp_id,
			diag_emp_name, 
			执行科室编码 AS performed_dept_code,
			执行科室 AS performed_dept_name,
			in_out_flag,
			item_class,
			次数 AS amount, 
			人次 AS patient_num,
			费用 AS charges,
			area_code,
			work_dept AS work_dept_code,
			NAME AS work_dept_name,
			now()
 FROM 
			(
			SELECT to_char(m.enter_date,'yyyymmdd') st_date,
						 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
						 m.in_out_flag,
						 t2.property1 AS area_code,
						 m.performed_by 执行科室编码,     
						 t1.name AS 执行科室,
						 m.ordered_by 开单科室编码,
						 t2.name AS 开单科室, 
						 n1.code as parent_dept_code,
						 n1.name as parent_dept_name,
						 m.diag_emp_id,
						 m.diag_emp_name,
						 SUM(m.charges) 费用,
						 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
						 m.clinic_id 项目父编码,
						 tt.item_name 项目父名称,
						 m.item_class, 
						 u.work_dept,  
						 n2.name
		FROM his_bi.bms_bill_item  m
		left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
		left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
		left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
		LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
		left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
		left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
		WHERE m.item_name <> '体检费'    --排除体检
		AND m.refund_flag IS NULL 
		AND m.rel_refund_id IS NULL
		AND m.item_class IN ('C','D')
		and t2.property1 in ('H0001')
		AND t1.property3='4'   --执行科室为医技科室
		AND m.in_out_flag='O'
		AND m.clinic_id IS NOT NULL
		AND m.enter_date>= to_date('20200104','yyyyMMdd')
		AND m.enter_date<  to_date('20200104','yyyyMMdd') + 1
		GROUP BY   to_char(m.enter_date,'yyyymmdd'),
						 m.in_out_flag, 
						 t2.property1 ,
						 m.performed_by,
						 t1.name ,
						 m.ordered_by, 
						 t2.name,
						 tt.item_name,
						 m.clinic_id ,
						 m.item_class,
							m.diag_emp_id,
						 m.diag_emp_name,
						 u.work_dept,  
						 n2.name,
						 n1.code ,
						 n1.name
		UNION ALL
		SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
						 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
						 m.in_out_flag,
						 t2.property1 AS area_code,
						 m.performed_by 执行科室编码,     
						 t1.name AS 执行科室,
						 m.ordered_by 开单科室编码,
						 t2.name AS 开单科室,
						 n1.code as parent_dept_code,
						 n1.name as parent_dept_name, 
						 m.diag_emp_id,
						 m.diag_emp_name,
						 SUM(m.charges) 费用,
						 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
						 m.clinic_id 项目父编码,
						 tt.item_name 项目父名称,
						 m.item_class,
						 u.work_dept,  
						 n2.name
		FROM his_bi.bms_bill_item  m
		left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
		left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
		left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
		LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
		left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
		left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
		WHERE m.item_class IN ('C','D')
		AND m.refund_flag IS NULL 
		AND m.rel_refund_id IS NULL
		and t2.property1 in ('H0001')
		AND t1.property3='4'  --执行科室为医技科室
		AND m.in_out_flag='I'
		AND m.clinic_id IS NOT NULL
		AND m.enter_date>= to_date('20200104','yyyyMMdd')
		AND m.enter_date<  to_date('20200104','yyyyMMdd') + 1
		GROUP BY   to_char(m.enter_date,'yyyymmdd'),
						 m.in_out_flag, 
						 t2.property1 ,
						 m.performed_by,
						 t1.name ,
						 m.ordered_by, 
						 t2.name,
						 tt.item_name,
						 m.clinic_id ,
						 m.item_class,
							m.diag_emp_id,
						 m.diag_emp_name,
						 u.work_dept,  
						 n2.name,
						 n1.code ,
						 n1.name
						 ) as total
			;
                 
[2020-07-02 16:49:08] [INFO]  
                 insert into his_bi.dw_work_yj_doctor_d
		(
			st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
			diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
			item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
		)
		SELECT st_date,
			项目父编码 item_code,
			项目父名称 item_name,
			开单科室编码 dept_code,
			开单科室 dept_name,
			parent_dept_code,
			parent_dept_name,
			diag_emp_id,
			diag_emp_name, 
			执行科室编码 AS performed_dept_code,
			执行科室 AS performed_dept_name,
			in_out_flag,
			item_class,
			次数 AS amount, 
			人次 AS patient_num,
			费用 AS charges,
			area_code,
			work_dept AS work_dept_code,
			NAME AS work_dept_name,
			now()
 FROM 
			(
			SELECT to_char(m.enter_date,'yyyymmdd') st_date,
						 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
						 m.in_out_flag,
						 t2.property1 AS area_code,
						 m.performed_by 执行科室编码,     
						 t1.name AS 执行科室,
						 m.ordered_by 开单科室编码,
						 t2.name AS 开单科室, 
						 n1.code as parent_dept_code,
						 n1.name as parent_dept_name,
						 m.diag_emp_id,
						 m.diag_emp_name,
						 SUM(m.charges) 费用,
						 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
						 m.clinic_id 项目父编码,
						 tt.item_name 项目父名称,
						 m.item_class, 
						 u.work_dept,  
						 n2.name
		FROM his_bi.bms_bill_item  m
		left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
		left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
		left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
		LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
		left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
		left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
		WHERE m.item_name <> '体检费'    --排除体检
		AND m.refund_flag IS NULL 
		AND m.rel_refund_id IS NULL
		AND m.item_class IN ('C','D')
		and t2.property1 in ('H0001')
		AND t1.property3='4'   --执行科室为医技科室
		AND m.in_out_flag='O'
		AND m.clinic_id IS NOT NULL
		AND m.enter_date>= to_date('20200105','yyyyMMdd')
		AND m.enter_date<  to_date('20200105','yyyyMMdd') + 1
		GROUP BY   to_char(m.enter_date,'yyyymmdd'),
						 m.in_out_flag, 
						 t2.property1 ,
						 m.performed_by,
						 t1.name ,
						 m.ordered_by, 
						 t2.name,
						 tt.item_name,
						 m.clinic_id ,
						 m.item_class,
							m.diag_emp_id,
						 m.diag_emp_name,
						 u.work_dept,  
						 n2.name,
						 n1.code ,
						 n1.name
		UNION ALL
		SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
						 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
						 m.in_out_flag,
						 t2.property1 AS area_code,
						 m.performed_by 执行科室编码,     
						 t1.name AS 执行科室,
						 m.ordered_by 开单科室编码,
						 t2.name AS 开单科室,
						 n1.code as parent_dept_code,
						 n1.name as parent_dept_name, 
						 m.diag_emp_id,
						 m.diag_emp_name,
						 SUM(m.charges) 费用,
						 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
						 m.clinic_id 项目父编码,
						 tt.item_name 项目父名称,
						 m.item_class,
						 u.work_dept,  
						 n2.name
		FROM his_bi.bms_bill_item  m
		left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
		left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
		left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
		LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
		left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
		left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
		WHERE m.item_class IN ('C','D')
		AND m.refund_flag IS NULL 
		AND m.rel_refund_id IS NULL
		and t2.property1 in ('H0001')
		AND t1.property3='4'  --执行科室为医技科室
		AND m.in_out_flag='I'
		AND m.clinic_id IS NOT NULL
		AND m.enter_date>= to_date('20200105','yyyyMMdd')
		AND m.enter_date<  to_date('20200105','yyyyMMdd') + 1
		GROUP BY   to_char(m.enter_date,'yyyymmdd'),
						 m.in_out_flag, 
						 t2.property1 ,
						 m.performed_by,
						 t1.name ,
						 m.ordered_by, 
						 t2.name,
						 tt.item_name,
						 m.clinic_id ,
						 m.item_class,
							m.diag_emp_id,
						 m.diag_emp_name,
						 u.work_dept,  
						 n2.name,
						 n1.code ,
						 n1.name
						 ) as total
			;
                 
[2020-07-02 16:49:18] [INFO]  
                 insert into his_bi.dw_work_yj_doctor_d
		(
			st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
			diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
			item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
		)
		SELECT st_date,
			项目父编码 item_code,
			项目父名称 item_name,
			开单科室编码 dept_code,
			开单科室 dept_name,
			parent_dept_code,
			parent_dept_name,
			diag_emp_id,
			diag_emp_name, 
			执行科室编码 AS performed_dept_code,
			执行科室 AS performed_dept_name,
			in_out_flag,
			item_class,
			次数 AS amount, 
			人次 AS patient_num,
			费用 AS charges,
			area_code,
			work_dept AS work_dept_code,
			NAME AS work_dept_name,
			now()
 FROM 
			(
			SELECT to_char(m.enter_date,'yyyymmdd') st_date,
						 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
						 m.in_out_flag,
						 t2.property1 AS area_code,
						 m.performed_by 执行科室编码,     
						 t1.name AS 执行科室,
						 m.ordered_by 开单科室编码,
						 t2.name AS 开单科室, 
						 n1.code as parent_dept_code,
						 n1.name as parent_dept_name,
						 m.diag_emp_id,
						 m.diag_emp_name,
						 SUM(m.charges) 费用,
						 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
						 m.clinic_id 项目父编码,
						 tt.item_name 项目父名称,
						 m.item_class, 
						 u.work_dept,  
						 n2.name
		FROM his_bi.bms_bill_item  m
		left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
		left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
		left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
		LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
		left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
		left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
		WHERE m.item_name <> '体检费'    --排除体检
		AND m.refund_flag IS NULL 
		AND m.rel_refund_id IS NULL
		AND m.item_class IN ('C','D')
		and t2.property1 in ('H0001')
		AND t1.property3='4'   --执行科室为医技科室
		AND m.in_out_flag='O'
		AND m.clinic_id IS NOT NULL
		AND m.enter_date>= to_date('20200106','yyyyMMdd')
		AND m.enter_date<  to_date('20200106','yyyyMMdd') + 1
		GROUP BY   to_char(m.enter_date,'yyyymmdd'),
						 m.in_out_flag, 
						 t2.property1 ,
						 m.performed_by,
						 t1.name ,
						 m.ordered_by, 
						 t2.name,
						 tt.item_name,
						 m.clinic_id ,
						 m.item_class,
							m.diag_emp_id,
						 m.diag_emp_name,
						 u.work_dept,  
						 n2.name,
						 n1.code ,
						 n1.name
		UNION ALL
		SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
						 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
						 m.in_out_flag,
						 t2.property1 AS area_code,
						 m.performed_by 执行科室编码,     
						 t1.name AS 执行科室,
						 m.ordered_by 开单科室编码,
						 t2.name AS 开单科室,
						 n1.code as parent_dept_code,
						 n1.name as parent_dept_name, 
						 m.diag_emp_id,
						 m.diag_emp_name,
						 SUM(m.charges) 费用,
						 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
						 m.clinic_id 项目父编码,
						 tt.item_name 项目父名称,
						 m.item_class,
						 u.work_dept,  
						 n2.name
		FROM his_bi.bms_bill_item  m
		left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
		left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
		left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
		LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
		left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
		left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
		WHERE m.item_class IN ('C','D')
		AND m.refund_flag IS NULL 
		AND m.rel_refund_id IS NULL
		and t2.property1 in ('H0001')
		AND t1.property3='4'  --执行科室为医技科室
		AND m.in_out_flag='I'
		AND m.clinic_id IS NOT NULL
		AND m.enter_date>= to_date('20200106','yyyyMMdd')
		AND m.enter_date<  to_date('20200106','yyyyMMdd') + 1
		GROUP BY   to_char(m.enter_date,'yyyymmdd'),
						 m.in_out_flag, 
						 t2.property1 ,
						 m.performed_by,
						 t1.name ,
						 m.ordered_by, 
						 t2.name,
						 tt.item_name,
						 m.clinic_id ,
						 m.item_class,
							m.diag_emp_id,
						 m.diag_emp_name,
						 u.work_dept,  
						 n2.name,
						 n1.code ,
						 n1.name
						 ) as total
			;
                 
[2020-07-02 16:50:19] [INFO]  
                 insert into his_bi.dw_work_yj_doctor_d
		(
			st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
			diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
			item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
		)
		SELECT st_date,
			项目父编码 item_code,
			项目父名称 item_name,
			开单科室编码 dept_code,
			开单科室 dept_name,
			parent_dept_code,
			parent_dept_name,
			diag_emp_id,
			diag_emp_name, 
			执行科室编码 AS performed_dept_code,
			执行科室 AS performed_dept_name,
			in_out_flag,
			item_class,
			次数 AS amount, 
			人次 AS patient_num,
			费用 AS charges,
			area_code,
			work_dept AS work_dept_code,
			NAME AS work_dept_name,
			now()
 FROM 
			(
			SELECT to_char(m.enter_date,'yyyymmdd') st_date,
						 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
						 m.in_out_flag,
						 t2.property1 AS area_code,
						 m.performed_by 执行科室编码,     
						 t1.name AS 执行科室,
						 m.ordered_by 开单科室编码,
						 t2.name AS 开单科室, 
						 n1.code as parent_dept_code,
						 n1.name as parent_dept_name,
						 m.diag_emp_id,
						 m.diag_emp_name,
						 SUM(m.charges) 费用,
						 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
						 m.clinic_id 项目父编码,
						 tt.item_name 项目父名称,
						 m.item_class, 
						 u.work_dept,  
						 n2.name
		FROM his_bi.bms_bill_item  m
		left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
		left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
		left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
		LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
		left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
		left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
		WHERE m.item_name <> '体检费'    --排除体检
		AND m.refund_flag IS NULL 
		AND m.rel_refund_id IS NULL
		AND m.item_class IN ('C','D')
		and t2.property1 in ('H0001')
		AND t1.property3='4'   --执行科室为医技科室
		AND m.in_out_flag='O'
		AND m.clinic_id IS NOT NULL
		AND m.enter_date>= to_date('20200107','yyyyMMdd')
		AND m.enter_date<  to_date('20200107','yyyyMMdd') + 1
		GROUP BY   to_char(m.enter_date,'yyyymmdd'),
						 m.in_out_flag, 
						 t2.property1 ,
						 m.performed_by,
						 t1.name ,
						 m.ordered_by, 
						 t2.name,
						 tt.item_name,
						 m.clinic_id ,
						 m.item_class,
							m.diag_emp_id,
						 m.diag_emp_name,
						 u.work_dept,  
						 n2.name,
						 n1.code ,
						 n1.name
		UNION ALL
		SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
						 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
						 m.in_out_flag,
						 t2.property1 AS area_code,
						 m.performed_by 执行科室编码,     
						 t1.name AS 执行科室,
						 m.ordered_by 开单科室编码,
						 t2.name AS 开单科室,
						 n1.code as parent_dept_code,
						 n1.name as parent_dept_name, 
						 m.diag_emp_id,
						 m.diag_emp_name,
						 SUM(m.charges) 费用,
						 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
						 m.clinic_id 项目父编码,
						 tt.item_name 项目父名称,
						 m.item_class,
						 u.work_dept,  
						 n2.name
		FROM his_bi.bms_bill_item  m
		left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
		left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
		left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
		LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
		left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
		left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
		WHERE m.item_class IN ('C','D')
		AND m.refund_flag IS NULL 
		AND m.rel_refund_id IS NULL
		and t2.property1 in ('H0001')
		AND t1.property3='4'  --执行科室为医技科室
		AND m.in_out_flag='I'
		AND m.clinic_id IS NOT NULL
		AND m.enter_date>= to_date('20200107','yyyyMMdd')
		AND m.enter_date<  to_date('20200107','yyyyMMdd') + 1
		GROUP BY   to_char(m.enter_date,'yyyymmdd'),
						 m.in_out_flag, 
						 t2.property1 ,
						 m.performed_by,
						 t1.name ,
						 m.ordered_by, 
						 t2.name,
						 tt.item_name,
						 m.clinic_id ,
						 m.item_class,
							m.diag_emp_id,
						 m.diag_emp_name,
						 u.work_dept,  
						 n2.name,
						 n1.code ,
						 n1.name
						 ) as total
			;
                 
[2020-07-02 16:50:30] [INFO] 循环结束
[2020-07-02 16:53:54] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200101','yyyyMMdd')
AND m.enter_date<  to_date('20200101','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200101','yyyyMMdd')
AND m.enter_date<  to_date('20200101','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 16:54:05] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200102','yyyyMMdd')
AND m.enter_date<  to_date('20200102','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200102','yyyyMMdd')
AND m.enter_date<  to_date('20200102','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 16:54:19] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200103','yyyyMMdd')
AND m.enter_date<  to_date('20200103','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200103','yyyyMMdd')
AND m.enter_date<  to_date('20200103','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 16:54:31] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200104','yyyyMMdd')
AND m.enter_date<  to_date('20200104','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200104','yyyyMMdd')
AND m.enter_date<  to_date('20200104','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 16:54:38] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200105','yyyyMMdd')
AND m.enter_date<  to_date('20200105','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200105','yyyyMMdd')
AND m.enter_date<  to_date('20200105','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 16:54:47] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200106','yyyyMMdd')
AND m.enter_date<  to_date('20200106','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200106','yyyyMMdd')
AND m.enter_date<  to_date('20200106','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 16:55:04] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200107','yyyyMMdd')
AND m.enter_date<  to_date('20200107','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200107','yyyyMMdd')
AND m.enter_date<  to_date('20200107','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 16:55:22] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200108','yyyyMMdd')
AND m.enter_date<  to_date('20200108','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200108','yyyyMMdd')
AND m.enter_date<  to_date('20200108','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 16:55:37] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200109','yyyyMMdd')
AND m.enter_date<  to_date('20200109','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200109','yyyyMMdd')
AND m.enter_date<  to_date('20200109','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 16:55:48] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200110','yyyyMMdd')
AND m.enter_date<  to_date('20200110','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200110','yyyyMMdd')
AND m.enter_date<  to_date('20200110','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 16:55:56] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200111','yyyyMMdd')
AND m.enter_date<  to_date('20200111','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200111','yyyyMMdd')
AND m.enter_date<  to_date('20200111','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 16:56:03] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200112','yyyyMMdd')
AND m.enter_date<  to_date('20200112','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200112','yyyyMMdd')
AND m.enter_date<  to_date('20200112','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 16:56:12] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200113','yyyyMMdd')
AND m.enter_date<  to_date('20200113','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200113','yyyyMMdd')
AND m.enter_date<  to_date('20200113','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 16:56:32] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200114','yyyyMMdd')
AND m.enter_date<  to_date('20200114','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200114','yyyyMMdd')
AND m.enter_date<  to_date('20200114','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 16:56:47] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200115','yyyyMMdd')
AND m.enter_date<  to_date('20200115','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200115','yyyyMMdd')
AND m.enter_date<  to_date('20200115','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 16:56:58] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200116','yyyyMMdd')
AND m.enter_date<  to_date('20200116','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200116','yyyyMMdd')
AND m.enter_date<  to_date('20200116','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 16:57:10] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200117','yyyyMMdd')
AND m.enter_date<  to_date('20200117','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200117','yyyyMMdd')
AND m.enter_date<  to_date('20200117','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 16:57:21] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200118','yyyyMMdd')
AND m.enter_date<  to_date('20200118','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200118','yyyyMMdd')
AND m.enter_date<  to_date('20200118','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 16:57:27] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200119','yyyyMMdd')
AND m.enter_date<  to_date('20200119','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200119','yyyyMMdd')
AND m.enter_date<  to_date('20200119','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 16:57:36] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200120','yyyyMMdd')
AND m.enter_date<  to_date('20200120','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200120','yyyyMMdd')
AND m.enter_date<  to_date('20200120','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 16:57:44] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200121','yyyyMMdd')
AND m.enter_date<  to_date('20200121','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200121','yyyyMMdd')
AND m.enter_date<  to_date('20200121','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 16:57:52] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200122','yyyyMMdd')
AND m.enter_date<  to_date('20200122','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200122','yyyyMMdd')
AND m.enter_date<  to_date('20200122','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 16:58:01] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200123','yyyyMMdd')
AND m.enter_date<  to_date('20200123','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200123','yyyyMMdd')
AND m.enter_date<  to_date('20200123','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 16:58:11] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200124','yyyyMMdd')
AND m.enter_date<  to_date('20200124','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200124','yyyyMMdd')
AND m.enter_date<  to_date('20200124','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 16:58:16] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200125','yyyyMMdd')
AND m.enter_date<  to_date('20200125','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200125','yyyyMMdd')
AND m.enter_date<  to_date('20200125','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 16:58:20] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200126','yyyyMMdd')
AND m.enter_date<  to_date('20200126','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200126','yyyyMMdd')
AND m.enter_date<  to_date('20200126','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 16:58:25] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200127','yyyyMMdd')
AND m.enter_date<  to_date('20200127','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200127','yyyyMMdd')
AND m.enter_date<  to_date('20200127','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 16:58:30] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200128','yyyyMMdd')
AND m.enter_date<  to_date('20200128','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200128','yyyyMMdd')
AND m.enter_date<  to_date('20200128','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 16:58:35] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200129','yyyyMMdd')
AND m.enter_date<  to_date('20200129','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200129','yyyyMMdd')
AND m.enter_date<  to_date('20200129','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 16:58:41] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200130','yyyyMMdd')
AND m.enter_date<  to_date('20200130','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200130','yyyyMMdd')
AND m.enter_date<  to_date('20200130','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 16:58:46] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200131','yyyyMMdd')
AND m.enter_date<  to_date('20200131','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200131','yyyyMMdd')
AND m.enter_date<  to_date('20200131','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 16:58:51] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200201','yyyyMMdd')
AND m.enter_date<  to_date('20200201','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200201','yyyyMMdd')
AND m.enter_date<  to_date('20200201','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 16:58:56] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200202','yyyyMMdd')
AND m.enter_date<  to_date('20200202','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200202','yyyyMMdd')
AND m.enter_date<  to_date('20200202','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 16:59:01] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200203','yyyyMMdd')
AND m.enter_date<  to_date('20200203','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200203','yyyyMMdd')
AND m.enter_date<  to_date('20200203','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 16:59:08] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200204','yyyyMMdd')
AND m.enter_date<  to_date('20200204','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200204','yyyyMMdd')
AND m.enter_date<  to_date('20200204','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 16:59:14] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200205','yyyyMMdd')
AND m.enter_date<  to_date('20200205','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200205','yyyyMMdd')
AND m.enter_date<  to_date('20200205','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 16:59:21] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200206','yyyyMMdd')
AND m.enter_date<  to_date('20200206','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200206','yyyyMMdd')
AND m.enter_date<  to_date('20200206','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 16:59:28] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200207','yyyyMMdd')
AND m.enter_date<  to_date('20200207','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200207','yyyyMMdd')
AND m.enter_date<  to_date('20200207','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 16:59:34] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200208','yyyyMMdd')
AND m.enter_date<  to_date('20200208','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200208','yyyyMMdd')
AND m.enter_date<  to_date('20200208','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 16:59:41] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200209','yyyyMMdd')
AND m.enter_date<  to_date('20200209','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200209','yyyyMMdd')
AND m.enter_date<  to_date('20200209','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 16:59:46] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200210','yyyyMMdd')
AND m.enter_date<  to_date('20200210','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200210','yyyyMMdd')
AND m.enter_date<  to_date('20200210','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 16:59:52] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200211','yyyyMMdd')
AND m.enter_date<  to_date('20200211','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200211','yyyyMMdd')
AND m.enter_date<  to_date('20200211','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 16:59:58] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200212','yyyyMMdd')
AND m.enter_date<  to_date('20200212','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200212','yyyyMMdd')
AND m.enter_date<  to_date('20200212','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:00:04] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200213','yyyyMMdd')
AND m.enter_date<  to_date('20200213','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200213','yyyyMMdd')
AND m.enter_date<  to_date('20200213','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:00:11] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200214','yyyyMMdd')
AND m.enter_date<  to_date('20200214','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200214','yyyyMMdd')
AND m.enter_date<  to_date('20200214','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:00:16] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200215','yyyyMMdd')
AND m.enter_date<  to_date('20200215','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200215','yyyyMMdd')
AND m.enter_date<  to_date('20200215','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:00:21] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200216','yyyyMMdd')
AND m.enter_date<  to_date('20200216','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200216','yyyyMMdd')
AND m.enter_date<  to_date('20200216','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:00:26] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200217','yyyyMMdd')
AND m.enter_date<  to_date('20200217','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200217','yyyyMMdd')
AND m.enter_date<  to_date('20200217','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:00:32] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200218','yyyyMMdd')
AND m.enter_date<  to_date('20200218','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200218','yyyyMMdd')
AND m.enter_date<  to_date('20200218','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:00:39] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200219','yyyyMMdd')
AND m.enter_date<  to_date('20200219','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200219','yyyyMMdd')
AND m.enter_date<  to_date('20200219','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:00:45] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200220','yyyyMMdd')
AND m.enter_date<  to_date('20200220','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200220','yyyyMMdd')
AND m.enter_date<  to_date('20200220','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:00:51] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200221','yyyyMMdd')
AND m.enter_date<  to_date('20200221','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200221','yyyyMMdd')
AND m.enter_date<  to_date('20200221','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:00:56] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200222','yyyyMMdd')
AND m.enter_date<  to_date('20200222','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200222','yyyyMMdd')
AND m.enter_date<  to_date('20200222','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:01:00] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200223','yyyyMMdd')
AND m.enter_date<  to_date('20200223','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200223','yyyyMMdd')
AND m.enter_date<  to_date('20200223','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:01:04] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200224','yyyyMMdd')
AND m.enter_date<  to_date('20200224','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200224','yyyyMMdd')
AND m.enter_date<  to_date('20200224','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:01:11] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200225','yyyyMMdd')
AND m.enter_date<  to_date('20200225','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200225','yyyyMMdd')
AND m.enter_date<  to_date('20200225','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:01:19] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200226','yyyyMMdd')
AND m.enter_date<  to_date('20200226','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200226','yyyyMMdd')
AND m.enter_date<  to_date('20200226','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:01:26] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200227','yyyyMMdd')
AND m.enter_date<  to_date('20200227','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200227','yyyyMMdd')
AND m.enter_date<  to_date('20200227','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:01:32] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200228','yyyyMMdd')
AND m.enter_date<  to_date('20200228','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200228','yyyyMMdd')
AND m.enter_date<  to_date('20200228','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:01:38] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200229','yyyyMMdd')
AND m.enter_date<  to_date('20200229','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200229','yyyyMMdd')
AND m.enter_date<  to_date('20200229','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:01:45] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200301','yyyyMMdd')
AND m.enter_date<  to_date('20200301','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200301','yyyyMMdd')
AND m.enter_date<  to_date('20200301','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:01:49] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200302','yyyyMMdd')
AND m.enter_date<  to_date('20200302','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200302','yyyyMMdd')
AND m.enter_date<  to_date('20200302','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:01:58] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200303','yyyyMMdd')
AND m.enter_date<  to_date('20200303','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200303','yyyyMMdd')
AND m.enter_date<  to_date('20200303','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:02:05] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200304','yyyyMMdd')
AND m.enter_date<  to_date('20200304','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200304','yyyyMMdd')
AND m.enter_date<  to_date('20200304','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:02:12] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200305','yyyyMMdd')
AND m.enter_date<  to_date('20200305','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200305','yyyyMMdd')
AND m.enter_date<  to_date('20200305','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:02:19] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200306','yyyyMMdd')
AND m.enter_date<  to_date('20200306','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200306','yyyyMMdd')
AND m.enter_date<  to_date('20200306','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:02:25] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200307','yyyyMMdd')
AND m.enter_date<  to_date('20200307','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200307','yyyyMMdd')
AND m.enter_date<  to_date('20200307','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:02:30] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200308','yyyyMMdd')
AND m.enter_date<  to_date('20200308','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200308','yyyyMMdd')
AND m.enter_date<  to_date('20200308','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:02:34] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200309','yyyyMMdd')
AND m.enter_date<  to_date('20200309','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200309','yyyyMMdd')
AND m.enter_date<  to_date('20200309','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:02:41] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200310','yyyyMMdd')
AND m.enter_date<  to_date('20200310','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200310','yyyyMMdd')
AND m.enter_date<  to_date('20200310','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:02:46] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200311','yyyyMMdd')
AND m.enter_date<  to_date('20200311','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200311','yyyyMMdd')
AND m.enter_date<  to_date('20200311','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:02:53] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200312','yyyyMMdd')
AND m.enter_date<  to_date('20200312','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200312','yyyyMMdd')
AND m.enter_date<  to_date('20200312','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:02:59] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200313','yyyyMMdd')
AND m.enter_date<  to_date('20200313','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200313','yyyyMMdd')
AND m.enter_date<  to_date('20200313','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:03:06] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200314','yyyyMMdd')
AND m.enter_date<  to_date('20200314','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200314','yyyyMMdd')
AND m.enter_date<  to_date('20200314','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:03:10] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200315','yyyyMMdd')
AND m.enter_date<  to_date('20200315','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200315','yyyyMMdd')
AND m.enter_date<  to_date('20200315','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:03:14] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200316','yyyyMMdd')
AND m.enter_date<  to_date('20200316','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200316','yyyyMMdd')
AND m.enter_date<  to_date('20200316','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:03:22] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200317','yyyyMMdd')
AND m.enter_date<  to_date('20200317','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200317','yyyyMMdd')
AND m.enter_date<  to_date('20200317','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:03:31] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200318','yyyyMMdd')
AND m.enter_date<  to_date('20200318','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200318','yyyyMMdd')
AND m.enter_date<  to_date('20200318','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:03:40] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200319','yyyyMMdd')
AND m.enter_date<  to_date('20200319','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200319','yyyyMMdd')
AND m.enter_date<  to_date('20200319','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:03:50] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200320','yyyyMMdd')
AND m.enter_date<  to_date('20200320','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200320','yyyyMMdd')
AND m.enter_date<  to_date('20200320','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:03:55] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200321','yyyyMMdd')
AND m.enter_date<  to_date('20200321','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200321','yyyyMMdd')
AND m.enter_date<  to_date('20200321','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:03:59] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200322','yyyyMMdd')
AND m.enter_date<  to_date('20200322','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200322','yyyyMMdd')
AND m.enter_date<  to_date('20200322','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:04:04] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200323','yyyyMMdd')
AND m.enter_date<  to_date('20200323','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200323','yyyyMMdd')
AND m.enter_date<  to_date('20200323','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:04:12] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200324','yyyyMMdd')
AND m.enter_date<  to_date('20200324','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200324','yyyyMMdd')
AND m.enter_date<  to_date('20200324','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:04:20] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200325','yyyyMMdd')
AND m.enter_date<  to_date('20200325','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200325','yyyyMMdd')
AND m.enter_date<  to_date('20200325','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:04:28] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200326','yyyyMMdd')
AND m.enter_date<  to_date('20200326','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200326','yyyyMMdd')
AND m.enter_date<  to_date('20200326','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:04:35] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200327','yyyyMMdd')
AND m.enter_date<  to_date('20200327','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200327','yyyyMMdd')
AND m.enter_date<  to_date('20200327','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:04:42] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200328','yyyyMMdd')
AND m.enter_date<  to_date('20200328','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200328','yyyyMMdd')
AND m.enter_date<  to_date('20200328','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:04:47] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200329','yyyyMMdd')
AND m.enter_date<  to_date('20200329','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200329','yyyyMMdd')
AND m.enter_date<  to_date('20200329','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:04:51] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200330','yyyyMMdd')
AND m.enter_date<  to_date('20200330','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200330','yyyyMMdd')
AND m.enter_date<  to_date('20200330','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:04:59] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200331','yyyyMMdd')
AND m.enter_date<  to_date('20200331','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200331','yyyyMMdd')
AND m.enter_date<  to_date('20200331','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:05:07] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200401','yyyyMMdd')
AND m.enter_date<  to_date('20200401','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200401','yyyyMMdd')
AND m.enter_date<  to_date('20200401','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:05:14] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200402','yyyyMMdd')
AND m.enter_date<  to_date('20200402','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200402','yyyyMMdd')
AND m.enter_date<  to_date('20200402','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:05:23] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200403','yyyyMMdd')
AND m.enter_date<  to_date('20200403','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200403','yyyyMMdd')
AND m.enter_date<  to_date('20200403','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:05:31] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200404','yyyyMMdd')
AND m.enter_date<  to_date('20200404','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200404','yyyyMMdd')
AND m.enter_date<  to_date('20200404','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:05:35] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200405','yyyyMMdd')
AND m.enter_date<  to_date('20200405','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200405','yyyyMMdd')
AND m.enter_date<  to_date('20200405','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:05:40] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200406','yyyyMMdd')
AND m.enter_date<  to_date('20200406','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200406','yyyyMMdd')
AND m.enter_date<  to_date('20200406','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:05:45] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200407','yyyyMMdd')
AND m.enter_date<  to_date('20200407','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200407','yyyyMMdd')
AND m.enter_date<  to_date('20200407','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:05:55] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200408','yyyyMMdd')
AND m.enter_date<  to_date('20200408','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200408','yyyyMMdd')
AND m.enter_date<  to_date('20200408','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:06:03] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200409','yyyyMMdd')
AND m.enter_date<  to_date('20200409','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200409','yyyyMMdd')
AND m.enter_date<  to_date('20200409','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:06:10] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200410','yyyyMMdd')
AND m.enter_date<  to_date('20200410','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200410','yyyyMMdd')
AND m.enter_date<  to_date('20200410','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:06:18] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200411','yyyyMMdd')
AND m.enter_date<  to_date('20200411','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200411','yyyyMMdd')
AND m.enter_date<  to_date('20200411','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:06:23] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200412','yyyyMMdd')
AND m.enter_date<  to_date('20200412','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200412','yyyyMMdd')
AND m.enter_date<  to_date('20200412','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:06:28] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200413','yyyyMMdd')
AND m.enter_date<  to_date('20200413','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200413','yyyyMMdd')
AND m.enter_date<  to_date('20200413','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:06:37] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200414','yyyyMMdd')
AND m.enter_date<  to_date('20200414','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200414','yyyyMMdd')
AND m.enter_date<  to_date('20200414','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:06:47] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200415','yyyyMMdd')
AND m.enter_date<  to_date('20200415','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200415','yyyyMMdd')
AND m.enter_date<  to_date('20200415','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:06:54] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200416','yyyyMMdd')
AND m.enter_date<  to_date('20200416','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200416','yyyyMMdd')
AND m.enter_date<  to_date('20200416','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:07:05] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200417','yyyyMMdd')
AND m.enter_date<  to_date('20200417','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200417','yyyyMMdd')
AND m.enter_date<  to_date('20200417','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:07:13] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200418','yyyyMMdd')
AND m.enter_date<  to_date('20200418','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200418','yyyyMMdd')
AND m.enter_date<  to_date('20200418','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:07:18] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200419','yyyyMMdd')
AND m.enter_date<  to_date('20200419','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200419','yyyyMMdd')
AND m.enter_date<  to_date('20200419','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:07:22] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200420','yyyyMMdd')
AND m.enter_date<  to_date('20200420','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200420','yyyyMMdd')
AND m.enter_date<  to_date('20200420','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:07:31] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200421','yyyyMMdd')
AND m.enter_date<  to_date('20200421','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200421','yyyyMMdd')
AND m.enter_date<  to_date('20200421','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:07:38] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200422','yyyyMMdd')
AND m.enter_date<  to_date('20200422','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200422','yyyyMMdd')
AND m.enter_date<  to_date('20200422','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:07:46] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200423','yyyyMMdd')
AND m.enter_date<  to_date('20200423','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200423','yyyyMMdd')
AND m.enter_date<  to_date('20200423','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:07:53] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200424','yyyyMMdd')
AND m.enter_date<  to_date('20200424','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200424','yyyyMMdd')
AND m.enter_date<  to_date('20200424','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:07:59] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200425','yyyyMMdd')
AND m.enter_date<  to_date('20200425','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200425','yyyyMMdd')
AND m.enter_date<  to_date('20200425','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:08:04] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200426','yyyyMMdd')
AND m.enter_date<  to_date('20200426','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200426','yyyyMMdd')
AND m.enter_date<  to_date('20200426','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:08:10] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200427','yyyyMMdd')
AND m.enter_date<  to_date('20200427','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200427','yyyyMMdd')
AND m.enter_date<  to_date('20200427','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:08:18] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200428','yyyyMMdd')
AND m.enter_date<  to_date('20200428','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200428','yyyyMMdd')
AND m.enter_date<  to_date('20200428','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:08:26] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200429','yyyyMMdd')
AND m.enter_date<  to_date('20200429','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200429','yyyyMMdd')
AND m.enter_date<  to_date('20200429','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:08:33] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200430','yyyyMMdd')
AND m.enter_date<  to_date('20200430','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200430','yyyyMMdd')
AND m.enter_date<  to_date('20200430','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:08:38] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200501','yyyyMMdd')
AND m.enter_date<  to_date('20200501','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200501','yyyyMMdd')
AND m.enter_date<  to_date('20200501','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:08:43] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200502','yyyyMMdd')
AND m.enter_date<  to_date('20200502','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200502','yyyyMMdd')
AND m.enter_date<  to_date('20200502','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:08:48] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200503','yyyyMMdd')
AND m.enter_date<  to_date('20200503','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200503','yyyyMMdd')
AND m.enter_date<  to_date('20200503','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:08:53] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200504','yyyyMMdd')
AND m.enter_date<  to_date('20200504','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200504','yyyyMMdd')
AND m.enter_date<  to_date('20200504','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:08:57] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200505','yyyyMMdd')
AND m.enter_date<  to_date('20200505','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200505','yyyyMMdd')
AND m.enter_date<  to_date('20200505','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:09:02] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200506','yyyyMMdd')
AND m.enter_date<  to_date('20200506','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200506','yyyyMMdd')
AND m.enter_date<  to_date('20200506','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:09:14] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200507','yyyyMMdd')
AND m.enter_date<  to_date('20200507','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200507','yyyyMMdd')
AND m.enter_date<  to_date('20200507','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:09:22] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200508','yyyyMMdd')
AND m.enter_date<  to_date('20200508','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200508','yyyyMMdd')
AND m.enter_date<  to_date('20200508','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:09:30] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200509','yyyyMMdd')
AND m.enter_date<  to_date('20200509','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200509','yyyyMMdd')
AND m.enter_date<  to_date('20200509','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:09:35] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200510','yyyyMMdd')
AND m.enter_date<  to_date('20200510','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200510','yyyyMMdd')
AND m.enter_date<  to_date('20200510','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:09:41] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200511','yyyyMMdd')
AND m.enter_date<  to_date('20200511','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200511','yyyyMMdd')
AND m.enter_date<  to_date('20200511','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:09:49] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200512','yyyyMMdd')
AND m.enter_date<  to_date('20200512','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200512','yyyyMMdd')
AND m.enter_date<  to_date('20200512','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:09:56] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200513','yyyyMMdd')
AND m.enter_date<  to_date('20200513','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200513','yyyyMMdd')
AND m.enter_date<  to_date('20200513','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:10:04] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200514','yyyyMMdd')
AND m.enter_date<  to_date('20200514','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200514','yyyyMMdd')
AND m.enter_date<  to_date('20200514','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:10:11] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200515','yyyyMMdd')
AND m.enter_date<  to_date('20200515','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200515','yyyyMMdd')
AND m.enter_date<  to_date('20200515','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:10:18] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200516','yyyyMMdd')
AND m.enter_date<  to_date('20200516','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200516','yyyyMMdd')
AND m.enter_date<  to_date('20200516','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:10:22] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200517','yyyyMMdd')
AND m.enter_date<  to_date('20200517','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200517','yyyyMMdd')
AND m.enter_date<  to_date('20200517','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:10:27] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200518','yyyyMMdd')
AND m.enter_date<  to_date('20200518','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200518','yyyyMMdd')
AND m.enter_date<  to_date('20200518','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:10:36] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200519','yyyyMMdd')
AND m.enter_date<  to_date('20200519','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200519','yyyyMMdd')
AND m.enter_date<  to_date('20200519','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:10:44] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200520','yyyyMMdd')
AND m.enter_date<  to_date('20200520','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200520','yyyyMMdd')
AND m.enter_date<  to_date('20200520','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:10:51] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200521','yyyyMMdd')
AND m.enter_date<  to_date('20200521','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200521','yyyyMMdd')
AND m.enter_date<  to_date('20200521','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:10:58] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200522','yyyyMMdd')
AND m.enter_date<  to_date('20200522','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200522','yyyyMMdd')
AND m.enter_date<  to_date('20200522','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:11:06] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200523','yyyyMMdd')
AND m.enter_date<  to_date('20200523','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200523','yyyyMMdd')
AND m.enter_date<  to_date('20200523','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:11:11] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200524','yyyyMMdd')
AND m.enter_date<  to_date('20200524','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200524','yyyyMMdd')
AND m.enter_date<  to_date('20200524','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:11:15] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200525','yyyyMMdd')
AND m.enter_date<  to_date('20200525','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200525','yyyyMMdd')
AND m.enter_date<  to_date('20200525','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:11:24] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200526','yyyyMMdd')
AND m.enter_date<  to_date('20200526','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200526','yyyyMMdd')
AND m.enter_date<  to_date('20200526','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:11:30] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200527','yyyyMMdd')
AND m.enter_date<  to_date('20200527','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200527','yyyyMMdd')
AND m.enter_date<  to_date('20200527','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:11:37] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200528','yyyyMMdd')
AND m.enter_date<  to_date('20200528','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200528','yyyyMMdd')
AND m.enter_date<  to_date('20200528','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:11:44] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200529','yyyyMMdd')
AND m.enter_date<  to_date('20200529','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200529','yyyyMMdd')
AND m.enter_date<  to_date('20200529','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:11:51] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200530','yyyyMMdd')
AND m.enter_date<  to_date('20200530','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200530','yyyyMMdd')
AND m.enter_date<  to_date('20200530','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:11:55] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200531','yyyyMMdd')
AND m.enter_date<  to_date('20200531','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200531','yyyyMMdd')
AND m.enter_date<  to_date('20200531','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:12:01] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200601','yyyyMMdd')
AND m.enter_date<  to_date('20200601','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200601','yyyyMMdd')
AND m.enter_date<  to_date('20200601','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:12:09] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200602','yyyyMMdd')
AND m.enter_date<  to_date('20200602','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200602','yyyyMMdd')
AND m.enter_date<  to_date('20200602','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:12:17] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200603','yyyyMMdd')
AND m.enter_date<  to_date('20200603','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200603','yyyyMMdd')
AND m.enter_date<  to_date('20200603','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:12:26] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200604','yyyyMMdd')
AND m.enter_date<  to_date('20200604','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200604','yyyyMMdd')
AND m.enter_date<  to_date('20200604','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:12:35] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200605','yyyyMMdd')
AND m.enter_date<  to_date('20200605','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200605','yyyyMMdd')
AND m.enter_date<  to_date('20200605','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:12:42] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200606','yyyyMMdd')
AND m.enter_date<  to_date('20200606','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200606','yyyyMMdd')
AND m.enter_date<  to_date('20200606','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:12:46] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200607','yyyyMMdd')
AND m.enter_date<  to_date('20200607','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200607','yyyyMMdd')
AND m.enter_date<  to_date('20200607','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:12:50] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200608','yyyyMMdd')
AND m.enter_date<  to_date('20200608','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200608','yyyyMMdd')
AND m.enter_date<  to_date('20200608','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:12:59] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200609','yyyyMMdd')
AND m.enter_date<  to_date('20200609','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200609','yyyyMMdd')
AND m.enter_date<  to_date('20200609','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:13:03] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200610','yyyyMMdd')
AND m.enter_date<  to_date('20200610','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200610','yyyyMMdd')
AND m.enter_date<  to_date('20200610','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:13:08] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200611','yyyyMMdd')
AND m.enter_date<  to_date('20200611','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200611','yyyyMMdd')
AND m.enter_date<  to_date('20200611','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:13:12] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200612','yyyyMMdd')
AND m.enter_date<  to_date('20200612','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200612','yyyyMMdd')
AND m.enter_date<  to_date('20200612','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:13:16] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200613','yyyyMMdd')
AND m.enter_date<  to_date('20200613','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200613','yyyyMMdd')
AND m.enter_date<  to_date('20200613','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:13:20] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200614','yyyyMMdd')
AND m.enter_date<  to_date('20200614','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200614','yyyyMMdd')
AND m.enter_date<  to_date('20200614','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:13:23] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200615','yyyyMMdd')
AND m.enter_date<  to_date('20200615','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200615','yyyyMMdd')
AND m.enter_date<  to_date('20200615','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:13:28] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200616','yyyyMMdd')
AND m.enter_date<  to_date('20200616','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200616','yyyyMMdd')
AND m.enter_date<  to_date('20200616','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:13:33] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200617','yyyyMMdd')
AND m.enter_date<  to_date('20200617','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200617','yyyyMMdd')
AND m.enter_date<  to_date('20200617','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:13:37] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200618','yyyyMMdd')
AND m.enter_date<  to_date('20200618','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200618','yyyyMMdd')
AND m.enter_date<  to_date('20200618','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:13:42] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200619','yyyyMMdd')
AND m.enter_date<  to_date('20200619','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200619','yyyyMMdd')
AND m.enter_date<  to_date('20200619','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:13:45] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200620','yyyyMMdd')
AND m.enter_date<  to_date('20200620','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200620','yyyyMMdd')
AND m.enter_date<  to_date('20200620','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:13:49] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200621','yyyyMMdd')
AND m.enter_date<  to_date('20200621','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200621','yyyyMMdd')
AND m.enter_date<  to_date('20200621','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:13:52] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200622','yyyyMMdd')
AND m.enter_date<  to_date('20200622','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200622','yyyyMMdd')
AND m.enter_date<  to_date('20200622','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:13:56] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200623','yyyyMMdd')
AND m.enter_date<  to_date('20200623','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200623','yyyyMMdd')
AND m.enter_date<  to_date('20200623','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:14:00] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200624','yyyyMMdd')
AND m.enter_date<  to_date('20200624','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200624','yyyyMMdd')
AND m.enter_date<  to_date('20200624','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:14:05] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200625','yyyyMMdd')
AND m.enter_date<  to_date('20200625','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200625','yyyyMMdd')
AND m.enter_date<  to_date('20200625','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:14:08] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200626','yyyyMMdd')
AND m.enter_date<  to_date('20200626','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200626','yyyyMMdd')
AND m.enter_date<  to_date('20200626','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:14:11] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200627','yyyyMMdd')
AND m.enter_date<  to_date('20200627','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200627','yyyyMMdd')
AND m.enter_date<  to_date('20200627','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:14:15] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200628','yyyyMMdd')
AND m.enter_date<  to_date('20200628','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200628','yyyyMMdd')
AND m.enter_date<  to_date('20200628','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:14:19] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200629','yyyyMMdd')
AND m.enter_date<  to_date('20200629','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200629','yyyyMMdd')
AND m.enter_date<  to_date('20200629','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-02 17:14:23] [INFO]  
         insert into his_bi.dw_work_yj_doctor_d
(
    st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
    diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
    item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
)
SELECT st_date,
    项目父编码 item_code,
    项目父名称 item_name,
    开单科室编码 dept_code,
    开单科室 dept_name,
    parent_dept_code,
    parent_dept_name,
    diag_emp_id,
    diag_emp_name, 
    执行科室编码 AS performed_dept_code,
    执行科室 AS performed_dept_name,
    in_out_flag,
    item_class,
    次数 AS amount, 
    人次 AS patient_num,
    费用 AS charges,
    area_code,
    work_dept AS work_dept_code,
    NAME AS work_dept_name,
    now()
FROM 
    (
    SELECT to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室, 
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name,
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class, 
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_name <> '体检费'    --排除体检
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
AND m.item_class IN ('C','D')
and t2.property1 in ('H0001')
AND t1.property3='4'   --执行科室为医技科室
AND m.in_out_flag='O'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200630','yyyyMMdd')
AND m.enter_date<  to_date('20200630','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
UNION ALL
SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
                 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
                 m.in_out_flag,
                 t2.property1 AS area_code,
                 m.performed_by 执行科室编码,     
                 t1.name AS 执行科室,
                 m.ordered_by 开单科室编码,
                 t2.name AS 开单科室,
                 n1.code as parent_dept_code,
                 n1.name as parent_dept_name, 
                 m.diag_emp_id,
                 m.diag_emp_name,
                 SUM(m.charges) 费用,
                 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
                 m.clinic_id 项目父编码,
                 tt.item_name 项目父名称,
                 m.item_class,
                 u.work_dept,  
                 n2.name
FROM his_bi.bms_bill_item  m
left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
WHERE m.item_class IN ('C','D')
AND m.refund_flag IS NULL 
AND m.rel_refund_id IS NULL
and t2.property1 in ('H0001')
AND t1.property3='4'  --执行科室为医技科室
AND m.in_out_flag='I'
AND m.clinic_id IS NOT NULL
AND m.enter_date>= to_date('20200630','yyyyMMdd')
AND m.enter_date<  to_date('20200630','yyyyMMdd') + 1
GROUP BY   to_char(m.enter_date,'yyyymmdd'),
                 m.in_out_flag, 
                 t2.property1 ,
                 m.performed_by,
                 t1.name ,
                 m.ordered_by, 
                 t2.name,
                 tt.item_name,
                 m.clinic_id ,
                 m.item_class,
                    m.diag_emp_id,
                 m.diag_emp_name,
                 u.work_dept,  
                 n2.name,
                 n1.code ,
                 n1.name
                 ) as total
    ;
         
[2020-07-04 21:30:25] [INFO] ssss
[2020-07-04 21:31:05] [INFO] ssss
[2020-07-04 21:31:05] [INFO] ssss
[2020-07-04 21:31:52] [INFO] ss
[2020-07-04 21:31:52] [INFO] ss
[2020-07-04 21:31:52] [INFO] ss
[2020-07-04 21:32:15] [INFO] ssss
[2020-07-04 21:33:00] [INFO] ssss
[2020-07-04 21:33:18] [INFO] ssss
[2020-07-04 21:34:04] [INFO] ssss
[2020-07-04 21:34:04] [INFO] ssss
[2020-07-04 21:45:55] [INFO] ssss
[2020-07-07 09:17:46] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:46] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:46] [INFO] 执行sql日期为：20200101
[2020-07-07 09:17:46] [INFO] 执行sql日期为：20200101
[2020-07-07 09:17:46] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:46] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:46] [INFO] 执行sql日期为：20200102
[2020-07-07 09:17:46] [INFO] 执行sql日期为：20200102
[2020-07-07 09:17:47] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:47] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:47] [INFO] 执行sql日期为：20200103
[2020-07-07 09:17:47] [INFO] 执行sql日期为：20200103
[2020-07-07 09:17:47] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:47] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:47] [INFO] 执行sql日期为：20200104
[2020-07-07 09:17:47] [INFO] 执行sql日期为：20200104
[2020-07-07 09:17:48] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:48] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:48] [INFO] 执行sql日期为：20200105
[2020-07-07 09:17:48] [INFO] 执行sql日期为：20200105
[2020-07-07 09:17:48] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:48] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:48] [INFO] 执行sql日期为：20200106
[2020-07-07 09:17:48] [INFO] 执行sql日期为：20200106
[2020-07-07 09:17:48] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:48] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:48] [INFO] 执行sql日期为：20200107
[2020-07-07 09:17:48] [INFO] 执行sql日期为：20200107
[2020-07-07 09:17:49] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:49] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:49] [INFO] 执行sql日期为：20200108
[2020-07-07 09:17:49] [INFO] 执行sql日期为：20200108
[2020-07-07 09:17:49] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:49] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:49] [INFO] 执行sql日期为：20200109
[2020-07-07 09:17:49] [INFO] 执行sql日期为：20200109
[2020-07-07 09:17:49] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:49] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:49] [INFO] 执行sql日期为：20200110
[2020-07-07 09:17:49] [INFO] 执行sql日期为：20200110
[2020-07-07 09:17:50] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:50] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:50] [INFO] 执行sql日期为：20200111
[2020-07-07 09:17:50] [INFO] 执行sql日期为：20200111
[2020-07-07 09:17:50] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:50] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:50] [INFO] 执行sql日期为：20200112
[2020-07-07 09:17:50] [INFO] 执行sql日期为：20200112
[2020-07-07 09:17:50] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:50] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:50] [INFO] 执行sql日期为：20200113
[2020-07-07 09:17:50] [INFO] 执行sql日期为：20200113
[2020-07-07 09:17:51] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:51] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:51] [INFO] 执行sql日期为：20200114
[2020-07-07 09:17:51] [INFO] 执行sql日期为：20200114
[2020-07-07 09:17:51] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:51] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:51] [INFO] 执行sql日期为：20200115
[2020-07-07 09:17:51] [INFO] 执行sql日期为：20200115
[2020-07-07 09:17:52] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:52] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:52] [INFO] 执行sql日期为：20200116
[2020-07-07 09:17:52] [INFO] 执行sql日期为：20200116
[2020-07-07 09:17:52] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:52] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:52] [INFO] 执行sql日期为：20200117
[2020-07-07 09:17:52] [INFO] 执行sql日期为：20200117
[2020-07-07 09:17:52] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:52] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:52] [INFO] 执行sql日期为：20200118
[2020-07-07 09:17:52] [INFO] 执行sql日期为：20200118
[2020-07-07 09:17:53] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:53] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:53] [INFO] 执行sql日期为：20200119
[2020-07-07 09:17:53] [INFO] 执行sql日期为：20200119
[2020-07-07 09:17:53] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:53] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:53] [INFO] 执行sql日期为：20200120
[2020-07-07 09:17:53] [INFO] 执行sql日期为：20200120
[2020-07-07 09:17:53] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:53] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:53] [INFO] 执行sql日期为：20200121
[2020-07-07 09:17:53] [INFO] 执行sql日期为：20200121
[2020-07-07 09:17:54] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:54] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:54] [INFO] 执行sql日期为：20200122
[2020-07-07 09:17:54] [INFO] 执行sql日期为：20200122
[2020-07-07 09:17:54] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:54] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:54] [INFO] 执行sql日期为：20200123
[2020-07-07 09:17:54] [INFO] 执行sql日期为：20200123
[2020-07-07 09:17:54] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:54] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:54] [INFO] 执行sql日期为：20200124
[2020-07-07 09:17:54] [INFO] 执行sql日期为：20200124
[2020-07-07 09:17:55] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:55] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:55] [INFO] 执行sql日期为：20200125
[2020-07-07 09:17:55] [INFO] 执行sql日期为：20200125
[2020-07-07 09:17:55] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:55] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:55] [INFO] 执行sql日期为：20200126
[2020-07-07 09:17:55] [INFO] 执行sql日期为：20200126
[2020-07-07 09:17:55] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:55] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:55] [INFO] 执行sql日期为：20200127
[2020-07-07 09:17:55] [INFO] 执行sql日期为：20200127
[2020-07-07 09:17:56] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:56] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:56] [INFO] 执行sql日期为：20200128
[2020-07-07 09:17:56] [INFO] 执行sql日期为：20200128
[2020-07-07 09:17:56] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:56] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:56] [INFO] 执行sql日期为：20200129
[2020-07-07 09:17:56] [INFO] 执行sql日期为：20200129
[2020-07-07 09:17:57] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:57] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:57] [INFO] 执行sql日期为：20200130
[2020-07-07 09:17:57] [INFO] 执行sql日期为：20200130
[2020-07-07 09:17:57] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:57] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:57] [INFO] 执行sql日期为：20200131
[2020-07-07 09:17:57] [INFO] 执行sql日期为：20200131
[2020-07-07 09:17:57] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:57] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:57] [INFO] 执行sql日期为：20200201
[2020-07-07 09:17:57] [INFO] 执行sql日期为：20200201
[2020-07-07 09:17:58] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:58] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:58] [INFO] 执行sql日期为：20200202
[2020-07-07 09:17:58] [INFO] 执行sql日期为：20200202
[2020-07-07 09:17:58] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:58] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:58] [INFO] 执行sql日期为：20200203
[2020-07-07 09:17:58] [INFO] 执行sql日期为：20200203
[2020-07-07 09:17:58] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:58] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:58] [INFO] 执行sql日期为：20200204
[2020-07-07 09:17:58] [INFO] 执行sql日期为：20200204
[2020-07-07 09:17:59] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:59] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:59] [INFO] 执行sql日期为：20200205
[2020-07-07 09:17:59] [INFO] 执行sql日期为：20200205
[2020-07-07 09:17:59] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:59] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:17:59] [INFO] 执行sql日期为：20200206
[2020-07-07 09:17:59] [INFO] 执行sql日期为：20200206
[2020-07-07 09:18:00] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:00] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:00] [INFO] 执行sql日期为：20200207
[2020-07-07 09:18:00] [INFO] 执行sql日期为：20200207
[2020-07-07 09:18:00] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:00] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:00] [INFO] 执行sql日期为：20200208
[2020-07-07 09:18:00] [INFO] 执行sql日期为：20200208
[2020-07-07 09:18:00] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:00] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:00] [INFO] 执行sql日期为：20200209
[2020-07-07 09:18:00] [INFO] 执行sql日期为：20200209
[2020-07-07 09:18:01] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:01] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:01] [INFO] 执行sql日期为：20200210
[2020-07-07 09:18:01] [INFO] 执行sql日期为：20200210
[2020-07-07 09:18:01] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:01] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:01] [INFO] 执行sql日期为：20200211
[2020-07-07 09:18:01] [INFO] 执行sql日期为：20200211
[2020-07-07 09:18:02] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:02] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:02] [INFO] 执行sql日期为：20200212
[2020-07-07 09:18:02] [INFO] 执行sql日期为：20200212
[2020-07-07 09:18:02] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:02] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:02] [INFO] 执行sql日期为：20200213
[2020-07-07 09:18:02] [INFO] 执行sql日期为：20200213
[2020-07-07 09:18:02] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:02] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:02] [INFO] 执行sql日期为：20200214
[2020-07-07 09:18:02] [INFO] 执行sql日期为：20200214
[2020-07-07 09:18:03] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:03] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:03] [INFO] 执行sql日期为：20200215
[2020-07-07 09:18:03] [INFO] 执行sql日期为：20200215
[2020-07-07 09:18:03] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:03] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:03] [INFO] 执行sql日期为：20200216
[2020-07-07 09:18:03] [INFO] 执行sql日期为：20200216
[2020-07-07 09:18:03] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:03] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:03] [INFO] 执行sql日期为：20200217
[2020-07-07 09:18:03] [INFO] 执行sql日期为：20200217
[2020-07-07 09:18:04] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:04] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:04] [INFO] 执行sql日期为：20200218
[2020-07-07 09:18:04] [INFO] 执行sql日期为：20200218
[2020-07-07 09:18:04] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:04] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:04] [INFO] 执行sql日期为：20200219
[2020-07-07 09:18:04] [INFO] 执行sql日期为：20200219
[2020-07-07 09:18:04] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:04] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:04] [INFO] 执行sql日期为：20200220
[2020-07-07 09:18:04] [INFO] 执行sql日期为：20200220
[2020-07-07 09:18:05] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:05] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:05] [INFO] 执行sql日期为：20200221
[2020-07-07 09:18:05] [INFO] 执行sql日期为：20200221
[2020-07-07 09:18:05] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:05] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:05] [INFO] 执行sql日期为：20200222
[2020-07-07 09:18:05] [INFO] 执行sql日期为：20200222
[2020-07-07 09:18:05] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:05] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:05] [INFO] 执行sql日期为：20200223
[2020-07-07 09:18:05] [INFO] 执行sql日期为：20200223
[2020-07-07 09:18:06] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:06] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:06] [INFO] 执行sql日期为：20200224
[2020-07-07 09:18:06] [INFO] 执行sql日期为：20200224
[2020-07-07 09:18:06] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:06] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:06] [INFO] 执行sql日期为：20200225
[2020-07-07 09:18:06] [INFO] 执行sql日期为：20200225
[2020-07-07 09:18:07] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:07] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:07] [INFO] 执行sql日期为：20200226
[2020-07-07 09:18:07] [INFO] 执行sql日期为：20200226
[2020-07-07 09:18:07] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:07] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:07] [INFO] 执行sql日期为：20200227
[2020-07-07 09:18:07] [INFO] 执行sql日期为：20200227
[2020-07-07 09:18:07] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:07] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:07] [INFO] 执行sql日期为：20200228
[2020-07-07 09:18:07] [INFO] 执行sql日期为：20200228
[2020-07-07 09:18:08] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:08] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:08] [INFO] 执行sql日期为：20200229
[2020-07-07 09:18:08] [INFO] 执行sql日期为：20200229
[2020-07-07 09:18:08] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:08] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:08] [INFO] 执行sql日期为：20200301
[2020-07-07 09:18:08] [INFO] 执行sql日期为：20200301
[2020-07-07 09:18:09] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:09] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:09] [INFO] 执行sql日期为：20200302
[2020-07-07 09:18:09] [INFO] 执行sql日期为：20200302
[2020-07-07 09:18:09] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:09] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:09] [INFO] 执行sql日期为：20200303
[2020-07-07 09:18:09] [INFO] 执行sql日期为：20200303
[2020-07-07 09:18:09] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:09] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:09] [INFO] 执行sql日期为：20200304
[2020-07-07 09:18:09] [INFO] 执行sql日期为：20200304
[2020-07-07 09:18:10] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:10] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:10] [INFO] 执行sql日期为：20200305
[2020-07-07 09:18:10] [INFO] 执行sql日期为：20200305
[2020-07-07 09:18:10] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:10] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:10] [INFO] 执行sql日期为：20200306
[2020-07-07 09:18:10] [INFO] 执行sql日期为：20200306
[2020-07-07 09:18:11] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:11] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:11] [INFO] 执行sql日期为：20200307
[2020-07-07 09:18:11] [INFO] 执行sql日期为：20200307
[2020-07-07 09:18:11] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:11] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:11] [INFO] 执行sql日期为：20200308
[2020-07-07 09:18:11] [INFO] 执行sql日期为：20200308
[2020-07-07 09:18:12] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:12] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:12] [INFO] 执行sql日期为：20200309
[2020-07-07 09:18:12] [INFO] 执行sql日期为：20200309
[2020-07-07 09:18:13] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:13] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:13] [INFO] 执行sql日期为：20200310
[2020-07-07 09:18:13] [INFO] 执行sql日期为：20200310
[2020-07-07 09:18:14] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:14] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:14] [INFO] 执行sql日期为：20200311
[2020-07-07 09:18:14] [INFO] 执行sql日期为：20200311
[2020-07-07 09:18:15] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:15] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:15] [INFO] 执行sql日期为：20200312
[2020-07-07 09:18:15] [INFO] 执行sql日期为：20200312
[2020-07-07 09:18:16] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:16] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:16] [INFO] 执行sql日期为：20200313
[2020-07-07 09:18:16] [INFO] 执行sql日期为：20200313
[2020-07-07 09:18:16] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:16] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:16] [INFO] 执行sql日期为：20200314
[2020-07-07 09:18:16] [INFO] 执行sql日期为：20200314
[2020-07-07 09:18:17] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:17] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:17] [INFO] 执行sql日期为：20200315
[2020-07-07 09:18:17] [INFO] 执行sql日期为：20200315
[2020-07-07 09:18:17] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:17] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:17] [INFO] 执行sql日期为：20200316
[2020-07-07 09:18:17] [INFO] 执行sql日期为：20200316
[2020-07-07 09:18:17] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:17] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:17] [INFO] 执行sql日期为：20200317
[2020-07-07 09:18:17] [INFO] 执行sql日期为：20200317
[2020-07-07 09:18:18] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:18] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:18] [INFO] 执行sql日期为：20200318
[2020-07-07 09:18:18] [INFO] 执行sql日期为：20200318
[2020-07-07 09:18:18] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:18] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:18] [INFO] 执行sql日期为：20200319
[2020-07-07 09:18:18] [INFO] 执行sql日期为：20200319
[2020-07-07 09:18:19] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:19] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:19] [INFO] 执行sql日期为：20200320
[2020-07-07 09:18:19] [INFO] 执行sql日期为：20200320
[2020-07-07 09:18:19] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:19] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:19] [INFO] 执行sql日期为：20200321
[2020-07-07 09:18:19] [INFO] 执行sql日期为：20200321
[2020-07-07 09:18:19] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:19] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:19] [INFO] 执行sql日期为：20200322
[2020-07-07 09:18:19] [INFO] 执行sql日期为：20200322
[2020-07-07 09:18:20] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:20] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:20] [INFO] 执行sql日期为：20200323
[2020-07-07 09:18:20] [INFO] 执行sql日期为：20200323
[2020-07-07 09:18:20] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:20] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:20] [INFO] 执行sql日期为：20200324
[2020-07-07 09:18:20] [INFO] 执行sql日期为：20200324
[2020-07-07 09:18:20] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:20] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:20] [INFO] 执行sql日期为：20200325
[2020-07-07 09:18:20] [INFO] 执行sql日期为：20200325
[2020-07-07 09:18:21] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:21] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:21] [INFO] 执行sql日期为：20200326
[2020-07-07 09:18:21] [INFO] 执行sql日期为：20200326
[2020-07-07 09:18:21] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:21] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:21] [INFO] 执行sql日期为：20200327
[2020-07-07 09:18:21] [INFO] 执行sql日期为：20200327
[2020-07-07 09:18:21] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:21] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:21] [INFO] 执行sql日期为：20200328
[2020-07-07 09:18:21] [INFO] 执行sql日期为：20200328
[2020-07-07 09:18:22] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:22] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:22] [INFO] 执行sql日期为：20200329
[2020-07-07 09:18:22] [INFO] 执行sql日期为：20200329
[2020-07-07 09:18:22] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:22] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:22] [INFO] 执行sql日期为：20200330
[2020-07-07 09:18:22] [INFO] 执行sql日期为：20200330
[2020-07-07 09:18:22] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:22] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:22] [INFO] 执行sql日期为：20200331
[2020-07-07 09:18:22] [INFO] 执行sql日期为：20200331
[2020-07-07 09:18:23] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:23] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:23] [INFO] 执行sql日期为：20200401
[2020-07-07 09:18:23] [INFO] 执行sql日期为：20200401
[2020-07-07 09:18:23] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:23] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:23] [INFO] 执行sql日期为：20200402
[2020-07-07 09:18:23] [INFO] 执行sql日期为：20200402
[2020-07-07 09:18:24] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:24] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:24] [INFO] 执行sql日期为：20200403
[2020-07-07 09:18:24] [INFO] 执行sql日期为：20200403
[2020-07-07 09:18:24] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:24] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:24] [INFO] 执行sql日期为：20200404
[2020-07-07 09:18:24] [INFO] 执行sql日期为：20200404
[2020-07-07 09:18:25] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:25] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:25] [INFO] 执行sql日期为：20200405
[2020-07-07 09:18:25] [INFO] 执行sql日期为：20200405
[2020-07-07 09:18:25] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:25] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:25] [INFO] 执行sql日期为：20200406
[2020-07-07 09:18:25] [INFO] 执行sql日期为：20200406
[2020-07-07 09:18:25] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:25] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:25] [INFO] 执行sql日期为：20200407
[2020-07-07 09:18:25] [INFO] 执行sql日期为：20200407
[2020-07-07 09:18:25] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:25] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:25] [INFO] 执行sql日期为：20200408
[2020-07-07 09:18:25] [INFO] 执行sql日期为：20200408
[2020-07-07 09:18:26] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:26] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:26] [INFO] 执行sql日期为：20200409
[2020-07-07 09:18:26] [INFO] 执行sql日期为：20200409
[2020-07-07 09:18:26] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:26] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:26] [INFO] 执行sql日期为：20200410
[2020-07-07 09:18:26] [INFO] 执行sql日期为：20200410
[2020-07-07 09:18:27] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:27] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:27] [INFO] 执行sql日期为：20200411
[2020-07-07 09:18:27] [INFO] 执行sql日期为：20200411
[2020-07-07 09:18:27] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:27] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:27] [INFO] 执行sql日期为：20200412
[2020-07-07 09:18:27] [INFO] 执行sql日期为：20200412
[2020-07-07 09:18:27] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:27] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:27] [INFO] 执行sql日期为：20200413
[2020-07-07 09:18:27] [INFO] 执行sql日期为：20200413
[2020-07-07 09:18:28] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:28] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:28] [INFO] 执行sql日期为：20200414
[2020-07-07 09:18:28] [INFO] 执行sql日期为：20200414
[2020-07-07 09:18:28] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:28] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:28] [INFO] 执行sql日期为：20200415
[2020-07-07 09:18:28] [INFO] 执行sql日期为：20200415
[2020-07-07 09:18:29] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:29] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:29] [INFO] 执行sql日期为：20200416
[2020-07-07 09:18:29] [INFO] 执行sql日期为：20200416
[2020-07-07 09:18:29] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:29] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:29] [INFO] 执行sql日期为：20200417
[2020-07-07 09:18:29] [INFO] 执行sql日期为：20200417
[2020-07-07 09:18:29] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:29] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:29] [INFO] 执行sql日期为：20200418
[2020-07-07 09:18:29] [INFO] 执行sql日期为：20200418
[2020-07-07 09:18:30] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:30] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:30] [INFO] 执行sql日期为：20200419
[2020-07-07 09:18:30] [INFO] 执行sql日期为：20200419
[2020-07-07 09:18:30] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:30] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:30] [INFO] 执行sql日期为：20200420
[2020-07-07 09:18:30] [INFO] 执行sql日期为：20200420
[2020-07-07 09:18:30] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:30] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:30] [INFO] 执行sql日期为：20200421
[2020-07-07 09:18:30] [INFO] 执行sql日期为：20200421
[2020-07-07 09:18:31] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:31] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:31] [INFO] 执行sql日期为：20200422
[2020-07-07 09:18:31] [INFO] 执行sql日期为：20200422
[2020-07-07 09:18:31] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:31] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:31] [INFO] 执行sql日期为：20200423
[2020-07-07 09:18:31] [INFO] 执行sql日期为：20200423
[2020-07-07 09:18:31] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:31] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:31] [INFO] 执行sql日期为：20200424
[2020-07-07 09:18:31] [INFO] 执行sql日期为：20200424
[2020-07-07 09:18:32] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:32] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:32] [INFO] 执行sql日期为：20200425
[2020-07-07 09:18:32] [INFO] 执行sql日期为：20200425
[2020-07-07 09:18:32] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:32] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:32] [INFO] 执行sql日期为：20200426
[2020-07-07 09:18:32] [INFO] 执行sql日期为：20200426
[2020-07-07 09:18:32] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:32] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:32] [INFO] 执行sql日期为：20200427
[2020-07-07 09:18:32] [INFO] 执行sql日期为：20200427
[2020-07-07 09:18:33] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:33] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:33] [INFO] 执行sql日期为：20200428
[2020-07-07 09:18:33] [INFO] 执行sql日期为：20200428
[2020-07-07 09:18:33] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:33] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:33] [INFO] 执行sql日期为：20200429
[2020-07-07 09:18:33] [INFO] 执行sql日期为：20200429
[2020-07-07 09:18:34] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:34] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:34] [INFO] 执行sql日期为：20200430
[2020-07-07 09:18:34] [INFO] 执行sql日期为：20200430
[2020-07-07 09:18:34] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:34] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:34] [INFO] 执行sql日期为：20200501
[2020-07-07 09:18:34] [INFO] 执行sql日期为：20200501
[2020-07-07 09:18:34] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:34] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:34] [INFO] 执行sql日期为：20200502
[2020-07-07 09:18:34] [INFO] 执行sql日期为：20200502
[2020-07-07 09:18:35] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:35] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:35] [INFO] 执行sql日期为：20200503
[2020-07-07 09:18:35] [INFO] 执行sql日期为：20200503
[2020-07-07 09:18:35] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:35] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:35] [INFO] 执行sql日期为：20200504
[2020-07-07 09:18:35] [INFO] 执行sql日期为：20200504
[2020-07-07 09:18:35] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:35] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:35] [INFO] 执行sql日期为：20200505
[2020-07-07 09:18:35] [INFO] 执行sql日期为：20200505
[2020-07-07 09:18:36] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:36] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:36] [INFO] 执行sql日期为：20200506
[2020-07-07 09:18:36] [INFO] 执行sql日期为：20200506
[2020-07-07 09:18:36] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:36] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:36] [INFO] 执行sql日期为：20200507
[2020-07-07 09:18:36] [INFO] 执行sql日期为：20200507
[2020-07-07 09:18:36] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:36] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:36] [INFO] 执行sql日期为：20200508
[2020-07-07 09:18:36] [INFO] 执行sql日期为：20200508
[2020-07-07 09:18:37] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:37] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:37] [INFO] 执行sql日期为：20200509
[2020-07-07 09:18:37] [INFO] 执行sql日期为：20200509
[2020-07-07 09:18:37] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:37] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:37] [INFO] 执行sql日期为：20200510
[2020-07-07 09:18:37] [INFO] 执行sql日期为：20200510
[2020-07-07 09:18:38] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:38] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:38] [INFO] 执行sql日期为：20200511
[2020-07-07 09:18:38] [INFO] 执行sql日期为：20200511
[2020-07-07 09:18:38] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:38] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:38] [INFO] 执行sql日期为：20200512
[2020-07-07 09:18:38] [INFO] 执行sql日期为：20200512
[2020-07-07 09:18:39] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:39] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:39] [INFO] 执行sql日期为：20200513
[2020-07-07 09:18:39] [INFO] 执行sql日期为：20200513
[2020-07-07 09:18:39] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:39] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:39] [INFO] 执行sql日期为：20200514
[2020-07-07 09:18:39] [INFO] 执行sql日期为：20200514
[2020-07-07 09:18:39] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:39] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:39] [INFO] 执行sql日期为：20200515
[2020-07-07 09:18:39] [INFO] 执行sql日期为：20200515
[2020-07-07 09:18:40] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:40] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:40] [INFO] 执行sql日期为：20200516
[2020-07-07 09:18:40] [INFO] 执行sql日期为：20200516
[2020-07-07 09:18:40] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:40] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:40] [INFO] 执行sql日期为：20200517
[2020-07-07 09:18:40] [INFO] 执行sql日期为：20200517
[2020-07-07 09:18:40] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:40] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:40] [INFO] 执行sql日期为：20200518
[2020-07-07 09:18:40] [INFO] 执行sql日期为：20200518
[2020-07-07 09:18:41] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:41] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:41] [INFO] 执行sql日期为：20200519
[2020-07-07 09:18:41] [INFO] 执行sql日期为：20200519
[2020-07-07 09:18:41] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:41] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:41] [INFO] 执行sql日期为：20200520
[2020-07-07 09:18:41] [INFO] 执行sql日期为：20200520
[2020-07-07 09:18:41] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:41] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:41] [INFO] 执行sql日期为：20200521
[2020-07-07 09:18:41] [INFO] 执行sql日期为：20200521
[2020-07-07 09:18:42] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:42] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:42] [INFO] 执行sql日期为：20200522
[2020-07-07 09:18:42] [INFO] 执行sql日期为：20200522
[2020-07-07 09:18:42] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:42] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:42] [INFO] 执行sql日期为：20200523
[2020-07-07 09:18:42] [INFO] 执行sql日期为：20200523
[2020-07-07 09:18:43] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:43] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:43] [INFO] 执行sql日期为：20200524
[2020-07-07 09:18:43] [INFO] 执行sql日期为：20200524
[2020-07-07 09:18:43] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:43] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:43] [INFO] 执行sql日期为：20200525
[2020-07-07 09:18:43] [INFO] 执行sql日期为：20200525
[2020-07-07 09:18:43] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:43] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:43] [INFO] 执行sql日期为：20200526
[2020-07-07 09:18:43] [INFO] 执行sql日期为：20200526
[2020-07-07 09:18:44] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:44] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:44] [INFO] 执行sql日期为：20200527
[2020-07-07 09:18:44] [INFO] 执行sql日期为：20200527
[2020-07-07 09:18:44] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:44] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:44] [INFO] 执行sql日期为：20200528
[2020-07-07 09:18:44] [INFO] 执行sql日期为：20200528
[2020-07-07 09:18:45] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:45] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:45] [INFO] 执行sql日期为：20200529
[2020-07-07 09:18:45] [INFO] 执行sql日期为：20200529
[2020-07-07 09:18:45] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:45] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:45] [INFO] 执行sql日期为：20200530
[2020-07-07 09:18:45] [INFO] 执行sql日期为：20200530
[2020-07-07 09:18:45] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:45] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:45] [INFO] 执行sql日期为：20200531
[2020-07-07 09:18:45] [INFO] 执行sql日期为：20200531
[2020-07-07 09:18:46] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:46] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:46] [INFO] 执行sql日期为：20200601
[2020-07-07 09:18:46] [INFO] 执行sql日期为：20200601
[2020-07-07 09:18:46] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:46] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:46] [INFO] 执行sql日期为：20200602
[2020-07-07 09:18:46] [INFO] 执行sql日期为：20200602
[2020-07-07 09:18:46] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:46] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:46] [INFO] 执行sql日期为：20200603
[2020-07-07 09:18:46] [INFO] 执行sql日期为：20200603
[2020-07-07 09:18:47] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:47] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:47] [INFO] 执行sql日期为：20200604
[2020-07-07 09:18:47] [INFO] 执行sql日期为：20200604
[2020-07-07 09:18:47] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:47] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:47] [INFO] 执行sql日期为：20200605
[2020-07-07 09:18:47] [INFO] 执行sql日期为：20200605
[2020-07-07 09:18:48] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:48] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:48] [INFO] 执行sql日期为：20200606
[2020-07-07 09:18:48] [INFO] 执行sql日期为：20200606
[2020-07-07 09:18:48] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:48] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:48] [INFO] 执行sql日期为：20200607
[2020-07-07 09:18:48] [INFO] 执行sql日期为：20200607
[2020-07-07 09:18:48] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:48] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:48] [INFO] 执行sql日期为：20200608
[2020-07-07 09:18:48] [INFO] 执行sql日期为：20200608
[2020-07-07 09:18:49] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:49] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:49] [INFO] 执行sql日期为：20200609
[2020-07-07 09:18:49] [INFO] 执行sql日期为：20200609
[2020-07-07 09:18:49] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:49] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:49] [INFO] 执行sql日期为：20200610
[2020-07-07 09:18:49] [INFO] 执行sql日期为：20200610
[2020-07-07 09:18:50] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:50] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:50] [INFO] 执行sql日期为：20200611
[2020-07-07 09:18:50] [INFO] 执行sql日期为：20200611
[2020-07-07 09:18:50] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:50] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:50] [INFO] 执行sql日期为：20200612
[2020-07-07 09:18:50] [INFO] 执行sql日期为：20200612
[2020-07-07 09:18:50] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:50] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:50] [INFO] 执行sql日期为：20200613
[2020-07-07 09:18:50] [INFO] 执行sql日期为：20200613
[2020-07-07 09:18:51] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:51] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:51] [INFO] 执行sql日期为：20200614
[2020-07-07 09:18:51] [INFO] 执行sql日期为：20200614
[2020-07-07 09:18:51] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:51] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:51] [INFO] 执行sql日期为：20200615
[2020-07-07 09:18:51] [INFO] 执行sql日期为：20200615
[2020-07-07 09:18:51] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:51] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:51] [INFO] 执行sql日期为：20200616
[2020-07-07 09:18:51] [INFO] 执行sql日期为：20200616
[2020-07-07 09:18:52] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:52] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:52] [INFO] 执行sql日期为：20200617
[2020-07-07 09:18:52] [INFO] 执行sql日期为：20200617
[2020-07-07 09:18:52] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:52] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:52] [INFO] 执行sql日期为：20200618
[2020-07-07 09:18:52] [INFO] 执行sql日期为：20200618
[2020-07-07 09:18:53] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:53] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:53] [INFO] 执行sql日期为：20200619
[2020-07-07 09:18:53] [INFO] 执行sql日期为：20200619
[2020-07-07 09:18:53] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:53] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:53] [INFO] 执行sql日期为：20200620
[2020-07-07 09:18:53] [INFO] 执行sql日期为：20200620
[2020-07-07 09:18:53] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:53] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:53] [INFO] 执行sql日期为：20200621
[2020-07-07 09:18:53] [INFO] 执行sql日期为：20200621
[2020-07-07 09:18:54] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:54] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:54] [INFO] 执行sql日期为：20200622
[2020-07-07 09:18:54] [INFO] 执行sql日期为：20200622
[2020-07-07 09:18:54] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:54] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:54] [INFO] 执行sql日期为：20200623
[2020-07-07 09:18:54] [INFO] 执行sql日期为：20200623
[2020-07-07 09:18:55] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:55] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:55] [INFO] 执行sql日期为：20200624
[2020-07-07 09:18:55] [INFO] 执行sql日期为：20200624
[2020-07-07 09:18:55] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:55] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:55] [INFO] 执行sql日期为：20200625
[2020-07-07 09:18:55] [INFO] 执行sql日期为：20200625
[2020-07-07 09:18:55] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:55] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:55] [INFO] 执行sql日期为：20200626
[2020-07-07 09:18:55] [INFO] 执行sql日期为：20200626
[2020-07-07 09:18:56] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:56] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:56] [INFO] 执行sql日期为：20200627
[2020-07-07 09:18:56] [INFO] 执行sql日期为：20200627
[2020-07-07 09:18:56] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:56] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:56] [INFO] 执行sql日期为：20200628
[2020-07-07 09:18:56] [INFO] 执行sql日期为：20200628
[2020-07-07 09:18:56] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:56] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:56] [INFO] 执行sql日期为：20200629
[2020-07-07 09:18:56] [INFO] 执行sql日期为：20200629
[2020-07-07 09:18:57] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:57] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:57] [INFO] 执行sql日期为：20200630
[2020-07-07 09:18:57] [INFO] 执行sql日期为：20200630
[2020-07-07 09:18:57] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:57] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:57] [INFO] 执行sql日期为：20200701
[2020-07-07 09:18:57] [INFO] 执行sql日期为：20200701
[2020-07-07 09:18:58] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:58] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:58] [INFO] 执行sql日期为：20200702
[2020-07-07 09:18:58] [INFO] 执行sql日期为：20200702
[2020-07-07 09:18:58] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:58] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:58] [INFO] 执行sql日期为：20200703
[2020-07-07 09:18:58] [INFO] 执行sql日期为：20200703
[2020-07-07 09:18:59] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:59] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:18:59] [INFO] 执行sql日期为：20200704
[2020-07-07 09:18:59] [INFO] 执行sql日期为：20200704
[2020-07-07 09:19:00] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:19:00] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:19:00] [INFO] 执行sql日期为：20200705
[2020-07-07 09:19:00] [INFO] 执行sql日期为：20200705
[2020-07-07 09:19:01] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:19:01] [INFO]  
         select his_bi."fun_dwd_D00036_d"('day_id','day_id');
    ;
         
[2020-07-07 09:19:01] [INFO] 执行sql日期为：20200706
[2020-07-07 09:19:01] [INFO] 执行sql日期为：20200706
[2020-07-08 17:23:02] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('day_id','day_id');
    ;
         
[2020-07-08 17:23:02] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('day_id','day_id');
    ;
         
[2020-07-08 17:23:02] [INFO] 执行sql日期为：202001
[2020-07-08 17:23:02] [INFO] 执行sql日期为：202001
[2020-07-08 17:23:02] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('day_id','day_id');
    ;
         
[2020-07-08 17:23:02] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('day_id','day_id');
    ;
         
[2020-07-08 17:23:02] [INFO] 执行sql日期为：202002
[2020-07-08 17:23:02] [INFO] 执行sql日期为：202002
[2020-07-08 17:23:03] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('day_id','day_id');
    ;
         
[2020-07-08 17:23:03] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('day_id','day_id');
    ;
         
[2020-07-08 17:23:03] [INFO] 执行sql日期为：202003
[2020-07-08 17:23:03] [INFO] 执行sql日期为：202003
[2020-07-08 17:23:03] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('day_id','day_id');
    ;
         
[2020-07-08 17:23:03] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('day_id','day_id');
    ;
         
[2020-07-08 17:23:03] [INFO] 执行sql日期为：202004
[2020-07-08 17:23:03] [INFO] 执行sql日期为：202004
[2020-07-08 17:23:03] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('day_id','day_id');
    ;
         
[2020-07-08 17:23:03] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('day_id','day_id');
    ;
         
[2020-07-08 17:23:03] [INFO] 执行sql日期为：202005
[2020-07-08 17:23:03] [INFO] 执行sql日期为：202005
[2020-07-08 17:23:04] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('day_id','day_id');
    ;
         
[2020-07-08 17:23:04] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('day_id','day_id');
    ;
         
[2020-07-08 17:23:04] [INFO] 执行sql日期为：202006
[2020-07-08 17:23:04] [INFO] 执行sql日期为：202006
[2020-07-09 14:20:54] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('day_id','day_id');
    ;
         
[2020-07-09 14:20:54] [INFO] 执行sql日期为：202001
[2020-07-09 14:20:55] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('day_id','day_id');
    ;
         
[2020-07-09 14:20:55] [INFO] 执行sql日期为：202002
[2020-07-09 14:20:55] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('day_id','day_id');
    ;
         
[2020-07-09 14:20:55] [INFO] 执行sql日期为：202003
[2020-07-09 14:20:55] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('day_id','day_id');
    ;
         
[2020-07-09 14:20:55] [INFO] 执行sql日期为：202004
[2020-07-09 14:20:56] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('day_id','day_id');
    ;
         
[2020-07-09 14:20:56] [INFO] 执行sql日期为：202005
[2020-07-09 14:20:56] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('day_id','day_id');
    ;
         
[2020-07-09 14:20:56] [INFO] 执行sql日期为：202006
[2020-07-09 14:21:58] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('day_id','day_id');
    ;
         
[2020-07-09 14:21:58] [INFO] 执行sql日期为：202001
[2020-07-09 14:21:58] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('day_id','day_id');
    ;
         
[2020-07-09 14:21:58] [INFO] 执行sql日期为：202002
[2020-07-09 14:21:59] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('day_id','day_id');
    ;
         
[2020-07-09 14:21:59] [INFO] 执行sql日期为：202003
[2020-07-09 14:21:59] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('day_id','day_id');
    ;
         
[2020-07-09 14:21:59] [INFO] 执行sql日期为：202004
[2020-07-09 14:22:00] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('day_id','day_id');
    ;
         
[2020-07-09 14:22:00] [INFO] 执行sql日期为：202005
[2020-07-09 14:22:00] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('day_id','day_id');
    ;
         
[2020-07-09 14:22:00] [INFO] 执行sql日期为：202006
[2020-07-09 14:24:51] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('day_id','day_id');
    ;
         
[2020-07-09 14:24:51] [INFO] 执行sql日期为：202001
[2020-07-09 14:24:51] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('day_id','day_id');
    ;
         
[2020-07-09 14:24:51] [INFO] 执行sql日期为：202002
[2020-07-09 14:24:52] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('day_id','day_id');
    ;
         
[2020-07-09 14:24:52] [INFO] 执行sql日期为：202003
[2020-07-09 14:24:52] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('day_id','day_id');
    ;
         
[2020-07-09 14:24:52] [INFO] 执行sql日期为：202004
[2020-07-09 14:24:52] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('day_id','day_id');
    ;
         
[2020-07-09 14:24:52] [INFO] 执行sql日期为：202005
[2020-07-09 14:24:53] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('day_id','day_id');
    ;
         
[2020-07-09 14:24:53] [INFO] 执行sql日期为：202006
[2020-07-09 14:26:57] [INFO] 执行sql日期为：202001
[2020-07-09 14:26:57] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('day_id','day_id');
    ;
         
[2020-07-09 14:26:57] [INFO] 执行sql日期为：202002
[2020-07-09 14:26:57] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('day_id','day_id');
    ;
         
[2020-07-09 14:26:58] [INFO] 执行sql日期为：202003
[2020-07-09 14:26:58] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('day_id','day_id');
    ;
         
[2020-07-09 14:26:58] [INFO] 执行sql日期为：202004
[2020-07-09 14:26:58] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('day_id','day_id');
    ;
         
[2020-07-09 14:26:59] [INFO] 执行sql日期为：202005
[2020-07-09 14:26:59] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('day_id','day_id');
    ;
         
[2020-07-09 14:26:59] [INFO] 执行sql日期为：202006
[2020-07-09 14:26:59] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('day_id','day_id');
    ;
         
[2020-07-09 14:27:24] [INFO] 执行sql日期为：202001
[2020-07-09 14:27:24] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('day_id','day_id');
    ;
         
[2020-07-09 14:27:25] [INFO] 执行sql日期为：202002
[2020-07-09 14:27:25] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('day_id','day_id');
    ;
         
[2020-07-09 14:27:26] [INFO] 执行sql日期为：202003
[2020-07-09 14:27:26] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('day_id','day_id');
    ;
         
[2020-07-09 14:27:28] [INFO] 执行sql日期为：202004
[2020-07-09 14:27:28] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('day_id','day_id');
    ;
         
[2020-07-09 14:27:29] [INFO] 执行sql日期为：202005
[2020-07-09 14:27:29] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('day_id','day_id');
    ;
         
[2020-07-09 14:27:29] [INFO] 执行sql日期为：202006
[2020-07-09 14:27:29] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('day_id','day_id');
    ;
         
[2020-07-09 14:28:11] [INFO] 执行sql日期为：202001
[2020-07-09 14:28:11] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('day_id','day_id');
         
[2020-07-09 14:28:12] [INFO] 执行sql日期为：202002
[2020-07-09 14:28:12] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('day_id','day_id');
         
[2020-07-09 14:28:12] [INFO] 执行sql日期为：202003
[2020-07-09 14:28:12] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('day_id','day_id');
         
[2020-07-09 14:28:13] [INFO] 执行sql日期为：202004
[2020-07-09 14:28:13] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('day_id','day_id');
         
[2020-07-09 14:28:14] [INFO] 执行sql日期为：202005
[2020-07-09 14:28:14] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('day_id','day_id');
         
[2020-07-09 14:28:15] [INFO] 执行sql日期为：202006
[2020-07-09 14:28:15] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('day_id','day_id');
         
[2020-07-09 14:29:46] [INFO] 执行sql日期为：202006
[2020-07-09 14:29:46] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('day_id','day_id');
         
[2020-07-09 14:30:21] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('day_id','day_id');
         
[2020-07-09 14:30:46] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('day_id','day_id');
         
[2020-07-09 14:32:25] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('202006','202006');
         
[2020-07-09 14:32:30] [INFO] 执行sql日期为：202001
[2020-07-09 14:32:30] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('202001','202001');
         
[2020-07-09 14:32:39] [INFO] 执行sql日期为：202002
[2020-07-09 14:32:39] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('202002','202002');
         
[2020-07-09 14:32:48] [INFO] 执行sql日期为：202003
[2020-07-09 14:32:48] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('202003','202003');
         
[2020-07-09 14:32:58] [INFO] 执行sql日期为：202004
[2020-07-09 14:32:58] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('202004','202004');
         
[2020-07-09 14:33:08] [INFO] 执行sql日期为：202005
[2020-07-09 14:33:08] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('202005','202005');
         
[2020-07-09 14:33:17] [INFO] 执行sql日期为：202006
[2020-07-09 14:33:17] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('202006','202006');
         
[2020-07-09 14:42:25] [INFO] 执行sql日期为：202001
[2020-07-09 14:42:25] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('202001','202001');
         
[2020-07-09 14:42:34] [INFO] 执行sql日期为：202002
[2020-07-09 14:42:34] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('202002','202002');
         
[2020-07-09 14:42:42] [INFO] 执行sql日期为：202003
[2020-07-09 14:42:42] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('202003','202003');
         
[2020-07-09 14:42:50] [INFO] 执行sql日期为：202004
[2020-07-09 14:42:50] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('202004','202004');
         
[2020-07-09 14:42:59] [INFO] 执行sql日期为：202005
[2020-07-09 14:42:59] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('202005','202005');
         
[2020-07-09 14:43:09] [INFO] 执行sql日期为：202006
[2020-07-09 14:43:09] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('202006','202006');
         
[2020-07-09 14:48:27] [INFO] 执行sql日期为：202001
[2020-07-09 14:48:27] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('202001','202001');
         
[2020-07-09 14:48:35] [INFO] 执行sql日期为：202002
[2020-07-09 14:48:35] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('202002','202002');
         
[2020-07-09 14:48:43] [INFO] 执行sql日期为：202003
[2020-07-09 14:48:43] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('202003','202003');
         
[2020-07-09 14:48:51] [INFO] 执行sql日期为：202004
[2020-07-09 14:48:51] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('202004','202004');
         
[2020-07-09 14:49:02] [INFO] 执行sql日期为：202005
[2020-07-09 14:49:02] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('202005','202005');
         
[2020-07-09 14:49:11] [INFO] 执行sql日期为：202006
[2020-07-09 14:49:11] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('202006','202006');
         
[2020-07-09 15:24:39] [INFO] 执行sql日期为：202001
[2020-07-09 15:24:39] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('202001','202001');
         
[2020-07-09 15:26:06] [INFO] 执行sql日期为：202001
[2020-07-09 15:26:06] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('202001','202001');
         
[2020-07-09 15:26:16] [INFO] 执行sql日期为：202002
[2020-07-09 15:26:16] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('202002','202002');
         
[2020-07-09 15:26:25] [INFO] 执行sql日期为：202003
[2020-07-09 15:26:25] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('202003','202003');
         
[2020-07-09 15:26:35] [INFO] 执行sql日期为：202004
[2020-07-09 15:26:35] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('202004','202004');
         
[2020-07-09 15:26:45] [INFO] 执行sql日期为：202005
[2020-07-09 15:26:45] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('202005','202005');
         
[2020-07-09 15:26:54] [INFO] 执行sql日期为：202006
[2020-07-09 15:26:54] [INFO]  
         select his_bi."fun_kpi_master_m_swr"('202006','202006');
         
[2020-07-13 10:59:48] [INFO] 执行sql日期为：20200101
[2020-07-13 10:59:48] [INFO] 执行sql日期为：20200101
[2020-07-13 10:59:48] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200101','20200101');
         
[2020-07-13 10:59:48] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200101','20200101');
         
[2020-07-13 10:59:49] [INFO] 执行sql日期为：20200102
[2020-07-13 10:59:49] [INFO] 执行sql日期为：20200102
[2020-07-13 10:59:49] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200102','20200102');
         
[2020-07-13 10:59:49] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200102','20200102');
         
[2020-07-13 10:59:51] [INFO] 执行sql日期为：20200103
[2020-07-13 10:59:51] [INFO] 执行sql日期为：20200103
[2020-07-13 10:59:51] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200103','20200103');
         
[2020-07-13 10:59:51] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200103','20200103');
         
[2020-07-13 10:59:53] [INFO] 执行sql日期为：20200104
[2020-07-13 10:59:53] [INFO] 执行sql日期为：20200104
[2020-07-13 10:59:53] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200104','20200104');
         
[2020-07-13 10:59:53] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200104','20200104');
         
[2020-07-13 10:59:54] [INFO] 执行sql日期为：20200105
[2020-07-13 10:59:54] [INFO] 执行sql日期为：20200105
[2020-07-13 10:59:54] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200105','20200105');
         
[2020-07-13 10:59:54] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200105','20200105');
         
[2020-07-13 10:59:56] [INFO] 执行sql日期为：20200106
[2020-07-13 10:59:56] [INFO] 执行sql日期为：20200106
[2020-07-13 10:59:56] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200106','20200106');
         
[2020-07-13 10:59:56] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200106','20200106');
         
[2020-07-13 10:59:57] [INFO] 执行sql日期为：20200107
[2020-07-13 10:59:57] [INFO] 执行sql日期为：20200107
[2020-07-13 10:59:57] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200107','20200107');
         
[2020-07-13 10:59:57] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200107','20200107');
         
[2020-07-13 10:59:59] [INFO] 执行sql日期为：20200108
[2020-07-13 10:59:59] [INFO] 执行sql日期为：20200108
[2020-07-13 10:59:59] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200108','20200108');
         
[2020-07-13 10:59:59] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200108','20200108');
         
[2020-07-13 11:00:00] [INFO] 执行sql日期为：20200109
[2020-07-13 11:00:00] [INFO] 执行sql日期为：20200109
[2020-07-13 11:00:00] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200109','20200109');
         
[2020-07-13 11:00:00] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200109','20200109');
         
[2020-07-13 11:00:02] [INFO] 执行sql日期为：20200110
[2020-07-13 11:00:02] [INFO] 执行sql日期为：20200110
[2020-07-13 11:00:02] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200110','20200110');
         
[2020-07-13 11:00:02] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200110','20200110');
         
[2020-07-13 11:00:03] [INFO] 执行sql日期为：20200111
[2020-07-13 11:00:03] [INFO] 执行sql日期为：20200111
[2020-07-13 11:00:03] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200111','20200111');
         
[2020-07-13 11:00:03] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200111','20200111');
         
[2020-07-13 11:00:05] [INFO] 执行sql日期为：20200112
[2020-07-13 11:00:05] [INFO] 执行sql日期为：20200112
[2020-07-13 11:00:05] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200112','20200112');
         
[2020-07-13 11:00:05] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200112','20200112');
         
[2020-07-13 11:00:06] [INFO] 执行sql日期为：20200113
[2020-07-13 11:00:06] [INFO] 执行sql日期为：20200113
[2020-07-13 11:00:06] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200113','20200113');
         
[2020-07-13 11:00:06] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200113','20200113');
         
[2020-07-13 11:00:08] [INFO] 执行sql日期为：20200114
[2020-07-13 11:00:08] [INFO] 执行sql日期为：20200114
[2020-07-13 11:00:08] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200114','20200114');
         
[2020-07-13 11:00:08] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200114','20200114');
         
[2020-07-13 11:00:09] [INFO] 执行sql日期为：20200115
[2020-07-13 11:00:09] [INFO] 执行sql日期为：20200115
[2020-07-13 11:00:09] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200115','20200115');
         
[2020-07-13 11:00:09] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200115','20200115');
         
[2020-07-13 11:00:11] [INFO] 执行sql日期为：20200116
[2020-07-13 11:00:11] [INFO] 执行sql日期为：20200116
[2020-07-13 11:00:11] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200116','20200116');
         
[2020-07-13 11:00:11] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200116','20200116');
         
[2020-07-13 11:00:12] [INFO] 执行sql日期为：20200117
[2020-07-13 11:00:12] [INFO] 执行sql日期为：20200117
[2020-07-13 11:00:12] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200117','20200117');
         
[2020-07-13 11:00:12] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200117','20200117');
         
[2020-07-13 11:00:14] [INFO] 执行sql日期为：20200118
[2020-07-13 11:00:14] [INFO] 执行sql日期为：20200118
[2020-07-13 11:00:14] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200118','20200118');
         
[2020-07-13 11:00:14] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200118','20200118');
         
[2020-07-13 11:00:15] [INFO] 执行sql日期为：20200119
[2020-07-13 11:00:15] [INFO] 执行sql日期为：20200119
[2020-07-13 11:00:15] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200119','20200119');
         
[2020-07-13 11:00:15] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200119','20200119');
         
[2020-07-13 11:00:16] [INFO] 执行sql日期为：20200120
[2020-07-13 11:00:16] [INFO] 执行sql日期为：20200120
[2020-07-13 11:00:16] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200120','20200120');
         
[2020-07-13 11:00:16] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200120','20200120');
         
[2020-07-13 11:00:18] [INFO] 执行sql日期为：20200121
[2020-07-13 11:00:18] [INFO] 执行sql日期为：20200121
[2020-07-13 11:00:18] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200121','20200121');
         
[2020-07-13 11:00:18] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200121','20200121');
         
[2020-07-13 11:00:19] [INFO] 执行sql日期为：20200122
[2020-07-13 11:00:19] [INFO] 执行sql日期为：20200122
[2020-07-13 11:00:19] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200122','20200122');
         
[2020-07-13 11:00:19] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200122','20200122');
         
[2020-07-13 11:00:21] [INFO] 执行sql日期为：20200123
[2020-07-13 11:00:21] [INFO] 执行sql日期为：20200123
[2020-07-13 11:00:21] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200123','20200123');
         
[2020-07-13 11:00:21] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200123','20200123');
         
[2020-07-13 11:00:23] [INFO] 执行sql日期为：20200124
[2020-07-13 11:00:23] [INFO] 执行sql日期为：20200124
[2020-07-13 11:00:23] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200124','20200124');
         
[2020-07-13 11:00:23] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200124','20200124');
         
[2020-07-13 11:00:24] [INFO] 执行sql日期为：20200125
[2020-07-13 11:00:24] [INFO] 执行sql日期为：20200125
[2020-07-13 11:00:24] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200125','20200125');
         
[2020-07-13 11:00:24] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200125','20200125');
         
[2020-07-13 11:00:26] [INFO] 执行sql日期为：20200126
[2020-07-13 11:00:26] [INFO] 执行sql日期为：20200126
[2020-07-13 11:00:26] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200126','20200126');
         
[2020-07-13 11:00:26] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200126','20200126');
         
[2020-07-13 11:00:27] [INFO] 执行sql日期为：20200127
[2020-07-13 11:00:27] [INFO] 执行sql日期为：20200127
[2020-07-13 11:00:27] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200127','20200127');
         
[2020-07-13 11:00:27] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200127','20200127');
         
[2020-07-13 11:00:29] [INFO] 执行sql日期为：20200128
[2020-07-13 11:00:29] [INFO] 执行sql日期为：20200128
[2020-07-13 11:00:29] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200128','20200128');
         
[2020-07-13 11:00:29] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200128','20200128');
         
[2020-07-13 11:00:31] [INFO] 执行sql日期为：20200129
[2020-07-13 11:00:31] [INFO] 执行sql日期为：20200129
[2020-07-13 11:00:31] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200129','20200129');
         
[2020-07-13 11:00:31] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200129','20200129');
         
[2020-07-13 11:00:33] [INFO] 执行sql日期为：20200130
[2020-07-13 11:00:33] [INFO] 执行sql日期为：20200130
[2020-07-13 11:00:33] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200130','20200130');
         
[2020-07-13 11:00:33] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200130','20200130');
         
[2020-07-13 11:00:34] [INFO] 执行sql日期为：20200131
[2020-07-13 11:00:34] [INFO] 执行sql日期为：20200131
[2020-07-13 11:00:34] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200131','20200131');
         
[2020-07-13 11:00:34] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200131','20200131');
         
[2020-07-13 11:00:36] [INFO] 执行sql日期为：20200201
[2020-07-13 11:00:36] [INFO] 执行sql日期为：20200201
[2020-07-13 11:00:36] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200201','20200201');
         
[2020-07-13 11:00:36] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200201','20200201');
         
[2020-07-13 11:00:37] [INFO] 执行sql日期为：20200202
[2020-07-13 11:00:37] [INFO] 执行sql日期为：20200202
[2020-07-13 11:00:37] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200202','20200202');
         
[2020-07-13 11:00:37] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200202','20200202');
         
[2020-07-13 11:00:39] [INFO] 执行sql日期为：20200203
[2020-07-13 11:00:39] [INFO] 执行sql日期为：20200203
[2020-07-13 11:00:39] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200203','20200203');
         
[2020-07-13 11:00:39] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200203','20200203');
         
[2020-07-13 11:00:40] [INFO] 执行sql日期为：20200204
[2020-07-13 11:00:40] [INFO] 执行sql日期为：20200204
[2020-07-13 11:00:40] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200204','20200204');
         
[2020-07-13 11:00:40] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200204','20200204');
         
[2020-07-13 11:00:42] [INFO] 执行sql日期为：20200205
[2020-07-13 11:00:42] [INFO] 执行sql日期为：20200205
[2020-07-13 11:00:42] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200205','20200205');
         
[2020-07-13 11:00:42] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200205','20200205');
         
[2020-07-13 11:00:43] [INFO] 执行sql日期为：20200206
[2020-07-13 11:00:43] [INFO] 执行sql日期为：20200206
[2020-07-13 11:00:43] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200206','20200206');
         
[2020-07-13 11:00:43] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200206','20200206');
         
[2020-07-13 11:00:45] [INFO] 执行sql日期为：20200207
[2020-07-13 11:00:45] [INFO] 执行sql日期为：20200207
[2020-07-13 11:00:45] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200207','20200207');
         
[2020-07-13 11:00:45] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200207','20200207');
         
[2020-07-13 11:00:46] [INFO] 执行sql日期为：20200208
[2020-07-13 11:00:46] [INFO] 执行sql日期为：20200208
[2020-07-13 11:00:46] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200208','20200208');
         
[2020-07-13 11:00:46] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200208','20200208');
         
[2020-07-13 11:00:48] [INFO] 执行sql日期为：20200209
[2020-07-13 11:00:48] [INFO] 执行sql日期为：20200209
[2020-07-13 11:00:48] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200209','20200209');
         
[2020-07-13 11:00:48] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200209','20200209');
         
[2020-07-13 11:00:49] [INFO] 执行sql日期为：20200210
[2020-07-13 11:00:49] [INFO] 执行sql日期为：20200210
[2020-07-13 11:00:49] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200210','20200210');
         
[2020-07-13 11:00:49] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200210','20200210');
         
[2020-07-13 11:00:51] [INFO] 执行sql日期为：20200211
[2020-07-13 11:00:51] [INFO] 执行sql日期为：20200211
[2020-07-13 11:00:51] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200211','20200211');
         
[2020-07-13 11:00:51] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200211','20200211');
         
[2020-07-13 11:00:52] [INFO] 执行sql日期为：20200212
[2020-07-13 11:00:52] [INFO] 执行sql日期为：20200212
[2020-07-13 11:00:52] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200212','20200212');
         
[2020-07-13 11:00:52] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200212','20200212');
         
[2020-07-13 11:00:54] [INFO] 执行sql日期为：20200213
[2020-07-13 11:00:54] [INFO] 执行sql日期为：20200213
[2020-07-13 11:00:54] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200213','20200213');
         
[2020-07-13 11:00:54] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200213','20200213');
         
[2020-07-13 11:00:55] [INFO] 执行sql日期为：20200214
[2020-07-13 11:00:55] [INFO] 执行sql日期为：20200214
[2020-07-13 11:00:55] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200214','20200214');
         
[2020-07-13 11:00:55] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200214','20200214');
         
[2020-07-13 11:00:57] [INFO] 执行sql日期为：20200215
[2020-07-13 11:00:57] [INFO] 执行sql日期为：20200215
[2020-07-13 11:00:57] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200215','20200215');
         
[2020-07-13 11:00:57] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200215','20200215');
         
[2020-07-13 11:00:58] [INFO] 执行sql日期为：20200216
[2020-07-13 11:00:58] [INFO] 执行sql日期为：20200216
[2020-07-13 11:00:58] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200216','20200216');
         
[2020-07-13 11:00:58] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200216','20200216');
         
[2020-07-13 11:00:59] [INFO] 执行sql日期为：20200217
[2020-07-13 11:00:59] [INFO] 执行sql日期为：20200217
[2020-07-13 11:00:59] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200217','20200217');
         
[2020-07-13 11:00:59] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200217','20200217');
         
[2020-07-13 11:01:01] [INFO] 执行sql日期为：20200218
[2020-07-13 11:01:01] [INFO] 执行sql日期为：20200218
[2020-07-13 11:01:01] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200218','20200218');
         
[2020-07-13 11:01:01] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200218','20200218');
         
[2020-07-13 11:01:02] [INFO] 执行sql日期为：20200219
[2020-07-13 11:01:02] [INFO] 执行sql日期为：20200219
[2020-07-13 11:01:02] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200219','20200219');
         
[2020-07-13 11:01:02] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200219','20200219');
         
[2020-07-13 11:01:04] [INFO] 执行sql日期为：20200220
[2020-07-13 11:01:04] [INFO] 执行sql日期为：20200220
[2020-07-13 11:01:04] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200220','20200220');
         
[2020-07-13 11:01:04] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200220','20200220');
         
[2020-07-13 11:01:05] [INFO] 执行sql日期为：20200221
[2020-07-13 11:01:05] [INFO] 执行sql日期为：20200221
[2020-07-13 11:01:05] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200221','20200221');
         
[2020-07-13 11:01:05] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200221','20200221');
         
[2020-07-13 11:01:07] [INFO] 执行sql日期为：20200222
[2020-07-13 11:01:07] [INFO] 执行sql日期为：20200222
[2020-07-13 11:01:07] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200222','20200222');
         
[2020-07-13 11:01:07] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200222','20200222');
         
[2020-07-13 11:01:08] [INFO] 执行sql日期为：20200223
[2020-07-13 11:01:08] [INFO] 执行sql日期为：20200223
[2020-07-13 11:01:08] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200223','20200223');
         
[2020-07-13 11:01:08] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200223','20200223');
         
[2020-07-13 11:01:10] [INFO] 执行sql日期为：20200224
[2020-07-13 11:01:10] [INFO] 执行sql日期为：20200224
[2020-07-13 11:01:10] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200224','20200224');
         
[2020-07-13 11:01:10] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200224','20200224');
         
[2020-07-13 11:01:11] [INFO] 执行sql日期为：20200225
[2020-07-13 11:01:11] [INFO] 执行sql日期为：20200225
[2020-07-13 11:01:11] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200225','20200225');
         
[2020-07-13 11:01:11] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200225','20200225');
         
[2020-07-13 11:01:13] [INFO] 执行sql日期为：20200226
[2020-07-13 11:01:13] [INFO] 执行sql日期为：20200226
[2020-07-13 11:01:13] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200226','20200226');
         
[2020-07-13 11:01:13] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200226','20200226');
         
[2020-07-13 11:01:14] [INFO] 执行sql日期为：20200227
[2020-07-13 11:01:14] [INFO] 执行sql日期为：20200227
[2020-07-13 11:01:14] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200227','20200227');
         
[2020-07-13 11:01:14] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200227','20200227');
         
[2020-07-13 11:01:15] [INFO] 执行sql日期为：20200228
[2020-07-13 11:01:15] [INFO] 执行sql日期为：20200228
[2020-07-13 11:01:15] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200228','20200228');
         
[2020-07-13 11:01:15] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200228','20200228');
         
[2020-07-13 11:01:17] [INFO] 执行sql日期为：20200229
[2020-07-13 11:01:17] [INFO] 执行sql日期为：20200229
[2020-07-13 11:01:17] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200229','20200229');
         
[2020-07-13 11:01:17] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200229','20200229');
         
[2020-07-13 11:01:19] [INFO] 执行sql日期为：20200301
[2020-07-13 11:01:19] [INFO] 执行sql日期为：20200301
[2020-07-13 11:01:19] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200301','20200301');
         
[2020-07-13 11:01:19] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200301','20200301');
         
[2020-07-13 11:01:20] [INFO] 执行sql日期为：20200302
[2020-07-13 11:01:20] [INFO] 执行sql日期为：20200302
[2020-07-13 11:01:20] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200302','20200302');
         
[2020-07-13 11:01:20] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200302','20200302');
         
[2020-07-13 11:01:22] [INFO] 执行sql日期为：20200303
[2020-07-13 11:01:22] [INFO] 执行sql日期为：20200303
[2020-07-13 11:01:22] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200303','20200303');
         
[2020-07-13 11:01:22] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200303','20200303');
         
[2020-07-13 11:01:23] [INFO] 执行sql日期为：20200304
[2020-07-13 11:01:23] [INFO] 执行sql日期为：20200304
[2020-07-13 11:01:23] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200304','20200304');
         
[2020-07-13 11:01:23] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200304','20200304');
         
[2020-07-13 11:01:25] [INFO] 执行sql日期为：20200305
[2020-07-13 11:01:25] [INFO] 执行sql日期为：20200305
[2020-07-13 11:01:25] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200305','20200305');
         
[2020-07-13 11:01:25] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200305','20200305');
         
[2020-07-13 11:01:26] [INFO] 执行sql日期为：20200306
[2020-07-13 11:01:26] [INFO] 执行sql日期为：20200306
[2020-07-13 11:01:26] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200306','20200306');
         
[2020-07-13 11:01:26] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200306','20200306');
         
[2020-07-13 11:01:28] [INFO] 执行sql日期为：20200307
[2020-07-13 11:01:28] [INFO] 执行sql日期为：20200307
[2020-07-13 11:01:28] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200307','20200307');
         
[2020-07-13 11:01:28] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200307','20200307');
         
[2020-07-13 11:01:29] [INFO] 执行sql日期为：20200308
[2020-07-13 11:01:29] [INFO] 执行sql日期为：20200308
[2020-07-13 11:01:29] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200308','20200308');
         
[2020-07-13 11:01:29] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200308','20200308');
         
[2020-07-13 11:01:31] [INFO] 执行sql日期为：20200309
[2020-07-13 11:01:31] [INFO] 执行sql日期为：20200309
[2020-07-13 11:01:31] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200309','20200309');
         
[2020-07-13 11:01:31] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200309','20200309');
         
[2020-07-13 11:01:32] [INFO] 执行sql日期为：20200310
[2020-07-13 11:01:32] [INFO] 执行sql日期为：20200310
[2020-07-13 11:01:32] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200310','20200310');
         
[2020-07-13 11:01:32] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200310','20200310');
         
[2020-07-13 11:01:33] [INFO] 执行sql日期为：20200311
[2020-07-13 11:01:33] [INFO] 执行sql日期为：20200311
[2020-07-13 11:01:33] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200311','20200311');
         
[2020-07-13 11:01:33] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200311','20200311');
         
[2020-07-13 11:01:35] [INFO] 执行sql日期为：20200312
[2020-07-13 11:01:35] [INFO] 执行sql日期为：20200312
[2020-07-13 11:01:35] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200312','20200312');
         
[2020-07-13 11:01:35] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200312','20200312');
         
[2020-07-13 11:01:36] [INFO] 执行sql日期为：20200313
[2020-07-13 11:01:36] [INFO] 执行sql日期为：20200313
[2020-07-13 11:01:36] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200313','20200313');
         
[2020-07-13 11:01:36] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200313','20200313');
         
[2020-07-13 11:01:38] [INFO] 执行sql日期为：20200314
[2020-07-13 11:01:38] [INFO] 执行sql日期为：20200314
[2020-07-13 11:01:38] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200314','20200314');
         
[2020-07-13 11:01:38] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200314','20200314');
         
[2020-07-13 11:01:39] [INFO] 执行sql日期为：20200315
[2020-07-13 11:01:39] [INFO] 执行sql日期为：20200315
[2020-07-13 11:01:39] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200315','20200315');
         
[2020-07-13 11:01:39] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200315','20200315');
         
[2020-07-13 11:01:40] [INFO] 执行sql日期为：20200316
[2020-07-13 11:01:40] [INFO] 执行sql日期为：20200316
[2020-07-13 11:01:40] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200316','20200316');
         
[2020-07-13 11:01:40] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200316','20200316');
         
[2020-07-13 11:01:42] [INFO] 执行sql日期为：20200317
[2020-07-13 11:01:42] [INFO] 执行sql日期为：20200317
[2020-07-13 11:01:42] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200317','20200317');
         
[2020-07-13 11:01:42] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200317','20200317');
         
[2020-07-13 11:01:44] [INFO] 执行sql日期为：20200318
[2020-07-13 11:01:44] [INFO] 执行sql日期为：20200318
[2020-07-13 11:01:44] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200318','20200318');
         
[2020-07-13 11:01:44] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200318','20200318');
         
[2020-07-13 11:01:46] [INFO] 执行sql日期为：20200319
[2020-07-13 11:01:46] [INFO] 执行sql日期为：20200319
[2020-07-13 11:01:46] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200319','20200319');
         
[2020-07-13 11:01:46] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200319','20200319');
         
[2020-07-13 11:01:48] [INFO] 执行sql日期为：20200320
[2020-07-13 11:01:48] [INFO] 执行sql日期为：20200320
[2020-07-13 11:01:48] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200320','20200320');
         
[2020-07-13 11:01:48] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200320','20200320');
         
[2020-07-13 11:01:49] [INFO] 执行sql日期为：20200321
[2020-07-13 11:01:49] [INFO] 执行sql日期为：20200321
[2020-07-13 11:01:49] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200321','20200321');
         
[2020-07-13 11:01:49] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200321','20200321');
         
[2020-07-13 11:01:51] [INFO] 执行sql日期为：20200322
[2020-07-13 11:01:51] [INFO] 执行sql日期为：20200322
[2020-07-13 11:01:51] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200322','20200322');
         
[2020-07-13 11:01:51] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200322','20200322');
         
[2020-07-13 11:01:52] [INFO] 执行sql日期为：20200323
[2020-07-13 11:01:52] [INFO] 执行sql日期为：20200323
[2020-07-13 11:01:52] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200323','20200323');
         
[2020-07-13 11:01:52] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200323','20200323');
         
[2020-07-13 11:01:54] [INFO] 执行sql日期为：20200324
[2020-07-13 11:01:54] [INFO] 执行sql日期为：20200324
[2020-07-13 11:01:54] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200324','20200324');
         
[2020-07-13 11:01:54] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200324','20200324');
         
[2020-07-13 11:01:55] [INFO] 执行sql日期为：20200325
[2020-07-13 11:01:55] [INFO] 执行sql日期为：20200325
[2020-07-13 11:01:55] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200325','20200325');
         
[2020-07-13 11:01:55] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200325','20200325');
         
[2020-07-13 11:01:57] [INFO] 执行sql日期为：20200326
[2020-07-13 11:01:57] [INFO] 执行sql日期为：20200326
[2020-07-13 11:01:57] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200326','20200326');
         
[2020-07-13 11:01:57] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200326','20200326');
         
[2020-07-13 11:01:59] [INFO] 执行sql日期为：20200327
[2020-07-13 11:01:59] [INFO] 执行sql日期为：20200327
[2020-07-13 11:01:59] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200327','20200327');
         
[2020-07-13 11:01:59] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200327','20200327');
         
[2020-07-13 11:02:01] [INFO] 执行sql日期为：20200328
[2020-07-13 11:02:01] [INFO] 执行sql日期为：20200328
[2020-07-13 11:02:01] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200328','20200328');
         
[2020-07-13 11:02:01] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200328','20200328');
         
[2020-07-13 11:02:02] [INFO] 执行sql日期为：20200329
[2020-07-13 11:02:02] [INFO] 执行sql日期为：20200329
[2020-07-13 11:02:02] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200329','20200329');
         
[2020-07-13 11:02:02] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200329','20200329');
         
[2020-07-13 11:02:04] [INFO] 执行sql日期为：20200330
[2020-07-13 11:02:04] [INFO] 执行sql日期为：20200330
[2020-07-13 11:02:04] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200330','20200330');
         
[2020-07-13 11:02:04] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200330','20200330');
         
[2020-07-13 11:02:05] [INFO] 执行sql日期为：20200331
[2020-07-13 11:02:05] [INFO] 执行sql日期为：20200331
[2020-07-13 11:02:05] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200331','20200331');
         
[2020-07-13 11:02:05] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200331','20200331');
         
[2020-07-13 11:02:07] [INFO] 执行sql日期为：20200401
[2020-07-13 11:02:07] [INFO] 执行sql日期为：20200401
[2020-07-13 11:02:07] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200401','20200401');
         
[2020-07-13 11:02:07] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200401','20200401');
         
[2020-07-13 11:02:08] [INFO] 执行sql日期为：20200402
[2020-07-13 11:02:08] [INFO] 执行sql日期为：20200402
[2020-07-13 11:02:08] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200402','20200402');
         
[2020-07-13 11:02:08] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200402','20200402');
         
[2020-07-13 11:02:10] [INFO] 执行sql日期为：20200403
[2020-07-13 11:02:10] [INFO] 执行sql日期为：20200403
[2020-07-13 11:02:10] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200403','20200403');
         
[2020-07-13 11:02:10] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200403','20200403');
         
[2020-07-13 11:02:11] [INFO] 执行sql日期为：20200404
[2020-07-13 11:02:11] [INFO] 执行sql日期为：20200404
[2020-07-13 11:02:11] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200404','20200404');
         
[2020-07-13 11:02:11] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200404','20200404');
         
[2020-07-13 11:02:12] [INFO] 执行sql日期为：20200405
[2020-07-13 11:02:12] [INFO] 执行sql日期为：20200405
[2020-07-13 11:02:12] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200405','20200405');
         
[2020-07-13 11:02:12] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200405','20200405');
         
[2020-07-13 11:02:14] [INFO] 执行sql日期为：20200406
[2020-07-13 11:02:14] [INFO] 执行sql日期为：20200406
[2020-07-13 11:02:14] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200406','20200406');
         
[2020-07-13 11:02:14] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200406','20200406');
         
[2020-07-13 11:02:15] [INFO] 执行sql日期为：20200407
[2020-07-13 11:02:15] [INFO] 执行sql日期为：20200407
[2020-07-13 11:02:15] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200407','20200407');
         
[2020-07-13 11:02:15] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200407','20200407');
         
[2020-07-13 11:02:17] [INFO] 执行sql日期为：20200408
[2020-07-13 11:02:17] [INFO] 执行sql日期为：20200408
[2020-07-13 11:02:17] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200408','20200408');
         
[2020-07-13 11:02:17] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200408','20200408');
         
[2020-07-13 11:02:18] [INFO] 执行sql日期为：20200409
[2020-07-13 11:02:18] [INFO] 执行sql日期为：20200409
[2020-07-13 11:02:18] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200409','20200409');
         
[2020-07-13 11:02:18] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200409','20200409');
         
[2020-07-13 11:02:19] [INFO] 执行sql日期为：20200410
[2020-07-13 11:02:19] [INFO] 执行sql日期为：20200410
[2020-07-13 11:02:19] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200410','20200410');
         
[2020-07-13 11:02:19] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200410','20200410');
         
[2020-07-13 11:02:21] [INFO] 执行sql日期为：20200411
[2020-07-13 11:02:21] [INFO] 执行sql日期为：20200411
[2020-07-13 11:02:21] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200411','20200411');
         
[2020-07-13 11:02:21] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200411','20200411');
         
[2020-07-13 11:02:22] [INFO] 执行sql日期为：20200412
[2020-07-13 11:02:22] [INFO] 执行sql日期为：20200412
[2020-07-13 11:02:22] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200412','20200412');
         
[2020-07-13 11:02:22] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200412','20200412');
         
[2020-07-13 11:02:24] [INFO] 执行sql日期为：20200413
[2020-07-13 11:02:24] [INFO] 执行sql日期为：20200413
[2020-07-13 11:02:24] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200413','20200413');
         
[2020-07-13 11:02:24] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200413','20200413');
         
[2020-07-13 11:02:25] [INFO] 执行sql日期为：20200414
[2020-07-13 11:02:25] [INFO] 执行sql日期为：20200414
[2020-07-13 11:02:25] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200414','20200414');
         
[2020-07-13 11:02:25] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200414','20200414');
         
[2020-07-13 11:02:27] [INFO] 执行sql日期为：20200415
[2020-07-13 11:02:27] [INFO] 执行sql日期为：20200415
[2020-07-13 11:02:27] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200415','20200415');
         
[2020-07-13 11:02:27] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200415','20200415');
         
[2020-07-13 11:02:28] [INFO] 执行sql日期为：20200416
[2020-07-13 11:02:28] [INFO] 执行sql日期为：20200416
[2020-07-13 11:02:28] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200416','20200416');
         
[2020-07-13 11:02:28] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200416','20200416');
         
[2020-07-13 11:02:30] [INFO] 执行sql日期为：20200417
[2020-07-13 11:02:30] [INFO] 执行sql日期为：20200417
[2020-07-13 11:02:30] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200417','20200417');
         
[2020-07-13 11:02:30] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200417','20200417');
         
[2020-07-13 11:02:31] [INFO] 执行sql日期为：20200418
[2020-07-13 11:02:31] [INFO] 执行sql日期为：20200418
[2020-07-13 11:02:31] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200418','20200418');
         
[2020-07-13 11:02:31] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200418','20200418');
         
[2020-07-13 11:02:33] [INFO] 执行sql日期为：20200419
[2020-07-13 11:02:33] [INFO] 执行sql日期为：20200419
[2020-07-13 11:02:33] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200419','20200419');
         
[2020-07-13 11:02:33] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200419','20200419');
         
[2020-07-13 11:02:34] [INFO] 执行sql日期为：20200420
[2020-07-13 11:02:34] [INFO] 执行sql日期为：20200420
[2020-07-13 11:02:34] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200420','20200420');
         
[2020-07-13 11:02:34] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200420','20200420');
         
[2020-07-13 11:02:36] [INFO] 执行sql日期为：20200421
[2020-07-13 11:02:36] [INFO] 执行sql日期为：20200421
[2020-07-13 11:02:36] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200421','20200421');
         
[2020-07-13 11:02:36] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200421','20200421');
         
[2020-07-13 11:02:37] [INFO] 执行sql日期为：20200422
[2020-07-13 11:02:37] [INFO] 执行sql日期为：20200422
[2020-07-13 11:02:37] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200422','20200422');
         
[2020-07-13 11:02:37] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200422','20200422');
         
[2020-07-13 11:02:39] [INFO] 执行sql日期为：20200423
[2020-07-13 11:02:39] [INFO] 执行sql日期为：20200423
[2020-07-13 11:02:39] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200423','20200423');
         
[2020-07-13 11:02:39] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200423','20200423');
         
[2020-07-13 11:02:40] [INFO] 执行sql日期为：20200424
[2020-07-13 11:02:40] [INFO] 执行sql日期为：20200424
[2020-07-13 11:02:40] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200424','20200424');
         
[2020-07-13 11:02:40] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200424','20200424');
         
[2020-07-13 11:02:41] [INFO] 执行sql日期为：20200425
[2020-07-13 11:02:41] [INFO] 执行sql日期为：20200425
[2020-07-13 11:02:41] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200425','20200425');
         
[2020-07-13 11:02:41] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200425','20200425');
         
[2020-07-13 11:02:43] [INFO] 执行sql日期为：20200426
[2020-07-13 11:02:43] [INFO] 执行sql日期为：20200426
[2020-07-13 11:02:43] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200426','20200426');
         
[2020-07-13 11:02:43] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200426','20200426');
         
[2020-07-13 11:02:45] [INFO] 执行sql日期为：20200427
[2020-07-13 11:02:45] [INFO] 执行sql日期为：20200427
[2020-07-13 11:02:45] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200427','20200427');
         
[2020-07-13 11:02:45] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200427','20200427');
         
[2020-07-13 11:02:46] [INFO] 执行sql日期为：20200428
[2020-07-13 11:02:46] [INFO] 执行sql日期为：20200428
[2020-07-13 11:02:46] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200428','20200428');
         
[2020-07-13 11:02:46] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200428','20200428');
         
[2020-07-13 11:02:47] [INFO] 执行sql日期为：20200429
[2020-07-13 11:02:47] [INFO] 执行sql日期为：20200429
[2020-07-13 11:02:48] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200429','20200429');
         
[2020-07-13 11:02:48] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200429','20200429');
         
[2020-07-13 11:02:49] [INFO] 执行sql日期为：20200430
[2020-07-13 11:02:49] [INFO] 执行sql日期为：20200430
[2020-07-13 11:02:49] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200430','20200430');
         
[2020-07-13 11:02:49] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200430','20200430');
         
[2020-07-13 11:02:50] [INFO] 执行sql日期为：20200501
[2020-07-13 11:02:50] [INFO] 执行sql日期为：20200501
[2020-07-13 11:02:50] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200501','20200501');
         
[2020-07-13 11:02:50] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200501','20200501');
         
[2020-07-13 11:02:52] [INFO] 执行sql日期为：20200502
[2020-07-13 11:02:52] [INFO] 执行sql日期为：20200502
[2020-07-13 11:02:52] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200502','20200502');
         
[2020-07-13 11:02:52] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200502','20200502');
         
[2020-07-13 11:02:53] [INFO] 执行sql日期为：20200503
[2020-07-13 11:02:53] [INFO] 执行sql日期为：20200503
[2020-07-13 11:02:53] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200503','20200503');
         
[2020-07-13 11:02:53] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200503','20200503');
         
[2020-07-13 11:02:55] [INFO] 执行sql日期为：20200504
[2020-07-13 11:02:55] [INFO] 执行sql日期为：20200504
[2020-07-13 11:02:55] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200504','20200504');
         
[2020-07-13 11:02:55] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200504','20200504');
         
[2020-07-13 11:02:56] [INFO] 执行sql日期为：20200505
[2020-07-13 11:02:56] [INFO] 执行sql日期为：20200505
[2020-07-13 11:02:56] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200505','20200505');
         
[2020-07-13 11:02:56] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200505','20200505');
         
[2020-07-13 11:02:57] [INFO] 执行sql日期为：20200506
[2020-07-13 11:02:57] [INFO] 执行sql日期为：20200506
[2020-07-13 11:02:57] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200506','20200506');
         
[2020-07-13 11:02:57] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200506','20200506');
         
[2020-07-13 11:02:59] [INFO] 执行sql日期为：20200507
[2020-07-13 11:02:59] [INFO] 执行sql日期为：20200507
[2020-07-13 11:02:59] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200507','20200507');
         
[2020-07-13 11:02:59] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200507','20200507');
         
[2020-07-13 11:03:01] [INFO] 执行sql日期为：20200508
[2020-07-13 11:03:01] [INFO] 执行sql日期为：20200508
[2020-07-13 11:03:01] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200508','20200508');
         
[2020-07-13 11:03:01] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200508','20200508');
         
[2020-07-13 11:03:02] [INFO] 执行sql日期为：20200509
[2020-07-13 11:03:02] [INFO] 执行sql日期为：20200509
[2020-07-13 11:03:02] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200509','20200509');
         
[2020-07-13 11:03:02] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200509','20200509');
         
[2020-07-13 11:03:04] [INFO] 执行sql日期为：20200510
[2020-07-13 11:03:04] [INFO] 执行sql日期为：20200510
[2020-07-13 11:03:04] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200510','20200510');
         
[2020-07-13 11:03:04] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200510','20200510');
         
[2020-07-13 11:03:05] [INFO] 执行sql日期为：20200511
[2020-07-13 11:03:05] [INFO] 执行sql日期为：20200511
[2020-07-13 11:03:05] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200511','20200511');
         
[2020-07-13 11:03:05] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200511','20200511');
         
[2020-07-13 11:03:07] [INFO] 执行sql日期为：20200512
[2020-07-13 11:03:07] [INFO] 执行sql日期为：20200512
[2020-07-13 11:03:07] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200512','20200512');
         
[2020-07-13 11:03:07] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200512','20200512');
         
[2020-07-13 11:03:08] [INFO] 执行sql日期为：20200513
[2020-07-13 11:03:08] [INFO] 执行sql日期为：20200513
[2020-07-13 11:03:08] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200513','20200513');
         
[2020-07-13 11:03:08] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200513','20200513');
         
[2020-07-13 11:03:10] [INFO] 执行sql日期为：20200514
[2020-07-13 11:03:10] [INFO] 执行sql日期为：20200514
[2020-07-13 11:03:10] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200514','20200514');
         
[2020-07-13 11:03:10] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200514','20200514');
         
[2020-07-13 11:03:11] [INFO] 执行sql日期为：20200515
[2020-07-13 11:03:11] [INFO] 执行sql日期为：20200515
[2020-07-13 11:03:11] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200515','20200515');
         
[2020-07-13 11:03:11] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200515','20200515');
         
[2020-07-13 11:03:12] [INFO] 执行sql日期为：20200516
[2020-07-13 11:03:12] [INFO] 执行sql日期为：20200516
[2020-07-13 11:03:12] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200516','20200516');
         
[2020-07-13 11:03:12] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200516','20200516');
         
[2020-07-13 11:03:14] [INFO] 执行sql日期为：20200517
[2020-07-13 11:03:14] [INFO] 执行sql日期为：20200517
[2020-07-13 11:03:14] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200517','20200517');
         
[2020-07-13 11:03:14] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200517','20200517');
         
[2020-07-13 11:03:15] [INFO] 执行sql日期为：20200518
[2020-07-13 11:03:15] [INFO] 执行sql日期为：20200518
[2020-07-13 11:03:15] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200518','20200518');
         
[2020-07-13 11:03:15] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200518','20200518');
         
[2020-07-13 11:03:17] [INFO] 执行sql日期为：20200519
[2020-07-13 11:03:17] [INFO] 执行sql日期为：20200519
[2020-07-13 11:03:17] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200519','20200519');
         
[2020-07-13 11:03:17] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200519','20200519');
         
[2020-07-13 11:03:18] [INFO] 执行sql日期为：20200520
[2020-07-13 11:03:18] [INFO] 执行sql日期为：20200520
[2020-07-13 11:03:18] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200520','20200520');
         
[2020-07-13 11:03:18] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200520','20200520');
         
[2020-07-13 11:03:19] [INFO] 执行sql日期为：20200521
[2020-07-13 11:03:19] [INFO] 执行sql日期为：20200521
[2020-07-13 11:03:19] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200521','20200521');
         
[2020-07-13 11:03:19] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200521','20200521');
         
[2020-07-13 11:03:21] [INFO] 执行sql日期为：20200522
[2020-07-13 11:03:21] [INFO] 执行sql日期为：20200522
[2020-07-13 11:03:21] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200522','20200522');
         
[2020-07-13 11:03:21] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200522','20200522');
         
[2020-07-13 11:03:22] [INFO] 执行sql日期为：20200523
[2020-07-13 11:03:22] [INFO] 执行sql日期为：20200523
[2020-07-13 11:03:22] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200523','20200523');
         
[2020-07-13 11:03:22] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200523','20200523');
         
[2020-07-13 11:03:24] [INFO] 执行sql日期为：20200524
[2020-07-13 11:03:24] [INFO] 执行sql日期为：20200524
[2020-07-13 11:03:24] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200524','20200524');
         
[2020-07-13 11:03:24] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200524','20200524');
         
[2020-07-13 11:03:25] [INFO] 执行sql日期为：20200525
[2020-07-13 11:03:25] [INFO] 执行sql日期为：20200525
[2020-07-13 11:03:25] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200525','20200525');
         
[2020-07-13 11:03:25] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200525','20200525');
         
[2020-07-13 11:03:26] [INFO] 执行sql日期为：20200526
[2020-07-13 11:03:26] [INFO] 执行sql日期为：20200526
[2020-07-13 11:03:26] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200526','20200526');
         
[2020-07-13 11:03:26] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200526','20200526');
         
[2020-07-13 11:03:28] [INFO] 执行sql日期为：20200527
[2020-07-13 11:03:28] [INFO] 执行sql日期为：20200527
[2020-07-13 11:03:28] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200527','20200527');
         
[2020-07-13 11:03:28] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200527','20200527');
         
[2020-07-13 11:03:29] [INFO] 执行sql日期为：20200528
[2020-07-13 11:03:29] [INFO] 执行sql日期为：20200528
[2020-07-13 11:03:29] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200528','20200528');
         
[2020-07-13 11:03:29] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200528','20200528');
         
[2020-07-13 11:03:31] [INFO] 执行sql日期为：20200529
[2020-07-13 11:03:31] [INFO] 执行sql日期为：20200529
[2020-07-13 11:03:31] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200529','20200529');
         
[2020-07-13 11:03:31] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200529','20200529');
         
[2020-07-13 11:03:32] [INFO] 执行sql日期为：20200530
[2020-07-13 11:03:32] [INFO] 执行sql日期为：20200530
[2020-07-13 11:03:32] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200530','20200530');
         
[2020-07-13 11:03:32] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200530','20200530');
         
[2020-07-13 11:03:34] [INFO] 执行sql日期为：20200531
[2020-07-13 11:03:34] [INFO] 执行sql日期为：20200531
[2020-07-13 11:03:34] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200531','20200531');
         
[2020-07-13 11:03:34] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200531','20200531');
         
[2020-07-13 11:03:35] [INFO] 执行sql日期为：20200601
[2020-07-13 11:03:35] [INFO] 执行sql日期为：20200601
[2020-07-13 11:03:35] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200601','20200601');
         
[2020-07-13 11:03:35] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200601','20200601');
         
[2020-07-13 11:03:37] [INFO] 执行sql日期为：20200602
[2020-07-13 11:03:37] [INFO] 执行sql日期为：20200602
[2020-07-13 11:03:37] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200602','20200602');
         
[2020-07-13 11:03:37] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200602','20200602');
         
[2020-07-13 11:03:38] [INFO] 执行sql日期为：20200603
[2020-07-13 11:03:38] [INFO] 执行sql日期为：20200603
[2020-07-13 11:03:38] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200603','20200603');
         
[2020-07-13 11:03:38] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200603','20200603');
         
[2020-07-13 11:03:39] [INFO] 执行sql日期为：20200604
[2020-07-13 11:03:39] [INFO] 执行sql日期为：20200604
[2020-07-13 11:03:39] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200604','20200604');
         
[2020-07-13 11:03:39] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200604','20200604');
         
[2020-07-13 11:03:41] [INFO] 执行sql日期为：20200605
[2020-07-13 11:03:41] [INFO] 执行sql日期为：20200605
[2020-07-13 11:03:41] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200605','20200605');
         
[2020-07-13 11:03:41] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200605','20200605');
         
[2020-07-13 11:03:42] [INFO] 执行sql日期为：20200606
[2020-07-13 11:03:42] [INFO] 执行sql日期为：20200606
[2020-07-13 11:03:42] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200606','20200606');
         
[2020-07-13 11:03:42] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200606','20200606');
         
[2020-07-13 11:03:44] [INFO] 执行sql日期为：20200607
[2020-07-13 11:03:44] [INFO] 执行sql日期为：20200607
[2020-07-13 11:03:44] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200607','20200607');
         
[2020-07-13 11:03:44] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200607','20200607');
         
[2020-07-13 11:03:45] [INFO] 执行sql日期为：20200608
[2020-07-13 11:03:45] [INFO] 执行sql日期为：20200608
[2020-07-13 11:03:45] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200608','20200608');
         
[2020-07-13 11:03:45] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200608','20200608');
         
[2020-07-13 11:03:47] [INFO] 执行sql日期为：20200609
[2020-07-13 11:03:47] [INFO] 执行sql日期为：20200609
[2020-07-13 11:03:47] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200609','20200609');
         
[2020-07-13 11:03:47] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200609','20200609');
         
[2020-07-13 11:03:49] [INFO] 执行sql日期为：20200610
[2020-07-13 11:03:49] [INFO] 执行sql日期为：20200610
[2020-07-13 11:03:49] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200610','20200610');
         
[2020-07-13 11:03:49] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200610','20200610');
         
[2020-07-13 11:03:50] [INFO] 执行sql日期为：20200611
[2020-07-13 11:03:50] [INFO] 执行sql日期为：20200611
[2020-07-13 11:03:50] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200611','20200611');
         
[2020-07-13 11:03:50] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200611','20200611');
         
[2020-07-13 11:03:51] [INFO] 执行sql日期为：20200612
[2020-07-13 11:03:51] [INFO] 执行sql日期为：20200612
[2020-07-13 11:03:51] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200612','20200612');
         
[2020-07-13 11:03:51] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200612','20200612');
         
[2020-07-13 11:03:53] [INFO] 执行sql日期为：20200613
[2020-07-13 11:03:53] [INFO] 执行sql日期为：20200613
[2020-07-13 11:03:53] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200613','20200613');
         
[2020-07-13 11:03:53] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200613','20200613');
         
[2020-07-13 11:03:54] [INFO] 执行sql日期为：20200614
[2020-07-13 11:03:54] [INFO] 执行sql日期为：20200614
[2020-07-13 11:03:54] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200614','20200614');
         
[2020-07-13 11:03:54] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200614','20200614');
         
[2020-07-13 11:03:55] [INFO] 执行sql日期为：20200615
[2020-07-13 11:03:55] [INFO] 执行sql日期为：20200615
[2020-07-13 11:03:55] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200615','20200615');
         
[2020-07-13 11:03:55] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200615','20200615');
         
[2020-07-13 11:03:57] [INFO] 执行sql日期为：20200616
[2020-07-13 11:03:57] [INFO] 执行sql日期为：20200616
[2020-07-13 11:03:57] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200616','20200616');
         
[2020-07-13 11:03:57] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200616','20200616');
         
[2020-07-13 11:03:59] [INFO] 执行sql日期为：20200617
[2020-07-13 11:03:59] [INFO] 执行sql日期为：20200617
[2020-07-13 11:03:59] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200617','20200617');
         
[2020-07-13 11:03:59] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200617','20200617');
         
[2020-07-13 11:04:00] [INFO] 执行sql日期为：20200618
[2020-07-13 11:04:00] [INFO] 执行sql日期为：20200618
[2020-07-13 11:04:00] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200618','20200618');
         
[2020-07-13 11:04:00] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200618','20200618');
         
[2020-07-13 11:04:02] [INFO] 执行sql日期为：20200619
[2020-07-13 11:04:02] [INFO] 执行sql日期为：20200619
[2020-07-13 11:04:02] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200619','20200619');
         
[2020-07-13 11:04:02] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200619','20200619');
         
[2020-07-13 11:04:03] [INFO] 执行sql日期为：20200620
[2020-07-13 11:04:03] [INFO] 执行sql日期为：20200620
[2020-07-13 11:04:03] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200620','20200620');
         
[2020-07-13 11:04:03] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200620','20200620');
         
[2020-07-13 11:04:05] [INFO] 执行sql日期为：20200621
[2020-07-13 11:04:05] [INFO] 执行sql日期为：20200621
[2020-07-13 11:04:05] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200621','20200621');
         
[2020-07-13 11:04:05] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200621','20200621');
         
[2020-07-13 11:04:06] [INFO] 执行sql日期为：20200622
[2020-07-13 11:04:06] [INFO] 执行sql日期为：20200622
[2020-07-13 11:04:06] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200622','20200622');
         
[2020-07-13 11:04:06] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200622','20200622');
         
[2020-07-13 11:04:07] [INFO] 执行sql日期为：20200623
[2020-07-13 11:04:07] [INFO] 执行sql日期为：20200623
[2020-07-13 11:04:07] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200623','20200623');
         
[2020-07-13 11:04:07] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200623','20200623');
         
[2020-07-13 11:04:09] [INFO] 执行sql日期为：20200624
[2020-07-13 11:04:09] [INFO] 执行sql日期为：20200624
[2020-07-13 11:04:09] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200624','20200624');
         
[2020-07-13 11:04:09] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200624','20200624');
         
[2020-07-13 11:04:10] [INFO] 执行sql日期为：20200625
[2020-07-13 11:04:10] [INFO] 执行sql日期为：20200625
[2020-07-13 11:04:10] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200625','20200625');
         
[2020-07-13 11:04:10] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200625','20200625');
         
[2020-07-13 11:04:12] [INFO] 执行sql日期为：20200626
[2020-07-13 11:04:12] [INFO] 执行sql日期为：20200626
[2020-07-13 11:04:12] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200626','20200626');
         
[2020-07-13 11:04:12] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200626','20200626');
         
[2020-07-13 11:04:14] [INFO] 执行sql日期为：20200627
[2020-07-13 11:04:14] [INFO] 执行sql日期为：20200627
[2020-07-13 11:04:14] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200627','20200627');
         
[2020-07-13 11:04:14] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200627','20200627');
         
[2020-07-13 11:04:15] [INFO] 执行sql日期为：20200628
[2020-07-13 11:04:15] [INFO] 执行sql日期为：20200628
[2020-07-13 11:04:15] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200628','20200628');
         
[2020-07-13 11:04:15] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200628','20200628');
         
[2020-07-13 11:04:17] [INFO] 执行sql日期为：20200629
[2020-07-13 11:04:17] [INFO] 执行sql日期为：20200629
[2020-07-13 11:04:17] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200629','20200629');
         
[2020-07-13 11:04:17] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200629','20200629');
         
[2020-07-13 11:04:18] [INFO] 执行sql日期为：20200630
[2020-07-13 11:04:18] [INFO] 执行sql日期为：20200630
[2020-07-13 11:04:18] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200630','20200630');
         
[2020-07-13 11:04:18] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200630','20200630');
         
[2020-07-13 11:04:19] [INFO] 执行sql日期为：20200701
[2020-07-13 11:04:19] [INFO] 执行sql日期为：20200701
[2020-07-13 11:04:19] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200701','20200701');
         
[2020-07-13 11:04:19] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200701','20200701');
         
[2020-07-13 11:04:21] [INFO] 执行sql日期为：20200702
[2020-07-13 11:04:21] [INFO] 执行sql日期为：20200702
[2020-07-13 11:04:21] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200702','20200702');
         
[2020-07-13 11:04:21] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200702','20200702');
         
[2020-07-13 11:04:22] [INFO] 执行sql日期为：20200703
[2020-07-13 11:04:22] [INFO] 执行sql日期为：20200703
[2020-07-13 11:04:22] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200703','20200703');
         
[2020-07-13 11:04:22] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200703','20200703');
         
[2020-07-13 11:04:24] [INFO] 执行sql日期为：20200704
[2020-07-13 11:04:24] [INFO] 执行sql日期为：20200704
[2020-07-13 11:04:24] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200704','20200704');
         
[2020-07-13 11:04:24] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200704','20200704');
         
[2020-07-13 11:04:25] [INFO] 执行sql日期为：20200705
[2020-07-13 11:04:25] [INFO] 执行sql日期为：20200705
[2020-07-13 11:04:25] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200705','20200705');
         
[2020-07-13 11:04:25] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200705','20200705');
         
[2020-07-13 11:04:27] [INFO] 执行sql日期为：20200706
[2020-07-13 11:04:27] [INFO] 执行sql日期为：20200706
[2020-07-13 11:04:27] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200706','20200706');
         
[2020-07-13 11:04:27] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200706','20200706');
         
[2020-07-13 11:04:29] [INFO] 执行sql日期为：20200707
[2020-07-13 11:04:29] [INFO] 执行sql日期为：20200707
[2020-07-13 11:04:29] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200707','20200707');
         
[2020-07-13 11:04:29] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200707','20200707');
         
[2020-07-13 11:04:30] [INFO] 执行sql日期为：20200708
[2020-07-13 11:04:30] [INFO] 执行sql日期为：20200708
[2020-07-13 11:04:30] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200708','20200708');
         
[2020-07-13 11:04:30] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200708','20200708');
         
[2020-07-13 11:04:32] [INFO] 执行sql日期为：20200709
[2020-07-13 11:04:32] [INFO] 执行sql日期为：20200709
[2020-07-13 11:04:32] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200709','20200709');
         
[2020-07-13 11:04:32] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200709','20200709');
         
[2020-07-13 11:04:33] [INFO] 执行sql日期为：20200710
[2020-07-13 11:04:33] [INFO] 执行sql日期为：20200710
[2020-07-13 11:04:33] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200710','20200710');
         
[2020-07-13 11:04:33] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200710','20200710');
         
[2020-07-13 11:04:34] [INFO] 执行sql日期为：20200711
[2020-07-13 11:04:34] [INFO] 执行sql日期为：20200711
[2020-07-13 11:04:34] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200711','20200711');
         
[2020-07-13 11:04:34] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200711','20200711');
         
[2020-07-13 11:04:36] [INFO] 执行sql日期为：20200712
[2020-07-13 11:04:36] [INFO] 执行sql日期为：20200712
[2020-07-13 11:04:36] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200712','20200712');
         
[2020-07-13 11:04:36] [INFO]  
         select his_bi."fun_dwd_D00130_d"('20200712','20200712');
         
[2020-07-13 17:58:09] [INFO] 
    delete from his_bi.level_master_m where month_id = '202001' and level_code = 'LV00702010101';
    insert into his_bi.level_master_m
    select
    left(st_date,6) as month_id,
    'LV00702010101' as level_code ,
    count(1) as level_value,
    now() as update_time ,
    count(1) as self_value  ,
    null as check_flag  ,
    null as check_comm
    from his_bi.dwd_inp_medical_d
    where
    key = 'D00105'
    and left(st_date,6) = '202001'
    group by left(st_date,6);
    
[2020-07-13 17:58:09] [INFO] 
    delete from his_bi.level_master_m where month_id = '202001' and level_code = 'LV00702010201';
    insert into his_bi.level_master_m
    select
    left(st_date,6) as month_id,
    'LV00702010201' as level_code ,
    count(1) as level_value,
    now() as update_time ,
    count(1) as self_value  ,
    null as check_flag  ,
    null as check_comm
    from his_bi.dwd_inp_medical_d
    where
    key = 'D00114'
    and left(st_date,6) = '202001'
    group by left(st_date,6);
    
[2020-07-13 17:58:09] [INFO] 
    delete from his_bi.level_master_m where month_id = '202001' and level_code = 'LV00702010301';
    insert into his_bi.level_master_m
    select
    left(st_date,6) as month_id,
    'LV00702010301' as level_code ,
    count(1) as level_value,
    now() as update_time ,
    count(1) as self_value  ,
    null as check_flag  ,
    null as check_comm
    from his_bi.dwd_inp_medical_d
    where
    key = 'D00116'
    and left(st_date,6) = '202001'
    group by left(st_date,6);
    
[2020-07-13 17:58:09] [INFO] 
    delete from his_bi.level_master_m where month_id = '202001' and level_code = 'LV00702010401';
    insert into his_bi.level_master_m
    select
    left(st_date,6) as month_id,
    'LV00702010401' as level_code ,
    count(1) as level_value,
    now() as update_time ,
    count(1) as self_value  ,
    null as check_flag  ,
    null as check_comm
    from his_bi.dwd_inp_medical_d
    where
    key = 'D00113'
    and left(st_date,6) = '202001'
    group by left(st_date,6);
    
[2020-07-13 17:58:09] [INFO] 
    delete from his_bi.level_master_m where month_id = '202001' and level_code = 'LV00702010501';
    insert into his_bi.level_master_m
    select
    left(st_date,6) as month_id,
    'LV00702010501' as level_code ,
    count(1) as level_value,
    now() as update_time ,
    count(1) as self_value  ,
    null as check_flag  ,
    null as check_comm
    from his_bi.dwd_inp_medical_d
    where
    key = 'D00117'
    and left(st_date,6) = '202001'
    group by left(st_date,6);
    
[2020-07-13 17:58:09] [INFO] 
    delete from his_bi.level_master_m where month_id = '202001' and level_code = 'LV00702010801';
    insert into his_bi.level_master_m
    select
    left(st_date,6) as month_id,
    'LV00702010801' as level_code ,
    count(1) as level_value,
    now() as update_time ,
    count(1) as self_value  ,
    null as check_flag  ,
    null as check_comm
    from his_bi.dwd_inp_medical_d
    where
    key = 'D00121'
    and left(st_date,6) = '202001'
    group by left(st_date,6);
    
[2020-07-13 17:58:09] [INFO] 
    delete from his_bi.level_master_m where month_id = '202001' and level_code = 'LV00702010901';
    insert into his_bi.level_master_m
    select
    left(st_date,6) as month_id,
    'LV00702010901' as level_code ,
    count(1) as level_value,
    now() as update_time ,
    count(1) as self_value  ,
    null as check_flag  ,
    null as check_comm
    from his_bi.dwd_inp_medical_d
    where
    key = 'D00111'
    and left(st_date,6) = '202001'
    group by left(st_date,6);
    
[2020-07-13 17:58:09] [INFO] 
    delete from his_bi.level_master_m where month_id = '202001' and level_code = 'LV00702011001';
    insert into his_bi.level_master_m
    select
    left(st_date,6) as month_id,
    'LV00702011001' as level_code ,
    count(1) as level_value,
    now() as update_time ,
    count(1) as self_value  ,
    null as check_flag  ,
    null as check_comm
    from his_bi.dwd_inp_medical_d
    where
    key = 'D00106'
    and left(st_date,6) = '202001'
    group by left(st_date,6);
    
[2020-07-13 17:58:09] [INFO] 
    delete from his_bi.level_master_m where month_id = '202001' and level_code = 'LV00702011101';
    insert into his_bi.level_master_m
    select
    left(st_date,6) as month_id,
    'LV00702011101' as level_code ,
    count(1) as level_value,
    now() as update_time ,
    count(1) as self_value  ,
    null as check_flag  ,
    null as check_comm
    from his_bi.dwd_inp_medical_d
    where
    key = 'D00107'
    and left(st_date,6) = '202001'
    group by left(st_date,6);
    
[2020-07-13 17:58:09] [INFO] 
    delete from his_bi.level_master_m where month_id = '202001' and level_code = 'LV00702011201';
    insert into his_bi.level_master_m
    select
    left(st_date,6) as month_id,
    'LV00702011201' as level_code ,
    count(1) as level_value,
    now() as update_time ,
    count(1) as self_value  ,
    null as check_flag  ,
    null as check_comm
    from his_bi.dwd_inp_medical_d
    where
    key = 'D00108'
    and left(st_date,6) = '202001'
    group by left(st_date,6);
    
[2020-07-13 17:58:09] [INFO] 
    delete from his_bi.level_master_m where month_id = '202001' and level_code = 'LV00702011301';
    insert into his_bi.level_master_m
    select
    left(st_date,6) as month_id,
    'LV00702011301' as level_code ,
    count(1) as level_value,
    now() as update_time ,
    count(1) as self_value  ,
    null as check_flag  ,
    null as check_comm
    from his_bi.dwd_inp_medical_d
    where
    key = 'D00109'
    and left(st_date,6) = '202001'
    group by left(st_date,6);
    
[2020-07-13 17:58:09] [INFO] 
    delete from his_bi.level_master_m where month_id = '202001' and level_code = 'LV00702011401';
    insert into his_bi.level_master_m
    select
    left(st_date,6) as month_id,
    'LV00702011401' as level_code ,
    count(1) as level_value,
    now() as update_time ,
    count(1) as self_value  ,
    null as check_flag  ,
    null as check_comm
    from his_bi.dwd_inp_medical_d
    where
    key = 'D00110'
    and left(st_date,6) = '202001'
    group by left(st_date,6);
    
[2020-07-13 17:58:09] [INFO] 
    delete from his_bi.level_master_m where month_id = '202001' and level_code = 'LV00702011501';
    insert into his_bi.level_master_m
    select
    left(st_date,6) as month_id,
    'LV00702011501' as level_code ,
    count(1) as level_value,
    now() as update_time ,
    count(1) as self_value  ,
    null as check_flag  ,
    null as check_comm
    from his_bi.dwd_inp_medical_d
    where
    key = 'D00127'
    and left(st_date,6) = '202001'
    group by left(st_date,6);
    
[2020-07-13 17:58:09] [INFO] 
    delete from his_bi.level_master_m where month_id = '202001' and level_code = 'LV00702011601';
    insert into his_bi.level_master_m
    select
    left(st_date,6) as month_id,
    'LV00702011601' as level_code ,
    count(1) as level_value,
    now() as update_time ,
    count(1) as self_value  ,
    null as check_flag  ,
    null as check_comm
    from his_bi.dwd_inp_medical_d
    where
    key = 'D00128'
    and left(st_date,6) = '202001'
    group by left(st_date,6);
    
[2020-07-13 17:58:09] [INFO] 
    delete from his_bi.level_master_m where month_id = '202001' and level_code = 'LV00702011701';
    insert into his_bi.level_master_m
    select
    left(st_date,6) as month_id,
    'LV00702011701' as level_code ,
    count(1) as level_value,
    now() as update_time ,
    count(1) as self_value  ,
    null as check_flag  ,
    null as check_comm
    from his_bi.dwd_inp_medical_d
    where
    key = 'D00123'
    and left(st_date,6) = '202001'
    group by left(st_date,6);
    
[2020-07-13 17:58:09] [INFO] 
    delete from his_bi.level_master_m where month_id = '202001' and level_code = 'LV00702011801';
    insert into his_bi.level_master_m
    select
    left(st_date,6) as month_id,
    'LV00702011801' as level_code ,
    count(1) as level_value,
    now() as update_time ,
    count(1) as self_value  ,
    null as check_flag  ,
    null as check_comm
    from his_bi.dwd_inp_medical_d
    where
    key = 'D00124'
    and left(st_date,6) = '202001'
    group by left(st_date,6);
    
[2020-07-13 17:58:09] [INFO] 
    delete from his_bi.level_master_m where month_id = '202001' and level_code = 'LV00702011901';
    insert into his_bi.level_master_m
    select
    left(st_date,6) as month_id,
    'LV00702011901' as level_code ,
    count(1) as level_value,
    now() as update_time ,
    count(1) as self_value  ,
    null as check_flag  ,
    null as check_comm
    from his_bi.dwd_inp_medical_d
    where
    key = 'D00125'
    and left(st_date,6) = '202001'
    group by left(st_date,6);
    
[2020-07-13 17:58:09] [INFO] 
    delete from his_bi.level_master_m where month_id = '202001' and level_code = 'LV007020120';
    insert into his_bi.level_master_m
    select
    left(st_date,6) as month_id,
    'LV007020120' as level_code ,
    count(1) as level_value,
    now() as update_time ,
    count(1) as self_value  ,
    null as check_flag  ,
    null as check_comm
    from his_bi.dwd_inp_medical_d
    where
    key = 'D00126'
    and left(st_date,6) = '202001'
    group by left(st_date,6);
    
[2020-07-14 14:34:44] [INFO] 执行sql日期为：202001
[2020-07-14 14:34:44] [INFO]  
         select his_bi."fun_level_master_m"('202001','202001');
         
[2020-07-14 14:35:24] [INFO] 执行sql日期为：202002
[2020-07-14 14:35:24] [INFO]  
         select his_bi."fun_level_master_m"('202002','202002');
         
[2020-07-14 14:35:36] [INFO] 执行sql日期为：202003
[2020-07-14 14:35:36] [INFO]  
         select his_bi."fun_level_master_m"('202003','202003');
         
[2020-07-14 14:35:50] [INFO] 执行sql日期为：202004
[2020-07-14 14:35:50] [INFO]  
         select his_bi."fun_level_master_m"('202004','202004');
         
[2020-07-14 14:36:15] [INFO] 执行sql日期为：202005
[2020-07-14 14:36:15] [INFO]  
         select his_bi."fun_level_master_m"('202005','202005');
         
[2020-07-14 14:36:56] [INFO] 执行sql日期为：202006
[2020-07-14 14:36:56] [INFO]  
         select his_bi."fun_level_master_m"('202006','202006');
         
[2020-07-15 16:47:37] [INFO] 执行sql日期为：202001
[2020-07-15 16:47:37] [INFO]  
         select his_bi."fun_level_master_m"('202001','202001');
         
[2020-07-15 16:48:21] [INFO] 执行sql日期为：202002
[2020-07-15 16:48:21] [INFO]  
         select his_bi."fun_level_master_m"('202002','202002');
         
[2020-07-15 16:48:44] [INFO] 执行sql日期为：202003
[2020-07-15 16:48:44] [INFO]  
         select his_bi."fun_level_master_m"('202003','202003');
         
[2020-07-15 16:49:01] [INFO] 执行sql日期为：202004
[2020-07-15 16:49:01] [INFO]  
         select his_bi."fun_level_master_m"('202004','202004');
         
[2020-07-15 16:49:25] [INFO] 执行sql日期为：202005
[2020-07-15 16:49:25] [INFO]  
         select his_bi."fun_level_master_m"('202005','202005');
         
[2020-07-15 16:50:39] [INFO] 执行sql日期为：202006
[2020-07-15 16:50:39] [INFO]  
         select his_bi."fun_level_master_m"('202006','202006');
         
[2020-07-15 16:52:30] [INFO] 执行sql日期为：202001
[2020-07-15 16:52:30] [INFO]  
         select his_bi."fun_dw_outp_patient_info_m"('202001','202001');
         
[2020-07-15 16:53:19] [INFO] 执行sql日期为：202002
[2020-07-15 16:53:19] [INFO]  
         select his_bi."fun_dw_outp_patient_info_m"('202002','202002');
         
[2020-07-15 16:53:45] [INFO] 执行sql日期为：202003
[2020-07-15 16:53:45] [INFO]  
         select his_bi."fun_dw_outp_patient_info_m"('202003','202003');
         
[2020-07-15 16:54:29] [INFO] 执行sql日期为：202004
[2020-07-15 16:54:29] [INFO]  
         select his_bi."fun_dw_outp_patient_info_m"('202004','202004');
         
[2020-07-15 16:55:29] [INFO] 执行sql日期为：202005
[2020-07-15 16:55:29] [INFO]  
         select his_bi."fun_dw_outp_patient_info_m"('202005','202005');
         
[2020-07-15 16:56:27] [INFO] 执行sql日期为：202006
[2020-07-15 16:56:27] [INFO]  
         select his_bi."fun_dw_outp_patient_info_m"('202006','202006');
         
[2020-07-16 11:00:43] [INFO] 执行sql日期为：202001
[2020-07-16 11:00:43] [INFO]  
         select his_bi."fun_level_master_m"('202001','202001');
         
[2020-07-16 11:18:36] [INFO] 执行sql日期为：202001
[2020-07-16 11:18:36] [INFO]  
         select his_bi."fun_level_master_m"('202001','202001');
         
[2020-07-16 11:19:26] [INFO] 执行sql日期为：202002
[2020-07-16 11:19:26] [INFO]  
         select his_bi."fun_level_master_m"('202002','202002');
         
[2020-07-16 11:19:47] [INFO] 执行sql日期为：202003
[2020-07-16 11:19:47] [INFO]  
         select his_bi."fun_level_master_m"('202003','202003');
         
[2020-07-16 11:20:13] [INFO] 执行sql日期为：202004
[2020-07-16 11:20:13] [INFO]  
         select his_bi."fun_level_master_m"('202004','202004');
         
[2020-07-16 11:20:46] [INFO] 执行sql日期为：202005
[2020-07-16 11:20:46] [INFO]  
         select his_bi."fun_level_master_m"('202005','202005');
         
[2020-07-16 11:22:15] [INFO] 执行sql日期为：202006
[2020-07-16 11:22:15] [INFO]  
         select his_bi."fun_level_master_m"('202006','202006');
         
[2020-07-16 13:58:42] [INFO] 执行sql日期为：202001
[2020-07-16 13:58:42] [INFO] 执行sql日期为：202001
[2020-07-16 13:58:42] [INFO]  
         select his_bi."fun_level_master_m"('202001','202001');
         
[2020-07-16 13:58:42] [INFO]  
         select his_bi."fun_level_master_m"('202001','202001');
         
[2020-07-16 13:59:31] [INFO] 执行sql日期为：202002
[2020-07-16 13:59:31] [INFO] 执行sql日期为：202002
[2020-07-16 13:59:31] [INFO]  
         select his_bi."fun_level_master_m"('202002','202002');
         
[2020-07-16 13:59:31] [INFO]  
         select his_bi."fun_level_master_m"('202002','202002');
         
[2020-07-16 13:59:51] [INFO] 执行sql日期为：202003
[2020-07-16 13:59:51] [INFO] 执行sql日期为：202003
[2020-07-16 13:59:51] [INFO]  
         select his_bi."fun_level_master_m"('202003','202003');
         
[2020-07-16 13:59:51] [INFO]  
         select his_bi."fun_level_master_m"('202003','202003');
         
[2020-07-16 14:00:14] [INFO] 执行sql日期为：202004
[2020-07-16 14:00:14] [INFO] 执行sql日期为：202004
[2020-07-16 14:00:14] [INFO]  
         select his_bi."fun_level_master_m"('202004','202004');
         
[2020-07-16 14:00:14] [INFO]  
         select his_bi."fun_level_master_m"('202004','202004');
         
[2020-07-16 14:00:48] [INFO] 执行sql日期为：202005
[2020-07-16 14:00:48] [INFO] 执行sql日期为：202005
[2020-07-16 14:00:48] [INFO]  
         select his_bi."fun_level_master_m"('202005','202005');
         
[2020-07-16 14:00:48] [INFO]  
         select his_bi."fun_level_master_m"('202005','202005');
         
[2020-07-16 14:01:49] [INFO] 执行sql日期为：202006
[2020-07-16 14:01:49] [INFO] 执行sql日期为：202006
[2020-07-16 14:01:49] [INFO]  
         select his_bi."fun_level_master_m"('202006','202006');
         
[2020-07-16 14:01:49] [INFO]  
         select his_bi."fun_level_master_m"('202006','202006');
         
[2020-07-16 15:52:00] [INFO] 执行sql日期为：202001
[2020-07-16 15:52:00] [INFO]  
         select his_bi."fun_level_master_m"('202001','202001');
         
[2020-07-16 15:53:03] [INFO] 执行sql日期为：202002
[2020-07-16 15:53:03] [INFO]  
         select his_bi."fun_level_master_m"('202002','202002');
         
[2020-07-16 15:53:24] [INFO] 执行sql日期为：202003
[2020-07-16 15:53:24] [INFO]  
         select his_bi."fun_level_master_m"('202003','202003');
         
[2020-07-16 15:53:55] [INFO] 执行sql日期为：202004
[2020-07-16 15:53:55] [INFO]  
         select his_bi."fun_level_master_m"('202004','202004');
         
[2020-07-16 15:54:35] [INFO] 执行sql日期为：202005
[2020-07-16 15:54:35] [INFO]  
         select his_bi."fun_level_master_m"('202005','202005');
         
[2020-07-16 15:56:23] [INFO] 执行sql日期为：202006
[2020-07-16 15:56:23] [INFO]  
         select his_bi."fun_level_master_m"('202006','202006');
         
[2020-07-16 16:07:13] [INFO] 执行sql日期为：202001
[2020-07-16 16:07:13] [INFO]  
         select his_bi."fun_level_master_m"('202001','202001');
         
[2020-07-16 16:07:55] [INFO] 执行sql日期为：202002
[2020-07-16 16:07:55] [INFO]  
         select his_bi."fun_level_master_m"('202002','202002');
         
[2020-07-16 16:08:16] [INFO] 执行sql日期为：202003
[2020-07-16 16:08:16] [INFO]  
         select his_bi."fun_level_master_m"('202003','202003');
         
[2020-07-16 16:08:41] [INFO] 执行sql日期为：202004
[2020-07-16 16:08:41] [INFO]  
         select his_bi."fun_level_master_m"('202004','202004');
         
[2020-07-16 16:09:06] [INFO] 执行sql日期为：202005
[2020-07-16 16:09:06] [INFO]  
         select his_bi."fun_level_master_m"('202005','202005');
         
[2020-07-16 16:09:47] [INFO] 执行sql日期为：202006
[2020-07-16 16:09:47] [INFO]  
         select his_bi."fun_level_master_m"('202006','202006');
         
[2020-07-17 14:13:45] [INFO] 执行sql日期为：202001
[2020-07-17 14:13:45] [INFO]  
         select his_bi."fun_level_master_m"('202001','202001');
         
[2020-07-17 14:14:37] [INFO] 执行sql日期为：202002
[2020-07-17 14:14:37] [INFO]  
         select his_bi."fun_level_master_m"('202002','202002');
         
[2020-07-17 14:15:05] [INFO] 执行sql日期为：202003
[2020-07-17 14:15:05] [INFO]  
         select his_bi."fun_level_master_m"('202003','202003');
         
[2020-07-17 14:15:30] [INFO] 执行sql日期为：202004
[2020-07-17 14:15:30] [INFO]  
         select his_bi."fun_level_master_m"('202004','202004');
         
[2020-07-17 14:16:00] [INFO] 执行sql日期为：202005
[2020-07-17 14:16:00] [INFO]  
         select his_bi."fun_level_master_m"('202005','202005');
         
[2020-07-17 14:17:17] [INFO] 执行sql日期为：202006
[2020-07-17 14:17:17] [INFO]  
         select his_bi."fun_level_master_m"('202006','202006');
         
[2020-07-17 14:19:52] [INFO] 执行sql日期为：202001
[2020-07-17 14:19:52] [INFO]  
         select his_bi."fun_level_master_m"('202001','202001');
         
[2020-07-17 14:20:17] [INFO] 执行sql日期为：202002
[2020-07-17 14:20:17] [INFO]  
         select his_bi."fun_level_master_m"('202002','202002');
         
[2020-07-17 14:20:41] [INFO] 执行sql日期为：202003
[2020-07-17 14:20:41] [INFO]  
         select his_bi."fun_level_master_m"('202003','202003');
         
[2020-07-17 14:21:06] [INFO] 执行sql日期为：202004
[2020-07-17 14:21:06] [INFO]  
         select his_bi."fun_level_master_m"('202004','202004');
         
[2020-07-17 14:21:40] [INFO] 执行sql日期为：202005
[2020-07-17 14:21:40] [INFO]  
         select his_bi."fun_level_master_m"('202005','202005');
         
[2020-07-17 14:23:06] [INFO] 执行sql日期为：202006
[2020-07-17 14:23:06] [INFO]  
         select his_bi."fun_level_master_m"('202006','202006');
         
[2020-07-17 14:47:13] [INFO] 执行sql日期为：202001
[2020-07-17 14:47:13] [INFO]  
         select his_bi."fun_level_master_m"('202001','202001');
         
[2020-07-17 14:47:53] [INFO] 执行sql日期为：202002
[2020-07-17 14:47:53] [INFO]  
         select his_bi."fun_level_master_m"('202002','202002');
         
[2020-07-17 14:48:16] [INFO] 执行sql日期为：202003
[2020-07-17 14:48:16] [INFO]  
         select his_bi."fun_level_master_m"('202003','202003');
         
[2020-07-17 14:48:49] [INFO] 执行sql日期为：202004
[2020-07-17 14:48:49] [INFO]  
         select his_bi."fun_level_master_m"('202004','202004');
         
[2020-07-17 14:49:18] [INFO] 执行sql日期为：202005
[2020-07-17 14:49:18] [INFO]  
         select his_bi."fun_level_master_m"('202005','202005');
         
[2020-07-17 14:50:04] [INFO] 执行sql日期为：202006
[2020-07-17 14:50:04] [INFO]  
         select his_bi."fun_level_master_m"('202006','202006');
         
[2020-07-17 14:56:39] [INFO] 执行sql日期为：202001
[2020-07-17 14:56:39] [INFO]  
         select his_bi."fun_level_master_m"('202001','202001');
         
[2020-07-17 14:57:02] [INFO] 执行sql日期为：202002
[2020-07-17 14:57:02] [INFO]  
         select his_bi."fun_level_master_m"('202002','202002');
         
[2020-07-17 14:57:25] [INFO] 执行sql日期为：202003
[2020-07-17 14:57:25] [INFO]  
         select his_bi."fun_level_master_m"('202003','202003');
         
[2020-07-17 14:57:49] [INFO] 执行sql日期为：202004
[2020-07-17 14:57:49] [INFO]  
         select his_bi."fun_level_master_m"('202004','202004');
         
[2020-07-17 14:58:21] [INFO] 执行sql日期为：202005
[2020-07-17 14:58:21] [INFO]  
         select his_bi."fun_level_master_m"('202005','202005');
         
[2020-07-17 14:59:02] [INFO] 执行sql日期为：202006
[2020-07-17 14:59:02] [INFO]  
         select his_bi."fun_level_master_m"('202006','202006');
         
[2020-07-17 15:09:19] [INFO] 执行sql日期为：202001
[2020-07-17 15:09:19] [INFO]  
         select his_bi."fun_kpi_master_m_wy"('202001','202001');
         
[2020-07-17 15:09:51] [INFO] 执行sql日期为：202002
[2020-07-17 15:09:51] [INFO]  
         select his_bi."fun_kpi_master_m_wy"('202002','202002');
         
[2020-07-17 15:10:05] [INFO] 执行sql日期为：202003
[2020-07-17 15:10:05] [INFO]  
         select his_bi."fun_kpi_master_m_wy"('202003','202003');
         
[2020-07-17 15:10:23] [INFO] 执行sql日期为：202004
[2020-07-17 15:10:23] [INFO]  
         select his_bi."fun_kpi_master_m_wy"('202004','202004');
         
[2020-07-17 15:10:53] [INFO] 执行sql日期为：202005
[2020-07-17 15:10:53] [INFO]  
         select his_bi."fun_kpi_master_m_wy"('202005','202005');
         
[2020-07-17 15:12:03] [INFO] 执行sql日期为：202006
[2020-07-17 15:12:03] [INFO]  
         select his_bi."fun_kpi_master_m_wy"('202006','202006');
         
[2020-07-17 15:45:35] [INFO] 执行sql日期为：202001
[2020-07-17 15:45:35] [INFO] 执行sql日期为：202001
[2020-07-17 15:45:35] [INFO]  
         select his_bi."fun_level_master_m"('202001','202001');
         
[2020-07-17 15:45:35] [INFO]  
         select his_bi."fun_level_master_m"('202001','202001');
         
[2020-07-17 15:46:40] [INFO] 执行sql日期为：202002
[2020-07-17 15:46:40] [INFO] 执行sql日期为：202002
[2020-07-17 15:46:40] [INFO]  
         select his_bi."fun_level_master_m"('202002','202002');
         
[2020-07-17 15:46:40] [INFO]  
         select his_bi."fun_level_master_m"('202002','202002');
         
[2020-07-17 15:47:02] [INFO] 执行sql日期为：202003
[2020-07-17 15:47:02] [INFO] 执行sql日期为：202003
[2020-07-17 15:47:02] [INFO]  
         select his_bi."fun_level_master_m"('202003','202003');
         
[2020-07-17 15:47:02] [INFO]  
         select his_bi."fun_level_master_m"('202003','202003');
         
[2020-07-17 15:47:36] [INFO] 执行sql日期为：202004
[2020-07-17 15:47:36] [INFO] 执行sql日期为：202004
[2020-07-17 15:47:36] [INFO]  
         select his_bi."fun_level_master_m"('202004','202004');
         
[2020-07-17 15:47:36] [INFO]  
         select his_bi."fun_level_master_m"('202004','202004');
         
[2020-07-17 15:48:06] [INFO] 执行sql日期为：202005
[2020-07-17 15:48:06] [INFO] 执行sql日期为：202005
[2020-07-17 15:48:06] [INFO]  
         select his_bi."fun_level_master_m"('202005','202005');
         
[2020-07-17 15:48:06] [INFO]  
         select his_bi."fun_level_master_m"('202005','202005');
         
[2020-07-17 15:49:53] [INFO] 执行sql日期为：202006
[2020-07-17 15:49:53] [INFO] 执行sql日期为：202006
[2020-07-17 15:49:53] [INFO]  
         select his_bi."fun_level_master_m"('202006','202006');
         
[2020-07-17 15:49:53] [INFO]  
         select his_bi."fun_level_master_m"('202006','202006');
         
[2020-07-17 16:22:13] [INFO] 执行sql日期为：202001
[2020-07-17 16:22:13] [INFO] 执行sql日期为：202001
[2020-07-17 16:22:13] [INFO]  
         select his_bi."fun_level_master_m"('202001','202001');
         
[2020-07-17 16:22:13] [INFO]  
         select his_bi."fun_level_master_m"('202001','202001');
         
[2020-07-17 16:22:42] [INFO] 执行sql日期为：202002
[2020-07-17 16:22:42] [INFO] 执行sql日期为：202002
[2020-07-17 16:22:42] [INFO]  
         select his_bi."fun_level_master_m"('202002','202002');
         
[2020-07-17 16:22:42] [INFO]  
         select his_bi."fun_level_master_m"('202002','202002');
         
[2020-07-17 16:23:02] [INFO] 执行sql日期为：202003
[2020-07-17 16:23:02] [INFO] 执行sql日期为：202003
[2020-07-17 16:23:02] [INFO]  
         select his_bi."fun_level_master_m"('202003','202003');
         
[2020-07-17 16:23:02] [INFO]  
         select his_bi."fun_level_master_m"('202003','202003');
         
[2020-07-17 16:23:40] [INFO] 执行sql日期为：202004
[2020-07-17 16:23:40] [INFO] 执行sql日期为：202004
[2020-07-17 16:23:40] [INFO]  
         select his_bi."fun_level_master_m"('202004','202004');
         
[2020-07-17 16:23:40] [INFO]  
         select his_bi."fun_level_master_m"('202004','202004');
         
[2020-07-17 16:24:07] [INFO] 执行sql日期为：202005
[2020-07-17 16:24:07] [INFO] 执行sql日期为：202005
[2020-07-17 16:24:07] [INFO]  
         select his_bi."fun_level_master_m"('202005','202005');
         
[2020-07-17 16:24:07] [INFO]  
         select his_bi."fun_level_master_m"('202005','202005');
         
[2020-07-17 16:25:50] [INFO] 执行sql日期为：202006
[2020-07-17 16:25:50] [INFO] 执行sql日期为：202006
[2020-07-17 16:25:50] [INFO]  
         select his_bi."fun_level_master_m"('202006','202006');
         
[2020-07-17 16:25:50] [INFO]  
         select his_bi."fun_level_master_m"('202006','202006');
         
