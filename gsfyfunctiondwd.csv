,base_name,func_name,detail,kpi_code,func_detail,remark
0,his_bi,fun_dwd_D00075_d_16513,"
/***
函数名称：住院患者西药费
    作用：统计某天住院患者西药费（以病案首页归档数据中的费用数据为准）
  开发人：wy 2020-04-10
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00075  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_income_d
	 where key = 'D00075';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D00075';
	
  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
 select 'D00075',
				 to_number(c.datastore_name,'9999999999.9999'),/*9999999999.9999 表示14位长度，其中4个是小数位*/
				 d.bah as patient_id,
				 d.zycs as visit_id,
				 a.pai_visit_id,
				 now(),
				 '住院患者西药费',
			  to_char(d.cyrq,'yyyymmdd') AS st_date
   from his_bi.ods_patient_medical_record d 
  left join his_bi.pts_pai_visit a
  on (a.visit_id =d.zycs and a.patient_id =d.bah)
  inner join (select inpati_id,max(hp_basic_business_id) as hp_basic_business_id 
                from his_bi.emr_mrms_hp_basic_business
               where reportcard_type is null 
               group by inpati_id) b 
     on a.pai_visit_id = b.inpati_id
  inner join his_bi.emr_mrms_hp_datarecord c
     on c.hp_basic_business_id = b.hp_basic_business_id
  where d.cyrq is not null 
    and c.hp_datacol_config_key = 'drugFeeTotal'
    and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
    and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1
    and c.datastore_name <>'0.00';
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00075'],"[""delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D00075';   INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,                    remark,st_date)  select 'D00075',     to_number(c.datastore_name,'9999999999.9999'),/*9999999999.9999 表示14位长度，其中4个是小数位*/     d.bah as patient_id,     d.zycs as visit_id,     a.pai_visit_id,     now(),     '住院患者西药费',     to_char(d.cyrq,'yyyymmdd') AS st_date   from his_bi.ods_patient_medical_record d   left join his_bi.pts_pai_visit a  on (a.visit_id =d.zycs and a.patient_id =d.bah)  inner join (select inpati_id,max(hp_basic_business_id) as hp_basic_business_id                 from his_bi.emr_mrms_hp_basic_business               where reportcard_type is null                group by inpati_id) b      on a.pai_visit_id = b.inpati_id  inner join his_bi.emr_mrms_hp_datarecord c     on c.hp_basic_business_id = b.hp_basic_business_id  where d.cyrq is not null     and c.hp_datacol_config_key = 'drugFeeTotal'    and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')    and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1    and c.datastore_name <>'0.00';  ""]",['住院患者西药费   ']
1,his_bi,fun_dwd_D00076_d_16515,"
/***
函数名称：住院患者抗菌药物费
    作用：统计某天住院患者抗菌药物费（以病案首页归档数据中的费用数据为准）
  开发人：wy 2020-04-10
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00076  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_income_d
	 where key = 'D00076';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D00076';
	
  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
  select 'D00076',
				 to_number(c.datastore_name,'9999999999.9999'),/*9999999999.9999 表示14位长度，其中4个是小数位*/
				 d.bah as patient_id,
				 d.zycs as visit_id,
				 a.pai_visit_id,
				 now(),
				 '住院患者抗菌药物费',
			  to_char(d.cyrq,'yyyymmdd') AS st_date
   from his_bi.ods_patient_medical_record d
  left join his_bi.pts_pai_visit a
  on (a.visit_id =d.zycs and a.patient_id =d.bah )
  inner join (select inpati_id,max(hp_basic_business_id) as hp_basic_business_id 
                from his_bi.emr_mrms_hp_basic_business
               where reportcard_type is null 
               group by inpati_id) b 
     on a.pai_visit_id = b.inpati_id
  inner join his_bi.emr_mrms_hp_datarecord c
     on c.hp_basic_business_id = b.hp_basic_business_id
  where d.cyrq is not null 
    and c.hp_datacol_config_key = 'antibacterialDrugFee'
    and c.datastore_name <>'0.00'
    and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
    and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00076'],"[""delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D00076';   INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,                    remark,st_date)   select 'D00076',     to_number(c.datastore_name,'9999999999.9999'),/*9999999999.9999 表示14位长度，其中4个是小数位*/     d.bah as patient_id,     d.zycs as visit_id,     a.pai_visit_id,     now(),     '住院患者抗菌药物费',     to_char(d.cyrq,'yyyymmdd') AS st_date   from his_bi.ods_patient_medical_record d  left join his_bi.pts_pai_visit a  on (a.visit_id =d.zycs and a.patient_id =d.bah )  inner join (select inpati_id,max(hp_basic_business_id) as hp_basic_business_id                 from his_bi.emr_mrms_hp_basic_business               where reportcard_type is null                group by inpati_id) b      on a.pai_visit_id = b.inpati_id  inner join his_bi.emr_mrms_hp_datarecord c     on c.hp_basic_business_id = b.hp_basic_business_id  where d.cyrq is not null     and c.hp_datacol_config_key = 'antibacterialDrugFee'    and c.datastore_name <>'0.00'    and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')    and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1;  ""]",['住院患者抗菌药物费   ']
2,his_bi,add_months_16409,"

declare
  i interval := ($2 || 'month');
  d1 date := date(to_timestamp($1::text,'yyyy-mm') + interval '1 month' - interval '1 day');
  d2 date := date($1);
  res timestamp;
begin
  select case when d1=d2 then ((to_char($1+i+interval '1 month', 'yyyy-mm')||'-01')::date - 1) + $1::time else $1+i end into res;
  return res;
end;

",[],[],[]
3,his_bi,add_months_16410,"

declare
  i interval := ($2 || 'month');
  d1 date := date(to_timestamp($1::text,'yyyy-mm') + interval '1 month' - interval '1 day');
  d2 date := date($1);
  res timestamptz;
begin
  select case when d1=d2 then ((to_char($1+i+interval '1 month', 'yyyy-mm')||'-01')::date - 1) + $1::timetz else $1+i end into res;
  return res;
end;

",[],[],[]
4,his_bi,auto_loop_level_16411,"
	/*
	函数名称：空值指标处理
    作用：空值指标处理
  开发人：leslie 2020年7月18日 
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
    入参：v_start_month，v_end_month  格式均为yyyymm，可以一次运行多天的数据
		运行前需往表里新增数据his_bi.tmp_level_info
	*/
DECLARE
  c_monthlist   record;
	c_level  record;
  o_start_month varchar;
  o_end_month   varchar;
  i_start_month varchar;
  i_end_month   varchar;
  i_count       int4;
	
	begin
	select count(1),to_char((date_trunc('month', now()) + interval '-1 month'),'yyyymm')
	       into i_count,i_end_month
    from his_bi.level_master_m;
   
  if(i_count = 0)
    then 
      i_start_month := '202001';
      --raise notice '0 i_start_month is: %', i_start_month;
  else if(i_count > 0)
    then
      i_start_month := i_end_month;
      --raise notice '1 i_start_month is: %', i_start_month;
  end if;
  end if;
    
  if(length(trim(v_start_month)) = 0 and length(trim(v_end_month)) = 0)
  /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前月份前1个月为截止月份 */
    then 
      o_start_month := i_start_month;
      o_end_month := i_end_month;
      --raise notice '2 o_start_month is: %', o_start_month;
      --raise notice '2 o_end_month is: %', o_end_month;
  else if (length(trim(v_start_month)) <> 0 and length(trim(v_end_month)) <> 0)
  /*PG function 如果参入任何参数，那么以实际入参为准*/
    then 
      o_start_month := v_start_month;
      o_end_month := v_end_month;
      --raise notice '3 o_start_month is: %', o_start_month;
      --raise notice '3 o_end_month is: %', o_end_month;
  end if;
  end if;
  
  for c_monthlist in (select distinct month_id from his_bi.dim_date_info where month_id >= o_start_month and month_id <= o_end_month order by month_id)
	loop
	for c_level in (
select 
distinct 
t1.month_id,
t1.level_code
from his_bi.tmp_level_info t1 
left join his_bi.tmp_level_master_m t2 on t1. level_code = t2. level_code and t1.month_id = t2.month_id
where 
t1.level_code  in ('LV007010201',
'LV007010202',
'LV007010203',
'LV007010204',
'LV007010205',
'LV007010206',
'LV007010207',
'LV007010208',
'LV007010210',
'LV007010211',
'LV007010302',
'LV007010303',
'LV007010304',
'LV007010305',
'LV007010306',
'LV007010307',
'LV007010308',
'LV007010309',
'LV007010310',
'LV007010311',
'LV007010312',
'LV007010313',
'LV007010401',
'LV007010402',
'LV007010403',
'LV007010501',
'LV007010502',
'LV007010503',
'LV007010504',
'LV007020101',
'LV00702010101',
'LV00702010102',
'LV00702010103',
'LV00702010104',
'LV00702010105',
'LV00702010106',
'LV00702010107',
'LV00702010201',
'LV00702010202',
'LV00702010203',
'LV00702010204',
'LV00702010205',
'LV00702010206',
'LV00702010207',
'LV00702010301',
'LV00702010302',
'LV00702010303',
'LV00702010304',
'LV00702010305',
'LV00702010306',
'LV00702010307',
'LV00702010401',
'LV00702010402',
'LV00702010403',
'LV00702010404',
'LV00702010405',
'LV00702010406',
'LV00702010407',
'LV00702010501',
'LV00702010502',
'LV00702010503',
'LV00702010504',
'LV00702010506',
'LV00702010507',
'LV00702010801',
'LV00702010802',
'LV00702010803',
'LV00702010804',
'LV00702010805',
'LV00702010806',
'LV00702010807',
'LV00702010901',
'LV00702010902',
'LV00702010903',
'LV00702010904',
'LV00702010905',
'LV00702010906',
'LV00702010907',
'LV00702011001',
'LV00702011002',
'LV00702011003',
'LV00702011004',
'LV00702011005',
'LV00702011006',
'LV00702011007',
'LV00702011101',
'LV00702011102',
'LV00702011103',
'LV00702011104',
'LV00702011105',
'LV00702011106',
'LV00702011107',
'LV00702011201',
'LV00702011202',
'LV00702011203',
'LV00702011204',
'LV00702011205',
'LV00702011206',
'LV00702011207',
'LV00702011301',
'LV00702011302',
'LV00702011303',
'LV00702011304',
'LV00702011305',
'LV00702011306',
'LV00702011307',
'LV00702011401',
'LV00702011402',
'LV00702011403',
'LV00702011404',
'LV00702011405',
'LV00702011406',
'LV00702011407',
'LV00702011501',
'LV00702011502',
'LV00702011503',
'LV00702011504',
'LV00702011505',
'LV00702011506',
'LV00702011507',
'LV00702011601',
'LV00702011602',
'LV00702011603',
'LV00702011604',
'LV00702011605',
'LV00702011606',
'LV00702011607',
'LV00702011701',
'LV00702011702',
'LV00702011703',
'LV00702011704',
'LV00702011705',
'LV00702011706',
'LV00702011707',
'LV00702011801',
'LV00702011802',
'LV00702011803',
'LV00702011804',
'LV00702011805',
'LV00702011806',
'LV00702011807',
'LV00702011901',
'LV00702011902',
'LV00702011903',
'LV00702011904',
'LV00702011905',
'LV00702011906',
'LV00702011907',
'LV00702012021',
'LV00702012022',
'LV00702012023',
'LV00702012024',
'LV00702012025',
'LV00702012026',
'LV00702012027',
'LV00702020101',
'LV00702020102',
'LV00702020103',
'LV00702020104',
'LV00702020105',
'LV00702020106',
'LV00702020201',
'LV00702020202',
'LV00702020203',
'LV00702020204',
'LV00702020205',
'LV00702020206',
'LV00702020301',
'LV00702020302',
'LV00702020303',
'LV00702020304',
'LV00702020305',
'LV00702020306',
'LV00702020401',
'LV00702020402',
'LV00702020403',
'LV00702020404',
'LV00702020405',
'LV00702020406',
'LV00702020501',
'LV00702020502',
'LV00702020503',
'LV00702020504',
'LV00702020505',
'LV00702020506',
'LV00702020601',
'LV00702020602',
'LV00702020603',
'LV00702020604',
'LV00702020605',
'LV00702020606',
'LV00702020701',
'LV00702020702',
'LV00702020703',
'LV00702020704',
'LV00702020705',
'LV00702020706',
'LV00702020801',
'LV00702020802',
'LV00702020803',
'LV00702020804',
'LV00702020805',
'LV00702020806',
'LV00702020901',
'LV00702020902',
'LV00702020903',
'LV00702020904',
'LV00702020905',
'LV00702020906',
'LV00702021001',
'LV00702021002',
'LV00702021003',
'LV00702021004',
'LV00702021005',
'LV00702021006',
'LV00702021101',
'LV00702021102',
'LV00702021103',
'LV00702021104',
'LV00702021105',
'LV00702021106',
'LV00702021201',
'LV00702021202',
'LV00702021203',
'LV00702021204',
'LV00702021205',
'LV00702021206',
'LV00702021301',
'LV00702021302',
'LV00702021303',
'LV00702021304',
'LV00702021305',
'LV00702021306',
'LV00702040307',
'LV00702040308',
'LV00702040309',
'LV00702040310',
'LV00702040401',
'LV00702040402',
'LV00702040403',
'LV00702040404',
'LV00702040405',
'LV00702040406',
'LV00702040607',
'LV00702040608',
'LV0070501',
'LV0070502',
'LV0070504',
'LV0070506',
'LV0070507',
'LV0070509',
'LV0070514',
'LV0070515',
'LV0070516'
)
and t2.level_value is null	)
loop
	
	delete from his_bi.level_master_m where month_id =  c_level.month_id and level_code = c_level.level_code;
  insert into his_bi.level_master_m
	select
distinct
 c_level.month_id,
c_level.level_code as level_code,
0 as level_value,
now(),
0 as self_value,
null as check_flag  ,
null as check_comm
from his_bi.tmp_level_master_m
;
	end loop;
	end loop;
   RETURN 'SUCCESS';  
END;
  ",[],"['delete from his_bi.level_master_m where month_id =  c_level.month_id and level_code = c_level.level_code;\r  insert into his_bi.level_master_m\r select\rdistinct\r c_level.month_id,\rc_level.level_code as level_code,\r0 as level_value,\rnow(),\r0 as self_value,\rnull as check_flag  ,\rnull as check_comm\rfrom his_bi.tmp_level_master_m\r;\r end loop;\r']",['空值指标处理\r   ']
5,his_bi,fun_dwd_D00077_d_16517,"
/***
函数名称：住院患者中成药费
    作用：统计某天住院患者中成药费（以病案首页归档数据中的费用数据为准）
  开发人：wy 2020-04-10
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00077  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_income_d
	 where key = 'D00077';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D00077';
	
  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
  select 'D00077',
				 to_number(c.datastore_name,'9999999999.9999'),/*9999999999.9999 表示14位长度，其中4个是小数位*/
				 d.bah as patient_id,
				 d.zycs as visit_id,
				 a.pai_visit_id,
				 now(),
				 '住院患者中成药费',
			  to_char(d.cyrq,'yyyymmdd') AS st_date
   from his_bi.ods_patient_medical_record d
  left join his_bi.pts_pai_visit a
  on (a.patient_id =d.bah and a.visit_id =d.zycs)
  inner join (select inpati_id,max(hp_basic_business_id) as hp_basic_business_id 
                from his_bi.emr_mrms_hp_basic_business
               where reportcard_type is null 
               group by inpati_id) b 
     on a.pai_visit_id = b.inpati_id
  inner join his_bi.emr_mrms_hp_datarecord c
     on c.hp_basic_business_id = b.hp_basic_business_id
  where d.cyrq is not null 
    and c.hp_datacol_config_key = 'cDrugFee1'
    and c.datastore_name <>'0.00'
    and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
    and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00077'],"[""delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D00077';   INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,                    remark,st_date)   select 'D00077',     to_number(c.datastore_name,'9999999999.9999'),/*9999999999.9999 表示14位长度，其中4个是小数位*/     d.bah as patient_id,     d.zycs as visit_id,     a.pai_visit_id,     now(),     '住院患者中成药费',     to_char(d.cyrq,'yyyymmdd') AS st_date   from his_bi.ods_patient_medical_record d  left join his_bi.pts_pai_visit a  on (a.patient_id =d.bah and a.visit_id =d.zycs)  inner join (select inpati_id,max(hp_basic_business_id) as hp_basic_business_id                 from his_bi.emr_mrms_hp_basic_business               where reportcard_type is null                group by inpati_id) b      on a.pai_visit_id = b.inpati_id  inner join his_bi.emr_mrms_hp_datarecord c     on c.hp_basic_business_id = b.hp_basic_business_id  where d.cyrq is not null     and c.hp_datacol_config_key = 'cDrugFee1'    and c.datastore_name <>'0.00'    and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')    and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1;  ""]",['住院患者中成药费   ']
6,his_bi,fun_dwd_D00078_d_16519,"
/***
函数名称：住院患者中草药费
    作用：统计某天住院患者中草药费（以病案首页归档数据中的费用数据为准）
  开发人：wy 2020-04-10
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00078  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_income_d
	 where key = 'D00078';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D00078';
	
  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
  select 'D00078',
				 to_number(c.datastore_name,'9999999999.9999'),/*9999999999.9999 表示14位长度，其中4个是小数位*/
				 d.bah as patient_id,
				 d.zycs as visit_id,
				 a.pai_visit_id,
				 now(),
				 '住院患者中草药费',
			  to_char(d.cyrq,'yyyymmdd') AS st_date
   from his_bi.ods_patient_medical_record d
   left join his_bi.pts_pai_visit a
   on (a.patient_id =d.bah and a.visit_id =d.zycs)
  inner join (select inpati_id,max(hp_basic_business_id) as hp_basic_business_id 
                from his_bi.emr_mrms_hp_basic_business
               where reportcard_type is null 
               group by inpati_id) b 
     on a.pai_visit_id = b.inpati_id
  inner join his_bi.emr_mrms_hp_datarecord c
     on c.hp_basic_business_id = b.hp_basic_business_id
  where d.cyrq is not null 
     and c.datastore_name <>'0.00'
    and c.hp_datacol_config_key = 'cDrug'
    and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
    and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1;
   
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00078'],"[""delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D00078';   INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,                    remark,st_date)   select 'D00078',     to_number(c.datastore_name,'9999999999.9999'),/*9999999999.9999 表示14位长度，其中4个是小数位*/     d.bah as patient_id,     d.zycs as visit_id,     a.pai_visit_id,     now(),     '住院患者中草药费',     to_char(d.cyrq,'yyyymmdd') AS st_date   from his_bi.ods_patient_medical_record d   left join his_bi.pts_pai_visit a   on (a.patient_id =d.bah and a.visit_id =d.zycs)  inner join (select inpati_id,max(hp_basic_business_id) as hp_basic_business_id                 from his_bi.emr_mrms_hp_basic_business               where reportcard_type is null                group by inpati_id) b      on a.pai_visit_id = b.inpati_id  inner join his_bi.emr_mrms_hp_datarecord c     on c.hp_basic_business_id = b.hp_basic_business_id  where d.cyrq is not null      and c.datastore_name <>'0.00'    and c.hp_datacol_config_key = 'cDrug'    and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')    and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1;    ""]",['住院患者中草药费   ']
7,his_bi,fun_dwd_D00079_d_16521,"
/***
函数名称：住院患者血液费
    作用：统计某天住院患者血液费（以病案首页归档数据中的费用数据为准）
  开发人：wy 2020-04-10
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00079  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_income_d
	 where key = 'D00079';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D00079';
	
  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
  select 'D00079',
				 to_number(c.datastore_name,'9999999999.9999'),/*9999999999.9999 表示14位长度，其中4个是小数位*/
				 d.bah as patient_id,
				 d.zycs as visit_id,
				 a.pai_visit_id,
				 now(),
				 '住院患者血液费',
			  to_char(d.cyrq,'yyyymmdd') AS st_date
   from his_bi.ods_patient_medical_record d
   left join his_bi.pts_pai_visit a
   on (a.patient_id =d.bah  and a.visit_id =d.zycs)
  inner join (select inpati_id,max(hp_basic_business_id) as hp_basic_business_id 
                from his_bi.emr_mrms_hp_basic_business
               where reportcard_type is null 
               group by inpati_id) b 
     on a.pai_visit_id = b.inpati_id
  inner join his_bi.emr_mrms_hp_datarecord c
     on c.hp_basic_business_id = b.hp_basic_business_id
  where d.cyrq is not null 
    and c.hp_datacol_config_key = 'bloodFee'
    and c.datastore_name <>'0.00'
    and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
    and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00079'],"[""delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D00079';   INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,                    remark,st_date)   select 'D00079',     to_number(c.datastore_name,'9999999999.9999'),/*9999999999.9999 表示14位长度，其中4个是小数位*/     d.bah as patient_id,     d.zycs as visit_id,     a.pai_visit_id,     now(),     '住院患者血液费',     to_char(d.cyrq,'yyyymmdd') AS st_date   from his_bi.ods_patient_medical_record d   left join his_bi.pts_pai_visit a   on (a.patient_id =d.bah  and a.visit_id =d.zycs)  inner join (select inpati_id,max(hp_basic_business_id) as hp_basic_business_id                 from his_bi.emr_mrms_hp_basic_business               where reportcard_type is null                group by inpati_id) b      on a.pai_visit_id = b.inpati_id  inner join his_bi.emr_mrms_hp_datarecord c     on c.hp_basic_business_id = b.hp_basic_business_id  where d.cyrq is not null     and c.hp_datacol_config_key = 'bloodFee'    and c.datastore_name <>'0.00'    and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')    and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1;  ""]",['住院患者血液费   ']
8,his_bi,fun_dwd_D00080_d_16523,"
/***
函数名称：住院患者白蛋白制品费
    作用：统计某天住院患者白蛋白制品费（以病案首页归档数据中的费用数据为准）
  开发人：wy 2020-04-10
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00080  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_income_d
	 where key = 'D00080';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D00080';
	
  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
  select 'D00080',
				 to_number(c.datastore_name,'9999999999.9999'),/*9999999999.9999 表示14位长度，其中4个是小数位*/
				 d.bah as patient_id,
				 d.zycs as visit_id,
				 a.pai_visit_id,
				 now(),
				 '住院患者白蛋白制品费',
			  to_char(d.cyrq,'yyyymmdd') AS st_date
   from his_bi.ods_patient_medical_record d
  left join his_bi.pts_pai_visit a
  on (d.bah =a.patient_id and a.visit_id =d.zycs)
  inner join (select inpati_id,max(hp_basic_business_id) as hp_basic_business_id 
                from his_bi.emr_mrms_hp_basic_business
               where reportcard_type is null 
               group by inpati_id) b 
     on a.pai_visit_id = b.inpati_id
  inner join his_bi.emr_mrms_hp_datarecord c
     on c.hp_basic_business_id = b.hp_basic_business_id
  where d.cyrq is not null 
    and c.hp_datacol_config_key = 'aLBFee'
    and c.datastore_name <>'0.00'
    and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
    and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00080'],"[""delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D00080';   INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,                    remark,st_date)   select 'D00080',     to_number(c.datastore_name,'9999999999.9999'),/*9999999999.9999 表示14位长度，其中4个是小数位*/     d.bah as patient_id,     d.zycs as visit_id,     a.pai_visit_id,     now(),     '住院患者白蛋白制品费',     to_char(d.cyrq,'yyyymmdd') AS st_date   from his_bi.ods_patient_medical_record d  left join his_bi.pts_pai_visit a  on (d.bah =a.patient_id and a.visit_id =d.zycs)  inner join (select inpati_id,max(hp_basic_business_id) as hp_basic_business_id                 from his_bi.emr_mrms_hp_basic_business               where reportcard_type is null                group by inpati_id) b      on a.pai_visit_id = b.inpati_id  inner join his_bi.emr_mrms_hp_datarecord c     on c.hp_basic_business_id = b.hp_basic_business_id  where d.cyrq is not null     and c.hp_datacol_config_key = 'aLBFee'    and c.datastore_name <>'0.00'    and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')    and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1;  ""]",['住院患者白蛋白制品费   ']
9,his_bi,fun_dwd_D00081_d_16525,"
/***
函数名称：住院患者球蛋白制品费
    作用：统计某天住院患者球蛋白制品费（以病案首页归档数据中的费用数据为准）
  开发人：wy 2020-04-10
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00081  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_income_d
	 where key = 'D00081';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D00081';
	
  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
  select 'D00081',
				 to_number(c.datastore_name,'9999999999.9999'),/*9999999999.9999 表示14位长度，其中4个是小数位*/
				 d.bah as patient_id,
				 d.zycs as visit_id,
				 a.pai_visit_id,
				 now(),
				 '住院患者球蛋白制品费',
			  to_char(d.cyrq,'yyyymmdd') AS st_date
   from his_bi.ods_patient_medical_record d
    left join his_bi.pts_pai_visit a
    on (d.bah =a.patient_id and d.zycs =a.visit_id )
  inner join (select inpati_id,max(hp_basic_business_id) as hp_basic_business_id 
                from his_bi.emr_mrms_hp_basic_business
               where reportcard_type is null 
               group by inpati_id) b 
     on a.pai_visit_id = b.inpati_id
  inner join his_bi.emr_mrms_hp_datarecord c
     on c.hp_basic_business_id = b.hp_basic_business_id
  where d.cyrq is not null 
    and c.hp_datacol_config_key = 'gLBFee'
    and c.datastore_name <>'0.00'
    and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
    and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00081'],"[""delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D00081';   INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,                    remark,st_date)   select 'D00081',     to_number(c.datastore_name,'9999999999.9999'),/*9999999999.9999 表示14位长度，其中4个是小数位*/     d.bah as patient_id,     d.zycs as visit_id,     a.pai_visit_id,     now(),     '住院患者球蛋白制品费',     to_char(d.cyrq,'yyyymmdd') AS st_date   from his_bi.ods_patient_medical_record d    left join his_bi.pts_pai_visit a    on (d.bah =a.patient_id and d.zycs =a.visit_id )  inner join (select inpati_id,max(hp_basic_business_id) as hp_basic_business_id                 from his_bi.emr_mrms_hp_basic_business               where reportcard_type is null                group by inpati_id) b      on a.pai_visit_id = b.inpati_id  inner join his_bi.emr_mrms_hp_datarecord c     on c.hp_basic_business_id = b.hp_basic_business_id  where d.cyrq is not null     and c.hp_datacol_config_key = 'gLBFee'    and c.datastore_name <>'0.00'    and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')    and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1;  ""]",['住院患者球蛋白制品费   ']
10,his_bi,fun_dwd_D00082_d_16527,"
/***
函数名称：住院患者凝血因子类制品费
    作用：统计某天住院患者凝血因子类制品费（以病案首页归档数据中的费用数据为准）
  开发人：wy 2020-04-10
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00082  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_income_d
	 where key = 'D00082';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D00082';
	
  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
  select 'D00082',
				 to_number(c.datastore_name,'9999999999.9999'),/*9999999999.9999 表示14位长度，其中4个是小数位*/
				 d.bah as patient_id,
				 d.zycs as visit_id,
				 a.pai_visit_id,
				 now(),
				 '住院患者凝血因子类制品费',
			  to_char(d.cyrq ,'yyyymmdd') AS st_date
   from his_bi.ods_patient_medical_record d 
    left join his_bi.pts_pai_visit a
    on (a.patient_id =d.bah  and a.visit_id =d.zycs)
  inner join (select inpati_id,max(hp_basic_business_id) as hp_basic_business_id 
                from his_bi.emr_mrms_hp_basic_business
               where reportcard_type is null 
               group by inpati_id) b 
     on a.pai_visit_id = b.inpati_id
  inner join his_bi.emr_mrms_hp_datarecord c
     on c.hp_basic_business_id = b.hp_basic_business_id
  where d.cyrq  is not null 
    and c.hp_datacol_config_key = 'coagulationFee'
    and c.datastore_name <>'0.00'
    and d.cyrq  >= to_date(c_daylist.day_id,'yyyyMMdd')
    and d.cyrq  <  to_date(c_daylist.day_id,'yyyyMMdd')+1;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00082'],"[""delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D00082';   INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,                    remark,st_date)   select 'D00082',     to_number(c.datastore_name,'9999999999.9999'),/*9999999999.9999 表示14位长度，其中4个是小数位*/     d.bah as patient_id,     d.zycs as visit_id,     a.pai_visit_id,     now(),     '住院患者凝血因子类制品费',     to_char(d.cyrq ,'yyyymmdd') AS st_date   from his_bi.ods_patient_medical_record d     left join his_bi.pts_pai_visit a    on (a.patient_id =d.bah  and a.visit_id =d.zycs)  inner join (select inpati_id,max(hp_basic_business_id) as hp_basic_business_id                 from his_bi.emr_mrms_hp_basic_business               where reportcard_type is null                group by inpati_id) b      on a.pai_visit_id = b.inpati_id  inner join his_bi.emr_mrms_hp_datarecord c     on c.hp_basic_business_id = b.hp_basic_business_id  where d.cyrq  is not null     and c.hp_datacol_config_key = 'coagulationFee'    and c.datastore_name <>'0.00'    and d.cyrq  >= to_date(c_daylist.day_id,'yyyyMMdd')    and d.cyrq  <  to_date(c_daylist.day_id,'yyyyMMdd')+1;  ""]",['住院患者凝血因子类制品费   ']
11,his_bi,fun_dwd_D00083_d_16529,"
/***
函数名称：住院患者细胞因子类制品费
    作用：统计某天住院患者细胞因子类制品费（以病案首页归档数据中的费用数据为准）
  开发人：wy 2020-04-10
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00083  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_income_d
	 where key = 'D00083';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D00083';
	
  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
  select 'D00083',
				 to_number(c.datastore_name,'9999999999.9999'),/*9999999999.9999 表示14位长度，其中4个是小数位*/
				 d.bah as patient_id,
				 d.zycs as visit_id,
				 a.pai_visit_id,
				 now(),
				 '住院患者细胞因子类制品费',
			  to_char(d.cyrq,'yyyymmdd') AS st_date
   from his_bi.ods_patient_medical_record d
   left join his_bi.pts_pai_visit a
  on (a.patient_id =d.bah  and a.visit_id =d.zycs)
  inner join (select inpati_id,max(hp_basic_business_id) as hp_basic_business_id 
                from his_bi.emr_mrms_hp_basic_business
               where reportcard_type is null 
               group by inpati_id) b 
     on a.pai_visit_id = b.inpati_id
  inner join his_bi.emr_mrms_hp_datarecord c
     on c.hp_basic_business_id = b.hp_basic_business_id
  where d.cyrq is not null 
    and c.hp_datacol_config_key = 'rBCFee'
    and c.datastore_name <>'0.00'
    and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
    and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00083'],"[""delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D00083';   INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,                    remark,st_date)   select 'D00083',     to_number(c.datastore_name,'9999999999.9999'),/*9999999999.9999 表示14位长度，其中4个是小数位*/     d.bah as patient_id,     d.zycs as visit_id,     a.pai_visit_id,     now(),     '住院患者细胞因子类制品费',     to_char(d.cyrq,'yyyymmdd') AS st_date   from his_bi.ods_patient_medical_record d   left join his_bi.pts_pai_visit a  on (a.patient_id =d.bah  and a.visit_id =d.zycs)  inner join (select inpati_id,max(hp_basic_business_id) as hp_basic_business_id                 from his_bi.emr_mrms_hp_basic_business               where reportcard_type is null                group by inpati_id) b      on a.pai_visit_id = b.inpati_id  inner join his_bi.emr_mrms_hp_datarecord c     on c.hp_basic_business_id = b.hp_basic_business_id  where d.cyrq is not null     and c.hp_datacol_config_key = 'rBCFee'    and c.datastore_name <>'0.00'    and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')    and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1;  ""]",['住院患者细胞因子类制品费   ']
12,his_bi,fun_dwd_D00084_d_16531,"
/***
函数名称：住院患者检查用一次性医用材料费
    作用：统计某天住院患者检查用一次性医用材料费（以病案首页归档数据中的费用数据为准）
  开发人：wy 2020-04-10
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00084  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_income_d
	 where key = 'D00084';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D00084';
	
  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
   select 'D00084',
				 to_number(c.datastore_name,'9999999999.9999'),/*9999999999.9999 表示14位长度，其中4个是小数位*/
				 d.bah as patient_id,
				 d.zycs as visit_id,
				 a.pai_visit_id,
				 now(),
				 '住院患者检查用一次性医用材料费',
			  to_char(d.cyrq ,'yyyymmdd') AS st_date
     from his_bi.ods_patient_medical_record d
   left join his_bi.pts_pai_visit a
  on (a.patient_id =d.bah  and a.visit_id =d.zycs)
  inner join (select inpati_id,max(hp_basic_business_id) as hp_basic_business_id 
                from his_bi.emr_mrms_hp_basic_business
               where reportcard_type is null 
               group by inpati_id) b 
     on a.pai_visit_id = b.inpati_id
  inner join his_bi.emr_mrms_hp_datarecord c
     on c.hp_basic_business_id = b.hp_basic_business_id
  where a.discharge_dept_date is not null 
    and c.hp_datacol_config_key = 'labSuppliesFee'
    and c.datastore_name <>'0.00'
    and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
    and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00084'],"[""delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D00084';   INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,                    remark,st_date)    select 'D00084',     to_number(c.datastore_name,'9999999999.9999'),/*9999999999.9999 表示14位长度，其中4个是小数位*/     d.bah as patient_id,     d.zycs as visit_id,     a.pai_visit_id,     now(),     '住院患者检查用一次性医用材料费',     to_char(d.cyrq ,'yyyymmdd') AS st_date     from his_bi.ods_patient_medical_record d   left join his_bi.pts_pai_visit a  on (a.patient_id =d.bah  and a.visit_id =d.zycs)  inner join (select inpati_id,max(hp_basic_business_id) as hp_basic_business_id                 from his_bi.emr_mrms_hp_basic_business               where reportcard_type is null                group by inpati_id) b      on a.pai_visit_id = b.inpati_id  inner join his_bi.emr_mrms_hp_datarecord c     on c.hp_basic_business_id = b.hp_basic_business_id  where a.discharge_dept_date is not null     and c.hp_datacol_config_key = 'labSuppliesFee'    and c.datastore_name <>'0.00'    and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')    and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1;  ""]",['住院患者检查用一次性医用材料费   ']
13,his_bi,fun_dwd_D00085_d_16533,"
/***
函数名称：住院患者治疗用一次性医用材料费
    作用：统计某天住院患者治疗用一次性医用材料费（以病案首页归档数据中的费用数据为准）
  开发人：wy 2020-04-10
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00085  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_income_d
	 where key = 'D00085';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D00085';
	
  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
  select 'D00085',
				 to_number(c.datastore_name,'9999999999.9999'),/*9999999999.9999 表示14位长度，其中4个是小数位*/
				 d.bah as patient_id,
                 d.zycs as visit_id,
				 a.pai_visit_id,
				 now(),
				 '住院患者治疗用一次性医用材料费',
			  to_char(d.cyrq,'yyyymmdd') AS st_date
     from his_bi.ods_patient_medical_record d
   left join his_bi.pts_pai_visit a
  on (a.patient_id =d.bah  and a.visit_id =d.zycs)
  inner join (select inpati_id,max(hp_basic_business_id) as hp_basic_business_id 
                from his_bi.emr_mrms_hp_basic_business
               where reportcard_type is null 
               group by inpati_id) b 
     on a.pai_visit_id = b.inpati_id
  inner join his_bi.emr_mrms_hp_datarecord c
     on c.hp_basic_business_id = b.hp_basic_business_id
  where d.cyrq is not null 
    and c.hp_datacol_config_key = 'treatSuppliesFee'
    and c.datastore_name <>'0.00'
    and  d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
    and  d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00085'],"[""delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D00085';   INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,                    remark,st_date)   select 'D00085',     to_number(c.datastore_name,'9999999999.9999'),/*9999999999.9999 表示14位长度，其中4个是小数位*/     d.bah as patient_id,                 d.zycs as visit_id,     a.pai_visit_id,     now(),     '住院患者治疗用一次性医用材料费',     to_char(d.cyrq,'yyyymmdd') AS st_date     from his_bi.ods_patient_medical_record d   left join his_bi.pts_pai_visit a  on (a.patient_id =d.bah  and a.visit_id =d.zycs)  inner join (select inpati_id,max(hp_basic_business_id) as hp_basic_business_id                 from his_bi.emr_mrms_hp_basic_business               where reportcard_type is null                group by inpati_id) b      on a.pai_visit_id = b.inpati_id  inner join his_bi.emr_mrms_hp_datarecord c     on c.hp_basic_business_id = b.hp_basic_business_id  where d.cyrq is not null     and c.hp_datacol_config_key = 'treatSuppliesFee'    and c.datastore_name <>'0.00'    and  d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')    and  d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1;  ""]",['住院患者治疗用一次性医用材料费   ']
14,his_bi,fun_dwd_D00086_d_16535,"
/***
函数名称：住院患者手术用一次性医用材料费
    作用：统计某天住院患者手术用一次性医用材料费（以病案首页归档数据中的费用数据为准）
  开发人：wy 2020-04-10
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00086  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_income_d
	 where key = 'D00086';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D00086';
	
  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
  select 'D00086',
				 to_number(c.datastore_name,'9999999999.9999'),/*9999999999.9999 表示14位长度，其中4个是小数位*/
				 d.bah as patient_id,
                 d.zycs as visit_id,
				 a.pai_visit_id,
				 now(),
				 '住院患者手术用一次性医用材料费',
			  to_char(d.cyrq,'yyyymmdd') AS st_date
   from his_bi.ods_patient_medical_record d
   left join his_bi.pts_pai_visit a
  on (a.patient_id =d.bah  and a.visit_id =d.zycs)
  inner join (select inpati_id,max(hp_basic_business_id) as hp_basic_business_id 
                from his_bi.emr_mrms_hp_basic_business
               where reportcard_type is null 
               group by inpati_id) b 
     on a.pai_visit_id = b.inpati_id
  inner join his_bi.emr_mrms_hp_datarecord c
     on c.hp_basic_business_id = b.hp_basic_business_id
  where d.cyrq is not null 
    and c.hp_datacol_config_key = 'surgerySuppliesFee'
    and c.datastore_name <>'0.00'
    and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
    and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00086'],"[""delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D00086';   INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,                    remark,st_date)   select 'D00086',     to_number(c.datastore_name,'9999999999.9999'),/*9999999999.9999 表示14位长度，其中4个是小数位*/     d.bah as patient_id,                 d.zycs as visit_id,     a.pai_visit_id,     now(),     '住院患者手术用一次性医用材料费',     to_char(d.cyrq,'yyyymmdd') AS st_date   from his_bi.ods_patient_medical_record d   left join his_bi.pts_pai_visit a  on (a.patient_id =d.bah  and a.visit_id =d.zycs)  inner join (select inpati_id,max(hp_basic_business_id) as hp_basic_business_id                 from his_bi.emr_mrms_hp_basic_business               where reportcard_type is null                group by inpati_id) b      on a.pai_visit_id = b.inpati_id  inner join his_bi.emr_mrms_hp_datarecord c     on c.hp_basic_business_id = b.hp_basic_business_id  where d.cyrq is not null     and c.hp_datacol_config_key = 'surgerySuppliesFee'    and c.datastore_name <>'0.00'    and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')    and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1;  ""]",['住院患者手术用一次性医用材料费   ']
15,his_bi,fun_dwd_D00087_d_16537,"
/***
函数名称：住院患者其他费用
    作用：统计某天住院患者其他费用（以病案首页归档数据中的费用数据为准）
  开发人：wy 2020-04-10
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00087  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_income_d
	 where key = 'D00087';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D00087';
	
  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
  select 'D00087',
				 to_number(c.datastore_name,'9999999999.9999'),/*9999999999.9999 表示14位长度，其中4个是小数位*/
				 d.bah as patient_id,
                 d.zycs as visit_id,
				 a.pai_visit_id,
				 now(),
				 '住院患者其他费用',
			  to_char(d.cyrq,'yyyymmdd') AS st_date
  from his_bi.ods_patient_medical_record d
   left join his_bi.pts_pai_visit a
  on (a.patient_id =d.bah  and a.visit_id =d.zycs)
  inner join (select inpati_id,max(hp_basic_business_id) as hp_basic_business_id 
                from his_bi.emr_mrms_hp_basic_business
               where reportcard_type is null 
               group by inpati_id) b 
     on a.pai_visit_id = b.inpati_id
  inner join his_bi.emr_mrms_hp_datarecord c
     on c.hp_basic_business_id = b.hp_basic_business_id
  where d.cyrq is not null 
    and c.hp_datacol_config_key = 'otherFee'
     and c.datastore_name <>'0.00'
    and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
    and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00087'],"[""delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D00087';   INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,                    remark,st_date)   select 'D00087',     to_number(c.datastore_name,'9999999999.9999'),/*9999999999.9999 表示14位长度，其中4个是小数位*/     d.bah as patient_id,                 d.zycs as visit_id,     a.pai_visit_id,     now(),     '住院患者其他费用',     to_char(d.cyrq,'yyyymmdd') AS st_date  from his_bi.ods_patient_medical_record d   left join his_bi.pts_pai_visit a  on (a.patient_id =d.bah  and a.visit_id =d.zycs)  inner join (select inpati_id,max(hp_basic_business_id) as hp_basic_business_id                 from his_bi.emr_mrms_hp_basic_business               where reportcard_type is null                group by inpati_id) b      on a.pai_visit_id = b.inpati_id  inner join his_bi.emr_mrms_hp_datarecord c     on c.hp_basic_business_id = b.hp_basic_business_id  where d.cyrq is not null     and c.hp_datacol_config_key = 'otherFee'     and c.datastore_name <>'0.00'    and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')    and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1;  ""]",['住院患者其他费用   ']
16,his_bi,fun_dwd_D00114_d_16579,"
/***
函数名称：住院患者妊娠合并糖尿病打标
    作用：统计某天住院患者中属于妊娠合并糖尿病的人
  开发人：wy 2020-04-14
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00114  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

    
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00114';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00114';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
  select 'D00114',
				 1, 
				 d.bah as patient_id,
				 d.zycs as visit_id,
				 a.pai_visit_id,
				 now(),
				 '妊娠合并糖尿病',
			  to_char(d.cyrq,'yyyymmdd') as st_date
	 from his_bi.ods_patient_medical_record d
	 left join his_bi.pts_pai_visit a
	 on (a.patient_id =d.bah and a.visit_id =d.zycs)
	inner join his_bi.ods_patient_diag_info b 
		 on d.brxh = b.brxh 
		and b.main_diag = '1'   --主诊断
	where  exists(select 1 from his_bi.dim_diag_oper_info t
							  where t.icd_code = b.diagdiseasecode 
							        and t.standard_resource = '甘肃妇幼重疾重返指标'
									and t.type_name = '重点疾病'
									and t.kpi_alias = '妊娠合并糖尿病'
									and t.icd_type = 'ICD10'
									and t.compatible_type = '0' --表示指标本身标准编码
									)
		and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
		and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1; 
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00114'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00114';   INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,                    remark,st_date)   select 'D00114',     1,      d.bah as patient_id,     d.zycs as visit_id,     a.pai_visit_id,     now(),     '妊娠合并糖尿病',     to_char(d.cyrq,'yyyymmdd') as st_date  from his_bi.ods_patient_medical_record d  left join his_bi.pts_pai_visit a  on (a.patient_id =d.bah and a.visit_id =d.zycs) inner join his_bi.ods_patient_diag_info b    on d.brxh = b.brxh   and b.main_diag = '1'   --主诊断 where  exists(select 1 from his_bi.dim_diag_oper_info t         where t.icd_code = b.diagdiseasecode                and t.standard_resource = '甘肃妇幼重疾重返指标'         and t.type_name = '重点疾病'         and t.kpi_alias = '妊娠合并糖尿病'         and t.icd_type = 'ICD10'         and t.compatible_type = '0' --表示指标本身标准编码         )  and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')  and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1;   ""]",['住院患者妊娠合并糖尿病打标   ']
17,his_bi,decode_16413,"
declare
 -- 获取数组长度(即入参个数)
 v_len integer := array_length(p_decode_list, 1);
 -- 声明存放返回值的变量
 v_ret text;
begin
 /*
 * 功能说明:模拟Oracle中的DECODE功能(字符串处理, 其它格式可以自行转换返回值)
 * 参数说明:格式同Oracle相同,至少三个参数
 * 实现原理: 1、VARIADIC 允许变参; 2、Oracle中的DECODE是拿第一个数依次和之后的偶数位值进行比较,相同则取偶数位+1的数值,否则取最后一位值(最后一位为偶数为,否则为null)
 */
 
 -- 同Oracle相同当参数不足三个抛出异常
 if v_len >= 3 then
  -- Oracle中的DECODE是拿第一个数依次和之后的偶数位值进行比较,相同则取偶数位+1的数值
  for i in 2..(v_len - 1) loop
   v_ret := null;
   if mod(i, 2) = 0 then
    if p_decode_list[1] = p_decode_list[i] then
     v_ret := p_decode_list[i+1];
    elsif p_decode_list[1] <> p_decode_list[i] then
     if v_len = i + 2 and v_len > 3 then
      v_ret := p_decode_list[v_len];
     end if;
    end if;
   end if;
   exit when v_ret is not null;
  end loop;
 else
  raise exception 'UPG-00938: not enough args for function.';
 end if;
 return v_ret;
end;
",[],[],[]
18,his_bi,fun_dw_gs_institutemonitor_plus_16414,"
/***
函数名称：机构监测数据竖表
    作用：机构监测数据转换成竖表,更新数据
  开发人：sdd 2020-07-13
命名规范：甘肃_机构监测数据
业务解释：
    入参：v_year 年份   按调查年份更新或新增数据
		
		说明：
		
***/
DECLARE
  c_kpilist   record;
	error  int4;
	
	BEGIN
	error:=0;
/*
		--校验原表数据是否准确
		SELECT count(*)
		into error
		from his_bi.gs_institutemonitor t
		where t.调查年度<>v_year;
		
		IF error<>0 then 	
   RETURN '存在年份不一致数据';
	 end if;
	 */
	 
	-- 删除该年度调查数据 
    delete from his_bi.gs_institutemonitor_plus  where 调查年度=v_year;		
    delete from his_bi.dim_stitute_info  where 调查年度=v_year;
		

	-- 按指标循环插入该年度调查数据
  for c_kpilist in (
												select	B.attname AS 字段名
												from	pg_class A
												left join pg_attribute B on
													A.oid = B.attrelid AND B.attnum > 0
												where A.relname='gs_institutemonitor'
												and B.attname not in('机构名称（系统名）','调查年度','机构级别')
	 )
  loop 
	
		execute '
		insert into his_bi.gs_institutemonitor_plus
		SELECT t.""机构名称（系统名）"",
		t.调查年度,
		'''||c_kpilist.字段名||''',
		t.'||'""'||''||c_kpilist.字段名||''||'""'||',
		t.机构级别
		from his_bi.gs_institutemonitor t
		where t.调查年度='''||v_year||'''
		' ;			 
   end loop;
	 /*
	 -- 更新机构信息表
	 INSERT his_bi.dim_stitute_info
	 SELECT ""机构名称（系统名）"",
	 ""行政区划"",
	 ""机构类型"",
	 ""机构级别"",
	 ""调查年度""
	  from his_bi.gs_institutemonitor
		where 调查年度=v_year;*/
	 	 	 
  -- 健康教育材料指标去除逗号，方便统计
	 UPDATE his_bi.gs_institutemonitor_plus SET 指标值=REPLACE(指标值,',','') WHERE 指标名称='健康教育材料' and 调查年度=v_year;
	 
	 --	更新卫技人员是否达标数据
 	 INSERT into his_bi.gs_institutemonitor_plus
	 SELECT ""机构名称"",
	 ""调查年度"",
	 '卫技人员数量是否达标',
	 case when ""min""(""指标值""::numeric)/""max""(""指标值""::numeric)>=0.75 and 机构级别='省级' or ""min""(""指标值""::numeric)/""max""(""指标值""::numeric)>=0.8 then 1 else 0 end as 指标值,
	 机构级别
	 from his_bi.gs_institutemonitor_plus
	 WHERE 指标名称 in('职工总数','卫生技术人员')
	 and 调查年度=v_year
	 group by ""机构名称"",""调查年度"",机构级别;
	 
	 -- 更新盈亏数据
	 INSERT into his_bi.gs_institutemonitor_plus
	 SELECT t.""机构名称"",
	 t.""调查年度"",
	 '盈亏',
	 t.""指标值""::numeric-t1.""指标值""::numeric as 指标值,
	 t.机构级别
	 from his_bi.gs_institutemonitor_plus t
	 left join his_bi.gs_institutemonitor_plus t1
	 on  t1.""机构名称""=t.""机构名称""
	 and t1.""调查年度""=t.""调查年度""
	 and t1.机构级别=t.机构级别
	 and t1.指标名称='总支出'
	 WHERE t.指标名称='总收入'
	 and t.调查年度=v_year;
	 
	-- delete from his_bi.gs_institutemonitor;
	 
   RETURN 'SUCCESS';  
END;
  ",[],"['delete from his_bi.gs_institutemonitor_plus  where 调查年度=v_year;  \r    delete from his_bi.dim_stitute_info  where 调查年度=v_year;\r  \r\r -- 按指标循环插入该年度调查数据\r  for c_kpilist in (\r            select B.attname AS 字段名\r            from pg_class A\r            left join pg_attribute B on\r             A.oid = B.attrelid AND B.attnum > 0\r            where A.relname=\'gs_institutemonitor\'\r            and B.attname not in(\'机构名称（系统名）\',\'调查年度\',\'机构级别\')\r  )\r  loop \r \r  execute \'\r  insert into his_bi.gs_institutemonitor_plus\r  SELECT t.""机构名称（系统名）"",\r  t.调查年度,\r  \'\'\'||c_kpilist.字段名||\'\'\',\r  t.\'||\'""\'||\'\'||c_kpilist.字段名||\'\'||\'""\'||\',\r  t.机构级别\r  from his_bi.gs_institutemonitor t\r  where t.调查年度=\'\'\'||v_year||\'\'\'\r  \' ;    \r  ']",['机构监测数据竖表\r   ']
19,his_bi,fun_dw_inp_drgs_patient_m_16415,"
/***
函数名称：重疾信息表
    作用：重疾信息表
  开发人：leslie 2020年6月17日 
				  modify by liuf 20200619 补充了单病种病种和剖宫产术种
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00236根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
  c_monthlist   record;
  o_start_month varchar;
  o_end_month   varchar;
  i_start_month varchar;
  i_end_month   varchar;
  i_count       int4;
	tmp_file 			varchar;  --COPY方案临时文件名：该文件将被保存在所连接的服务器的文件目录。
BEGIN
	/*
	  COPY方案临时文件名。
		注意：
		1. 该文件将被保存在所连接的服务器的文件目录中，每一个函数必须使用自定义能够与其他函数区分的文件名
		2. 方便维护，历史文件都保存到'/home/postgres/'目录中。
		TODO : 后续规划统一临时文件目录，KETTLE调度完成之后，需要删除对应的临时文件（*需要想办法在每台服务器上统一创建临时目录）
	*/
	
  /*如果指标没有历史指标数据，甘肃默认以202001开始计算，结束月份以当前月份往前推1个月*/
  select count(1),to_char((date_trunc('month', now()) + interval '-1 month'),'yyyymm')
	       into i_count,i_end_month
    from his_bi.dw_inp_drgs_patient_m;
   
  if(i_count = 0)
    then 
      i_start_month := '202001';
      --raise notice '0 i_start_month is: %', i_start_month;
  else if(i_count > 0)
    then
      i_start_month := i_end_month;
      --raise notice '1 i_start_month is: %', i_start_month;
  end if;
  end if;
    
  if(length(trim(v_start_month)) = 0 and length(trim(v_end_month)) = 0)
  /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前月份前1个月为截止月份 */
    then 
      o_start_month := i_start_month;
      o_end_month := i_end_month;
      --raise notice '2 o_start_month is: %', o_start_month;
      --raise notice '2 o_end_month is: %', o_end_month;
  else if (length(trim(v_start_month)) <> 0 and length(trim(v_end_month)) <> 0)
  /*PG function 如果参入任何参数，那么以实际入参为准*/
    then 
      o_start_month := v_start_month;
      o_end_month := v_end_month;
      --raise notice '3 o_start_month is: %', o_start_month;
      --raise notice '3 o_end_month is: %', o_end_month;
  end if;
  end if;
	  for c_monthlist in (select distinct month_id from his_bi.dim_date_info where month_id >= o_start_month and month_id <= o_end_month order by month_id)
    loop
    --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
    
    delete from his_bi.dw_inp_drgs_patient_m where month_id = c_monthlist.month_id;
    
  insert into his_bi.dw_inp_drgs_patient_m
select distinct 
c_monthlist.month_id as month_id,
b.brxh,
a.patient_id,
a.pai_visit_id,
a.visit_id,
b.brxm,
cast(split_part(cast(age(CURRENT_DATE,b.csrq) as text),' ',1) as numeric) as pati_age,
split_part(cast(age(CURRENT_DATE,b.csrq) as text),' ',2) as age_flag,
cast(b.xb as numeric) as sex,
t1.hospital_area,
t1.admission_dept, ---入院科室编码
t6.name as ryks,
t1.discharge_dept, --- 出院科室编码
t7.name as cyks,
b.ryrq,  --入院时间
b.cyrq, ---出院时间
t8.diagdiseasecode,
t8.diagdiseasename,
b.zyts,---住院天数
a.key, ---重点疾病名称
t2.value as return_drgs_1,-----重点疾病当天重返标志(预留)
t3.value as return_drgs_2to15,--重点疾病2-15日内重返标志(预留)
t4.value as return_drgs_16to31,---重点疾病16-31日内重返标志(预留)
t5.value as return_drgs_1to31,----1-31天重返（国家标准）
t10.value as return_z_drgs_7to15,
t11.value as return_z_drgs_16to31,
case when t12.key = 'D00207' then 1 when t12.key = 'D00208' then 2 when t12.key = 'D00209' then 3 end as is_exzl,
cast(b.zgqk as numeric) as zgqk,
b.lyfs, ---离院方式，1：医嘱离院，2：医嘱转院，3：医嘱转社区卫生服务机构，4：非医嘱离院，5：死亡，9：其他
t9.total_fees,--总费用
t9.pham_fees, --药品费用
t9.material_fees, --材料费用
t9.cur_fees, --治疗费用
t9.oper_fees, --手术费用
t9.other_fees, --其他费用
t9.western_fees, --西药费用
t9.herb_fees, --草药费用
t9.anti_pham_fees, --抗菌药物费用
now() as insert_time, --插入时间
t1.team_id, --诊疗组ID
tm.team_name, --诊疗组名称
t1.doctor_chief as doctor_chief, --主任医生编码(部分直接存储为姓名)
us1.people_name as doctor_chief_name, --主任医生编码
t1.doctor_attending as doctor_attending, --主治医生编码(部分直接存储为姓名)
us2.people_name as doctor_attending_name, --主治医生编码
b.md5 --md5码，访问患者病历时候必传参数
from his_bi.dwd_inp_medical_d a
left join his_bi.pts_pai_visit t1 on (a.pai_visit_id = t1.pai_visit_id)
left join his_bi.ods_patient_medical_record b on (a.patient_id =b.bah and a.visit_id = b.zycs)
left join his_bi.dwd_inp_medical_d t2 on (a.pai_visit_id = t2.pai_visit_id and t2.key = 'D00100')
left join his_bi.dwd_inp_medical_d t3 on (a.pai_visit_id = t3.pai_visit_id and t3.key = 'D00101')
left join his_bi.dwd_inp_medical_d t4 on (a.pai_visit_id = t4.pai_visit_id and t4.key = 'D00102')
left join his_bi.dwd_inp_medical_d t5 on (a.pai_visit_id = t5.pai_visit_id and t5.key = 'D00103')
left join his_bi.dwd_inp_medical_d t10 on (a.pai_visit_id = t10.pai_visit_id and t10.key = 'D00215')
left join his_bi.dwd_inp_medical_d t11 on (a.pai_visit_id = t11.pai_visit_id and t11.key = 'D00216')
left join his_bi.dwd_inp_medical_d t12 on (a.pai_visit_id = t12.pai_visit_id and t12.key in ('D00207','D00208','D00209'))
left join his_bi.bds_bds_organization t6 on (t1.admission_dept = t6.code )
left join his_bi.bds_bds_organization t7 on (t1.discharge_dept = t7.code )
left join his_bi.ods_patient_diag_info t8 on (a.patient_id = t8.patient_id and a.visit_id = t8.visit_id and t8.main_diag='1')
left join his_bi.pts_pts_basic_org_medi_team tm on t1.team_id = tm.team_id
left join
(
select 
td.pai_visit_id,
sum(case when td.key in ('D05000') then td.value end) as total_fees,---总费用
sum(case when td.key in ('D05003') then td.value end) as pham_fees, --药品费用
sum(case when td.key in ('D05002') then td.value end) as material_fees,--材料费用
sum(case when td.key in ('D05006') then td.value end) as cur_fees,--治疗费用
sum(case when td.key in ('D05019') then td.value end) as oper_fees,--手术费用
sum(case when td.key in ('D05022') then td.value end) as other_fees,--其他费用
sum(case when td.key in ('D05008') then td.value end) as western_fees,--西药费用
sum(case when td.key in ('D05010') then td.value end) as herb_fees,--草药费用
sum(case when td.key in ('D05011') then td.value end) as anti_pham_fees--抗菌药物费用
from his_bi.dwd_inp_income_d td
inner join his_bi.dim_date_info d1 on td.st_date = d1.day_id and d1.month_id = c_monthlist.month_id
where td.key in ('D05000','D05003','D05002','D05006','D05019','D05010','D05008','D05022','D05011')
group by td.pai_visit_id
)t9 on a.pai_visit_id = t9.pai_visit_id
left join his_bi.uum_uum_user us1 on t1.doctor_chief = us1.user_name
left join his_bi.uum_uum_user us2 on t1.doctor_attending = us2.user_name
where a.key in ('D00104','D00105','D00106','D00107','D00108','D00109','D00110','D00111','D00112','D00113','D00114','D00115','D00116','D00117','D00118','D00119','D00120','D00121','D00122','D00123','D00124','D00125','D00126','D00127','D00128','D00208','D00210','D00224','D00225','D00173','D00183')
and t1.discharge_dept_date >= to_date(c_monthlist.month_id,'yyyymm')
and t1.discharge_dept_date <  to_date(c_monthlist.month_id,'yyyymm') + interval '1 month';
   end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00216'],"[""delete from his_bi.dw_inp_drgs_patient_m where month_id = c_monthlist.month_id;\r    \r  insert into his_bi.dw_inp_drgs_patient_m\rselect distinct \rc_monthlist.month_id as month_id,\rb.brxh,\ra.patient_id,\ra.pai_visit_id,\ra.visit_id,\rb.brxm,\rcast(split_part(cast(age(CURRENT_DATE,b.csrq) as text),' ',1) as numeric) as pati_age,\rsplit_part(cast(age(CURRENT_DATE,b.csrq) as text),' ',2) as age_flag,\rcast(b.xb as numeric) as sex,\rt1.hospital_area,\rt1.admission_dept, ---入院科室编码\rt6.name as ryks,\rt1.discharge_dept, --- 出院科室编码\rt7.name as cyks,\rb.ryrq,  --入院时间\rb.cyrq, ---出院时间\rt8.diagdiseasecode,\rt8.diagdiseasename,\rb.zyts,---住院天数\ra.key, ---重点疾病名称\rt2.value as return_drgs_1,-----重点疾病当天重返标志(预留)\rt3.value as return_drgs_2to15,--重点疾病2-15日内重返标志(预留)\rt4.value as return_drgs_16to31,---重点疾病16-31日内重返标志(预留)\rt5.value as return_drgs_1to31,----1-31天重返（国家标准）\rt10.value as return_z_drgs_7to15,\rt11.value as return_z_drgs_16to31,\rcase when t12.key = 'D00207' then 1 when t12.key = 'D00208' then 2 when t12.key = 'D00209' then 3 end as is_exzl,\rcast(b.zgqk as numeric) as zgqk,\rb.lyfs, ---离院方式，1：医嘱离院，2：医嘱转院，3：医嘱转社区卫生服务机构，4：非医嘱离院，5：死亡，9：其他\rt9.total_fees,--总费用\rt9.pham_fees, --药品费用\rt9.material_fees, --材料费用\rt9.cur_fees, --治疗费用\rt9.oper_fees, --手术费用\rt9.other_fees, --其他费用\rt9.western_fees, --西药费用\rt9.herb_fees, --草药费用\rt9.anti_pham_fees, --抗菌药物费用\rnow() as insert_time, --插入时间\rt1.team_id, --诊疗组ID\rtm.team_name, --诊疗组名称\rt1.doctor_chief as doctor_chief, --主任医生编码(部分直接存储为姓名)\rus1.people_name as doctor_chief_name, --主任医生编码\rt1.doctor_attending as doctor_attending, --主治医生编码(部分直接存储为姓名)\rus2.people_name as doctor_attending_name, --主治医生编码\rb.md5 --md5码，访问患者病历时候必传参数\rfrom his_bi.dwd_inp_medical_d a\rleft join his_bi.pts_pai_visit t1 on (a.pai_visit_id = t1.pai_visit_id)\rleft join his_bi.ods_patient_medical_record b on (a.patient_id =b.bah and a.visit_id = b.zycs)\rleft join his_bi.dwd_inp_medical_d t2 on (a.pai_visit_id = t2.pai_visit_id and t2.key = 'D00100')\rleft join his_bi.dwd_inp_medical_d t3 on (a.pai_visit_id = t3.pai_visit_id and t3.key = 'D00101')\rleft join his_bi.dwd_inp_medical_d t4 on (a.pai_visit_id = t4.pai_visit_id and t4.key = 'D00102')\rleft join his_bi.dwd_inp_medical_d t5 on (a.pai_visit_id = t5.pai_visit_id and t5.key = 'D00103')\rleft join his_bi.dwd_inp_medical_d t10 on (a.pai_visit_id = t10.pai_visit_id and t10.key = 'D00215')\rleft join his_bi.dwd_inp_medical_d t11 on (a.pai_visit_id = t11.pai_visit_id and t11.key = 'D00216')\rleft join his_bi.dwd_inp_medical_d t12 on (a.pai_visit_id = t12.pai_visit_id and t12.key in ('D00207','D00208','D00209'))\rleft join his_bi.bds_bds_organization t6 on (t1.admission_dept = t6.code )\rleft join his_bi.bds_bds_organization t7 on (t1.discharge_dept = t7.code )\rleft join his_bi.ods_patient_diag_info t8 on (a.patient_id = t8.patient_id and a.visit_id = t8.visit_id and t8.main_diag='1')\rleft join his_bi.pts_pts_basic_org_medi_team tm on t1.team_id = tm.team_id\rleft join\r(\rselect \rtd.pai_visit_id,\rsum(case when td.key in ('D05000') then td.value end) as total_fees,---总费用\rsum(case when td.key in ('D05003') then td.value end) as pham_fees, --药品费用\rsum(case when td.key in ('D05002') then td.value end) as material_fees,--材料费用\rsum(case when td.key in ('D05006') then td.value end) as cur_fees,--治疗费用\rsum(case when td.key in ('D05019') then td.value end) as oper_fees,--手术费用\rsum(case when td.key in ('D05022') then td.value end) as other_fees,--其他费用\rsum(case when td.key in ('D05008') then td.value end) as western_fees,--西药费用\rsum(case when td.key in ('D05010') then td.value end) as herb_fees,--草药费用\rsum(case when td.key in ('D05011') then td.value end) as anti_pham_fees--抗菌药物费用\rfrom his_bi.dwd_inp_income_d td\rinner join his_bi.dim_date_info d1 on td.st_date = d1.day_id and d1.month_id = c_monthlist.month_id\rwhere td.key in ('D05000','D05003','D05002','D05006','D05019','D05010','D05008','D05022','D05011')\rgroup by td.pai_visit_id\r)t9 on a.pai_visit_id = t9.pai_visit_id\rleft join his_bi.uum_uum_user us1 on t1.doctor_chief = us1.user_name\rleft join his_bi.uum_uum_user us2 on t1.doctor_attending = us2.user_name\rwhere a.key in ('D00104','D00105','D00106','D00107','D00108','D00109','D00110','D00111','D00112','D00113','D00114','D00115','D00116','D00117','D00118','D00119','D00120','D00121','D00122','D00123','D00124','D00125','D00126','D00127','D00128','D00208','D00210','D00224','D00225','D00173','D00183')\rand t1.discharge_dept_date >= to_date(c_monthlist.month_id,'yyyymm')\rand t1.discharge_dept_date <  to_date(c_monthlist.month_id,'yyyymm') + interval '1 month';\r  ""]",['重疾信息表\r   ']
20,his_bi,fun_dw_inp_important_operation_fy_16417,"
/***
函数名称： 三级妇幼等级评审重点手术
    作用：三级妇幼等级评审重点手术
  开发人：肖斌 2020年6月16日
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00236根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
  c_monthlist   record;
  o_start_month varchar;
  o_end_month   varchar;
  i_start_month varchar;
  i_end_month   varchar;
  i_count       int4;
  tmp_file      varchar;  --COPY方案临时文件名：该文件将被保存在所连接的服务器的文件目录。
BEGIN
  /*
    COPY方案临时文件名。
    注意：
    1. 该文件将被保存在所连接的服务器的文件目录中，每一个函数必须使用自定义能够与其他函数区分的文件名
    2. 方便维护，历史文件都保存到'/home/postgres/'目录中。
    TODO : 后续规划统一临时文件目录，KETTLE调度完成之后，需要删除对应的临时文件（*需要想办法在每台服务器上统一创建临时目录）
  */
  
  /*如果指标没有历史指标数据，甘肃默认以202001开始计算，结束月份以当前月份往前推1个月*/
  select count(1),to_char((date_trunc('month', now()) + interval '-1 month'),'yyyymm')
         into i_count,i_end_month
    from his_bi.dw_inp_important_operation_fy;
   
  if(i_count = 0)
    then 
      i_start_month := '202001';
      --raise notice '0 i_start_month is: %', i_start_month;
  else if(i_count > 0)
    then
      i_start_month := i_end_month;
      --raise notice '1 i_start_month is: %', i_start_month;
  end if;
  end if;
    
  if(length(trim(v_start_month)) = 0 and length(trim(v_end_month)) = 0)
  /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前月份前1个月为截止月份 */
    then 
      o_start_month := i_start_month;
      o_end_month := i_end_month;
      --raise notice '2 o_start_month is: %', o_start_month;
      --raise notice '2 o_end_month is: %', o_end_month;
  else if (length(trim(v_start_month)) <> 0 and length(trim(v_end_month)) <> 0)
  /*PG function 如果参入任何参数，那么以实际入参为准*/
    then 
      o_start_month := v_start_month;
      o_end_month := v_end_month;
      --raise notice '3 o_start_month is: %', o_start_month;
      --raise notice '3 o_end_month is: %', o_end_month;
  end if;
  end if;
    for c_monthlist in (select distinct month_id from his_bi.dim_date_info where month_id >= o_start_month and month_id <= o_end_month order by month_id)
    loop
    --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
    
    delete from his_bi.dw_inp_important_operation_fy where month_id = c_monthlist.month_id;
    
		insert into his_bi.dw_inp_important_operation_fy
		select 
			c_monthlist.month_id as month_id,
			pd.patient_id,
			pd.visit_id,
			pd.pai_visit_id,
			to_date((pd.st_date)::text, 'yyyymmdd'::text) AS operate_date,
			substr((pd.remark)::text, 6, length((pd.remark)::text)) AS operation_name,
			sum(pd.value) AS operation_count,
			sum(pd2.value) AS ""48h_return_count"",
			sum(pd3.value) AS ""31d_return_count""
			from his_bi.dwd_inp_medical_d pd
			left join his_bi.dwd_inp_medical_d pd2 on pd2.pai_visit_id = pd.pai_visit_id and pd2.key = 'D05024' and pd.st_date = pd2.st_date
			left join his_bi.dwd_inp_medical_d pd3 on pd3.pai_visit_id = pd.pai_visit_id and pd3.key = 'D05025' and pd.st_date = pd3.st_date
			left join his_bi.dim_date_info d1 on pd.st_date = d1.day_id and d1.month_id = c_monthlist.month_id
			where pd.key in('D00192','D00193','D00194','D00195','D00196','D00197','D00198','D00199','D00200','D00201','D00202','D00203','D00204')
			 and d1.month_id = c_monthlist.month_id
			GROUP BY
			pd.patient_id,
			pd.visit_id,
			pd.pai_visit_id ,
			to_date((pd.st_date)::text, 'yyyymmdd'::text) ,
			substr((pd.remark)::text, 6, length((pd.remark)::text));
   end loop;
   RETURN 'SUCCESS';  
END;
  ",['D05025'],"['delete from his_bi.dw_inp_important_operation_fy where month_id = c_monthlist.month_id;\r    \r  insert into his_bi.dw_inp_important_operation_fy\r  select \r   c_monthlist.month_id as month_id,\r   pd.patient_id,\r   pd.visit_id,\r   pd.pai_visit_id,\r   to_date((pd.st_date)::text, \'yyyymmdd\'::text) AS operate_date,\r   substr((pd.remark)::text, 6, length((pd.remark)::text)) AS operation_name,\r   sum(pd.value) AS operation_count,\r   sum(pd2.value) AS ""48h_return_count"",\r   sum(pd3.value) AS ""31d_return_count""\r   from his_bi.dwd_inp_medical_d pd\r   left join his_bi.dwd_inp_medical_d pd2 on pd2.pai_visit_id = pd.pai_visit_id and pd2.key = \'D05024\' and pd.st_date = pd2.st_date\r   left join his_bi.dwd_inp_medical_d pd3 on pd3.pai_visit_id = pd.pai_visit_id and pd3.key = \'D05025\' and pd.st_date = pd3.st_date\r   left join his_bi.dim_date_info d1 on pd.st_date = d1.day_id and d1.month_id = c_monthlist.month_id\r   where pd.key in(\'D00192\',\'D00193\',\'D00194\',\'D00195\',\'D00196\',\'D00197\',\'D00198\',\'D00199\',\'D00200\',\'D00201\',\'D00202\',\'D00203\',\'D00204\')\r    and d1.month_id = c_monthlist.month_id\r   GROUP BY\r   pd.patient_id,\r   pd.visit_id,\r   pd.pai_visit_id ,\r   to_date((pd.st_date)::text, \'yyyymmdd\'::text) ,\r   substr((pd.remark)::text, 6, length((pd.remark)::text));\r  ']",[' 三级妇幼等级评审重点手术\r   ']
21,his_bi,fun_dw_inp_parturient_info_m_16419,"
/***
函数名称：产妇信息表（不包含多胎）
    作用：产妇患者信息表
  开发人：leslie 2020年6月16日
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
  c_monthlist   record;
  o_start_month varchar;
  o_end_month   varchar;
  i_start_month varchar;
  i_end_month   varchar;
  i_count       int4;
	tmp_file 			varchar;  --COPY方案临时文件名：该文件将被保存在所连接的服务器的文件目录。
BEGIN
	/*
	  COPY方案临时文件名。
		注意：
		1. 该文件将被保存在所连接的服务器的文件目录中，每一个函数必须使用自定义能够与其他函数区分的文件名
		2. 方便维护，历史文件都保存到'/home/postgres/'目录中。
		TODO : 后续规划统一临时文件目录，KETTLE调度完成之后，需要删除对应的临时文件（*需要想办法在每台服务器上统一创建临时目录）
	*/
	
  /*如果指标没有历史指标数据，甘肃默认以202001开始计算，结束月份以当前月份往前推1个月*/
  select count(1),to_char((date_trunc('month', now()) + interval '-1 month'),'yyyymm')
	       into i_count,i_end_month
    from his_bi.dw_inp_parturient_info_m;
   
  if(i_count = 0)
    then 
      i_start_month := '202001';
      --raise notice '0 i_start_month is: %', i_start_month;
  else if(i_count > 0)
    then
      i_start_month := i_end_month;
      --raise notice '1 i_start_month is: %', i_start_month;
  end if;
  end if;
    
  if(length(trim(v_start_month)) = 0 and length(trim(v_end_month)) = 0)
  /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前月份前1个月为截止月份 */
    then 
      o_start_month := i_start_month;
      o_end_month := i_end_month;
      --raise notice '2 o_start_month is: %', o_start_month;
      --raise notice '2 o_end_month is: %', o_end_month;
  else if (length(trim(v_start_month)) <> 0 and length(trim(v_end_month)) <> 0)
  /*PG function 如果参入任何参数，那么以实际入参为准*/
    then 
      o_start_month := v_start_month;
      o_end_month := v_end_month;
      --raise notice '3 o_start_month is: %', o_start_month;
      --raise notice '3 o_end_month is: %', o_end_month;
  end if;
  end if;
	  for c_monthlist in (select distinct month_id from his_bi.dim_date_info where month_id >= o_start_month and month_id <= o_end_month order by month_id)
    loop
    --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
    
    delete from his_bi.dw_inp_parturient_info_m where month_id = c_monthlist.month_id;
    
  insert into his_bi.dw_inp_parturient_info_m
select
t1.pai_visit_id,
t1.patient_id,
t1.visit_id,
pt.mother_name,
pt.age_string,
pt.birth_date,
pt.in_dept_date,
pt.in_dept,
max(case when t1.key='D00151' and d1.month_id=c_monthlist.month_id then t1.value else 0 end ) as is_primipara,
max(case when t1.key='D00152' and d1.month_id=c_monthlist.month_id then t1.value else 0 end ) as parity,
max(case when t1.key='D00155' and d1.month_id=c_monthlist.month_id then t1.value else 0 end ) as is_die,
max(case when t1.key='D00156' and d1.month_id=c_monthlist.month_id then t1.value else 0 end ) as postpartum_hemorrhage,
max(case when t1.key='D00159' and d1.month_id=c_monthlist.month_id then t1.value else 0 end ) as is_parturient,
max(case when t1.key='D00164' and d1.month_id=c_monthlist.month_id then t1.value else 0 end ) as is_cervical_repair,
max(case when t1.key='D00165' and d1.month_id=c_monthlist.month_id then t1.value else 0 end ) as is_placental_retention,
max(case when t1.key='D00166' and d1.month_id=c_monthlist.month_id then t1.value else 0 end ) as is_clearing_the_uterus,
max(case when t1.key='D00167' and d1.month_id=c_monthlist.month_id then t1.value else 0 end ) as is_placental_abruption_by_hand,
max(case when t1.key='D00168' and d1.month_id=c_monthlist.month_id then t1.value else 0 end ) as is_perineum_anesthesia,
max(case when t1.key='D00169' and d1.month_id=c_monthlist.month_id then t1.value else 0 end ) as is_postpartum_hemorrhage,
max(case when t1.key='D00170' and d1.month_id=c_monthlist.month_id then t1.value else 0 end ) as is_doula,
max(case when t1.key='D00171' and d1.month_id=c_monthlist.month_id then t1.value else 0 end ) as is_childbirth_in_water,
max(case when t1.key='D00172' and d1.month_id=c_monthlist.month_id then t1.value else 0 end ) as is_stillbirth,
c_monthlist.month_id as month_id
from 
his_bi.dwd_inp_quantity_d t1
left join his_bi.pts_pai_birth_reg pt on t1.pai_visit_id = pt.pai_visit_id
left join his_bi.dim_date_info d1 on t1.st_date = d1.day_id and d1.month_id = c_monthlist.month_id
where 1=1
 and t1.key in('D00151','D00152','D00155','D00156',
'D00159','D00164','D00165','D00166',
'D00167','D00168','D00169','D00170','D00171','D00172')
 and d1.month_id = c_monthlist.month_id
group by 
t1.pai_visit_id,
t1.patient_id,
t1.visit_id,
pt.mother_name,
pt.age_string,
pt.birth_date,
pt.in_dept_date,
pt.in_dept
having max(case when t1.key='D00152' and d1.month_id=c_monthlist.month_id then t1.value else 0 end ) <> 0; 
   end loop;
   RETURN 'SUCCESS';  
END;
  ",[],"[""delete from his_bi.dw_inp_parturient_info_m where month_id = c_monthlist.month_id;\r    \r  insert into his_bi.dw_inp_parturient_info_m\rselect\rt1.pai_visit_id,\rt1.patient_id,\rt1.visit_id,\rpt.mother_name,\rpt.age_string,\rpt.birth_date,\rpt.in_dept_date,\rpt.in_dept,\rmax(case when t1.key='D00151' and d1.month_id=c_monthlist.month_id then t1.value else 0 end ) as is_primipara,\rmax(case when t1.key='D00152' and d1.month_id=c_monthlist.month_id then t1.value else 0 end ) as parity,\rmax(case when t1.key='D00155' and d1.month_id=c_monthlist.month_id then t1.value else 0 end ) as is_die,\rmax(case when t1.key='D00156' and d1.month_id=c_monthlist.month_id then t1.value else 0 end ) as postpartum_hemorrhage,\rmax(case when t1.key='D00159' and d1.month_id=c_monthlist.month_id then t1.value else 0 end ) as is_parturient,\rmax(case when t1.key='D00164' and d1.month_id=c_monthlist.month_id then t1.value else 0 end ) as is_cervical_repair,\rmax(case when t1.key='D00165' and d1.month_id=c_monthlist.month_id then t1.value else 0 end ) as is_placental_retention,\rmax(case when t1.key='D00166' and d1.month_id=c_monthlist.month_id then t1.value else 0 end ) as is_clearing_the_uterus,\rmax(case when t1.key='D00167' and d1.month_id=c_monthlist.month_id then t1.value else 0 end ) as is_placental_abruption_by_hand,\rmax(case when t1.key='D00168' and d1.month_id=c_monthlist.month_id then t1.value else 0 end ) as is_perineum_anesthesia,\rmax(case when t1.key='D00169' and d1.month_id=c_monthlist.month_id then t1.value else 0 end ) as is_postpartum_hemorrhage,\rmax(case when t1.key='D00170' and d1.month_id=c_monthlist.month_id then t1.value else 0 end ) as is_doula,\rmax(case when t1.key='D00171' and d1.month_id=c_monthlist.month_id then t1.value else 0 end ) as is_childbirth_in_water,\rmax(case when t1.key='D00172' and d1.month_id=c_monthlist.month_id then t1.value else 0 end ) as is_stillbirth,\rc_monthlist.month_id as month_id\rfrom \rhis_bi.dwd_inp_quantity_d t1\rleft join his_bi.pts_pai_birth_reg pt on t1.pai_visit_id = pt.pai_visit_id\rleft join his_bi.dim_date_info d1 on t1.st_date = d1.day_id and d1.month_id = c_monthlist.month_id\rwhere 1=1\r and t1.key in('D00151','D00152','D00155','D00156',\r'D00159','D00164','D00165','D00166',\r'D00167','D00168','D00169','D00170','D00171','D00172')\r and d1.month_id = c_monthlist.month_id\rgroup by \rt1.pai_visit_id,\rt1.patient_id,\rt1.visit_id,\rpt.mother_name,\rpt.age_string,\rpt.birth_date,\rpt.in_dept_date,\rpt.in_dept\rhaving max(case when t1.key='D00152' and d1.month_id=c_monthlist.month_id then t1.value else 0 end ) <> 0; \r  ""]",['产妇信息表（不包含多胎）\r   ']
22,his_bi,fun_dw_inp_parturient_info_m_multifetal_16421,"
/***
函数名称：产妇信息表（多胎）
    作用：产妇患者信息表（多胎）
  开发人：leslie 2020年6月16日
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00236根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
  c_monthlist   record;
  o_start_month varchar;
  o_end_month   varchar;
  i_start_month varchar;
  i_end_month   varchar;
  i_count       int4;
	tmp_file 			varchar;  --COPY方案临时文件名：该文件将被保存在所连接的服务器的文件目录。
BEGIN
	/*
	  COPY方案临时文件名。
		注意：
		1. 该文件将被保存在所连接的服务器的文件目录中，每一个函数必须使用自定义能够与其他函数区分的文件名
		2. 方便维护，历史文件都保存到'/home/postgres/'目录中。
		TODO : 后续规划统一临时文件目录，KETTLE调度完成之后，需要删除对应的临时文件（*需要想办法在每台服务器上统一创建临时目录）
	*/
	
  /*如果指标没有历史指标数据，甘肃默认以202001开始计算，结束月份以当前月份往前推1个月*/
  select count(1),to_char((date_trunc('month', now()) + interval '-1 month'),'yyyymm')
	       into i_count,i_end_month
    from his_bi.dw_inp_parturient_info_m_multifetal;
   
  if(i_count = 0)
    then 
      i_start_month := '202001';
      --raise notice '0 i_start_month is: %', i_start_month;
  else if(i_count > 0)
    then
      i_start_month := i_end_month;
      --raise notice '1 i_start_month is: %', i_start_month;
  end if;
  end if;
    
  if(length(trim(v_start_month)) = 0 and length(trim(v_end_month)) = 0)
  /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前月份前1个月为截止月份 */
    then 
      o_start_month := i_start_month;
      o_end_month := i_end_month;
      --raise notice '2 o_start_month is: %', o_start_month;
      --raise notice '2 o_end_month is: %', o_end_month;
  else if (length(trim(v_start_month)) <> 0 and length(trim(v_end_month)) <> 0)
  /*PG function 如果参入任何参数，那么以实际入参为准*/
    then 
      o_start_month := v_start_month;
      o_end_month := v_end_month;
      --raise notice '3 o_start_month is: %', o_start_month;
      --raise notice '3 o_end_month is: %', o_end_month;
  end if;
  end if;
	  for c_monthlist in (select distinct month_id from his_bi.dim_date_info where month_id >= o_start_month and month_id <= o_end_month order by month_id)
    loop
    --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
    
    delete from his_bi.dw_inp_parturient_info_m_multifetal where month_id = c_monthlist.month_id;
    
  insert into his_bi.dw_inp_parturient_info_m_multifetal
select
t1.pai_visit_id,
t1.patient_id,
t1.visit_id,
pt.mother_name,
pt.age_string,
pt.birth_date,
pt.in_dept_date,
pt.in_dept,
max(case when t1.key='D00153' and d1.month_id=c_monthlist.month_id then t1.value else 0 end ) as D00153,
max(case when t1.key='D00157' and d1.month_id=c_monthlist.month_id then t1.value else 0 end ) as D00157,
max(case when t1.key='D00158' and d1.month_id=c_monthlist.month_id then t1.value else 0 end ) as D00158,
max(case when t1.key='D00160' and d1.month_id=c_monthlist.month_id then t1.value else 0 end ) as D00160,
max(case when t1.key='D00161' and d1.month_id=c_monthlist.month_id then t1.value else 0 end ) as D00161,
max(case when t1.key='D00162' and d1.month_id=c_monthlist.month_id then t1.value else 0 end ) as D00162,
max(case when t1.key='D00163' and d1.month_id=c_monthlist.month_id then t1.value else 0 end ) as D00163,
max(case when t1.key='D00217' and d1.month_id=c_monthlist.month_id then t1.value else 0 end ) as D00217,
max(case when t1.key='D00218' and d1.month_id=c_monthlist.month_id then t1.value else 0 end ) as D00218,
c_monthlist.month_id as month_id
from 
his_bi.dwd_inp_quantity_d t1
left join his_bi.pts_pai_birth_reg pt on t1.pai_visit_id = cast((cast(pt.pai_visit_id as text) || cast(pt.baby_numeric as text)) as numeric)
left join his_bi.dim_date_info d1 on t1.st_date = d1.day_id and d1.month_id = c_monthlist.month_id
where 1=1
 and t1.key in('D00153','D00157','D00158','D00160','D00161','D00162','D00163','D00217','D00218')
 and d1.month_id = c_monthlist.month_id
group by 
t1.pai_visit_id,
t1.patient_id,
t1.visit_id,
pt.mother_name,
pt.age_string,
pt.birth_date,
pt.in_dept_date,
pt.in_dept; 
   end loop;
   RETURN 'SUCCESS';  
END;
  ",[],"[""delete from his_bi.dw_inp_parturient_info_m_multifetal where month_id = c_monthlist.month_id;\r    \r  insert into his_bi.dw_inp_parturient_info_m_multifetal\rselect\rt1.pai_visit_id,\rt1.patient_id,\rt1.visit_id,\rpt.mother_name,\rpt.age_string,\rpt.birth_date,\rpt.in_dept_date,\rpt.in_dept,\rmax(case when t1.key='D00153' and d1.month_id=c_monthlist.month_id then t1.value else 0 end ) as D00153,\rmax(case when t1.key='D00157' and d1.month_id=c_monthlist.month_id then t1.value else 0 end ) as D00157,\rmax(case when t1.key='D00158' and d1.month_id=c_monthlist.month_id then t1.value else 0 end ) as D00158,\rmax(case when t1.key='D00160' and d1.month_id=c_monthlist.month_id then t1.value else 0 end ) as D00160,\rmax(case when t1.key='D00161' and d1.month_id=c_monthlist.month_id then t1.value else 0 end ) as D00161,\rmax(case when t1.key='D00162' and d1.month_id=c_monthlist.month_id then t1.value else 0 end ) as D00162,\rmax(case when t1.key='D00163' and d1.month_id=c_monthlist.month_id then t1.value else 0 end ) as D00163,\rmax(case when t1.key='D00217' and d1.month_id=c_monthlist.month_id then t1.value else 0 end ) as D00217,\rmax(case when t1.key='D00218' and d1.month_id=c_monthlist.month_id then t1.value else 0 end ) as D00218,\rc_monthlist.month_id as month_id\rfrom \rhis_bi.dwd_inp_quantity_d t1\rleft join his_bi.pts_pai_birth_reg pt on t1.pai_visit_id = cast((cast(pt.pai_visit_id as text) || cast(pt.baby_numeric as text)) as numeric)\rleft join his_bi.dim_date_info d1 on t1.st_date = d1.day_id and d1.month_id = c_monthlist.month_id\rwhere 1=1\r and t1.key in('D00153','D00157','D00158','D00160','D00161','D00162','D00163','D00217','D00218')\r and d1.month_id = c_monthlist.month_id\rgroup by \rt1.pai_visit_id,\rt1.patient_id,\rt1.visit_id,\rpt.mother_name,\rpt.age_string,\rpt.birth_date,\rpt.in_dept_date,\rpt.in_dept; \r  ""]",['产妇信息表（多胎）\r   ']
23,his_bi,fun_dw_inp_patient_amount_m_16423,"
/***
函数名称：住院患者费用相关指标月汇总
    作用：汇总统计某月住院患者费用相关指标
  开发人：wy 2020-06-11
命名规范：FUN_模型层级(DW)_业务解释_日期类型M，M表示按月统计
业务解释：根据保存数据的DW表规划来的
    入参：v_start_month，v_end_month  格式均为yyyymm，可以一次运行多天的数据
		
		说明：由于采用INSERT INTO SELECT方式进行数据汇总后，再将结果插入到目标表的方式，
				  性能较低，可能会导致函数执行超过PG配置项statment_timeout所配置的超时时长，
				  从而导致函数执行被PG终结，采用PG COPY特性能大幅度提升该业务场景性能，操作步骤如下：
					1. 执行COPY TO命令将SELECT结果保存csv临时文件
					2. 执行COPY FROM命令将临时文件数据加载到目标表
					注意：该方案适用于数据量大且性能低下的统计，性能能满足要求的，为了方便开发、维护，可继续使用INSERT INTO SELECT方案
***/
DECLARE
  c_monthlist   record;
  o_start_month varchar;
  o_end_month   varchar;
  i_start_month varchar;
  i_end_month   varchar;
  i_count       int4;
	tmp_file 			varchar;  --COPY方案临时文件名：该文件将被保存在所连接的服务器的文件目录。
BEGIN
	/*
	  COPY方案临时文件名。
		注意：
		1. 该文件将被保存在所连接的服务器的文件目录中，每一个函数必须使用自定义能够与其他函数区分的文件名
		2. 方便维护，历史文件都保存到'/home/postgres/'目录中。
		TODO : 后续规划统一临时文件目录，KETTLE调度完成之后，需要删除对应的临时文件（*需要想办法在每台服务器上统一创建临时目录）
	*/
	tmp_file := '/home/postgres/fun_dw_inp_patient_amount_m.csv';
	
  /*如果指标没有历史指标数据，甘肃默认以202001开始计算，结束月份以当前月份往前推1个月*/
  select count(1),to_char((date_trunc('month', now()) + interval '-1 month'),'yyyymm')
	       into i_count,i_end_month
    from his_bi.dw_inp_patient_amount_m;
   
  if(i_count = 0)
    then 
      i_start_month := '202001';
      --raise notice '0 i_start_month is: %', i_start_month;
  else if(i_count > 0)
    then
      i_start_month := i_end_month;
      --raise notice '1 i_start_month is: %', i_start_month;
  end if;
  end if;
    
  if(length(trim(v_start_month)) = 0 and length(trim(v_end_month)) = 0)
  /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前月份前1个月为截止月份 */
    then 
      o_start_month := i_start_month;
      o_end_month := i_end_month;
      --raise notice '2 o_start_month is: %', o_start_month;
      --raise notice '2 o_end_month is: %', o_end_month;
  else if (length(trim(v_start_month)) <> 0 and length(trim(v_end_month)) <> 0)
  /*PG function 如果参入任何参数，那么以实际入参为准*/
    then 
      o_start_month := v_start_month;
      o_end_month := v_end_month;
      --raise notice '3 o_start_month is: %', o_start_month;
      --raise notice '3 o_end_month is: %', o_end_month;
  end if;
  end if;
  
  for c_monthlist in (select distinct month_id from his_bi.dim_date_info where month_id >= o_start_month and month_id <= o_end_month order by month_id)
  loop 
  
   --raise notice '4 c_monthlist.month_id is: %', c_monthlist.month_id;
   
    delete from his_bi.dw_inp_patient_amount_m where month_id = c_monthlist.month_id;
		 
	  -- 执行COPY命令，保存统计结果到临时文件（tmp_file）
		execute '
    copy (
		
				select 
					'''||c_monthlist.month_id||''' as month_id,
					hd1.patient_id,
					hd1.visit_id,
					hd1.pai_visit_id,
					COALESCE(sum(hd1.value),0) as total_fees,

					COALESCE(sum(ha1.value),0) as service_fess,
					COALESCE(sum(ha2.value),0) as anti_pham_fees,
					COALESCE(sum(ha3.value),0) as support_fess,
					COALESCE(sum(ha4.value),0) as basic_fess,
					COALESCE(sum(ha5.value),0) as key_point_fess,
					COALESCE(sum(ha6.value),0) as non_res_fess,
					COALESCE(sum(ha7.value),0) as res_fess,
					COALESCE(sum(ha8.value),0) as special_fess,
					COALESCE(sum(ha9.value),0) as pham_fees,

					COALESCE(sum(hd2.value),0) as material_fees,
					COALESCE(sum(hd4.value),0) as inspect_fees,
					COALESCE(sum(hd5.value),0) as check_fees,
					COALESCE(sum(hd6.value),0) as cur_fees,
					COALESCE(sum(hd7.value),0) as examination_fees,
					COALESCE(sum(hd8.value),0) as western_fees,
					COALESCE(sum(hd9.value),0) as chinese_patent_fees,
					COALESCE(sum(hd10.value),0) as herb_fees,
					COALESCE(sum(hd11.value),0) as nurse_fess,
					COALESCE(sum(hd12.value),0) as operation_fess,
					COALESCE(sum(hd13.value),0) as tdsp_fess,
					COALESCE(sum(hd14.value),0) as yntj_fess,
					COALESCE(sum(hd16.value),0) as bed_fess,
					COALESCE(sum(hd15.value),0) as other_fees
				from his_bi.dwd_inp_income_d hd1
				left join his_bi.dwd_inp_income_d hd2 on hd1.pai_visit_id = hd2.pai_visit_id and hd2.key = ''D05002'' and hd1.st_date = hd2.st_date
				left join his_bi.dwd_inp_income_d hd4 on hd1.pai_visit_id = hd4.pai_visit_id and hd4.key = ''D05004'' and hd1.st_date = hd4.st_date
				left join his_bi.dwd_inp_income_d hd5 on hd1.pai_visit_id = hd5.pai_visit_id and hd5.key = ''D05005'' and hd1.st_date = hd5.st_date
				left join his_bi.dwd_inp_income_d hd6 on hd1.pai_visit_id = hd6.pai_visit_id and hd6.key = ''D05006'' and hd1.st_date = hd6.st_date
				left join his_bi.dwd_inp_income_d hd7 on hd1.pai_visit_id = hd7.pai_visit_id and hd7.key = ''D05007'' and hd1.st_date = hd7.st_date
				left join his_bi.dwd_inp_income_d hd8 on hd1.pai_visit_id = hd8.pai_visit_id and hd8.key = ''D05008'' and hd1.st_date = hd8.st_date
				left join his_bi.dwd_inp_income_d hd9 on hd1.pai_visit_id = hd9.pai_visit_id and hd9.key = ''D05009'' and hd1.st_date = hd9.st_date
				left join his_bi.dwd_inp_income_d hd10 on hd1.pai_visit_id = hd10.pai_visit_id and hd10.key = ''D05010'' and hd1.st_date = hd10.st_date
				left join his_bi.dwd_inp_income_d hd11 on hd1.pai_visit_id = hd11.pai_visit_id and hd11.key = ''D05018'' and hd1.st_date = hd11.st_date
				left join his_bi.dwd_inp_income_d hd12 on hd1.pai_visit_id = hd12.pai_visit_id and hd12.key = ''D05019'' and hd1.st_date = hd12.st_date
				left join his_bi.dwd_inp_income_d hd13 on hd1.pai_visit_id = hd13.pai_visit_id and hd13.key = ''D05020'' and hd1.st_date = hd13.st_date
				left join his_bi.dwd_inp_income_d hd14 on hd1.pai_visit_id = hd14.pai_visit_id and hd14.key = ''D05021'' and hd1.st_date = hd14.st_date
				left join his_bi.dwd_inp_income_d hd15 on hd1.pai_visit_id = hd15.pai_visit_id and hd15.key = ''D05022'' and hd1.st_date = hd15.st_date
				left join his_bi.dwd_inp_income_d hd16 on hd1.pai_visit_id = hd16.pai_visit_id and hd16.key = ''D05023'' and hd1.st_date = hd16.st_date

				left join his_bi.dwd_inp_income_d ha1 on hd1.pai_visit_id = ha1.pai_visit_id and ha1.key = ''D05001'' and hd1.st_date = ha1.st_date
				left join his_bi.dwd_inp_income_d ha2 on hd1.pai_visit_id = ha2.pai_visit_id and ha2.key = ''D05011'' and hd1.st_date = ha2.st_date
				left join his_bi.dwd_inp_income_d ha3 on hd1.pai_visit_id = ha3.pai_visit_id and ha3.key = ''D05012'' and hd1.st_date = ha3.st_date
				left join his_bi.dwd_inp_income_d ha4 on hd1.pai_visit_id = ha4.pai_visit_id and ha4.key = ''D05013'' and hd1.st_date = ha4.st_date
				left join his_bi.dwd_inp_income_d ha5 on hd1.pai_visit_id = ha5.pai_visit_id and ha5.key = ''D05014'' and hd1.st_date = ha5.st_date
				left join his_bi.dwd_inp_income_d ha6 on hd1.pai_visit_id = ha6.pai_visit_id and ha6.key = ''D05015'' and hd1.st_date = ha6.st_date
				left join his_bi.dwd_inp_income_d ha7 on hd1.pai_visit_id = ha7.pai_visit_id and ha7.key = ''D05016'' and hd1.st_date = ha7.st_date
				left join his_bi.dwd_inp_income_d ha8 on hd1.pai_visit_id = ha8.pai_visit_id and ha8.key = ''D05017'' and hd1.st_date = ha8.st_date
				left join his_bi.dwd_inp_income_d ha9 on hd1.pai_visit_id = ha9.pai_visit_id and ha9.key = ''D05003'' and hd1.st_date = ha9.st_date

				left join his_bi.dim_date_info df on hd1.st_date = df.day_id and df.month_id = '''||c_monthlist.month_id||'''
				where hd1.key = ''D05000''
				  and hd1.value <> 0
					and df.month_id = '''||c_monthlist.month_id||'''
				group by
				hd1.patient_id,
				hd1.visit_id,
				hd1.pai_visit_id
				
	 )to '''||tmp_file||''' WITH CSV' ;
			
			---- 执行COP FROM Y命令，将统计结果从临时文件加载到目标表（tmp_file）
      execute 'COPY his_bi.dw_inp_patient_amount_m FROM '''||tmp_file||''' WITH CSV';
				 
   end loop;
   RETURN 'SUCCESS';  
END;
  ",[],"[""delete from his_bi.dw_inp_patient_amount_m where month_id = c_monthlist.month_id;\r   \r   -- 执行COPY命令，保存统计结果到临时文件（tmp_file）\r  execute '\r    copy (\r  \r    select \r     '''||c_monthlist.month_id||''' as month_id,\r     hd1.patient_id,\r     hd1.visit_id,\r     hd1.pai_visit_id,\r     COALESCE(sum(hd1.value),0) as total_fees,\r\r     COALESCE(sum(ha1.value),0) as service_fess,\r     COALESCE(sum(ha2.value),0) as anti_pham_fees,\r     COALESCE(sum(ha3.value),0) as support_fess,\r     COALESCE(sum(ha4.value),0) as basic_fess,\r     COALESCE(sum(ha5.value),0) as key_point_fess,\r     COALESCE(sum(ha6.value),0) as non_res_fess,\r     COALESCE(sum(ha7.value),0) as res_fess,\r     COALESCE(sum(ha8.value),0) as special_fess,\r     COALESCE(sum(ha9.value),0) as pham_fees,\r\r     COALESCE(sum(hd2.value),0) as material_fees,\r     COALESCE(sum(hd4.value),0) as inspect_fees,\r     COALESCE(sum(hd5.value),0) as check_fees,\r     COALESCE(sum(hd6.value),0) as cur_fees,\r     COALESCE(sum(hd7.value),0) as examination_fees,\r     COALESCE(sum(hd8.value),0) as western_fees,\r     COALESCE(sum(hd9.value),0) as chinese_patent_fees,\r     COALESCE(sum(hd10.value),0) as herb_fees,\r     COALESCE(sum(hd11.value),0) as nurse_fess,\r     COALESCE(sum(hd12.value),0) as operation_fess,\r     COALESCE(sum(hd13.value),0) as tdsp_fess,\r     COALESCE(sum(hd14.value),0) as yntj_fess,\r     COALESCE(sum(hd16.value),0) as bed_fess,\r     COALESCE(sum(hd15.value),0) as other_fees\r    from his_bi.dwd_inp_income_d hd1\r    left join his_bi.dwd_inp_income_d hd2 on hd1.pai_visit_id = hd2.pai_visit_id and hd2.key = ''D05002'' and hd1.st_date = hd2.st_date\r    left join his_bi.dwd_inp_income_d hd4 on hd1.pai_visit_id = hd4.pai_visit_id and hd4.key = ''D05004'' and hd1.st_date = hd4.st_date\r    left join his_bi.dwd_inp_income_d hd5 on hd1.pai_visit_id = hd5.pai_visit_id and hd5.key = ''D05005'' and hd1.st_date = hd5.st_date\r    left join his_bi.dwd_inp_income_d hd6 on hd1.pai_visit_id = hd6.pai_visit_id and hd6.key = ''D05006'' and hd1.st_date = hd6.st_date\r    left join his_bi.dwd_inp_income_d hd7 on hd1.pai_visit_id = hd7.pai_visit_id and hd7.key = ''D05007'' and hd1.st_date = hd7.st_date\r    left join his_bi.dwd_inp_income_d hd8 on hd1.pai_visit_id = hd8.pai_visit_id and hd8.key = ''D05008'' and hd1.st_date = hd8.st_date\r    left join his_bi.dwd_inp_income_d hd9 on hd1.pai_visit_id = hd9.pai_visit_id and hd9.key = ''D05009'' and hd1.st_date = hd9.st_date\r    left join his_bi.dwd_inp_income_d hd10 on hd1.pai_visit_id = hd10.pai_visit_id and hd10.key = ''D05010'' and hd1.st_date = hd10.st_date\r    left join his_bi.dwd_inp_income_d hd11 on hd1.pai_visit_id = hd11.pai_visit_id and hd11.key = ''D05018'' and hd1.st_date = hd11.st_date\r    left join his_bi.dwd_inp_income_d hd12 on hd1.pai_visit_id = hd12.pai_visit_id and hd12.key = ''D05019'' and hd1.st_date = hd12.st_date\r    left join his_bi.dwd_inp_income_d hd13 on hd1.pai_visit_id = hd13.pai_visit_id and hd13.key = ''D05020'' and hd1.st_date = hd13.st_date\r    left join his_bi.dwd_inp_income_d hd14 on hd1.pai_visit_id = hd14.pai_visit_id and hd14.key = ''D05021'' and hd1.st_date = hd14.st_date\r    left join his_bi.dwd_inp_income_d hd15 on hd1.pai_visit_id = hd15.pai_visit_id and hd15.key = ''D05022'' and hd1.st_date = hd15.st_date\r    left join his_bi.dwd_inp_income_d hd16 on hd1.pai_visit_id = hd16.pai_visit_id and hd16.key = ''D05023'' and hd1.st_date = hd16.st_date\r\r    left join his_bi.dwd_inp_income_d ha1 on hd1.pai_visit_id = ha1.pai_visit_id and ha1.key = ''D05001'' and hd1.st_date = ha1.st_date\r    left join his_bi.dwd_inp_income_d ha2 on hd1.pai_visit_id = ha2.pai_visit_id and ha2.key = ''D05011'' and hd1.st_date = ha2.st_date\r    left join his_bi.dwd_inp_income_d ha3 on hd1.pai_visit_id = ha3.pai_visit_id and ha3.key = ''D05012'' and hd1.st_date = ha3.st_date\r    left join his_bi.dwd_inp_income_d ha4 on hd1.pai_visit_id = ha4.pai_visit_id and ha4.key = ''D05013'' and hd1.st_date = ha4.st_date\r    left join his_bi.dwd_inp_income_d ha5 on hd1.pai_visit_id = ha5.pai_visit_id and ha5.key = ''D05014'' and hd1.st_date = ha5.st_date\r    left join his_bi.dwd_inp_income_d ha6 on hd1.pai_visit_id = ha6.pai_visit_id and ha6.key = ''D05015'' and hd1.st_date = ha6.st_date\r    left join his_bi.dwd_inp_income_d ha7 on hd1.pai_visit_id = ha7.pai_visit_id and ha7.key = ''D05016'' and hd1.st_date = ha7.st_date\r    left join his_bi.dwd_inp_income_d ha8 on hd1.pai_visit_id = ha8.pai_visit_id and ha8.key = ''D05017'' and hd1.st_date = ha8.st_date\r    left join his_bi.dwd_inp_income_d ha9 on hd1.pai_visit_id = ha9.pai_visit_id and ha9.key = ''D05003'' and hd1.st_date = ha9.st_date\r\r    left join his_bi.dim_date_info df on hd1.st_date = df.day_id and df.month_id = '''||c_monthlist.month_id||'''\r    where hd1.key = ''D05000''\r      and hd1.value <> 0\r     and df.month_id = '''||c_monthlist.month_id||'''\r    group by\r    hd1.patient_id,\r    hd1.visit_id,\r    hd1.pai_visit_id\r    \r  )to '''||tmp_file||''' WITH CSV' ;\r   \r   ---- 执行COP FROM Y命令，将统计结果从临时文件加载到目标表（tmp_file）\r      execute 'COPY his_bi.dw_inp_patient_amount_m FROM '''||tmp_file||''' WITH CSV';\r     \r  ""]",['住院患者费用相关指标月汇总\r   ']
24,his_bi,fun_dw_inp_patient_info_m_16425,"
/***
函数名称：住院患者信息表
    作用：住院患者信息表
  开发人：wy 2020年6月15日
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00236根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
  c_monthlist   record;
  o_start_month varchar;
  o_end_month   varchar;
  i_start_month varchar;
  i_end_month   varchar;
  i_count       int4;
	tmp_file 			varchar;  --COPY方案临时文件名：该文件将被保存在所连接的服务器的文件目录。
BEGIN
	/*
	  COPY方案临时文件名。
		注意：
		1. 该文件将被保存在所连接的服务器的文件目录中，每一个函数必须使用自定义能够与其他函数区分的文件名
		2. 方便维护，历史文件都保存到'/home/postgres/'目录中。
		TODO : 后续规划统一临时文件目录，KETTLE调度完成之后，需要删除对应的临时文件（*需要想办法在每台服务器上统一创建临时目录）
	*/
	
  /*如果指标没有历史指标数据，甘肃默认以202001开始计算，结束月份以当前月份往前推1个月*/
  select count(1),to_char((date_trunc('month', now()) + interval '-1 month'),'yyyymm')
	       into i_count,i_end_month
    from his_bi.dw_inp_patient_info_m;
   
  if(i_count = 0)
    then 
      i_start_month := '202001';
      --raise notice '0 i_start_month is: %', i_start_month;
  else if(i_count > 0)
    then
      i_start_month := i_end_month;
      --raise notice '1 i_start_month is: %', i_start_month;
  end if;
  end if;
    
  if(length(trim(v_start_month)) = 0 and length(trim(v_end_month)) = 0)
  /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前月份前1个月为截止月份 */
    then 
      o_start_month := i_start_month;
      o_end_month := i_end_month;
      --raise notice '2 o_start_month is: %', o_start_month;
      --raise notice '2 o_end_month is: %', o_end_month;
  else if (length(trim(v_start_month)) <> 0 and length(trim(v_end_month)) <> 0)
  /*PG function 如果参入任何参数，那么以实际入参为准*/
    then 
      o_start_month := v_start_month;
      o_end_month := v_end_month;
      --raise notice '3 o_start_month is: %', o_start_month;
      --raise notice '3 o_end_month is: %', o_end_month;
  end if;
  end if;
	  for c_monthlist in (select distinct month_id from his_bi.dim_date_info where month_id >= o_start_month and month_id <= o_end_month order by month_id)
    loop
    --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
    
    delete from his_bi.dw_inp_patient_info_m where month_id = c_monthlist.month_id;
    
  insert into his_bi.dw_inp_patient_info_m
select 
c_monthlist.month_id as mon_id,
a.brxh,
t1.patient_id,
t1.pai_visit_id,
t1.visit_id,
a.brxm,
cast(split_part(cast(age(CURRENT_DATE,a.csrq) as text),' ',1) as numeric) as pati_age,
split_part(cast(age(CURRENT_DATE,a.csrq) as text),' ',2) as age_flag,
cast(a.xb as NUMERIC) as sex,
t1.hospital_area,
t1.team_id,  --诊疗组ID
tm.team_name,  --诊疗组名称
t1.doctor_chief as doctor_chief, --主任医生编码(部分直接存储为姓名)
us1.people_name as doctor_chief_name, --主任医生编码
t1.doctor_attending as doctor_attending, --主治医生编码(部分直接存储为姓名)
us2.people_name as doctor_attending_name, --主治医生编码
t1.new_in_dept, ---入院科室编码
t6.name,
t1.discharge_dept, --- 出院科室编码
t7.name,
a.ryrq,  --入院时间
a.cyrq, ---出院时间
t8.diagdiseasecode,
t8.diagdiseasename,
a.zyts,---住院天数
md.is_zqss,  --是否择期手术
md.is_xzhz,  --是否下转患者
md.is_sshz,  --是否手术患者(0 否 1是)
md.is_ylqk_gr,  --是否I类切口感染(0 否 1是)
md.is_ylqk_sh,  --是否I类切口手术(0 否 1是)
md.is_wzhz,  --是否危重患者(0 否 1是)
md.is_wxzl,
md.is_wswsj,  --是否微生物检验样本送检
mq.is_use_sykjyw,  --是否使用抗菌药物
mq.is_use_fxzjkjyw,  --是否使用非限制级抗菌药物
mq.is_use_xzjkjyw,  --是否使用限制级抗菌药物
mq.is_use_tsjkjyw,  --是否使用特殊级抗菌药物
mq.kjyw_ddd_sum,  --抗菌药物累计DDD数
mq.fxzj_kjyw_ddd_sum,  --非限制级抗菌药物累计DDD数
mq.xzj_kjyw_ddd_sum,  --限制级抗菌药物累计DDD数
mq.tsj_kjyw_ddd_sum,  --特殊级抗菌药物DDD数使用强度
md.wc_num,
md.sjss_num,
md.qj_num,
md.hxnj_num,
md.xhnj_num,
case when md.rjss_num >0 then 1 end as rjss_num,
md.ssbf_num,
a.lyfs,
mq.is_die,
case when a.lyfs='4' then 1 else 0 end  as is_zdly,
t1.pathway_status as lcljglxh,
a.lcybl,
a.fsybl,
a.sqysh,
a.md5,
a.zfy as total_fees
from his_bi.ods_patient_medical_record a
left join his_bi.pts_pai_visit t1 on (a.bah = t1.patient_id and a.zycs = t1.visit_id)
left join his_bi.bds_bds_organization t6 on (t1.new_in_dept = t6.code )
left join his_bi.bds_bds_organization t7 on (t1.discharge_dept = t7.code )
left join his_bi.ods_patient_diag_info t8 on (a.bah = t8.patient_id and a.zycs = t8.visit_id and t8.main_diag='1')
left join 
(
    select
    md.pai_visit_id,
    max(case when md.key = 'D00044' then md.value end) as ssbf_num,
    max(case when md.key = 'D00045' then md.value end) as is_zqss,  --是否择期手术
    max(case when md.key = 'D00046' then md.value end) as is_xzhz,  --是否下转患者
    --max(case when md.key = 'D00205' then md.value end) as is_rjss,  --是否日间手术患者
    max(case when md.key = 'D00048' then md.value end) as is_sshz,  --是否手术患者(0 否 1是)
    max(case when md.key = 'D00049' then md.value end) as is_wchz,  --是否微创手术患者(0 否 1是)
    max(case when md.key = 'D00050' then md.value end) as is_sjss,  --是否四级手术患者(0 否 1是)
    max(case when md.key = 'D00051' then md.value end) as is_ylqk_gr,  --是否I类切口感染(0 否 1是)
    max(case when md.key = 'D00052' then md.value end) as is_ylqk_sh,  --是否I类切口手术(0 否 1是)
    max(case when md.key = 'D00053' then md.value end) as is_wzhz,  --是否危重患者(0 否 1是)
    max(case when md.key = 'D00092' then md.value end) as is_wswsj,  --是否微生物检验样本送检
    max(case when md.key = 'D00207' then md.value end) as is_wxzl,
    sum(case when md.key = 'D00242' then md.value end) as wc_num,
    sum(case when md.key = 'D00243' then md.value end) as sjss_num,
    sum(case when md.key = 'D00244' then md.value end) as qj_num,
    sum(case when md.key = 'D00245' then md.value end) as hxnj_num,
    sum(case when md.key = 'D00246' then md.value end) as xhnj_num,
    sum(case when md.key = 'D00205' then md.value end) as rjss_num
    from his_bi.dwd_inp_medical_d md
    inner join his_bi.dim_date_info d1 on md.st_date = d1.day_id and d1.month_id = c_monthlist.month_id
    where md.key in ('D00044','D00045','D00046','D00048','D00050','D00051',
        'D00049','D00050','D00052','D00053','D00092','D00207','D00242','D00243','D00244','D00245','D00246','D00205')
    group by md.pai_visit_id
)md on t1.pai_visit_id = md.pai_visit_id
left join 
(
    select
    mq.pai_visit_id,
    sum(case when mq.key = 'D00093' then mq.value end) as kjyw_ddd_sum,  --抗菌药物累计DDD数
    sum(case when mq.key = 'D00094' then mq.value end) as fxzj_kjyw_ddd_sum,  --非限制级抗菌药物累计DDD数
    sum(case when mq.key = 'D00095' then mq.value end) as xzj_kjyw_ddd_sum,  --限制级抗菌药物累计DDD数
    sum(case when mq.key = 'D00096' then mq.value end) as tsj_kjyw_ddd_sum,  --特殊级抗菌药物DDD数使用强度
    max(case when mq.key = 'D00155' then  mq.value end) as is_die,
		max(case when mq.key = 'D00088' then mq.value end) as is_use_sykjyw,  --是否使用抗菌药物
    max(case when mq.key = 'D00089' then mq.value end) as is_use_fxzjkjyw,  --是否使用非限制级抗菌药物
    max(case when mq.key = 'D00090' then mq.value end) as is_use_xzjkjyw,  --是否使用限制级抗菌药物
    max(case when mq.key = 'D00091' then mq.value end) as is_use_tsjkjyw  --是否使用特殊级抗菌药物
    from his_bi.dwd_inp_quantity_d mq
    inner join his_bi.dim_date_info d1 on mq.st_date = d1.day_id and d1.month_id = c_monthlist.month_id
    where mq.key in ('D00093','D00094','D00095','D00096','D00155','D00088','D00089','D00090','D00091')
    group by mq.pai_visit_id
)mq on t1.pai_visit_id = mq.pai_visit_id
left join his_bi.pts_pts_basic_org_medi_team tm on t1.team_id = tm.team_id
left join his_bi.uum_uum_user us1 on t1.doctor_chief = us1.user_name
left join his_bi.uum_uum_user us2 on t1.doctor_attending = us2.user_name
where 1=1
and a.cyrq >= to_date(c_monthlist.month_id,'yyyymm')
and a.cyrq <  to_date(c_monthlist.month_id,'yyyymm') + interval '1 month'; 
   end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00091'],"[""delete from his_bi.dw_inp_patient_info_m where month_id = c_monthlist.month_id;\r    \r  insert into his_bi.dw_inp_patient_info_m\rselect \rc_monthlist.month_id as mon_id,\ra.brxh,\rt1.patient_id,\rt1.pai_visit_id,\rt1.visit_id,\ra.brxm,\rcast(split_part(cast(age(CURRENT_DATE,a.csrq) as text),' ',1) as numeric) as pati_age,\rsplit_part(cast(age(CURRENT_DATE,a.csrq) as text),' ',2) as age_flag,\rcast(a.xb as NUMERIC) as sex,\rt1.hospital_area,\rt1.team_id,  --诊疗组ID\rtm.team_name,  --诊疗组名称\rt1.doctor_chief as doctor_chief, --主任医生编码(部分直接存储为姓名)\rus1.people_name as doctor_chief_name, --主任医生编码\rt1.doctor_attending as doctor_attending, --主治医生编码(部分直接存储为姓名)\rus2.people_name as doctor_attending_name, --主治医生编码\rt1.new_in_dept, ---入院科室编码\rt6.name,\rt1.discharge_dept, --- 出院科室编码\rt7.name,\ra.ryrq,  --入院时间\ra.cyrq, ---出院时间\rt8.diagdiseasecode,\rt8.diagdiseasename,\ra.zyts,---住院天数\rmd.is_zqss,  --是否择期手术\rmd.is_xzhz,  --是否下转患者\rmd.is_sshz,  --是否手术患者(0 否 1是)\rmd.is_ylqk_gr,  --是否I类切口感染(0 否 1是)\rmd.is_ylqk_sh,  --是否I类切口手术(0 否 1是)\rmd.is_wzhz,  --是否危重患者(0 否 1是)\rmd.is_wxzl,\rmd.is_wswsj,  --是否微生物检验样本送检\rmq.is_use_sykjyw,  --是否使用抗菌药物\rmq.is_use_fxzjkjyw,  --是否使用非限制级抗菌药物\rmq.is_use_xzjkjyw,  --是否使用限制级抗菌药物\rmq.is_use_tsjkjyw,  --是否使用特殊级抗菌药物\rmq.kjyw_ddd_sum,  --抗菌药物累计DDD数\rmq.fxzj_kjyw_ddd_sum,  --非限制级抗菌药物累计DDD数\rmq.xzj_kjyw_ddd_sum,  --限制级抗菌药物累计DDD数\rmq.tsj_kjyw_ddd_sum,  --特殊级抗菌药物DDD数使用强度\rmd.wc_num,\rmd.sjss_num,\rmd.qj_num,\rmd.hxnj_num,\rmd.xhnj_num,\rcase when md.rjss_num >0 then 1 end as rjss_num,\rmd.ssbf_num,\ra.lyfs,\rmq.is_die,\rcase when a.lyfs='4' then 1 else 0 end  as is_zdly,\rt1.pathway_status as lcljglxh,\ra.lcybl,\ra.fsybl,\ra.sqysh,\ra.md5,\ra.zfy as total_fees\rfrom his_bi.ods_patient_medical_record a\rleft join his_bi.pts_pai_visit t1 on (a.bah = t1.patient_id and a.zycs = t1.visit_id)\rleft join his_bi.bds_bds_organization t6 on (t1.new_in_dept = t6.code )\rleft join his_bi.bds_bds_organization t7 on (t1.discharge_dept = t7.code )\rleft join his_bi.ods_patient_diag_info t8 on (a.bah = t8.patient_id and a.zycs = t8.visit_id and t8.main_diag='1')\rleft join \r(\r    select\r    md.pai_visit_id,\r    max(case when md.key = 'D00044' then md.value end) as ssbf_num,\r    max(case when md.key = 'D00045' then md.value end) as is_zqss,  --是否择期手术\r    max(case when md.key = 'D00046' then md.value end) as is_xzhz,  --是否下转患者\r    --max(case when md.key = 'D00205' then md.value end) as is_rjss,  --是否日间手术患者\r    max(case when md.key = 'D00048' then md.value end) as is_sshz,  --是否手术患者(0 否 1是)\r    max(case when md.key = 'D00049' then md.value end) as is_wchz,  --是否微创手术患者(0 否 1是)\r    max(case when md.key = 'D00050' then md.value end) as is_sjss,  --是否四级手术患者(0 否 1是)\r    max(case when md.key = 'D00051' then md.value end) as is_ylqk_gr,  --是否I类切口感染(0 否 1是)\r    max(case when md.key = 'D00052' then md.value end) as is_ylqk_sh,  --是否I类切口手术(0 否 1是)\r    max(case when md.key = 'D00053' then md.value end) as is_wzhz,  --是否危重患者(0 否 1是)\r    max(case when md.key = 'D00092' then md.value end) as is_wswsj,  --是否微生物检验样本送检\r    max(case when md.key = 'D00207' then md.value end) as is_wxzl,\r    sum(case when md.key = 'D00242' then md.value end) as wc_num,\r    sum(case when md.key = 'D00243' then md.value end) as sjss_num,\r    sum(case when md.key = 'D00244' then md.value end) as qj_num,\r    sum(case when md.key = 'D00245' then md.value end) as hxnj_num,\r    sum(case when md.key = 'D00246' then md.value end) as xhnj_num,\r    sum(case when md.key = 'D00205' then md.value end) as rjss_num\r    from his_bi.dwd_inp_medical_d md\r    inner join his_bi.dim_date_info d1 on md.st_date = d1.day_id and d1.month_id = c_monthlist.month_id\r    where md.key in ('D00044','D00045','D00046','D00048','D00050','D00051',\r        'D00049','D00050','D00052','D00053','D00092','D00207','D00242','D00243','D00244','D00245','D00246','D00205')\r    group by md.pai_visit_id\r)md on t1.pai_visit_id = md.pai_visit_id\rleft join \r(\r    select\r    mq.pai_visit_id,\r    sum(case when mq.key = 'D00093' then mq.value end) as kjyw_ddd_sum,  --抗菌药物累计DDD数\r    sum(case when mq.key = 'D00094' then mq.value end) as fxzj_kjyw_ddd_sum,  --非限制级抗菌药物累计DDD数\r    sum(case when mq.key = 'D00095' then mq.value end) as xzj_kjyw_ddd_sum,  --限制级抗菌药物累计DDD数\r    sum(case when mq.key = 'D00096' then mq.value end) as tsj_kjyw_ddd_sum,  --特殊级抗菌药物DDD数使用强度\r    max(case when mq.key = 'D00155' then  mq.value end) as is_die,\r  max(case when mq.key = 'D00088' then mq.value end) as is_use_sykjyw,  --是否使用抗菌药物\r    max(case when mq.key = 'D00089' then mq.value end) as is_use_fxzjkjyw,  --是否使用非限制级抗菌药物\r    max(case when mq.key = 'D00090' then mq.value end) as is_use_xzjkjyw,  --是否使用限制级抗菌药物\r    max(case when mq.key = 'D00091' then mq.value end) as is_use_tsjkjyw  --是否使用特殊级抗菌药物\r    from his_bi.dwd_inp_quantity_d mq\r    inner join his_bi.dim_date_info d1 on mq.st_date = d1.day_id and d1.month_id = c_monthlist.month_id\r    where mq.key in ('D00093','D00094','D00095','D00096','D00155','D00088','D00089','D00090','D00091')\r    group by mq.pai_visit_id\r)mq on t1.pai_visit_id = mq.pai_visit_id\rleft join his_bi.pts_pts_basic_org_medi_team tm on t1.team_id = tm.team_id\rleft join his_bi.uum_uum_user us1 on t1.doctor_chief = us1.user_name\rleft join his_bi.uum_uum_user us2 on t1.doctor_attending = us2.user_name\rwhere 1=1\rand a.cyrq >= to_date(c_monthlist.month_id,'yyyymm')\rand a.cyrq <  to_date(c_monthlist.month_id,'yyyymm') + interval '1 month'; \r  ""]",['住院患者信息表\r   ']
25,his_bi,fun_dwd_D00115_d_16581,"
/***
函数名称：住院患者妊娠合并心脏病打标
    作用：统计某天住院患者中属于妊娠合并心脏病的人
  开发人：wy 2020-04-14
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00115  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

    
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00115';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00115';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
  select 'D00115',
				 1, 
				 d.bah as patient_id,
				 d.zycs as visit_id,
				 a.pai_visit_id,
				 now(),
				 '妊娠合并心脏病',
			  to_char(d.cyrq,'yyyymmdd') as st_date
	 from his_bi.ods_patient_medical_record d
	 left join his_bi.pts_pai_visit a
	 on (a.patient_id =d.bah and a.visit_id =d.zycs)
	inner join his_bi.ods_patient_diag_info b 
		 on d.brxh = b.brxh 
		and b.main_diag = '1'   --主诊断
	where  exists(select 1 from his_bi.dim_diag_oper_info t
							  where t.icd_code = b.diagdiseasecode 
							        and t.standard_resource = '甘肃妇幼重疾重返指标'
									and t.type_name = '重点疾病'
									and t.kpi_alias = '妊娠合并心脏病'
									and t.icd_type = 'ICD10'
									and t.compatible_type = '0' --表示指标本身标准编码
									)
		and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
		and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1; 
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00115'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00115';   INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,                    remark,st_date)   select 'D00115',     1,      d.bah as patient_id,     d.zycs as visit_id,     a.pai_visit_id,     now(),     '妊娠合并心脏病',     to_char(d.cyrq,'yyyymmdd') as st_date  from his_bi.ods_patient_medical_record d  left join his_bi.pts_pai_visit a  on (a.patient_id =d.bah and a.visit_id =d.zycs) inner join his_bi.ods_patient_diag_info b    on d.brxh = b.brxh   and b.main_diag = '1'   --主诊断 where  exists(select 1 from his_bi.dim_diag_oper_info t         where t.icd_code = b.diagdiseasecode                and t.standard_resource = '甘肃妇幼重疾重返指标'         and t.type_name = '重点疾病'         and t.kpi_alias = '妊娠合并心脏病'         and t.icd_type = 'ICD10'         and t.compatible_type = '0' --表示指标本身标准编码         )  and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')  and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1;   ""]",['住院患者妊娠合并心脏病打标   ']
26,his_bi,fun_dwd_D00116_d_16583,"
/***
函数名称：住院患者盆腔炎性疾病打标
    作用：统计某天住院患者中属于盆腔炎性疾病的人
  开发人：wy 2020-04-14
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00116  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

    
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00116';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00116';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
  select 'D00116',
				 1, 
				 d.bah as patient_id,
				 d.zycs as visit_id,
				 a.pai_visit_id,
				 now(),
				 '盆腔炎性疾病',
			  to_char(d.cyrq,'yyyymmdd') as st_date
	 from his_bi.ods_patient_medical_record d
	 left join his_bi.pts_pai_visit a
	 on (a.patient_id =d.bah and a.visit_id =d.zycs)
	inner join his_bi.ods_patient_diag_info b 
		 on d.brxh = b.brxh 
		and b.main_diag = '1'   --主诊断
	where  exists(select 1 from his_bi.dim_diag_oper_info t
							  where t.icd_code = b.diagdiseasecode 
							        and t.standard_resource = '甘肃妇幼重疾重返指标'
									and t.type_name = '重点疾病'
									and t.kpi_alias = '盆腔炎性疾病'
									and t.icd_type = 'ICD10'
									and t.compatible_type = '0' --表示指标本身标准编码
									)
		and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
		and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1; 
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00116'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00116';   INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,                    remark,st_date)   select 'D00116',     1,      d.bah as patient_id,     d.zycs as visit_id,     a.pai_visit_id,     now(),     '盆腔炎性疾病',     to_char(d.cyrq,'yyyymmdd') as st_date  from his_bi.ods_patient_medical_record d  left join his_bi.pts_pai_visit a  on (a.patient_id =d.bah and a.visit_id =d.zycs) inner join his_bi.ods_patient_diag_info b    on d.brxh = b.brxh   and b.main_diag = '1'   --主诊断 where  exists(select 1 from his_bi.dim_diag_oper_info t         where t.icd_code = b.diagdiseasecode                and t.standard_resource = '甘肃妇幼重疾重返指标'         and t.type_name = '重点疾病'         and t.kpi_alias = '盆腔炎性疾病'         and t.icd_type = 'ICD10'         and t.compatible_type = '0' --表示指标本身标准编码         )  and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')  and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1;   ""]",['住院患者盆腔炎性疾病打标   ']
27,his_bi,fun_dw_outp_fsjz_16427,"
/***
函数名称：分时就诊时间明细表
    作用：分时就诊时间明细表
  开发人：wrsong 2020年6月2日
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00236根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
    c_daylist record;
    o_start_date varchar;
    o_end_date varchar;
    i_start_date varchar;
    i_end_date varchar;
    i_count  int4;
BEGIN

        
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
    /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
      then 
        o_start_date := i_start_date;
        o_end_date := i_end_date;
            --raise notice '2 o_start_date is: %', o_start_date;
            --raise notice '2 o_end_date is: %', o_end_date;
    else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
    /*PG function 如果参入任何参数，那么以实际入参为准*/
      then 
          o_start_date := v_start_date;
        o_end_date := v_end_date;
            --raise notice '3 o_start_date is: %', o_start_date;
            --raise notice '3 o_end_date is: %', o_end_date;
    end if;
    end if;
    
    for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
    loop 
    
    --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
    
    delete from his_bi.dw_outp_fsjz where jzsj = c_daylist.day_id;
    
  insert into his_bi.dw_outp_fsjz
        select to_char(opv.visit_begin_date,'yyyymmdd') jzsj,
              opv.outp_visit_id,
              opv.patient_id ,
              opv.visit_id , 
              opv.admission_doctor,
              opv.dept_code,
              trim(left(substring(cast(opv.visit_begin_date as text) from 11 for 11),6)) as qj,
              opv.visit_begin_date,
              opv.sign_in_date,
              t2.type,
              max(k.enter_date),
              max(round(abs(date_part('epoch', k.enter_date - opv.visit_begin_date))::NUMERIC / 60,4)) as jz_jf,--就诊-缴费时间
              max(round(abs(date_part('epoch', k.enter_date - opv.sign_in_date))::NUMERIC / 60,4)) as qd_jf,--签到-缴费时间 
              max(round(abs(date_part('epoch', opv.visit_begin_date - opv.sign_in_date))::NUMERIC / 60,4)) as qd_jz,--签到到就诊时间
              now() as insert_time
          from his_bi.pts_outp_patient_visit opv
          left join  his_bi.bms_bill_item k on k.patient_id = opv.patient_id and k.visit_id = opv.visit_id and k.in_out_flag = 'O'  and k.ITEM_CLASS !='Z'
          left join his_bi.dim_hour_min_secound t2 on (trim(left(substring(cast(opv.visit_begin_date as text) from 11 for 11),6))
                  = t2.time)
        where opv.registry_flag = '1'
          and opv.visit_begin_date >= to_date(c_daylist.day_id,'yyyyMMdd')
          and opv.visit_begin_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
          and opv.outp_type_code not in ('2','11') --排除便民，急诊
          and opv.sign_in_date is not null 
        group by
          to_char(opv.visit_begin_date,'yyyymmdd'),
          opv.outp_visit_id,
          opv.patient_id ,
          opv.visit_id , 
          opv.admission_doctor,
          opv.dept_code,
          trim(left(substring(cast(opv.visit_begin_date as text) from 11 for 11),6)),
          opv.visit_begin_date,
          opv.sign_in_date,
          t2.type;
     end loop;
   RETURN 'SUCCESS';  
END;
  ",[],"[""delete from his_bi.dw_outp_fsjz where jzsj = c_daylist.day_id;\r    \r  insert into his_bi.dw_outp_fsjz\r        select to_char(opv.visit_begin_date,'yyyymmdd') jzsj,\r              opv.outp_visit_id,\r              opv.patient_id ,\r              opv.visit_id , \r              opv.admission_doctor,\r              opv.dept_code,\r              trim(left(substring(cast(opv.visit_begin_date as text) from 11 for 11),6)) as qj,\r              opv.visit_begin_date,\r              opv.sign_in_date,\r              t2.type,\r              max(k.enter_date),\r              max(round(abs(date_part('epoch', k.enter_date - opv.visit_begin_date))::NUMERIC / 60,4)) as jz_jf,--就诊-缴费时间\r              max(round(abs(date_part('epoch', k.enter_date - opv.sign_in_date))::NUMERIC / 60,4)) as qd_jf,--签到-缴费时间 \r              max(round(abs(date_part('epoch', opv.visit_begin_date - opv.sign_in_date))::NUMERIC / 60,4)) as qd_jz,--签到到就诊时间\r              now() as insert_time\r          from his_bi.pts_outp_patient_visit opv\r          left join  his_bi.bms_bill_item k on k.patient_id = opv.patient_id and k.visit_id = opv.visit_id and k.in_out_flag = 'O'  and k.ITEM_CLASS !='Z'\r          left join his_bi.dim_hour_min_secound t2 on (trim(left(substring(cast(opv.visit_begin_date as text) from 11 for 11),6))\r                  = t2.time)\r        where opv.registry_flag = '1'\r          and opv.visit_begin_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r          and opv.visit_begin_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1\r          and opv.outp_type_code not in ('2','11') --排除便民，急诊\r          and opv.sign_in_date is not null \r        group by\r          to_char(opv.visit_begin_date,'yyyymmdd'),\r          opv.outp_visit_id,\r          opv.patient_id ,\r          opv.visit_id , \r          opv.admission_doctor,\r          opv.dept_code,\r          trim(left(substring(cast(opv.visit_begin_date as text) from 11 for 11),6)),\r          opv.visit_begin_date,\r          opv.sign_in_date,\r          t2.type;\r    ""]",['分时就诊时间明细表\r   ']
28,his_bi,fun_dw_outp_patient_amount_m_16428,"
/***
函数名称：门诊患者费用相关指标月汇总
    作用：汇总统计某月门诊患者费用相关指标
  开发人：wy 2020-05-12
命名规范：FUN_模型层级(DW)_业务解释_日期类型M，M表示按月统计
业务解释：根据保存数据的DW表规划来的
    入参：v_start_month，v_end_month  格式均为yyyymm，可以一次运行多天的数据
		
		说明：由于采用INSERT INTO SELECT方式进行数据汇总后，再将结果插入到目标表的方式，
				  性能较低，可能会导致函数执行超过PG配置项statment_timeout所配置的超时时长，
				  从而导致函数执行被PG终结，采用PG COPY特性能大幅度提升该业务场景性能，操作步骤如下：
					1. 执行COPY TO命令将SELECT结果保存csv临时文件
					2. 执行COPY FROM命令将临时文件数据加载到目标表
					注意：该方案适用于数据量大且性能低下的统计，性能能满足要求的，为了方便开发、维护，可继续使用INSERT INTO SELECT方案
***/
DECLARE
  c_monthlist   record;
  o_start_month varchar;
  o_end_month   varchar;
  i_start_month varchar;
  i_end_month   varchar;
  i_count       int4;
	tmp_file 			varchar;  --COPY方案临时文件名：该文件将被保存在所连接的服务器的文件目录。
BEGIN
	/*
	  COPY方案临时文件名。
		注意：
		1. 该文件将被保存在所连接的服务器的文件目录中，每一个函数必须使用自定义能够与其他函数区分的文件名
		2. 方便维护，历史文件都保存到'/home/postgres/'目录中。
		TODO : 后续规划统一临时文件目录，KETTLE调度完成之后，需要删除对应的临时文件（*需要想办法在每台服务器上统一创建临时目录）
	*/
	tmp_file := '/home/postgres/fun_dw_outp_patient_amount_m.csv';
	
  /*如果指标没有历史指标数据，甘肃默认以202001开始计算，结束月份以当前月份往前推1个月*/
  select count(1),to_char((date_trunc('month', now()) + interval '-1 month'),'yyyymm')
	       into i_count,i_end_month
    from his_bi.dw_outp_patient_amount_m;
   
  if(i_count = 0)
    then 
      i_start_month := '202001';
      --raise notice '0 i_start_month is: %', i_start_month;
  else if(i_count > 0)
    then
      i_start_month := i_end_month;
      --raise notice '1 i_start_month is: %', i_start_month;
  end if;
  end if;
    
  if(length(trim(v_start_month)) = 0 and length(trim(v_end_month)) = 0)
  /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前月份前1个月为截止月份 */
    then 
      o_start_month := i_start_month;
      o_end_month := i_end_month;
      --raise notice '2 o_start_month is: %', o_start_month;
      --raise notice '2 o_end_month is: %', o_end_month;
  else if (length(trim(v_start_month)) <> 0 and length(trim(v_end_month)) <> 0)
  /*PG function 如果参入任何参数，那么以实际入参为准*/
    then 
      o_start_month := v_start_month;
      o_end_month := v_end_month;
      --raise notice '3 o_start_month is: %', o_start_month;
      --raise notice '3 o_end_month is: %', o_end_month;
  end if;
  end if;
  
  for c_monthlist in (select distinct month_id from his_bi.dim_date_info where month_id >= o_start_month and month_id <= o_end_month order by month_id)
  loop 
  
   --raise notice '4 c_monthlist.month_id is: %', c_monthlist.month_id;
   
    delete from his_bi.dw_outp_patient_amount_m where month_id = c_monthlist.month_id;
		 
	  -- 执行COPY命令，保存统计结果到临时文件（tmp_file）
		execute '
    copy (
		
		select
        '''||c_monthlist.month_id||''' as month_id,
        t1.patient_id,
        t1.visit_id,
        sum(case when t1.key=''D00014'' and d1.month_id='''||c_monthlist.month_id||''' then t1.value else 0 end  ) as total_fees,
        sum(case when t1.key=''D00017'' and d1.month_id='''||c_monthlist.month_id||''' then t1.value else 0 end  ) as pham_fees,
        sum(case when t1.key=''D00016'' and d1.month_id='''||c_monthlist.month_id||''' then t1.value else 0 end  ) as material_fees,
        sum(case when t1.key=''D00018'' and d1.month_id='''||c_monthlist.month_id||''' then t1.value else 0 end  ) as inspect_fees,
        sum(case when t1.key=''D00021'' and d1.month_id='''||c_monthlist.month_id||''' then t1.value else 0 end  ) as examination_fees,
				sum(case when t1.key=''D00020'' and d1.month_id='''||c_monthlist.month_id||''' then t1.value else 0 end  ) as cur_fees,
        sum(case when t1.key=''D00022'' and d1.month_id='''||c_monthlist.month_id||''' then t1.value else 0 end  ) as western_fees,
				sum(case when t1.key=''D00024'' and d1.month_id='''||c_monthlist.month_id||''' then t1.value else 0 end  ) as herb_fees,
        sum(case when t1.key=''D00023'' and d1.month_id='''||c_monthlist.month_id||''' then t1.value else 0 end  ) as chinese_patent_fees,
				sum(case when t1.key=''D00025'' and d1.month_id='''||c_monthlist.month_id||''' then t1.value else 0 end  ) as anti_pham_fees,
				sum(case when t1.key=''D00019'' and d1.month_id='''||c_monthlist.month_id||''' then t1.value else 0 end  ) as check_fees,
				sum(case when t1.key=''D00015'' and d1.month_id='''||c_monthlist.month_id||''' then t1.value else 0 end  ) as service_fess,
        sum(case when t1.key=''D00026'' and d1.month_id='''||c_monthlist.month_id||''' then t1.value else 0 end  ) as support_fess,
        sum(case when t1.key=''D00027'' and d1.month_id='''||c_monthlist.month_id||''' then t1.value else 0 end  ) as basic_fess,
        sum(case when t1.key=''D00028'' and d1.month_id='''||c_monthlist.month_id||''' then t1.value else 0 end  ) as key_point_fess,
        sum(case when t1.key=''D00029'' and d1.month_id='''||c_monthlist.month_id||''' then t1.value else 0 end  ) as non_res_fess,
        sum(case when t1.key=''D00030'' and d1.month_id='''||c_monthlist.month_id||''' then t1.value else 0 end  ) as res_fess,
        sum(case when t1.key=''D00031'' and d1.month_id='''||c_monthlist.month_id||''' then t1.value else 0 end  ) as special_fess,
        sum(case when t1.key=''D00145'' and d1.month_id='''||c_monthlist.month_id||''' then t1.value else 0 end  ) as tj_fess,
        sum(case when t1.key=''D00146'' and d1.month_id='''||c_monthlist.month_id||''' then t1.value else 0 end  ) as nurse_fess,
        sum(case when t1.key=''D00147'' and d1.month_id='''||c_monthlist.month_id||''' then t1.value else 0 end  ) as operation_fess,
        sum(case when t1.key=''D00148'' and d1.month_id='''||c_monthlist.month_id||''' then t1.value else 0 end  ) as tdsp_fess,
        sum(case when t1.key=''D00149'' and d1.month_id='''||c_monthlist.month_id||''' then t1.value else 0 end  ) as yntj_fess,
        sum(case when t1.key=''D01001'' and d1.month_id='''||c_monthlist.month_id||''' then t1.value else 0 end  ) as other_fees
    from his_bi.dwd_outp_income_d t1 
    left join his_bi.dim_date_info d1 on t1.st_date = d1.day_id and d1.month_id = '''||c_monthlist.month_id||'''
   where 1=1
     and t1.key in(''D00014'',''D00017'',''D00015'',''D00016'',''D00018'',
''D00019'',''D00020'',''D00021'',''D00022'',''D00023'',''D00024'',''D00025'',''D00026'',''D00027'',
''D00028'',''D00029'',''D00030'',''D00031'',''D00145'',''D00146'',''D00147'',''D00148'',''D00149'',''D01001'')
     and d1.month_id = '''||c_monthlist.month_id||'''
   group by
        t1.patient_id,
        t1.visit_id)to '''||tmp_file||''' WITH CSV' ;
			
			---- 执行COP FROM Y命令，将统计结果从临时文件加载到目标表（tmp_file）
      execute 'COPY his_bi.dw_outp_patient_amount_m FROM '''||tmp_file||''' WITH csv';
				 
   end loop;
   RETURN 'SUCCESS';  
END;
  ",[],"[""delete from his_bi.dw_outp_patient_amount_m where month_id = c_monthlist.month_id;\r   \r   -- 执行COPY命令，保存统计结果到临时文件（tmp_file）\r  execute '\r    copy (\r  \r  select\r        '''||c_monthlist.month_id||''' as month_id,\r        t1.patient_id,\r        t1.visit_id,\r        sum(case when t1.key=''D00014'' and d1.month_id='''||c_monthlist.month_id||''' then t1.value else 0 end  ) as total_fees,\r        sum(case when t1.key=''D00017'' and d1.month_id='''||c_monthlist.month_id||''' then t1.value else 0 end  ) as pham_fees,\r        sum(case when t1.key=''D00016'' and d1.month_id='''||c_monthlist.month_id||''' then t1.value else 0 end  ) as material_fees,\r        sum(case when t1.key=''D00018'' and d1.month_id='''||c_monthlist.month_id||''' then t1.value else 0 end  ) as inspect_fees,\r        sum(case when t1.key=''D00021'' and d1.month_id='''||c_monthlist.month_id||''' then t1.value else 0 end  ) as examination_fees,\r    sum(case when t1.key=''D00020'' and d1.month_id='''||c_monthlist.month_id||''' then t1.value else 0 end  ) as cur_fees,\r        sum(case when t1.key=''D00022'' and d1.month_id='''||c_monthlist.month_id||''' then t1.value else 0 end  ) as western_fees,\r    sum(case when t1.key=''D00024'' and d1.month_id='''||c_monthlist.month_id||''' then t1.value else 0 end  ) as herb_fees,\r        sum(case when t1.key=''D00023'' and d1.month_id='''||c_monthlist.month_id||''' then t1.value else 0 end  ) as chinese_patent_fees,\r    sum(case when t1.key=''D00025'' and d1.month_id='''||c_monthlist.month_id||''' then t1.value else 0 end  ) as anti_pham_fees,\r    sum(case when t1.key=''D00019'' and d1.month_id='''||c_monthlist.month_id||''' then t1.value else 0 end  ) as check_fees,\r    sum(case when t1.key=''D00015'' and d1.month_id='''||c_monthlist.month_id||''' then t1.value else 0 end  ) as service_fess,\r        sum(case when t1.key=''D00026'' and d1.month_id='''||c_monthlist.month_id||''' then t1.value else 0 end  ) as support_fess,\r        sum(case when t1.key=''D00027'' and d1.month_id='''||c_monthlist.month_id||''' then t1.value else 0 end  ) as basic_fess,\r        sum(case when t1.key=''D00028'' and d1.month_id='''||c_monthlist.month_id||''' then t1.value else 0 end  ) as key_point_fess,\r        sum(case when t1.key=''D00029'' and d1.month_id='''||c_monthlist.month_id||''' then t1.value else 0 end  ) as non_res_fess,\r        sum(case when t1.key=''D00030'' and d1.month_id='''||c_monthlist.month_id||''' then t1.value else 0 end  ) as res_fess,\r        sum(case when t1.key=''D00031'' and d1.month_id='''||c_monthlist.month_id||''' then t1.value else 0 end  ) as special_fess,\r        sum(case when t1.key=''D00145'' and d1.month_id='''||c_monthlist.month_id||''' then t1.value else 0 end  ) as tj_fess,\r        sum(case when t1.key=''D00146'' and d1.month_id='''||c_monthlist.month_id||''' then t1.value else 0 end  ) as nurse_fess,\r        sum(case when t1.key=''D00147'' and d1.month_id='''||c_monthlist.month_id||''' then t1.value else 0 end  ) as operation_fess,\r        sum(case when t1.key=''D00148'' and d1.month_id='''||c_monthlist.month_id||''' then t1.value else 0 end  ) as tdsp_fess,\r        sum(case when t1.key=''D00149'' and d1.month_id='''||c_monthlist.month_id||''' then t1.value else 0 end  ) as yntj_fess,\r        sum(case when t1.key=''D01001'' and d1.month_id='''||c_monthlist.month_id||''' then t1.value else 0 end  ) as other_fees\r    from his_bi.dwd_outp_income_d t1 \r    left join his_bi.dim_date_info d1 on t1.st_date = d1.day_id and d1.month_id = '''||c_monthlist.month_id||'''\r   where 1=1\r     and t1.key in(''D00014'',''D00017'',''D00015'',''D00016'',''D00018'',\r''D00019'',''D00020'',''D00021'',''D00022'',''D00023'',''D00024'',''D00025'',''D00026'',''D00027'',\r''D00028'',''D00029'',''D00030'',''D00031'',''D00145'',''D00146'',''D00147'',''D00148'',''D00149'',''D01001'')\r     and d1.month_id = '''||c_monthlist.month_id||'''\r   group by\r        t1.patient_id,\r        t1.visit_id)to '''||tmp_file||''' WITH CSV' ;\r   \r   ---- 执行COP FROM Y命令，将统计结果从临时文件加载到目标表（tmp_file）\r      execute 'COPY his_bi.dw_outp_patient_amount_m FROM '''||tmp_file||''' WITH csv';\r     \r  ""]",['门诊患者费用相关指标月汇总\r   ']
29,his_bi,fun_dw_outp_patient_info_m_16430,"
/***
函数名称：门诊患者就诊相关指标月汇总
    作用：汇总统计某月门诊患者相关指标
  开发人：liuf 2020-05-09
命名规范：FUN_模型层级(DW)_业务解释_日期类型M，M表示按月统计
业务解释：根据保存数据的DW表规划来的
    入参：v_start_month，v_end_month  格式均为yyyymm，可以一次运行多天的数据
		
		说明：由于采用INSERT INTO SELECT方式进行数据汇总后，再将结果插入到目标表的方式，
				  性能较低，可能会导致函数执行超过PG配置项statment_timeout所配置的超时时长，
				  从而导致函数执行被PG终结，采用PG COPY特性能大幅度提升该业务场景性能，操作步骤如下：
					1. 执行COPY TO命令将SELECT结果保存csv临时文件
					2. 执行COPY FROM命令将临时文件数据加载到目标表
					注意：该方案适用于数据量大且性能低下的统计，性能能满足要求的，为了方便开发、维护，可继续使用INSERT INTO SELECT方案
***/
DECLARE
  c_monthlist   record;
  o_start_month varchar;
  o_end_month   varchar;
  i_start_month varchar;
  i_end_month   varchar;
  i_count       int4;
	tmp_file 			varchar;  --COPY方案临时文件名：该文件将被保存在所连接的服务器的文件目录。
BEGIN
	/*
	  COPY方案临时文件名。
		注意：
		1. 该文件将被保存在所连接的服务器的文件目录中，每一个函数必须使用自定义能够与其他函数区分的文件名
		2. 方便维护，历史文件都保存到'/home/postgres/'目录中。
		TODO : 后续规划统一临时文件目录，KETTLE调度完成之后，需要删除对应的临时文件（*需要想办法在每台服务器上统一创建临时目录）
	*/
	tmp_file := '/home/postgres/fun_dw_outp_patient_info_m.csv';
	
  /*如果指标没有历史指标数据，甘肃默认以202001开始计算，结束月份以当前月份往前推1个月*/
  select count(1),to_char((date_trunc('month', now()) + interval '-1 month'),'yyyymm')
	       into i_count,i_end_month
    from his_bi.dw_outp_patient_info_m;
   
  if(i_count = 0)
    then 
      i_start_month := '202001';
      --raise notice '0 i_start_month is: %', i_start_month;
  else if(i_count > 0)
    then
      i_start_month := i_end_month;
      --raise notice '1 i_start_month is: %', i_start_month;
  end if;
  end if;
    
  if(length(trim(v_start_month)) = 0 and length(trim(v_end_month)) = 0)
  /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前月份前1个月为截止月份 */
    then 
      o_start_month := i_start_month;
      o_end_month := i_end_month;
      --raise notice '2 o_start_month is: %', o_start_month;
      --raise notice '2 o_end_month is: %', o_end_month;
  else if (length(trim(v_start_month)) <> 0 and length(trim(v_end_month)) <> 0)
  /*PG function 如果参入任何参数，那么以实际入参为准*/
    then 
      o_start_month := v_start_month;
      o_end_month := v_end_month;
      --raise notice '3 o_start_month is: %', o_start_month;
      --raise notice '3 o_end_month is: %', o_end_month;
  end if;
  end if;
  
  for c_monthlist in (select distinct month_id from his_bi.dim_date_info where month_id >= o_start_month and month_id <= o_end_month order by month_id)
  loop 
  
   --raise notice '4 c_monthlist.month_id is: %', c_monthlist.month_id;
   
    delete from his_bi.dw_outp_patient_info_m where month_id = c_monthlist.month_id;
		 
	  insert into his_bi.dw_outp_patient_info_m
		select c_monthlist.month_id                                                           as month_id,
       pt.patient_id,
       pt.visit_id,
       pt.outp_visit_id,
       pt.pati_name,
       case
           when pt.birth_date > now() then -1
           else cast(split_part(cast(age(CURRENT_DATE, pt.birth_date) as text), ' ', 1) as numeric)
           end                                                            as pati_age,
			 pt.pati_sex,
			 pt.dept_code,
			 pt.visit_begin_date,
			 pt.ghsj,
			 wd1.outp_type_code                                            as outp_type_code,
				wd1.return_visit                                              as return_visit,
				wd1.registry_resource                                         as registry_resource,
				wd1.is_emergency                                              as is_emergency,
				wd1.is_keep                                                   as is_keep,
				wd1.is_tj                                                     as is_tj,
				wd1.is_visited                                                as is_visited,
				wq1.is_use_fxzjkjy                                         as is_use_fxzjkjy,
				wq1.is_use_xzjkjyw                                            as is_use_xzjkjyw,
				wq1.is_use_tsjkjyw                                            as is_use_tsjkjyw,
				wq1.cf_num                                                    as cf_num,
				wq1.kjyw_cf_num                                               as kjyw_cf_num,
				wq1.jmsy_cf_num                                               as jmsy_cf_num,
				wq1.jz_cf_num                                                 as jz_cf_num,
				wq1.jz_kjyw_cf_num                                            as jz_kjyw_cf_num,
				wq1.jz_jmsy_cf_num                                            as jz_jmsy_cf_num,
				wd1.is_yygh                                                   as is_yygh,
				wd1.is_yyjc                                                   as is_yyjc,
				wq1.kjyw_ddd_sum                                              as kjyw_ddd_sum,
				wq1.fxzj_kjyw_ddd_sum                                         as fxzj_kjyw_ddd_sum,
				wq1.xzj_kjyw_ddd_sum                                          as xzj_kjyw_ddd_sum,
				wq1.tsj_kjyw_ddd_sum                                          as tsj_kjyw_ddd_sum,
				split_part(cast(age(CURRENT_DATE, pt.birth_date) as text), ' ', 2) as age_tag,
				pt.outp_special_id,
				pt.hospital_area_code,
				wg1.outp_diag_code                                            as outp_diag_code,
				wg1.outp_diag_name                                            as outp_diag_name,
				wg1.outp_diag_strcode                                         as outp_diag_strcode,
				wg1.outp_diag_strname                                         as outp_diag_strname,
				pt.admission_doctor,
				um.people_name,
				wq18.value                                                   as total_fees
				from his_bi.pts_outp_patient_visit pt
								 left join his_bi.uum_uum_user um on pt.admission_doctor = um.user_name
								 left join (
						select wd1.outp_visit_id,
									 max(case when wd1.key = 'D00132' then wd1.value end)              as outp_type_code,
									 max(case when wd1.key = 'D00135' then wd1.value end)              as return_visit,
									 max(case when wd1.key = 'D00138' then wd1.value end)              as registry_resource,
									 max(case when wd1.key = 'D00129' then wd1.value end)              as is_emergency,
									 max(case when wd1.key = 'D00130' then wd1.value end)              as is_keep,
									 max(case when wd1.key = 'D00131' then wd1.value end)              as is_tj,
									 max(case when wd1.key = 'D00133' then COALESCE(wd1.value, 0) end) as is_visited,
									 max(case when wd1.key = 'D00139' then wd1.value end)              as is_yygh,
									 max(case when wd1.key = 'D00140' then wd1.value end)              as is_yyjc
						from his_bi.dwd_outp_work_d wd1
						inner join his_bi.dim_date_info d4 on wd1.st_date = d4.day_id and d4.month_id = c_monthlist.month_id
						where wd1.key in ('D00132', 'D00135', 'D00138', 'D00129', 'D00130', 'D00131', 'D00133', 'D00139', 'D00140')
						group by wd1.outp_visit_id
				) wd1 on pt.outp_visit_id = wd1.outp_visit_id
								 left join (
						select
									 wq1.outp_visit_id,
									 max(case when wq1.key = 'D00032' then wq1.value end) as is_use_fxzjkjy,
									 max(case when wq1.key = 'D00033' then wq1.value end) as is_use_xzjkjyw,
									 max(case when wq1.key = 'D00034' then wq1.value end) as is_use_tsjkjyw,
									 sum(case when wq1.key = 'D00035' then wq1.value end) as cf_num,
									 sum(case when wq1.key = 'D00036' then wq1.value end) as kjyw_cf_num,
									 sum(case when wq1.key = 'D00037' then wq1.value end) as jmsy_cf_num,
									 sum(case when wq1.key = 'D00038' then wq1.value end) as jz_cf_num,
									 sum(case when wq1.key = 'D00039' then wq1.value end) as jz_kjyw_cf_num,
									 sum(case when wq1.key = 'D00040' then wq1.value end) as jz_jmsy_cf_num,
									 sum(case when wq1.key = 'D00141' then wq1.value end) as kjyw_ddd_sum,
									 sum(case when wq1.key = 'D00142' then wq1.value end) as fxzj_kjyw_ddd_sum,
									 sum(case when wq1.key = 'D00143' then wq1.value end) as xzj_kjyw_ddd_sum,
									 sum(case when wq1.key = 'D00144' then wq1.value end) as tsj_kjyw_ddd_sum
						from his_bi.dwd_outp_quantity_d wq1
						inner join his_bi.dim_date_info d5 on wq1.st_date = d5.day_id and d5.month_id = c_monthlist.month_id
						where wq1.key in
									('D00032', 'D00033', 'D00034', 'D00035', 'D00036', 'D00037', 'D00038', 'D00039', 'D00040', 'D00141', 'D00142',
									 'D00143', 'D00144')
						group by wq1.outp_visit_id
				) wq1 on pt.outp_visit_id = wq1.outp_visit_id
								 left join (
						select wg1.st_date,
									 wg1.patient_id,
									 wg1.visit_id,
									 max(case when wg1.key = 'D00248' then wg1.value end) as outp_diag_code,
									 max(case when wg1.key = 'D00250' then wg1.value end) as outp_diag_name,
									 max(case when wg1.key = 'D00249' then wg1.value end) as outp_diag_strcode,
									 max(case when wg1.key = 'D00251' then wg1.value end) as outp_diag_strname
						from his_bi.dwd_outp_diag_d wg1
						where wg1.key in ('D00248', 'D00249', 'D00250', 'D00251')
						group by wg1.st_date,
										 wg1.patient_id,
										 wg1.visit_id
				) wg1 on pt.patient_id = wg1.patient_id and pt.visit_id = wg1.visit_id
								 left join his_bi.dim_date_info d2 on wg1.st_date = d2.day_id and d2.month_id = c_monthlist.month_id
								 left join (select ind.outp_visit_id, sum(ind.value) as value
														from his_bi.dwd_outp_income_d ind
														inner join his_bi.dim_date_info d6 on ind.st_date = d6.day_id and d6.month_id = c_monthlist.month_id
														where ind.key = 'D00014'
														group by ind.outp_visit_id) wq18
													 on pt.outp_visit_id = wq18.outp_visit_id
				where 1 = 1
					and pt.registry_flag IN ('0', '1')
					---and pt.outp_visit_id='270799'
					and pt.ghsj >= to_date(c_monthlist.month_id, 'yyyymm')
					and pt.ghsj < to_date(c_monthlist.month_id, 'yyyymm') + interval '1' month;
				 
   end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00014'],"[""delete from his_bi.dw_outp_patient_info_m where month_id = c_monthlist.month_id;\r   \r   insert into his_bi.dw_outp_patient_info_m\r  select c_monthlist.month_id                                                           as month_id,\r       pt.patient_id,\r       pt.visit_id,\r       pt.outp_visit_id,\r       pt.pati_name,\r       case\r           when pt.birth_date > now() then -1\r           else cast(split_part(cast(age(CURRENT_DATE, pt.birth_date) as text), ' ', 1) as numeric)\r           end                                                            as pati_age,\r    pt.pati_sex,\r    pt.dept_code,\r    pt.visit_begin_date,\r    pt.ghsj,\r    wd1.outp_type_code                                            as outp_type_code,\r    wd1.return_visit                                              as return_visit,\r    wd1.registry_resource                                         as registry_resource,\r    wd1.is_emergency                                              as is_emergency,\r    wd1.is_keep                                                   as is_keep,\r    wd1.is_tj                                                     as is_tj,\r    wd1.is_visited                                                as is_visited,\r    wq1.is_use_fxzjkjy                                         as is_use_fxzjkjy,\r    wq1.is_use_xzjkjyw                                            as is_use_xzjkjyw,\r    wq1.is_use_tsjkjyw                                            as is_use_tsjkjyw,\r    wq1.cf_num                                                    as cf_num,\r    wq1.kjyw_cf_num                                               as kjyw_cf_num,\r    wq1.jmsy_cf_num                                               as jmsy_cf_num,\r    wq1.jz_cf_num                                                 as jz_cf_num,\r    wq1.jz_kjyw_cf_num                                            as jz_kjyw_cf_num,\r    wq1.jz_jmsy_cf_num                                            as jz_jmsy_cf_num,\r    wd1.is_yygh                                                   as is_yygh,\r    wd1.is_yyjc                                                   as is_yyjc,\r    wq1.kjyw_ddd_sum                                              as kjyw_ddd_sum,\r    wq1.fxzj_kjyw_ddd_sum                                         as fxzj_kjyw_ddd_sum,\r    wq1.xzj_kjyw_ddd_sum                                          as xzj_kjyw_ddd_sum,\r    wq1.tsj_kjyw_ddd_sum                                          as tsj_kjyw_ddd_sum,\r    split_part(cast(age(CURRENT_DATE, pt.birth_date) as text), ' ', 2) as age_tag,\r    pt.outp_special_id,\r    pt.hospital_area_code,\r    wg1.outp_diag_code                                            as outp_diag_code,\r    wg1.outp_diag_name                                            as outp_diag_name,\r    wg1.outp_diag_strcode                                         as outp_diag_strcode,\r    wg1.outp_diag_strname                                         as outp_diag_strname,\r    pt.admission_doctor,\r    um.people_name,\r    wq18.value                                                   as total_fees\r    from his_bi.pts_outp_patient_visit pt\r         left join his_bi.uum_uum_user um on pt.admission_doctor = um.user_name\r         left join (\r      select wd1.outp_visit_id,\r          max(case when wd1.key = 'D00132' then wd1.value end)              as outp_type_code,\r          max(case when wd1.key = 'D00135' then wd1.value end)              as return_visit,\r          max(case when wd1.key = 'D00138' then wd1.value end)              as registry_resource,\r          max(case when wd1.key = 'D00129' then wd1.value end)              as is_emergency,\r          max(case when wd1.key = 'D00130' then wd1.value end)              as is_keep,\r          max(case when wd1.key = 'D00131' then wd1.value end)              as is_tj,\r          max(case when wd1.key = 'D00133' then COALESCE(wd1.value, 0) end) as is_visited,\r          max(case when wd1.key = 'D00139' then wd1.value end)              as is_yygh,\r          max(case when wd1.key = 'D00140' then wd1.value end)              as is_yyjc\r      from his_bi.dwd_outp_work_d wd1\r      inner join his_bi.dim_date_info d4 on wd1.st_date = d4.day_id and d4.month_id = c_monthlist.month_id\r      where wd1.key in ('D00132', 'D00135', 'D00138', 'D00129', 'D00130', 'D00131', 'D00133', 'D00139', 'D00140')\r      group by wd1.outp_visit_id\r    ) wd1 on pt.outp_visit_id = wd1.outp_visit_id\r         left join (\r      select\r          wq1.outp_visit_id,\r          max(case when wq1.key = 'D00032' then wq1.value end) as is_use_fxzjkjy,\r          max(case when wq1.key = 'D00033' then wq1.value end) as is_use_xzjkjyw,\r          max(case when wq1.key = 'D00034' then wq1.value end) as is_use_tsjkjyw,\r          sum(case when wq1.key = 'D00035' then wq1.value end) as cf_num,\r          sum(case when wq1.key = 'D00036' then wq1.value end) as kjyw_cf_num,\r          sum(case when wq1.key = 'D00037' then wq1.value end) as jmsy_cf_num,\r          sum(case when wq1.key = 'D00038' then wq1.value end) as jz_cf_num,\r          sum(case when wq1.key = 'D00039' then wq1.value end) as jz_kjyw_cf_num,\r          sum(case when wq1.key = 'D00040' then wq1.value end) as jz_jmsy_cf_num,\r          sum(case when wq1.key = 'D00141' then wq1.value end) as kjyw_ddd_sum,\r          sum(case when wq1.key = 'D00142' then wq1.value end) as fxzj_kjyw_ddd_sum,\r          sum(case when wq1.key = 'D00143' then wq1.value end) as xzj_kjyw_ddd_sum,\r          sum(case when wq1.key = 'D00144' then wq1.value end) as tsj_kjyw_ddd_sum\r      from his_bi.dwd_outp_quantity_d wq1\r      inner join his_bi.dim_date_info d5 on wq1.st_date = d5.day_id and d5.month_id = c_monthlist.month_id\r      where wq1.key in\r         ('D00032', 'D00033', 'D00034', 'D00035', 'D00036', 'D00037', 'D00038', 'D00039', 'D00040', 'D00141', 'D00142',\r          'D00143', 'D00144')\r      group by wq1.outp_visit_id\r    ) wq1 on pt.outp_visit_id = wq1.outp_visit_id\r         left join (\r      select wg1.st_date,\r          wg1.patient_id,\r          wg1.visit_id,\r          max(case when wg1.key = 'D00248' then wg1.value end) as outp_diag_code,\r          max(case when wg1.key = 'D00250' then wg1.value end) as outp_diag_name,\r          max(case when wg1.key = 'D00249' then wg1.value end) as outp_diag_strcode,\r          max(case when wg1.key = 'D00251' then wg1.value end) as outp_diag_strname\r      from his_bi.dwd_outp_diag_d wg1\r      where wg1.key in ('D00248', 'D00249', 'D00250', 'D00251')\r      group by wg1.st_date,\r           wg1.patient_id,\r           wg1.visit_id\r    ) wg1 on pt.patient_id = wg1.patient_id and pt.visit_id = wg1.visit_id\r         left join his_bi.dim_date_info d2 on wg1.st_date = d2.day_id and d2.month_id = c_monthlist.month_id\r         left join (select ind.outp_visit_id, sum(ind.value) as value\r              from his_bi.dwd_outp_income_d ind\r              inner join his_bi.dim_date_info d6 on ind.st_date = d6.day_id and d6.month_id = c_monthlist.month_id\r              where ind.key = 'D00014'\r              group by ind.outp_visit_id) wq18\r              on pt.outp_visit_id = wq18.outp_visit_id\r    where 1 = 1\r     and pt.registry_flag IN ('0', '1')\r     ---and pt.outp_visit_id='270799'\r     and pt.ghsj >= to_date(c_monthlist.month_id, 'yyyymm')\r     and pt.ghsj < to_date(c_monthlist.month_id, 'yyyymm') + interval '1' month;\r     \r  ""]",['门诊患者就诊相关指标月汇总\r   ']
30,his_bi,fun_dw_work_yj_doctor_d_16432,"
/***
函数名称：医技科室检查-检验工作量汇总
    作用：医技科室检查-检验工作量表
  开发人：liuf 2020年7月2日 
命名规范：FUN_模型层级(DWD或者DW)_业务表描叙_日期类型D或者M，D表示按天统计，M表示按月统计
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
  c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN
	
  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dw_work_yj_doctor_d
	 ;
   
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	  for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	  loop 
    --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
    
    delete from his_bi.dw_work_yj_doctor_d where st_date = c_daylist.day_id;
    
		insert into his_bi.dw_work_yj_doctor_d
		(
			st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,
			diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,
			item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         
		)
		SELECT st_date,
			项目父编码 item_code,
			项目父名称 item_name,
			开单科室编码 dept_code,
			开单科室 dept_name,
			parent_dept_code,
			parent_dept_name,
			diag_emp_id,
			diag_emp_name, 
			执行科室编码 AS performed_dept_code,
			执行科室 AS performed_dept_name,
			in_out_flag,
			item_class,
			次数 AS amount, 
			人次 AS patient_num,
			费用 AS charges,
			area_code,
			work_dept AS work_dept_code,
			NAME AS work_dept_name,
			now()
 FROM 
			(
			SELECT to_char(m.enter_date,'yyyymmdd') st_date,
						 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
						 m.in_out_flag,
						 t2.property1 AS area_code,
						 m.performed_by 执行科室编码,     
						 t1.name AS 执行科室,
						 m.ordered_by 开单科室编码,
						 t2.name AS 开单科室, 
						 n1.code as parent_dept_code,
						 n1.name as parent_dept_name,
						 m.diag_emp_id,
						 m.diag_emp_name,
						 SUM(m.charges) 费用,
						 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
						 m.clinic_id 项目父编码,
						 tt.item_name 项目父名称,
						 m.item_class, 
						 u.work_dept,  
						 n2.name
		FROM his_bi.bms_bill_item  m
		left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
		left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
		left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
		LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
		left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
		left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
		WHERE m.item_name <> '体检费'    --排除体检
		AND m.refund_flag IS NULL 
		AND m.rel_refund_id IS NULL
		AND m.item_class IN ('C','D')
		and t2.property1 in ('H0001')
		AND t1.property3='4'   --执行科室为医技科室
		AND m.in_out_flag='O'
		AND m.clinic_id IS NOT NULL
		AND m.enter_date>= to_date(c_daylist.day_id,'yyyyMMdd')
		AND m.enter_date<  to_date(c_daylist.day_id,'yyyyMMdd') + 1
		GROUP BY   to_char(m.enter_date,'yyyymmdd'),
						 m.in_out_flag, 
						 t2.property1 ,
						 m.performed_by,
						 t1.name ,
						 m.ordered_by, 
						 t2.name,
						 tt.item_name,
						 m.clinic_id ,
						 m.item_class,
							m.diag_emp_id,
						 m.diag_emp_name,
						 u.work_dept,  
						 n2.name,
						 n1.code ,
						 n1.name
		UNION ALL
		SELECT   to_char(m.enter_date,'yyyymmdd') st_date,
						 count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,
						 m.in_out_flag,
						 t2.property1 AS area_code,
						 m.performed_by 执行科室编码,     
						 t1.name AS 执行科室,
						 m.ordered_by 开单科室编码,
						 t2.name AS 开单科室,
						 n1.code as parent_dept_code,
						 n1.name as parent_dept_name, 
						 m.diag_emp_id,
						 m.diag_emp_name,
						 SUM(m.charges) 费用,
						 count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,
						 m.clinic_id 项目父编码,
						 tt.item_name 项目父名称,
						 m.item_class,
						 u.work_dept,  
						 n2.name
		FROM his_bi.bms_bill_item  m
		left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id
		left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code
		left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code
		LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id
		left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name
		left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code
		WHERE m.item_class IN ('C','D')
		AND m.refund_flag IS NULL 
		AND m.rel_refund_id IS NULL
		and t2.property1 in ('H0001')
		AND t1.property3='4'  --执行科室为医技科室
		AND m.in_out_flag='I'
		AND m.clinic_id IS NOT NULL
		AND m.enter_date>= to_date(c_daylist.day_id,'yyyyMMdd')
		AND m.enter_date<  to_date(c_daylist.day_id,'yyyyMMdd') + 1
		GROUP BY   to_char(m.enter_date,'yyyymmdd'),
						 m.in_out_flag, 
						 t2.property1 ,
						 m.performed_by,
						 t1.name ,
						 m.ordered_by, 
						 t2.name,
						 tt.item_name,
						 m.clinic_id ,
						 m.item_class,
							m.diag_emp_id,
						 m.diag_emp_name,
						 u.work_dept,  
						 n2.name,
						 n1.code ,
						 n1.name
						 ) as total
			;

   end loop;
   RETURN 'SUCCESS';  
END;
  ",[],"[""delete from his_bi.dw_work_yj_doctor_d where st_date = c_daylist.day_id;\r    \r  insert into his_bi.dw_work_yj_doctor_d\r  (\r   st_date,item_code,item_name,dept_code,dept_name,parent_dept_code,parent_dept_name,\r   diag_emp_id,diag_emp_name,performed_dept_code,performed_dept_name,in_out_flag,\r   item_class,amount,patient_num,charges,area_code,work_dept_code,work_dept_name,insert_time         \r  )\r  SELECT st_date,\r   项目父编码 item_code,\r   项目父名称 item_name,\r   开单科室编码 dept_code,\r   开单科室 dept_name,\r   parent_dept_code,\r   parent_dept_name,\r   diag_emp_id,\r   diag_emp_name, \r   执行科室编码 AS performed_dept_code,\r   执行科室 AS performed_dept_name,\r   in_out_flag,\r   item_class,\r   次数 AS amount, \r   人次 AS patient_num,\r   费用 AS charges,\r   area_code,\r   work_dept AS work_dept_code,\r   NAME AS work_dept_name,\r   now()\r FROM \r   (\r   SELECT to_char(m.enter_date,'yyyymmdd') st_date,\r       count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,\r       m.in_out_flag,\r       t2.property1 AS area_code,\r       m.performed_by 执行科室编码,     \r       t1.name AS 执行科室,\r       m.ordered_by 开单科室编码,\r       t2.name AS 开单科室, \r       n1.code as parent_dept_code,\r       n1.name as parent_dept_name,\r       m.diag_emp_id,\r       m.diag_emp_name,\r       SUM(m.charges) 费用,\r       count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,\r       m.clinic_id 项目父编码,\r       tt.item_name 项目父名称,\r       m.item_class, \r       u.work_dept,  \r       n2.name\r  FROM his_bi.bms_bill_item  m\r  left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id\r  left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code\r  left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code\r  LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id\r  left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name\r  left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code\r  WHERE m.item_name <> '体检费'    --排除体检\r  AND m.refund_flag IS NULL \r  AND m.rel_refund_id IS NULL\r  AND m.item_class IN ('C','D')\r  and t2.property1 in ('H0001')\r  AND t1.property3='4'   --执行科室为医技科室\r  AND m.in_out_flag='O'\r  AND m.clinic_id IS NOT NULL\r  AND m.enter_date>= to_date(c_daylist.day_id,'yyyyMMdd')\r  AND m.enter_date<  to_date(c_daylist.day_id,'yyyyMMdd') + 1\r  GROUP BY   to_char(m.enter_date,'yyyymmdd'),\r       m.in_out_flag, \r       t2.property1 ,\r       m.performed_by,\r       t1.name ,\r       m.ordered_by, \r       t2.name,\r       tt.item_name,\r       m.clinic_id ,\r       m.item_class,\r       m.diag_emp_id,\r       m.diag_emp_name,\r       u.work_dept,  \r       n2.name,\r       n1.code ,\r       n1.name\r  UNION ALL\r  SELECT   to_char(m.enter_date,'yyyymmdd') st_date,\r       count(DISTINCT concat(m.patient_id,m.visit_id)) AS 人次,\r       m.in_out_flag,\r       t2.property1 AS area_code,\r       m.performed_by 执行科室编码,     \r       t1.name AS 执行科室,\r       m.ordered_by 开单科室编码,\r       t2.name AS 开单科室,\r       n1.code as parent_dept_code,\r       n1.name as parent_dept_name, \r       m.diag_emp_id,\r       m.diag_emp_name,\r       SUM(m.charges) 费用,\r       count(DISTINCT concat(m.order_id,m.clinic_id)) AS 次数,\r       m.clinic_id 项目父编码,\r       tt.item_name 项目父名称,\r       m.item_class,\r       u.work_dept,  \r       n2.name\r  FROM his_bi.bms_bill_item  m\r  left join his_bi.bds_bds_clinic_item_list tt on m.clinic_id = tt.id\r  left join his_bi.bds_bds_organization t1 on m.performed_by = t1.code\r  left join his_bi.bds_bds_organization t2 on m.ordered_by = t2.code\r  LEFT join his_bi.bds_bds_organization n1 on t2.parent_id = n1.id\r  left join his_bi.uum_uum_user u on m.diag_emp_id = u.user_name\r  left join his_bi.bds_bds_organization n2 on u.work_dept = n2.code\r  WHERE m.item_class IN ('C','D')\r  AND m.refund_flag IS NULL \r  AND m.rel_refund_id IS NULL\r  and t2.property1 in ('H0001')\r  AND t1.property3='4'  --执行科室为医技科室\r  AND m.in_out_flag='I'\r  AND m.clinic_id IS NOT NULL\r  AND m.enter_date>= to_date(c_daylist.day_id,'yyyyMMdd')\r  AND m.enter_date<  to_date(c_daylist.day_id,'yyyyMMdd') + 1\r  GROUP BY   to_char(m.enter_date,'yyyymmdd'),\r       m.in_out_flag, \r       t2.property1 ,\r       m.performed_by,\r       t1.name ,\r       m.ordered_by, \r       t2.name,\r       tt.item_name,\r       m.clinic_id ,\r       m.item_class,\r       m.diag_emp_id,\r       m.diag_emp_name,\r       u.work_dept,  \r       n2.name,\r       n1.code ,\r       n1.name\r       ) as total\r   ;\r\r  ""]",['医技科室检查-检验工作量汇总\r   ']
31,his_bi,fun_dwd_D00014_d_16434,"
/***
函数名称：门诊患者总费用
    作用：统计某天患者总费用
  开发人：liuf 2020-04-07
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00014  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_outp_income_d
	 where key = 'D00014';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_outp_income_d where st_date = c_daylist.day_id and key = 'D00014';
	
  INSERT into his_bi.dwd_outp_income_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,
																			 remark,st_date) 
  select 
				 'D00014',
				 coalesce(sum(t.charges),0),
				 t.patient_id,
				 t.visit_id,
				 t1.outp_visit_id,
         now(),
			  '门诊患者总费用',
			  to_char(t.enter_date,'yyyymmdd') AS st_date
   from his_bi.bms_bill_item t
	 left join his_bi.pts_outp_patient_visit t1 on t.patient_id = t1.patient_id and t.visit_id = t1.visit_id
  where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')
    and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
    and t.in_out_flag = 'O' --只统计门诊患者
    and t.charges<>0
  group by to_char(t.enter_date,'yyyymmdd'),
					 t.patient_id,
					 t.visit_id,
				   t1.outp_visit_id;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00014'],"[""delete from his_bi.dwd_outp_income_d where st_date = c_daylist.day_id and key = 'D00014';\r \r  INSERT into his_bi.dwd_outp_income_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,\r                    remark,st_date) \r  select \r     'D00014',\r     coalesce(sum(t.charges),0),\r     t.patient_id,\r     t.visit_id,\r     t1.outp_visit_id,\r         now(),\r     '门诊患者总费用',\r     to_char(t.enter_date,'yyyymmdd') AS st_date\r   from his_bi.bms_bill_item t\r  left join his_bi.pts_outp_patient_visit t1 on t.patient_id = t1.patient_id and t.visit_id = t1.visit_id\r  where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r    and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1\r    and t.in_out_flag = 'O' --只统计门诊患者\r    and t.charges<>0\r  group by to_char(t.enter_date,'yyyymmdd'),\r      t.patient_id,\r      t.visit_id,\r       t1.outp_visit_id;\r \r ""]",['门诊患者总费用\r   ']
32,his_bi,fun_dwd_D00015_d_16435,"
/***
函数名称：门诊医疗服务费
    作用：统计某天门诊医疗服务费（费用以价表进行统计TJ0030）
  开发人：liuf 2020-04-07
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00015  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_outp_income_d
	 where key = 'D00015';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_outp_income_d where st_date = c_daylist.day_id and key = 'D00015';
	
  INSERT into his_bi.dwd_outp_income_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,
																			 remark,st_date) 
  select 
				 'D00015',
				 coalesce(sum(t.charges),0),
				 t.patient_id,
				 t.visit_id,
				 t1.outp_visit_id,
         now(),
			  '门诊医疗服务费',
			  to_char(t.enter_date,'yyyymmdd') AS st_date
   from his_bi.bms_bill_item t
   left join his_bi.pts_outp_patient_visit t1 on t.patient_id = t1.patient_id and t.visit_id = t1.visit_id
  where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')
    and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
    and t.in_out_flag = 'O' --只统计门诊患者
		and t.item_class not in('A','B','N','I','C','D','L')
		--排除中、西、草药、材料、检查、检验、膳食费用
		and t.charges<>0
  group by to_char(t.enter_date,'yyyymmdd'),
					 t.patient_id,
					 t.visit_id,
				   t1.outp_visit_id;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00015'],"[""delete from his_bi.dwd_outp_income_d where st_date = c_daylist.day_id and key = 'D00015';\r \r  INSERT into his_bi.dwd_outp_income_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,\r                    remark,st_date) \r  select \r     'D00015',\r     coalesce(sum(t.charges),0),\r     t.patient_id,\r     t.visit_id,\r     t1.outp_visit_id,\r         now(),\r     '门诊医疗服务费',\r     to_char(t.enter_date,'yyyymmdd') AS st_date\r   from his_bi.bms_bill_item t\r   left join his_bi.pts_outp_patient_visit t1 on t.patient_id = t1.patient_id and t.visit_id = t1.visit_id\r  where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r    and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1\r    and t.in_out_flag = 'O' --只统计门诊患者\r  and t.item_class not in('A','B','N','I','C','D','L')\r  --排除中、西、草药、材料、检查、检验、膳食费用\r  and t.charges<>0\r  group by to_char(t.enter_date,'yyyymmdd'),\r      t.patient_id,\r      t.visit_id,\r       t1.outp_visit_id;\r \r ""]",['门诊医疗服务费\r   ']
33,his_bi,fun_dwd_D00032_d_16452,"
/***
函数名称：抗菌药物—门诊非限制性抗菌药物使用统计
    作用：统计某天门诊患者中使用了非限制性抗菌药物的人数
  开发人：liuf 2020-03-31
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00032  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_outp_quantity_d
	 where key = 'D00032';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		

  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_outp_quantity_d where st_date = c_daylist.day_id and key = 'D00032';
	
  INSERT into his_bi.dwd_outp_quantity_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,
																						remark,st_date) 
  select 
		     'D00032',
			   '1',
				 tmp.patient_id,
				 tmp.visit_id,
				 tmp.outp_visit_id,
				 now(),
				 '是否使用非限制级抗菌药物', 
				 tmp.st_date
    from (select to_char(pt.registering_time,'yyyyMMdd') as st_date,
								 pt.outp_visit_id,
							   pt.patient_id,
							   pt.visit_id
					  from his_bi.pts_outp_patient_visit pt
					 where pt.registry_flag <>3 --3表示作废
             and pt.reg_sequence is not null
             and pt.registering_time >= to_date(c_daylist.day_id,'yyyyMMdd')
             and pt.registering_time <  to_date(c_daylist.day_id,'yyyyMMdd')+1
		       group by to_char(pt.registering_time,'yyyyMMdd'),
										pt.outp_visit_id,
                    pt.patient_id,
                    pt.visit_id) tmp 
	    inner join his_bi.bms_bill_item bm 
			        on (tmp.patient_id = bm.patient_id 
						      and tmp.visit_id = bm.visit_id 
									and bm.in_out_flag = 'O')
			     where exists (select 1 from his_bi.dms_pham_cust_def_cont 
			                    where cont_type_id = 'TJ0055' 
										        and cont_value = '1' 
											      and pham_std_code = bm.item_code)
           group by tmp.st_date,
                    tmp.outp_visit_id,
                    tmp.patient_id,
                    tmp.visit_id;
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00032'],"[""delete from his_bi.dwd_outp_quantity_d where st_date = c_daylist.day_id and key = 'D00032';   INSERT into his_bi.dwd_outp_quantity_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,                      remark,st_date)   select        'D00032',      '1',     tmp.patient_id,     tmp.visit_id,     tmp.outp_visit_id,     now(),     '是否使用非限制级抗菌药物',      tmp.st_date    from (select to_char(pt.registering_time,'yyyyMMdd') as st_date,         pt.outp_visit_id,          pt.patient_id,          pt.visit_id       from his_bi.pts_outp_patient_visit pt      where pt.registry_flag <>3 --3表示作废             and pt.reg_sequence is not null             and pt.registering_time >= to_date(c_daylist.day_id,'yyyyMMdd')             and pt.registering_time <  to_date(c_daylist.day_id,'yyyyMMdd')+1         group by to_char(pt.registering_time,'yyyyMMdd'),          pt.outp_visit_id,                    pt.patient_id,                    pt.visit_id) tmp      inner join his_bi.bms_bill_item bm            on (tmp.patient_id = bm.patient_id             and tmp.visit_id = bm.visit_id          and bm.in_out_flag = 'O')        where exists (select 1 from his_bi.dms_pham_cust_def_cont                        where cont_type_id = 'TJ0055'                   and cont_value = '1'                  and pham_std_code = bm.item_code)           group by tmp.st_date,                    tmp.outp_visit_id,                    tmp.patient_id,                    tmp.visit_id; ""]",['抗菌药物—门诊非限制性抗菌药物使用统计   ']
34,his_bi,fun_dwd_D00033_d_16454,"
/***
函数名称：抗菌药物—门诊限制性抗菌药物使用统计
    作用：统计某天门诊患者中使用了非限制性抗菌药物的人数
  开发人：liuf 2020-03-31
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00033  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_outp_quantity_d
	 where key = 'D00033';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取对应key 最大日期加一天 对应逻辑line 12 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_outp_quantity_d where st_date = c_daylist.day_id and key = 'D00033';
	
  INSERT into his_bi.dwd_outp_quantity_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,
																						remark,st_date) 
  select 
		     'D00033',
			   '1',
				 tmp.patient_id,
				 tmp.visit_id,
				 tmp.outp_visit_id,
				 now(),
				 '是否使用限制级抗菌药物', 
				 tmp.st_date
    from (select to_char(pt.registering_time,'yyyyMMdd') as st_date,
								 pt.outp_visit_id,
							   pt.patient_id,
							   pt.visit_id
					  from his_bi.pts_outp_patient_visit pt
					 where pt.registry_flag <>3 --3表示作废
             and pt.reg_sequence is not null
             and pt.registering_time >= to_date(c_daylist.day_id,'yyyyMMdd')
             and pt.registering_time <  to_date(c_daylist.day_id,'yyyyMMdd')+1
		       group by to_char(pt.registering_time,'yyyyMMdd'),
										pt.outp_visit_id,
                    pt.patient_id,
                    pt.visit_id) tmp 
	    inner join his_bi.bms_bill_item bm 
			        on (tmp.patient_id = bm.patient_id 
						      and tmp.visit_id = bm.visit_id 
									and bm.in_out_flag = 'O')
			     where exists (select 1 from his_bi.dms_pham_cust_def_cont 
			                    where cont_type_id = 'TJ0055' 
										        and cont_value = '2' 
											      and pham_std_code = bm.item_code)
           group by tmp.st_date,
                    tmp.outp_visit_id,
                    tmp.patient_id,
                    tmp.visit_id;
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00033'],"[""delete from his_bi.dwd_outp_quantity_d where st_date = c_daylist.day_id and key = 'D00033';   INSERT into his_bi.dwd_outp_quantity_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,                      remark,st_date)   select        'D00033',      '1',     tmp.patient_id,     tmp.visit_id,     tmp.outp_visit_id,     now(),     '是否使用限制级抗菌药物',      tmp.st_date    from (select to_char(pt.registering_time,'yyyyMMdd') as st_date,         pt.outp_visit_id,          pt.patient_id,          pt.visit_id       from his_bi.pts_outp_patient_visit pt      where pt.registry_flag <>3 --3表示作废             and pt.reg_sequence is not null             and pt.registering_time >= to_date(c_daylist.day_id,'yyyyMMdd')             and pt.registering_time <  to_date(c_daylist.day_id,'yyyyMMdd')+1         group by to_char(pt.registering_time,'yyyyMMdd'),          pt.outp_visit_id,                    pt.patient_id,                    pt.visit_id) tmp      inner join his_bi.bms_bill_item bm            on (tmp.patient_id = bm.patient_id             and tmp.visit_id = bm.visit_id          and bm.in_out_flag = 'O')        where exists (select 1 from his_bi.dms_pham_cust_def_cont                        where cont_type_id = 'TJ0055'                   and cont_value = '2'                  and pham_std_code = bm.item_code)           group by tmp.st_date,                    tmp.outp_visit_id,                    tmp.patient_id,                    tmp.visit_id; ""]",['抗菌药物—门诊限制性抗菌药物使用统计   ']
35,his_bi,fun_dwd_D00034_d_16456,"
/***
函数名称：抗菌药物—门诊特殊级抗菌药物使用统计
    作用：统计某天门诊患者中使用了非限制性抗菌药物的人数
  开发人：liuf 2020-03-31
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00034  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_outp_quantity_d
	 where key = 'D00034';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取对应key 最大日期加一天 对应逻辑line 12 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_outp_quantity_d where st_date = c_daylist.day_id and key = 'D00034';
	
  INSERT into his_bi.dwd_outp_quantity_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,
																						remark,st_date) 
  select 
		     'D00034',
			   '1',
				 tmp.patient_id,
				 tmp.visit_id,
				 tmp.outp_visit_id,
				 now(),
				 '是否使用特殊级抗菌药物', 
				 tmp.st_date
    from (select to_char(pt.registering_time,'yyyyMMdd') as st_date,
								 pt.outp_visit_id,
							   pt.patient_id,
							   pt.visit_id
					  from his_bi.pts_outp_patient_visit pt
					 where pt.registry_flag <>3 --3表示作废
             and pt.reg_sequence is not null
             and pt.registering_time >= to_date(c_daylist.day_id,'yyyyMMdd')
             and pt.registering_time <  to_date(c_daylist.day_id,'yyyyMMdd')+1
		       group by to_char(pt.registering_time,'yyyyMMdd'),
										pt.outp_visit_id,
                    pt.patient_id,
                    pt.visit_id) tmp 
	    inner join his_bi.bms_bill_item bm 
			        on (tmp.patient_id = bm.patient_id 
						      and tmp.visit_id = bm.visit_id 
									and bm.in_out_flag = 'O')
			     where exists (select 1 from his_bi.dms_pham_cust_def_cont 
			                    where cont_type_id = 'TJ0055' 
										        and cont_value = '3' 
											      and pham_std_code = bm.item_code)
           group by tmp.st_date,
                    tmp.outp_visit_id,
                    tmp.patient_id,
                    tmp.visit_id;
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00034'],"[""delete from his_bi.dwd_outp_quantity_d where st_date = c_daylist.day_id and key = 'D00034';   INSERT into his_bi.dwd_outp_quantity_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,                      remark,st_date)   select        'D00034',      '1',     tmp.patient_id,     tmp.visit_id,     tmp.outp_visit_id,     now(),     '是否使用特殊级抗菌药物',      tmp.st_date    from (select to_char(pt.registering_time,'yyyyMMdd') as st_date,         pt.outp_visit_id,          pt.patient_id,          pt.visit_id       from his_bi.pts_outp_patient_visit pt      where pt.registry_flag <>3 --3表示作废             and pt.reg_sequence is not null             and pt.registering_time >= to_date(c_daylist.day_id,'yyyyMMdd')             and pt.registering_time <  to_date(c_daylist.day_id,'yyyyMMdd')+1         group by to_char(pt.registering_time,'yyyyMMdd'),          pt.outp_visit_id,                    pt.patient_id,                    pt.visit_id) tmp      inner join his_bi.bms_bill_item bm            on (tmp.patient_id = bm.patient_id             and tmp.visit_id = bm.visit_id          and bm.in_out_flag = 'O')        where exists (select 1 from his_bi.dms_pham_cust_def_cont                        where cont_type_id = 'TJ0055'                   and cont_value = '3'                  and pham_std_code = bm.item_code)           group by tmp.st_date,                    tmp.outp_visit_id,                    tmp.patient_id,                    tmp.visit_id; ""]",['抗菌药物—门诊特殊级抗菌药物使用统计   ']
36,his_bi,fun_dwd_D00092_d_16543,"
/***
函数名称：是否微生物检验样本送检
    作用：是否微生物检验样本送检
  开发人：hamter.lize 2020年5月8日
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00092  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

   RETURN 'SUCCESS';  
END;
  ",[],[],['是否微生物检验样本送检   ']
37,his_bi,fun_dwd_D00016_d_16436,"
/***
函数名称：门诊材料费
    作用：统计某天门诊材料费（费用以价表进行统计TJ0030）
  开发人：liuf 2020-04-07
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00016  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_outp_income_d
	 where key = 'D00016';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_outp_income_d where st_date = c_daylist.day_id and key = 'D00016';
	
  INSERT into his_bi.dwd_outp_income_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,
																			 remark,st_date) 
  select 
				 'D00016',
				 coalesce(sum(t.charges),0),
				 t.patient_id,
				 t.visit_id,
				 t1.outp_visit_id,
         now(),
			  '门诊材料费',
			  to_char(t.enter_date,'yyyymmdd') AS st_date
   from his_bi.bms_bill_item t
	 left join his_bi.pts_outp_patient_visit t1 on t.patient_id = t1.patient_id and t.visit_id = t1.visit_id
  where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')
    and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
    and t.in_out_flag = 'O' --只统计门诊患者
		and t.subj_code = 'I01'  --只统计材料费用
		and t.charges<>0
  group by to_char(t.enter_date,'yyyymmdd'),
					 t.patient_id,
					 t.visit_id,
				   t1.outp_visit_id;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00016'],"[""delete from his_bi.dwd_outp_income_d where st_date = c_daylist.day_id and key = 'D00016';\r \r  INSERT into his_bi.dwd_outp_income_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,\r                    remark,st_date) \r  select \r     'D00016',\r     coalesce(sum(t.charges),0),\r     t.patient_id,\r     t.visit_id,\r     t1.outp_visit_id,\r         now(),\r     '门诊材料费',\r     to_char(t.enter_date,'yyyymmdd') AS st_date\r   from his_bi.bms_bill_item t\r  left join his_bi.pts_outp_patient_visit t1 on t.patient_id = t1.patient_id and t.visit_id = t1.visit_id\r  where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r    and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1\r    and t.in_out_flag = 'O' --只统计门诊患者\r  and t.subj_code = 'I01'  --只统计材料费用\r  and t.charges<>0\r  group by to_char(t.enter_date,'yyyymmdd'),\r      t.patient_id,\r      t.visit_id,\r       t1.outp_visit_id;\r \r ""]",['门诊材料费\r   ']
38,his_bi,fun_dwd_D00017_d_16437,"
/***
函数名称：门诊药品费
    作用：统计某天门诊药品费（费用以价表进行统计TJ0030）
  开发人：liuf 2020-04-07
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00017  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_outp_income_d
	 where key = 'D00017';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_outp_income_d where st_date = c_daylist.day_id and key = 'D00017';
	
  INSERT into his_bi.dwd_outp_income_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,
																			 remark,st_date) 
  select 
				 'D00017',
				 coalesce(sum(t.charges),0),
				 t.patient_id,
				 t.visit_id,
				 pt.outp_visit_id,
         now(),
			  '门诊药品费',
			  to_char(t.enter_date,'yyyymmdd') AS st_date
   from his_bi.bms_bill_item t
   left join his_bi.pts_outp_patient_visit pt on t.patient_id = pt.patient_id and t.visit_id = pt.visit_id
  where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')
    and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
    and t.in_out_flag = 'O' --只统计门诊患者
	and t.subj_code in('J01','J02','J03','J04')  --只统计中药、西药、草药费、自制药品费
	and t.charges<>0
  group by to_char(t.enter_date,'yyyymmdd'),
					 t.patient_id,
					 t.visit_id,
				   pt.outp_visit_id;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00017'],"[""delete from his_bi.dwd_outp_income_d where st_date = c_daylist.day_id and key = 'D00017';\r \r  INSERT into his_bi.dwd_outp_income_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,\r                    remark,st_date) \r  select \r     'D00017',\r     coalesce(sum(t.charges),0),\r     t.patient_id,\r     t.visit_id,\r     pt.outp_visit_id,\r         now(),\r     '门诊药品费',\r     to_char(t.enter_date,'yyyymmdd') AS st_date\r   from his_bi.bms_bill_item t\r   left join his_bi.pts_outp_patient_visit pt on t.patient_id = pt.patient_id and t.visit_id = pt.visit_id\r  where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r    and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1\r    and t.in_out_flag = 'O' --只统计门诊患者\r and t.subj_code in('J01','J02','J03','J04')  --只统计中药、西药、草药费、自制药品费\r and t.charges<>0\r  group by to_char(t.enter_date,'yyyymmdd'),\r      t.patient_id,\r      t.visit_id,\r       pt.outp_visit_id;\r \r ""]",['门诊药品费\r   ']
39,his_bi,fun_dwd_D00018_d_16438,"
/***
函数名称：门诊检验费
    作用：统计某天门诊检验费（费用以价表进行统计TJ0030）
  开发人：liuf 2020-04-07
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00018  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_outp_income_d
	 where key = 'D00018';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_outp_income_d where st_date = c_daylist.day_id and key = 'D00018';
	
  INSERT into his_bi.dwd_outp_income_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,
																			 remark,st_date) 
  select 
				 'D00018',
				 coalesce(sum(t.charges),0),
				 t.patient_id,
				 t.visit_id,
				 t1.outp_visit_id,
         now(),
			  '门诊检验费',
			  to_char(t.enter_date,'yyyymmdd') AS st_date
   from his_bi.bms_bill_item t
	 left join his_bi.pts_outp_patient_visit t1 on t.patient_id = t1.patient_id and t.visit_id = t1.visit_id
  where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')
    and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
    and t.in_out_flag = 'O' --只统计门诊患者
		and t.subj_code = 'E01'  --只统计检验费
		and t.charges<>0
  group by to_char(t.enter_date,'yyyymmdd'),
					 t.patient_id,
					 t.visit_id,
				   t1.outp_visit_id;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00018'],"[""delete from his_bi.dwd_outp_income_d where st_date = c_daylist.day_id and key = 'D00018';\r \r  INSERT into his_bi.dwd_outp_income_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,\r                    remark,st_date) \r  select \r     'D00018',\r     coalesce(sum(t.charges),0),\r     t.patient_id,\r     t.visit_id,\r     t1.outp_visit_id,\r         now(),\r     '门诊检验费',\r     to_char(t.enter_date,'yyyymmdd') AS st_date\r   from his_bi.bms_bill_item t\r  left join his_bi.pts_outp_patient_visit t1 on t.patient_id = t1.patient_id and t.visit_id = t1.visit_id\r  where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r    and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1\r    and t.in_out_flag = 'O' --只统计门诊患者\r  and t.subj_code = 'E01'  --只统计检验费\r  and t.charges<>0\r  group by to_char(t.enter_date,'yyyymmdd'),\r      t.patient_id,\r      t.visit_id,\r       t1.outp_visit_id;\r \r ""]",['门诊检验费\r   ']
40,his_bi,fun_dwd_D00019_d_16439,"
/***
函数名称：门诊检查费
    作用：统计某天门诊检查费（费用以价表进行统计TJ0030）
  开发人：liuf 2020-04-07
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00019  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_outp_income_d
	 where key = 'D00019';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_outp_income_d where st_date = c_daylist.day_id and key = 'D00019';
	
  INSERT into his_bi.dwd_outp_income_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,
																			 remark,st_date) 
  select 
				 'D00019',
				 coalesce(sum(t.charges),0),
				 t.patient_id,
				 t.visit_id,
				 t1.outp_visit_id,
         now(),
			  '门诊检查费',
			  to_char(t.enter_date,'yyyymmdd') AS st_date
   from his_bi.bms_bill_item t
	 left join his_bi.pts_outp_patient_visit t1 on t.patient_id = t1.patient_id and t.visit_id = t1.visit_id
  where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')
    and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
    and t.in_out_flag = 'O' --只统计门诊患者
	and t.subj_code = 'D01'  --只统计检查费
	and t.charges<>0
  group by to_char(t.enter_date,'yyyymmdd'),
					 t.patient_id,
					 t.visit_id,
				   t1.outp_visit_id;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00019'],"[""delete from his_bi.dwd_outp_income_d where st_date = c_daylist.day_id and key = 'D00019';\r \r  INSERT into his_bi.dwd_outp_income_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,\r                    remark,st_date) \r  select \r     'D00019',\r     coalesce(sum(t.charges),0),\r     t.patient_id,\r     t.visit_id,\r     t1.outp_visit_id,\r         now(),\r     '门诊检查费',\r     to_char(t.enter_date,'yyyymmdd') AS st_date\r   from his_bi.bms_bill_item t\r  left join his_bi.pts_outp_patient_visit t1 on t.patient_id = t1.patient_id and t.visit_id = t1.visit_id\r  where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r    and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1\r    and t.in_out_flag = 'O' --只统计门诊患者\r and t.subj_code = 'D01'  --只统计检查费\r and t.charges<>0\r  group by to_char(t.enter_date,'yyyymmdd'),\r      t.patient_id,\r      t.visit_id,\r       t1.outp_visit_id;\r \r ""]",['门诊检查费\r   ']
41,his_bi,fun_dwd_D00060_d_16483,"
/***
函数名称：住院患者一般医疗服务费
    作用：统计某天住院患者一般医疗服务费（以病案首页归档数据中的费用数据为准）
  开发人：wy 2020-04-10
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00060  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_income_d
	 where key = 'D00060';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D00060';
	
  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
  select 
				 'D00060',
				 to_number(c.datastore_name,'9999999999.9999'),/*9999999999.9999 表示14位长度，其中4个是小数位*/
				 d.bah as patient_id,
				 d.zycs as visit_id,
				 a.pai_visit_id,
				 now(),
				 '住院患者一般医疗服务费',
			  to_char(d.cyrq,'yyyymmdd') AS st_date
   from his_bi.ods_patient_medical_record d 
   left join his_bi.pts_pai_visit a
   on (a.patient_id =d.bah and a.visit_id =d.zycs)
  inner join (select inpati_id,max(hp_basic_business_id) as hp_basic_business_id 
                from his_bi.emr_mrms_hp_basic_business
               where reportcard_type is null 
               group by inpati_id) b 
     on a.pai_visit_id = b.inpati_id
  inner join his_bi.emr_mrms_hp_datarecord c
     on c.hp_basic_business_id = b.hp_basic_business_id
  where d.cyrq is not null 
    and c.hp_datacol_config_key = 'generalServiceFee'
    and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
    and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1
    and c.datastore_name <>'0.00';
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00060'],"[""delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D00060';   INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,                    remark,st_date)   select      'D00060',     to_number(c.datastore_name,'9999999999.9999'),/*9999999999.9999 表示14位长度，其中4个是小数位*/     d.bah as patient_id,     d.zycs as visit_id,     a.pai_visit_id,     now(),     '住院患者一般医疗服务费',     to_char(d.cyrq,'yyyymmdd') AS st_date   from his_bi.ods_patient_medical_record d    left join his_bi.pts_pai_visit a   on (a.patient_id =d.bah and a.visit_id =d.zycs)  inner join (select inpati_id,max(hp_basic_business_id) as hp_basic_business_id                 from his_bi.emr_mrms_hp_basic_business               where reportcard_type is null                group by inpati_id) b      on a.pai_visit_id = b.inpati_id  inner join his_bi.emr_mrms_hp_datarecord c     on c.hp_basic_business_id = b.hp_basic_business_id  where d.cyrq is not null     and c.hp_datacol_config_key = 'generalServiceFee'    and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')    and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1    and c.datastore_name <>'0.00';  ""]",['住院患者一般医疗服务费   ']
42,his_bi,fun_dwd_D00061_d_16485,"
/***
函数名称：住院患者一般治疗操作费
    作用：统计某天住院患者一般治疗操作费（以病案首页归档数据中的费用数据为准）
  开发人：wy 2020-04-10
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00061  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_income_d
	 where key = 'D00061';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D00061';
	
  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
  select 
				 'D00061',
				 to_number(c.datastore_name,'9999999999.9999'),/*9999999999.9999 表示14位长度，其中4个是小数位*/
				 d.bah as patient_id,
				 d.zycs as visit_id,
				 a.pai_visit_id,
				 now(),
				 '住院患者一般治疗操作费',
			  to_char(d.cyrq,'yyyymmdd') AS st_date
   from his_bi.ods_patient_medical_record d
   left join his_bi.pts_pai_visit a
   on (d.bah =a.patient_id and d.zycs =a.visit_id)
  inner join (select inpati_id,max(hp_basic_business_id) as hp_basic_business_id 
                from his_bi.emr_mrms_hp_basic_business
               where reportcard_type is null 
               group by inpati_id) b 
     on a.pai_visit_id = b.inpati_id
  inner join his_bi.emr_mrms_hp_datarecord c
     on c.hp_basic_business_id = b.hp_basic_business_id
  where d.cyrq is not null 
    and c.hp_datacol_config_key = 'generalTreatFee'
    and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
    and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1
    and c.datastore_name <>'0.00';
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00061'],"[""delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D00061';   INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,                    remark,st_date)   select      'D00061',     to_number(c.datastore_name,'9999999999.9999'),/*9999999999.9999 表示14位长度，其中4个是小数位*/     d.bah as patient_id,     d.zycs as visit_id,     a.pai_visit_id,     now(),     '住院患者一般治疗操作费',     to_char(d.cyrq,'yyyymmdd') AS st_date   from his_bi.ods_patient_medical_record d   left join his_bi.pts_pai_visit a   on (d.bah =a.patient_id and d.zycs =a.visit_id)  inner join (select inpati_id,max(hp_basic_business_id) as hp_basic_business_id                 from his_bi.emr_mrms_hp_basic_business               where reportcard_type is null                group by inpati_id) b      on a.pai_visit_id = b.inpati_id  inner join his_bi.emr_mrms_hp_datarecord c     on c.hp_basic_business_id = b.hp_basic_business_id  where d.cyrq is not null     and c.hp_datacol_config_key = 'generalTreatFee'    and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')    and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1    and c.datastore_name <>'0.00';  ""]",['住院患者一般治疗操作费   ']
43,his_bi,fun_dwd_D00020_d_16440,"
/***
函数名称：门诊治疗费
    作用：统计某天门诊治疗费（费用以价表进行统计TJ0030）
  开发人：liuf 2020-04-07
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00020  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_outp_income_d
	 where key = 'D00020';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_outp_income_d where st_date = c_daylist.day_id and key = 'D00020';
	
  INSERT into his_bi.dwd_outp_income_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,
																			 remark,st_date) 
  select 
				 'D00020',
				 coalesce(sum(t.charges),0),
				 t.patient_id,
				 t.visit_id,
				 t1.outp_visit_id,
         now(),
			  '门诊治疗费',
			  to_char(t.enter_date,'yyyymmdd') AS st_date
  from his_bi.bms_bill_item t
	left join his_bi.pts_outp_patient_visit t1 on t.patient_id = t1.patient_id and t.visit_id = t1.visit_id
  where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')
    and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
    and t.in_out_flag = 'O' --只统计门诊患者
	and t.subj_code = 'F01'  --只统计治疗费
	and t.charges<>0
  group by to_char(t.enter_date,'yyyymmdd'),
					 t.patient_id,
					 t.visit_id,
				   t1.outp_visit_id;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00020'],"[""delete from his_bi.dwd_outp_income_d where st_date = c_daylist.day_id and key = 'D00020';\r \r  INSERT into his_bi.dwd_outp_income_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,\r                    remark,st_date) \r  select \r     'D00020',\r     coalesce(sum(t.charges),0),\r     t.patient_id,\r     t.visit_id,\r     t1.outp_visit_id,\r         now(),\r     '门诊治疗费',\r     to_char(t.enter_date,'yyyymmdd') AS st_date\r  from his_bi.bms_bill_item t\r left join his_bi.pts_outp_patient_visit t1 on t.patient_id = t1.patient_id and t.visit_id = t1.visit_id\r  where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r    and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1\r    and t.in_out_flag = 'O' --只统计门诊患者\r and t.subj_code = 'F01'  --只统计治疗费\r and t.charges<>0\r  group by to_char(t.enter_date,'yyyymmdd'),\r      t.patient_id,\r      t.visit_id,\r       t1.outp_visit_id;\r \r ""]",['门诊治疗费\r   ']
44,his_bi,fun_dwd_D00021_d_16441,"
/***
函数名称：门诊诊察费
    作用：统计某天门诊诊察费（费用以价表进行统计TJ0030）
  开发人：liuf 2020-04-07
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00021  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_outp_income_d
	 where key = 'D00021';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_outp_income_d where st_date = c_daylist.day_id and key = 'D00021';
	
  INSERT into his_bi.dwd_outp_income_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,
																			 remark,st_date) 
  select 
				 'D00021',
				 coalesce(sum(t.charges),0),
				 t.patient_id,
				 t.visit_id,
				 t1.outp_visit_id,
         now(),
			  '门诊诊察费',
			  to_char(t.enter_date,'yyyymmdd') AS st_date
   from his_bi.bms_bill_item t
	 left join his_bi.pts_outp_patient_visit t1 on t.patient_id = t1.patient_id and t.visit_id = t1.visit_id
  where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')
    and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
    and t.in_out_flag = 'O' --只统计门诊患者
	and t.subj_code = 'B01'  --只统计诊察费
	and t.charges<>0
  group by to_char(t.enter_date,'yyyymmdd'),
					 t.patient_id,
					 t.visit_id,
				   t1.outp_visit_id;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00021'],"[""delete from his_bi.dwd_outp_income_d where st_date = c_daylist.day_id and key = 'D00021';\r \r  INSERT into his_bi.dwd_outp_income_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,\r                    remark,st_date) \r  select \r     'D00021',\r     coalesce(sum(t.charges),0),\r     t.patient_id,\r     t.visit_id,\r     t1.outp_visit_id,\r         now(),\r     '门诊诊察费',\r     to_char(t.enter_date,'yyyymmdd') AS st_date\r   from his_bi.bms_bill_item t\r  left join his_bi.pts_outp_patient_visit t1 on t.patient_id = t1.patient_id and t.visit_id = t1.visit_id\r  where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r    and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1\r    and t.in_out_flag = 'O' --只统计门诊患者\r and t.subj_code = 'B01'  --只统计诊察费\r and t.charges<>0\r  group by to_char(t.enter_date,'yyyymmdd'),\r      t.patient_id,\r      t.visit_id,\r       t1.outp_visit_id;\r \r ""]",['门诊诊察费\r   ']
45,his_bi,fun_dwd_D00022_d_16442,"
/***
函数名称：门诊西药费
    作用：统计某天门诊西药费（费用以价表进行统计TJ0030）
  开发人：liuf 2020-04-07
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00022  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_outp_income_d
	 where key = 'D00022';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_outp_income_d where st_date = c_daylist.day_id and key = 'D00022';
	
  INSERT into his_bi.dwd_outp_income_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,
																			 remark,st_date) 
  select 
				 'D00022',
				 coalesce(sum(t.charges),0),
				 t.patient_id,
				 t.visit_id,
				 t1.outp_visit_id,
         now(),
			  '门诊西药费',
			  to_char(t.enter_date,'yyyymmdd') AS st_date
   from his_bi.bms_bill_item t
	 left join his_bi.pts_outp_patient_visit t1 on t.patient_id = t1.patient_id and t.visit_id = t1.visit_id
  where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')
    and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
    and t.in_out_flag = 'O' --只统计门诊患者
	and t.subj_code = 'J01'  --只统计西药费
	and t.charges<>0
  group by to_char(t.enter_date,'yyyymmdd'),
					 t.patient_id,
					 t.visit_id,
				   t1.outp_visit_id;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00022'],"[""delete from his_bi.dwd_outp_income_d where st_date = c_daylist.day_id and key = 'D00022';\r \r  INSERT into his_bi.dwd_outp_income_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,\r                    remark,st_date) \r  select \r     'D00022',\r     coalesce(sum(t.charges),0),\r     t.patient_id,\r     t.visit_id,\r     t1.outp_visit_id,\r         now(),\r     '门诊西药费',\r     to_char(t.enter_date,'yyyymmdd') AS st_date\r   from his_bi.bms_bill_item t\r  left join his_bi.pts_outp_patient_visit t1 on t.patient_id = t1.patient_id and t.visit_id = t1.visit_id\r  where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r    and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1\r    and t.in_out_flag = 'O' --只统计门诊患者\r and t.subj_code = 'J01'  --只统计西药费\r and t.charges<>0\r  group by to_char(t.enter_date,'yyyymmdd'),\r      t.patient_id,\r      t.visit_id,\r       t1.outp_visit_id;\r \r ""]",['门诊西药费\r   ']
46,his_bi,fun_dwd_D00023_d_16443,"
/***
函数名称：门诊中成药费
    作用：统计某天门诊中成药费（费用以价表进行统计TJ0030）
  开发人：liuf 2020-04-07
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00023  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_outp_income_d
	 where key = 'D00023';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_outp_income_d where st_date = c_daylist.day_id and key = 'D00023';
	
  INSERT into his_bi.dwd_outp_income_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,
																			 remark,st_date) 
  select 
				 'D00023',
				 coalesce(sum(t.charges),0),
				 t.patient_id,
				 t.visit_id,
				 p.outp_visit_id,
         now(),
			  '门诊中成药费',
			  to_char(t.enter_date,'yyyymmdd') AS st_date
   from his_bi.bms_bill_item t
   left join his_bi.pts_outp_patient_visit p
	   on t.patient_id = p.patient_id
	  and t.visit_id = p.visit_id
  where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')
    and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
    and t.in_out_flag = 'O' --只统计门诊患者
	and t.subj_code = 'J02'  --只统计中成药费
	and t.charges<>0
  group by to_char(t.enter_date,'yyyymmdd'),
					 t.patient_id,
					 t.visit_id,
				   p.outp_visit_id;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00023'],"[""delete from his_bi.dwd_outp_income_d where st_date = c_daylist.day_id and key = 'D00023';\r \r  INSERT into his_bi.dwd_outp_income_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,\r                    remark,st_date) \r  select \r     'D00023',\r     coalesce(sum(t.charges),0),\r     t.patient_id,\r     t.visit_id,\r     p.outp_visit_id,\r         now(),\r     '门诊中成药费',\r     to_char(t.enter_date,'yyyymmdd') AS st_date\r   from his_bi.bms_bill_item t\r   left join his_bi.pts_outp_patient_visit p\r    on t.patient_id = p.patient_id\r   and t.visit_id = p.visit_id\r  where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r    and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1\r    and t.in_out_flag = 'O' --只统计门诊患者\r and t.subj_code = 'J02'  --只统计中成药费\r and t.charges<>0\r  group by to_char(t.enter_date,'yyyymmdd'),\r      t.patient_id,\r      t.visit_id,\r       p.outp_visit_id;\r \r ""]",['门诊中成药费\r   ']
47,his_bi,fun_dwd_D00062_d_16487,"
/***
函数名称：住院患者护理费
    作用：统计某天住院患者护理费（以病案首页归档数据中的费用数据为准）
  开发人：wy 2020-04-10
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00062  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_income_d
	 where key = 'D00062';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D00062';
	
  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
  select 
				 'D00062',
				 to_number(c.datastore_name,'9999999999.9999'),/*9999999999.9999 表示14位长度，其中4个是小数位*/
				 d.bah as patient_id,
				 d.zycs  as visit_id,
				 a.pai_visit_id,
				 now(),
				 '住院患者护理费',
			  to_char(d.cyrq,'yyyymmdd') AS st_date
   from his_bi.ods_patient_medical_record d 
  left join his_bi.pts_pai_visit a
  on (a.patient_id =d.bah and a.visit_id =d.zycs)
  inner join (select inpati_id,max(hp_basic_business_id) as hp_basic_business_id 
                from his_bi.emr_mrms_hp_basic_business
               where reportcard_type is null 
               group by inpati_id) b 
     on a.pai_visit_id = b.inpati_id
  inner join his_bi.emr_mrms_hp_datarecord c
     on c.hp_basic_business_id = b.hp_basic_business_id
  where a.discharge_dept_date is not null 
    and c.hp_datacol_config_key = 'generalNursingFee'
    and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
    and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1
    and c.datastore_name <>'0.00';
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00062'],"[""delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D00062';   INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,                    remark,st_date)   select      'D00062',     to_number(c.datastore_name,'9999999999.9999'),/*9999999999.9999 表示14位长度，其中4个是小数位*/     d.bah as patient_id,     d.zycs  as visit_id,     a.pai_visit_id,     now(),     '住院患者护理费',     to_char(d.cyrq,'yyyymmdd') AS st_date   from his_bi.ods_patient_medical_record d   left join his_bi.pts_pai_visit a  on (a.patient_id =d.bah and a.visit_id =d.zycs)  inner join (select inpati_id,max(hp_basic_business_id) as hp_basic_business_id                 from his_bi.emr_mrms_hp_basic_business               where reportcard_type is null                group by inpati_id) b      on a.pai_visit_id = b.inpati_id  inner join his_bi.emr_mrms_hp_datarecord c     on c.hp_basic_business_id = b.hp_basic_business_id  where a.discharge_dept_date is not null     and c.hp_datacol_config_key = 'generalNursingFee'    and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')    and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1    and c.datastore_name <>'0.00';  ""]",['住院患者护理费   ']
48,his_bi,fun_dwd_D00063_d_16489,"
/***
函数名称：住院患者综合医疗服务类其他费用
    作用：统计某天住院患者综合医疗服务类其他费用（以病案首页归档数据中的费用数据为准）
  开发人：wy 2020-04-10
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00063  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_income_d
	 where key = 'D00063';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D00063';
	
  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
  select 
				 'D00063',
				 to_number(c.datastore_name,'9999999999.9999'),/*9999999999.9999 表示14位长度，其中4个是小数位*/
				 d.bah as patient_id,
				 d.zycs as visit_id,
				 a.pai_visit_id,
				 now(),
				 '住院患者综合医疗服务类其他费用',
			  to_char(d.cyrq,'yyyymmdd') AS st_date
   from his_bi.ods_patient_medical_record d 
   left join his_bi.pts_pai_visit a
   on (a.patient_id =d.bah and a.visit_id =d.zycs)
  inner join (select inpati_id,max(hp_basic_business_id) as hp_basic_business_id 
                from his_bi.emr_mrms_hp_basic_business
               where reportcard_type is null 
               group by inpati_id) b 
     on a.pai_visit_id = b.inpati_id
  inner join his_bi.emr_mrms_hp_datarecord c
     on c.hp_basic_business_id = b.hp_basic_business_id
  where d.cyrq is not null 
    and c.hp_datacol_config_key = 'generalOtherFee'
    and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
    and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1
    and c.datastore_name <>'0.00';
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00063'],"[""delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D00063';   INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,                    remark,st_date)   select      'D00063',     to_number(c.datastore_name,'9999999999.9999'),/*9999999999.9999 表示14位长度，其中4个是小数位*/     d.bah as patient_id,     d.zycs as visit_id,     a.pai_visit_id,     now(),     '住院患者综合医疗服务类其他费用',     to_char(d.cyrq,'yyyymmdd') AS st_date   from his_bi.ods_patient_medical_record d    left join his_bi.pts_pai_visit a   on (a.patient_id =d.bah and a.visit_id =d.zycs)  inner join (select inpati_id,max(hp_basic_business_id) as hp_basic_business_id                 from his_bi.emr_mrms_hp_basic_business               where reportcard_type is null                group by inpati_id) b      on a.pai_visit_id = b.inpati_id  inner join his_bi.emr_mrms_hp_datarecord c     on c.hp_basic_business_id = b.hp_basic_business_id  where d.cyrq is not null     and c.hp_datacol_config_key = 'generalOtherFee'    and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')    and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1    and c.datastore_name <>'0.00';  ""]",['住院患者综合医疗服务类其他费用   ']
49,his_bi,fun_dwd_D00064_d_16491,"
/***
函数名称：住院患者病理诊断费
    作用：统计某天住院患者病理诊断费（以病案首页归档数据中的费用数据为准）
  开发人：wy 2020-04-10
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00064  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_income_d
	 where key = 'D00064';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D00064';
	
  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
  select 
				 'D00064',
				 to_number(c.datastore_name,'9999999999.9999'),/*9999999999.9999 表示14位长度，其中4个是小数位*/
				 d.bah as patient_id,
				 d.zycs as visit_id,
				 a.pai_visit_id,
				 now(),
				 '住院患者病理诊断费',
			  to_char(d.cyrq,'yyyymmdd') AS st_date
   from his_bi.ods_patient_medical_record d 
  left join his_bi.pts_pai_visit a
  on (a.patient_id =d.bah and a.visit_id =d.zycs)
  inner join (select inpati_id,max(hp_basic_business_id) as hp_basic_business_id 
                from his_bi.emr_mrms_hp_basic_business
               where reportcard_type is null 
               group by inpati_id) b 
     on a.pai_visit_id = b.inpati_id
  inner join his_bi.emr_mrms_hp_datarecord c
     on c.hp_basic_business_id = b.hp_basic_business_id
  where d.cyrq is not null 
    and c.hp_datacol_config_key = 'diagPathologyFee'
    and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
    and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1
    and c.datastore_name <>'0.00';
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00064'],"[""delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D00064';   INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,                    remark,st_date)   select      'D00064',     to_number(c.datastore_name,'9999999999.9999'),/*9999999999.9999 表示14位长度，其中4个是小数位*/     d.bah as patient_id,     d.zycs as visit_id,     a.pai_visit_id,     now(),     '住院患者病理诊断费',     to_char(d.cyrq,'yyyymmdd') AS st_date   from his_bi.ods_patient_medical_record d   left join his_bi.pts_pai_visit a  on (a.patient_id =d.bah and a.visit_id =d.zycs)  inner join (select inpati_id,max(hp_basic_business_id) as hp_basic_business_id                 from his_bi.emr_mrms_hp_basic_business               where reportcard_type is null                group by inpati_id) b      on a.pai_visit_id = b.inpati_id  inner join his_bi.emr_mrms_hp_datarecord c     on c.hp_basic_business_id = b.hp_basic_business_id  where d.cyrq is not null     and c.hp_datacol_config_key = 'diagPathologyFee'    and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')    and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1    and c.datastore_name <>'0.00';  ""]",['住院患者病理诊断费   ']
50,his_bi,fun_dwd_D00024_d_16444,"
/***
函数名称：门诊草药费
    作用：统计某天门诊草药费（费用以价表进行统计TJ0030）
  开发人：liuf 2020-04-07
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00024  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_outp_income_d
	 where key = 'D00024';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_outp_income_d where st_date = c_daylist.day_id and key = 'D00024';
	
  INSERT into his_bi.dwd_outp_income_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,
																			 remark,st_date) 
  select 
				 'D00024',
				 coalesce(sum(t.charges),0),
				 t.patient_id,
				 t.visit_id,
				 p.outp_visit_id,
         now(),
			  '门诊草药费',
			  to_char(t.enter_date,'yyyymmdd') AS st_date
   from his_bi.bms_bill_item t
   left join his_bi.pts_outp_patient_visit p
	   on t.patient_id = p.patient_id
	  and t.visit_id = p.visit_id
  where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')
    and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
    and t.in_out_flag = 'O' --只统计门诊患者
		and t.subj_code = 'J03'  --只统计草药费
		and t.charges<>0
  group by to_char(t.enter_date,'yyyymmdd'),
					 t.patient_id,
					 t.visit_id,
				   p.outp_visit_id;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00024'],"[""delete from his_bi.dwd_outp_income_d where st_date = c_daylist.day_id and key = 'D00024';\r \r  INSERT into his_bi.dwd_outp_income_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,\r                    remark,st_date) \r  select \r     'D00024',\r     coalesce(sum(t.charges),0),\r     t.patient_id,\r     t.visit_id,\r     p.outp_visit_id,\r         now(),\r     '门诊草药费',\r     to_char(t.enter_date,'yyyymmdd') AS st_date\r   from his_bi.bms_bill_item t\r   left join his_bi.pts_outp_patient_visit p\r    on t.patient_id = p.patient_id\r   and t.visit_id = p.visit_id\r  where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r    and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1\r    and t.in_out_flag = 'O' --只统计门诊患者\r  and t.subj_code = 'J03'  --只统计草药费\r  and t.charges<>0\r  group by to_char(t.enter_date,'yyyymmdd'),\r      t.patient_id,\r      t.visit_id,\r       p.outp_visit_id;\r \r ""]",['门诊草药费\r   ']
51,his_bi,fun_dwd_D00025_d_16445,"
/***
函数名称：门诊抗菌药物费
    作用：统计某天门诊抗菌药物费（费用以价表进行统计TJ0030）
  开发人：liuf 2020-04-07
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00025  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_outp_income_d
	 where key = 'D00025';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_outp_income_d where st_date = c_daylist.day_id and key = 'D00025';
	
  INSERT into his_bi.dwd_outp_income_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,
																			 remark,st_date) 
  select 
				 'D00025',
				 coalesce(sum(t.charges),0),
				 t.patient_id,
				 t.visit_id,
				 t1.outp_visit_id,
         now(),
			  '门诊抗菌药物费',
			  to_char(t.enter_date,'yyyymmdd') AS st_date
   from his_bi.bms_bill_item t
	 left join his_bi.pts_outp_patient_visit t1 on t.patient_id = t1.patient_id and t.visit_id = t1.visit_id
  where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')
    and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
    and t.in_out_flag = 'O' --只统计门诊患者
		and t.item_class in('A','B','N')  --只统计西药、中成药、草药费
		and t.charges<>0
		and exists (select 1 from his_bi.dms_pham_cust_def_cont 
			           where cont_type_id = 'TJ0055' 
									 and pham_std_code = t.item_code)
  group by to_char(t.enter_date,'yyyymmdd'),
					 t.patient_id,
					 t.visit_id,
				   t1.outp_visit_id;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00025'],"[""delete from his_bi.dwd_outp_income_d where st_date = c_daylist.day_id and key = 'D00025';\r \r  INSERT into his_bi.dwd_outp_income_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,\r                    remark,st_date) \r  select \r     'D00025',\r     coalesce(sum(t.charges),0),\r     t.patient_id,\r     t.visit_id,\r     t1.outp_visit_id,\r         now(),\r     '门诊抗菌药物费',\r     to_char(t.enter_date,'yyyymmdd') AS st_date\r   from his_bi.bms_bill_item t\r  left join his_bi.pts_outp_patient_visit t1 on t.patient_id = t1.patient_id and t.visit_id = t1.visit_id\r  where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r    and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1\r    and t.in_out_flag = 'O' --只统计门诊患者\r  and t.item_class in('A','B','N')  --只统计西药、中成药、草药费\r  and t.charges<>0\r  and exists (select 1 from his_bi.dms_pham_cust_def_cont \r              where cont_type_id = 'TJ0055' \r          and pham_std_code = t.item_code)\r  group by to_char(t.enter_date,'yyyymmdd'),\r      t.patient_id,\r      t.visit_id,\r       t1.outp_visit_id;\r \r ""]",['门诊抗菌药物费\r   ']
52,his_bi,fun_dwd_D00026_d_16446,"
/***
函数名称：门诊辅助用药费
    作用：统计某天门诊辅助用药费（费用以价表进行统计TJ0030）
  开发人：liuf 2020-04-07
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00026  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_outp_income_d
	 where key = 'D00026';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_outp_income_d where st_date = c_daylist.day_id and key = 'D00026';
	
  INSERT into his_bi.dwd_outp_income_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,
																			 remark,st_date) 
  select
				 'D00026',
				 coalesce(sum(t.charges),0),
				 t.patient_id,
				 t.visit_id,
				 p.outp_visit_id,
         now(),
			  '门诊辅助用药费',
			  to_char(t.enter_date,'yyyymmdd') AS st_date
   from his_bi.bms_bill_item t
   left join his_bi.pts_outp_patient_visit p
	   on t.patient_id = p.patient_id
	  and t.visit_id = p.visit_id
  where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')
    and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
    and t.in_out_flag = 'O' --只统计门诊患者
		and t.item_class in('A','B','N')  --只统计西药、中成药、草药费
		and t.charges<>0
		and t.item_code in (select pham_std_code from his_bi.dms_pham_cust_def_cont 
			                   where cont_name like '%辅助药品%')
  group by to_char(t.enter_date,'yyyymmdd'),
					 t.patient_id,
					 t.visit_id,
				   p.outp_visit_id;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00026'],"[""delete from his_bi.dwd_outp_income_d where st_date = c_daylist.day_id and key = 'D00026';\r \r  INSERT into his_bi.dwd_outp_income_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,\r                    remark,st_date) \r  select\r     'D00026',\r     coalesce(sum(t.charges),0),\r     t.patient_id,\r     t.visit_id,\r     p.outp_visit_id,\r         now(),\r     '门诊辅助用药费',\r     to_char(t.enter_date,'yyyymmdd') AS st_date\r   from his_bi.bms_bill_item t\r   left join his_bi.pts_outp_patient_visit p\r    on t.patient_id = p.patient_id\r   and t.visit_id = p.visit_id\r  where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r    and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1\r    and t.in_out_flag = 'O' --只统计门诊患者\r  and t.item_class in('A','B','N')  --只统计西药、中成药、草药费\r  and t.charges<>0\r  and t.item_code in (select pham_std_code from his_bi.dms_pham_cust_def_cont \r                      where cont_name like '%辅助药品%')\r  group by to_char(t.enter_date,'yyyymmdd'),\r      t.patient_id,\r      t.visit_id,\r       p.outp_visit_id;\r \r ""]",['门诊辅助用药费\r   ']
53,his_bi,fun_dwd_D00027_d_16447,"
/***
函数名称：门诊基本药物费
    作用：统计某天门诊基本药物费（费用以价表进行统计TJ0030）
  开发人：liuf 2020-04-07
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00027  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_outp_income_d
	 where key = 'D00027';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_outp_income_d where st_date = c_daylist.day_id and key = 'D00027';
	
  INSERT into his_bi.dwd_outp_income_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,
																			 remark,st_date) 
  select 
				 'D00027',
				 coalesce(sum(t.charges),0),
				 t.patient_id,
				 t.visit_id,
				 p.outp_visit_id,
         now(),
			  '门诊基本药物费',
			  to_char(t.enter_date,'yyyymmdd') AS st_date
   from his_bi.bms_bill_item t
   left join his_bi.pts_outp_patient_visit p
	   on t.patient_id = p.patient_id
	  and t.visit_id = p.visit_id
  where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')
    and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
    and t.in_out_flag = 'O' --只统计门诊患者
		and t.item_class in('A','B','N')  --只统计西药、中成药、草药费
		and t.charges<>0
		and t.item_code in (select pham_std_code from his_bi.dms_pham_basic_info where basic_pham='1')
  group by to_char(t.enter_date,'yyyymmdd'),
					 t.patient_id,
					 t.visit_id,
				   p.outp_visit_id;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00027'],"[""delete from his_bi.dwd_outp_income_d where st_date = c_daylist.day_id and key = 'D00027';\r \r  INSERT into his_bi.dwd_outp_income_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,\r                    remark,st_date) \r  select \r     'D00027',\r     coalesce(sum(t.charges),0),\r     t.patient_id,\r     t.visit_id,\r     p.outp_visit_id,\r         now(),\r     '门诊基本药物费',\r     to_char(t.enter_date,'yyyymmdd') AS st_date\r   from his_bi.bms_bill_item t\r   left join his_bi.pts_outp_patient_visit p\r    on t.patient_id = p.patient_id\r   and t.visit_id = p.visit_id\r  where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r    and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1\r    and t.in_out_flag = 'O' --只统计门诊患者\r  and t.item_class in('A','B','N')  --只统计西药、中成药、草药费\r  and t.charges<>0\r  and t.item_code in (select pham_std_code from his_bi.dms_pham_basic_info where basic_pham='1')\r  group by to_char(t.enter_date,'yyyymmdd'),\r      t.patient_id,\r      t.visit_id,\r       p.outp_visit_id;\r \r ""]",['门诊基本药物费\r   ']
54,his_bi,fun_dwd_D00065_d_16493,"
/***
函数名称：住院患者实验室诊断费
    作用：统计某天住院患者实验室诊断费（以病案首页归档数据中的费用数据为准）
  开发人：wy 2020-04-10
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00065  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_income_d
	 where key = 'D00065';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D00065';
	
  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
  select 
				 'D00065',
				 to_number(c.datastore_name,'9999999999.9999'),/*9999999999.9999 表示14位长度，其中4个是小数位*/
				 d.bah as patient_id,
				 d.zycs as visit_id,
				 a.pai_visit_id,
				 now(),
				 '住院患者实验室诊断费',
			  to_char(d.cyrq,'yyyymmdd') AS st_date
   from his_bi.ods_patient_medical_record d
   left join his_bi.pts_pai_visit a
   on (d.bah =a.patient_id and a.visit_id =d.zycs)
  inner join (select inpati_id,max(hp_basic_business_id) as hp_basic_business_id 
                from his_bi.emr_mrms_hp_basic_business
               where reportcard_type is null 
               group by inpati_id) b 
     on a.pai_visit_id = b.inpati_id
  inner join his_bi.emr_mrms_hp_datarecord c
     on c.hp_basic_business_id = b.hp_basic_business_id
  where d.cyrq is not null 
    and c.hp_datacol_config_key = 'diagLabFee'
    and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
    and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1
    and c.datastore_name <>'0.00';
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00065'],"[""delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D00065';   INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,                    remark,st_date)   select      'D00065',     to_number(c.datastore_name,'9999999999.9999'),/*9999999999.9999 表示14位长度，其中4个是小数位*/     d.bah as patient_id,     d.zycs as visit_id,     a.pai_visit_id,     now(),     '住院患者实验室诊断费',     to_char(d.cyrq,'yyyymmdd') AS st_date   from his_bi.ods_patient_medical_record d   left join his_bi.pts_pai_visit a   on (d.bah =a.patient_id and a.visit_id =d.zycs)  inner join (select inpati_id,max(hp_basic_business_id) as hp_basic_business_id                 from his_bi.emr_mrms_hp_basic_business               where reportcard_type is null                group by inpati_id) b      on a.pai_visit_id = b.inpati_id  inner join his_bi.emr_mrms_hp_datarecord c     on c.hp_basic_business_id = b.hp_basic_business_id  where d.cyrq is not null     and c.hp_datacol_config_key = 'diagLabFee'    and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')    and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1    and c.datastore_name <>'0.00';  ""]",['住院患者实验室诊断费   ']
55,his_bi,fun_dwd_D00028_d_16448,"
/***
函数名称：门诊重点监控药品费
    作用：统计某天门诊重点监控药品费（费用以价表进行统计TJ0030）
  开发人：liuf 2020-04-07
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00028  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_outp_income_d
	 where key = 'D00028';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_outp_income_d where st_date = c_daylist.day_id and key = 'D00028';
	
  INSERT into his_bi.dwd_outp_income_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,
																			 remark,st_date) 
  select 
				 'D00028',
				 coalesce(sum(t.charges),0),
				 t.patient_id,
				 t.visit_id,
				 t1.outp_visit_id,
         now(),
			  '门诊重点监控药品费',
			  to_char(t.enter_date,'yyyymmdd') AS st_date
   from his_bi.bms_bill_item t
	 left join his_bi.pts_outp_patient_visit t1 on t.patient_id = t1.patient_id and t.visit_id = t1.visit_id
  where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')
    and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
    and t.in_out_flag = 'O' --只统计门诊患者
		and t.item_class in('A','B','N')  --只统计西药、中成药、草药费
		and t.charges<>0
		and exists (select 1 from his_bi.dms_pham_cust_def_cont 
			           where cont_name like '%重点监控药品%'
									 and pham_std_code = t.item_code)
  group by to_char(t.enter_date,'yyyymmdd'),
					 t.patient_id,
					 t.visit_id,
				   t1.outp_visit_id;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00028'],"[""delete from his_bi.dwd_outp_income_d where st_date = c_daylist.day_id and key = 'D00028';\r \r  INSERT into his_bi.dwd_outp_income_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,\r                    remark,st_date) \r  select \r     'D00028',\r     coalesce(sum(t.charges),0),\r     t.patient_id,\r     t.visit_id,\r     t1.outp_visit_id,\r         now(),\r     '门诊重点监控药品费',\r     to_char(t.enter_date,'yyyymmdd') AS st_date\r   from his_bi.bms_bill_item t\r  left join his_bi.pts_outp_patient_visit t1 on t.patient_id = t1.patient_id and t.visit_id = t1.visit_id\r  where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r    and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1\r    and t.in_out_flag = 'O' --只统计门诊患者\r  and t.item_class in('A','B','N')  --只统计西药、中成药、草药费\r  and t.charges<>0\r  and exists (select 1 from his_bi.dms_pham_cust_def_cont \r              where cont_name like '%重点监控药品%'\r          and pham_std_code = t.item_code)\r  group by to_char(t.enter_date,'yyyymmdd'),\r      t.patient_id,\r      t.visit_id,\r       t1.outp_visit_id;\r \r ""]",['门诊重点监控药品费\r   ']
56,his_bi,fun_dwd_D00029_d_16449,"
/***
函数名称：门诊非限制级抗菌药物费
    作用：统计某天门诊非限制级抗菌药物费（费用以价表进行统计TJ0030）
  开发人：liuf 2020-04-07
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00029  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_outp_income_d
	 where key = 'D00029';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_outp_income_d where st_date = c_daylist.day_id and key = 'D00029';
	
  INSERT into his_bi.dwd_outp_income_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,
																			 remark,st_date) 
   select 
				 'D00029',
				 coalesce(sum(t.charges),0),
				 t.patient_id,
				 t.visit_id,
				 t1.outp_visit_id,
         now(),
			  '门诊非限制级抗菌药物费',
			  to_char(t.enter_date,'yyyymmdd') AS st_date
   from his_bi.bms_bill_item t
	 left join his_bi.pts_outp_patient_visit t1 on t.patient_id = t1.patient_id and t.visit_id = t1.visit_id
  where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')
    and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
    and t.in_out_flag = 'O' --只统计门诊患者
		and t.item_class in('A','B','N')  --只统计西药、中成药、草药费
		and t.charges<>0
		and exists (select 1 from his_bi.dms_pham_cust_def_cont 
			           where cont_type_id = 'TJ0055'
								   and cont_value = '1' --只统计非限制级抗菌药物
									 and pham_std_code = t.item_code)
  group by to_char(t.enter_date,'yyyymmdd'),
					 t.patient_id,
					 t.visit_id,
				   t1.outp_visit_id;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00029'],"[""delete from his_bi.dwd_outp_income_d where st_date = c_daylist.day_id and key = 'D00029';\r \r  INSERT into his_bi.dwd_outp_income_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,\r                    remark,st_date) \r   select \r     'D00029',\r     coalesce(sum(t.charges),0),\r     t.patient_id,\r     t.visit_id,\r     t1.outp_visit_id,\r         now(),\r     '门诊非限制级抗菌药物费',\r     to_char(t.enter_date,'yyyymmdd') AS st_date\r   from his_bi.bms_bill_item t\r  left join his_bi.pts_outp_patient_visit t1 on t.patient_id = t1.patient_id and t.visit_id = t1.visit_id\r  where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r    and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1\r    and t.in_out_flag = 'O' --只统计门诊患者\r  and t.item_class in('A','B','N')  --只统计西药、中成药、草药费\r  and t.charges<>0\r  and exists (select 1 from his_bi.dms_pham_cust_def_cont \r              where cont_type_id = 'TJ0055'\r           and cont_value = '1' --只统计非限制级抗菌药物\r          and pham_std_code = t.item_code)\r  group by to_char(t.enter_date,'yyyymmdd'),\r      t.patient_id,\r      t.visit_id,\r       t1.outp_visit_id;\r \r ""]",['门诊非限制级抗菌药物费\r   ']
57,his_bi,fun_dwd_D00030_d_16450,"
/***
函数名称：门诊限制级抗菌药物费
    作用：统计某天门诊限制级抗菌药物费（费用以价表进行统计TJ0030）
  开发人：liuf 2020-04-07
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00030  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_outp_income_d
	 where key = 'D00030';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_outp_income_d where st_date = c_daylist.day_id and key = 'D00030';
	
  INSERT into his_bi.dwd_outp_income_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,
																			 remark,st_date) 
  select 
				 'D00030',
				 coalesce(sum(t.charges),0),
				 t.patient_id,
				 t.visit_id,
				 t1.outp_visit_id,
         now(),
			  '门诊限制级抗菌药物费',
			  to_char(t.enter_date,'yyyymmdd') AS st_date
   from his_bi.bms_bill_item t
	 left join his_bi.pts_outp_patient_visit t1 on t.patient_id = t1.patient_id and t.visit_id = t1.visit_id
  where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')
    and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
    and t.in_out_flag = 'O' --只统计门诊患者
		and t.item_class in('A','B','N')  --只统计西药、中成药、草药费
		and t.charges<>0
		and exists (select 1 from his_bi.dms_pham_cust_def_cont 
			           where cont_type_id = 'TJ0055'
								   and cont_value = '2' --只统计限制级抗菌药物
									 and pham_std_code = t.item_code)
  group by to_char(t.enter_date,'yyyymmdd'),
					 t.patient_id,
					 t.visit_id,
				   t1.outp_visit_id;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00030'],"[""delete from his_bi.dwd_outp_income_d where st_date = c_daylist.day_id and key = 'D00030';\r \r  INSERT into his_bi.dwd_outp_income_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,\r                    remark,st_date) \r  select \r     'D00030',\r     coalesce(sum(t.charges),0),\r     t.patient_id,\r     t.visit_id,\r     t1.outp_visit_id,\r         now(),\r     '门诊限制级抗菌药物费',\r     to_char(t.enter_date,'yyyymmdd') AS st_date\r   from his_bi.bms_bill_item t\r  left join his_bi.pts_outp_patient_visit t1 on t.patient_id = t1.patient_id and t.visit_id = t1.visit_id\r  where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r    and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1\r    and t.in_out_flag = 'O' --只统计门诊患者\r  and t.item_class in('A','B','N')  --只统计西药、中成药、草药费\r  and t.charges<>0\r  and exists (select 1 from his_bi.dms_pham_cust_def_cont \r              where cont_type_id = 'TJ0055'\r           and cont_value = '2' --只统计限制级抗菌药物\r          and pham_std_code = t.item_code)\r  group by to_char(t.enter_date,'yyyymmdd'),\r      t.patient_id,\r      t.visit_id,\r       t1.outp_visit_id;\r \r ""]",['门诊限制级抗菌药物费\r   ']
58,his_bi,fun_dwd_D00031_d_16451,"
/***
函数名称：门诊特殊级抗菌药物费
    作用：统计某天门诊特殊级抗菌药物费（费用以价表进行统计TJ0030）
  开发人：liuf 2020-04-07
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00031  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_outp_income_d
	 where key = 'D00031';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_outp_income_d where st_date = c_daylist.day_id and key = 'D00031';
	
  INSERT into his_bi.dwd_outp_income_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,
																			 remark,st_date) 
  select 
				 'D00031',
				 coalesce(sum(t.charges),0),
				 t.patient_id,
				 t.visit_id,
				 t1.outp_visit_id,
         now(),
			  '门诊特殊级抗菌药物费',
			  to_char(t.enter_date,'yyyymmdd') AS st_date
   from his_bi.bms_bill_item t
	 left join his_bi.pts_outp_patient_visit t1 on t.patient_id = t1.patient_id and t.visit_id = t1.visit_id
  where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')
    and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
    and t.in_out_flag = 'O' --只统计门诊患者
		and t.item_class in('A','B','N')  --只统计西药、中成药、草药费
		and t.charges<>0
		and exists (select 1 from his_bi.dms_pham_cust_def_cont 
			           where cont_type_id = 'TJ0055'
								   and cont_value = '3' --只统计特殊级抗菌药物
									 and pham_std_code = t.item_code)
  group by to_char(t.enter_date,'yyyymmdd'),
					 t.patient_id,
					 t.visit_id,
				   t1.outp_visit_id;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00031'],"[""delete from his_bi.dwd_outp_income_d where st_date = c_daylist.day_id and key = 'D00031';\r \r  INSERT into his_bi.dwd_outp_income_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,\r                    remark,st_date) \r  select \r     'D00031',\r     coalesce(sum(t.charges),0),\r     t.patient_id,\r     t.visit_id,\r     t1.outp_visit_id,\r         now(),\r     '门诊特殊级抗菌药物费',\r     to_char(t.enter_date,'yyyymmdd') AS st_date\r   from his_bi.bms_bill_item t\r  left join his_bi.pts_outp_patient_visit t1 on t.patient_id = t1.patient_id and t.visit_id = t1.visit_id\r  where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r    and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1\r    and t.in_out_flag = 'O' --只统计门诊患者\r  and t.item_class in('A','B','N')  --只统计西药、中成药、草药费\r  and t.charges<>0\r  and exists (select 1 from his_bi.dms_pham_cust_def_cont \r              where cont_type_id = 'TJ0055'\r           and cont_value = '3' --只统计特殊级抗菌药物\r          and pham_std_code = t.item_code)\r  group by to_char(t.enter_date,'yyyymmdd'),\r      t.patient_id,\r      t.visit_id,\r       t1.outp_visit_id;\r \r ""]",['门诊特殊级抗菌药物费\r   ']
59,his_bi,fun_dwd_D00035_d_16458,"
/***
函数名称：门诊处方数统计
    作用：统计某天门诊患者处方数
  开发人：liuf 2020-04-02
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00035  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_outp_quantity_d
	 where key = 'D00035';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_outp_quantity_d where st_date = c_daylist.day_id and key = 'D00035';
	
  INSERT into his_bi.dwd_outp_quantity_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,
																						remark,st_date) 
  SELECT 
		     'D00035',
				 count(distinct s.presc_no),
	       s.patient_id,
				 s.visit_id,
				 s.outp_visit_id,
				 now(),
				 '门诊处方数', 
				 to_char(s.create_date,'yyyymmdd') st_date
	 FROM  his_bi.dms_pds_supply  s
	 LEFT JOIN his_bi.dms_pds_supply_detail d ON s.supply_id = d.supply_id
	 LEFT JOIN his_bi.pts_outp_patient_visit t ON s.outp_visit_id=t.outp_visit_id
	 WHERE s.create_date >= to_date(c_daylist.day_id,'yyyyMMdd')
		 AND s.create_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
		 AND s.is_invalid = '1' 
		 AND s.presc_source='1' --表示来源于门诊
	 group by to_char(s.create_date,'yyyymmdd'),
						s.outp_visit_id,
						s.patient_id,
						s.visit_id;
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00035'],"[""delete from his_bi.dwd_outp_quantity_d where st_date = c_daylist.day_id and key = 'D00035';   INSERT into his_bi.dwd_outp_quantity_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,                      remark,st_date)   SELECT        'D00035',     count(distinct s.presc_no),        s.patient_id,     s.visit_id,     s.outp_visit_id,     now(),     '门诊处方数',      to_char(s.create_date,'yyyymmdd') st_date  FROM  his_bi.dms_pds_supply  s  LEFT JOIN his_bi.dms_pds_supply_detail d ON s.supply_id = d.supply_id  LEFT JOIN his_bi.pts_outp_patient_visit t ON s.outp_visit_id=t.outp_visit_id  WHERE s.create_date >= to_date(c_daylist.day_id,'yyyyMMdd')   AND s.create_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1   AND s.is_invalid = '1'    AND s.presc_source='1' --表示来源于门诊  group by to_char(s.create_date,'yyyymmdd'),      s.outp_visit_id,      s.patient_id,      s.visit_id; ""]",['门诊处方数统计   ']
60,his_bi,fun_dwd_D00036_d_16459,"
/***
函数名称：门诊抗菌药物处方数
    作用：统计某天门诊抗菌药物处方数
  开发人：liuf 2020-04-02
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00036  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_outp_quantity_d
	 where key = 'D00036';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_outp_quantity_d where st_date = c_daylist.day_id and key = 'D00036';
	
  INSERT into his_bi.dwd_outp_quantity_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,
																						remark,st_date) 
  SELECT 
		     'D00036',
				 count(distinct s.presc_no),
	       s.patient_id,
				 s.visit_id,
				 s.outp_visit_id,
				 now(),
				 '门诊抗菌药物处方数', 
				 to_char(s.create_date,'yyyymmdd') st_date
	 FROM  his_bi.dms_pds_supply  s
	 LEFT JOIN his_bi.dms_pds_supply_detail d ON s.supply_id = d.supply_id
	 LEFT JOIN his_bi.pts_outp_patient_visit t ON s.outp_visit_id=t.outp_visit_id
	 WHERE s.create_date >= to_date(c_daylist.day_id,'yyyyMMdd')
		 AND s.create_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
		 AND s.is_invalid = '1' 
		 AND s.presc_source='1' --表示来源于门诊
		 and exists(select 1 from his_bi.dms_pham_cust_def_cont n 
		             where n.pham_std_code=d.pham_std_code 
								   and n.cont_type_id='TJ0055')
	 group by to_char(s.create_date,'yyyymmdd'),
						s.outp_visit_id,
						s.patient_id,
						s.visit_id;
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00036'],"[""delete from his_bi.dwd_outp_quantity_d where st_date = c_daylist.day_id and key = 'D00036';   INSERT into his_bi.dwd_outp_quantity_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,                      remark,st_date)   SELECT        'D00036',     count(distinct s.presc_no),        s.patient_id,     s.visit_id,     s.outp_visit_id,     now(),     '门诊抗菌药物处方数',      to_char(s.create_date,'yyyymmdd') st_date  FROM  his_bi.dms_pds_supply  s  LEFT JOIN his_bi.dms_pds_supply_detail d ON s.supply_id = d.supply_id  LEFT JOIN his_bi.pts_outp_patient_visit t ON s.outp_visit_id=t.outp_visit_id  WHERE s.create_date >= to_date(c_daylist.day_id,'yyyyMMdd')   AND s.create_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1   AND s.is_invalid = '1'    AND s.presc_source='1' --表示来源于门诊   and exists(select 1 from his_bi.dms_pham_cust_def_cont n                where n.pham_std_code=d.pham_std_code            and n.cont_type_id='TJ0055')  group by to_char(s.create_date,'yyyymmdd'),      s.outp_visit_id,      s.patient_id,      s.visit_id; ""]",['门诊抗菌药物处方数   ']
61,his_bi,fun_dwd_D00037_d_16460,"
/***
函数名称：门诊静脉输液剂处方数
    作用：统计某天门诊静脉输液剂处方数
  开发人：liuf 2020-04-02
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00037  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_outp_quantity_d
	 where key = 'D00037';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_outp_quantity_d where st_date = c_daylist.day_id and key = 'D00037';
	
  INSERT into his_bi.dwd_outp_quantity_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,
																						remark,st_date) 
  SELECT 
		     'D00037',
				 count(distinct s.presc_no),
	       s.patient_id,
				 s.visit_id,
				 s.outp_visit_id,
				 now(),
				 '门诊静脉输液剂处方数', 
				 to_char(s.create_date,'yyyymmdd') st_date
	 FROM  his_bi.dms_pds_supply  s
	 LEFT JOIN his_bi.dms_pds_supply_detail d ON s.supply_id = d.supply_id
	 LEFT JOIN his_bi.pts_outp_patient_visit t ON s.outp_visit_id=t.outp_visit_id
	 WHERE s.create_date >= to_date(c_daylist.day_id,'yyyyMMdd')
		 AND s.create_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
		 AND s.is_invalid = '1' 
		 AND s.presc_source='1' --表示来源于门诊
		 and exists(select 1 from his_bi.bds_bds_code_table_item m
		             where m.item_value=d.usage_cod
								   and m.t_id = '100655'
									 and (m.item_name LIKE '%静滴%' OR m.item_name LIKE '%滴注%' 
									      OR m.item_name LIKE '%静推%' OR m.item_name LIKE '%泵入%'))
	 group by to_char(s.create_date,'yyyymmdd'),
						s.outp_visit_id,
						s.patient_id,
						s.visit_id;
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00037'],"[""delete from his_bi.dwd_outp_quantity_d where st_date = c_daylist.day_id and key = 'D00037';   INSERT into his_bi.dwd_outp_quantity_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,                      remark,st_date)   SELECT        'D00037',     count(distinct s.presc_no),        s.patient_id,     s.visit_id,     s.outp_visit_id,     now(),     '门诊静脉输液剂处方数',      to_char(s.create_date,'yyyymmdd') st_date  FROM  his_bi.dms_pds_supply  s  LEFT JOIN his_bi.dms_pds_supply_detail d ON s.supply_id = d.supply_id  LEFT JOIN his_bi.pts_outp_patient_visit t ON s.outp_visit_id=t.outp_visit_id  WHERE s.create_date >= to_date(c_daylist.day_id,'yyyyMMdd')   AND s.create_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1   AND s.is_invalid = '1'    AND s.presc_source='1' --表示来源于门诊   and exists(select 1 from his_bi.bds_bds_code_table_item m               where m.item_value=d.usage_cod           and m.t_id = '100655'          and (m.item_name LIKE '%静滴%' OR m.item_name LIKE '%滴注%'                OR m.item_name LIKE '%静推%' OR m.item_name LIKE '%泵入%'))  group by to_char(s.create_date,'yyyymmdd'),      s.outp_visit_id,      s.patient_id,      s.visit_id; ""]",['门诊静脉输液剂处方数   ']
62,his_bi,fun_dwd_D00038_d_16461,"
/***
函数名称：急诊处方数统计
    作用：统计某天急诊患者处方数
  开发人：liuf 2020-04-02
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00038  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_outp_quantity_d
	 where key = 'D00038';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_outp_quantity_d where st_date = c_daylist.day_id and key = 'D00038';
	
  INSERT into his_bi.dwd_outp_quantity_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,
																						remark,st_date) 
  SELECT 
		     'D00038',
				 count(distinct s.presc_no),
	       s.patient_id,
				 s.visit_id,
				 s.outp_visit_id,
				 now(),
				 '急诊处方数', 
				 to_char(s.create_date,'yyyymmdd') st_date
	 FROM  his_bi.dms_pds_supply  s
	 JOIN his_bi.dms_pds_supply_detail d ON s.supply_id = d.supply_id
	 JOIN his_bi.pts_outp_patient_visit t ON s.outp_visit_id=t.outp_visit_id
	 WHERE s.create_date >= to_date(c_daylist.day_id,'yyyyMMdd')
		 AND s.create_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
		 AND s.is_invalid = '1' 
		 AND s.presc_source='1' --表示来源于门诊
		 and t.outp_type_code='2' --表示门诊类型为急诊
	 group by to_char(s.create_date,'yyyymmdd'),
						s.outp_visit_id,
						s.patient_id,
						s.visit_id;
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00038'],"[""delete from his_bi.dwd_outp_quantity_d where st_date = c_daylist.day_id and key = 'D00038';   INSERT into his_bi.dwd_outp_quantity_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,                      remark,st_date)   SELECT        'D00038',     count(distinct s.presc_no),        s.patient_id,     s.visit_id,     s.outp_visit_id,     now(),     '急诊处方数',      to_char(s.create_date,'yyyymmdd') st_date  FROM  his_bi.dms_pds_supply  s  JOIN his_bi.dms_pds_supply_detail d ON s.supply_id = d.supply_id  JOIN his_bi.pts_outp_patient_visit t ON s.outp_visit_id=t.outp_visit_id  WHERE s.create_date >= to_date(c_daylist.day_id,'yyyyMMdd')   AND s.create_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1   AND s.is_invalid = '1'    AND s.presc_source='1' --表示来源于门诊   and t.outp_type_code='2' --表示门诊类型为急诊  group by to_char(s.create_date,'yyyymmdd'),      s.outp_visit_id,      s.patient_id,      s.visit_id; ""]",['急诊处方数统计   ']
63,his_bi,fun_dwd_D00066_d_16495,"
/***
函数名称：住院患者影像学诊断费
    作用：统计某天住院患者影像学诊断费（以病案首页归档数据中的费用数据为准）
  开发人：wy 2020-04-10
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00066  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_income_d
	 where key = 'D00066';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D00066';
	
  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
  select 
				 'D00066',
				 to_number(c.datastore_name,'9999999999.9999'),/*9999999999.9999 表示14位长度，其中4个是小数位*/
				 d.bah as patient_id,
				 d.zycs as visit_id,
				 a.pai_visit_id,
				 now(),
				 '住院患者影像学诊断费',
			  to_char(d.cyrq ,'yyyymmdd') AS st_date
   from his_bi.ods_patient_medical_record d 
   left join his_bi.pts_pai_visit a
   on (a.patient_id =d.bah and a.visit_id =d.zycs)
  inner join (select inpati_id,max(hp_basic_business_id) as hp_basic_business_id 
                from his_bi.emr_mrms_hp_basic_business
               where reportcard_type is null 
               group by inpati_id) b 
     on a.pai_visit_id = b.inpati_id
  inner join his_bi.emr_mrms_hp_datarecord c
     on c.hp_basic_business_id = b.hp_basic_business_id
  where d.cyrq  is not null 
    and c.hp_datacol_config_key = 'diagRadiologyFee'
    and d.cyrq  >= to_date(c_daylist.day_id,'yyyyMMdd')
    and d.cyrq  <  to_date(c_daylist.day_id,'yyyyMMdd')+1
    and c.datastore_name <>'0.00';
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00066'],"[""delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D00066';   INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,                    remark,st_date)   select      'D00066',     to_number(c.datastore_name,'9999999999.9999'),/*9999999999.9999 表示14位长度，其中4个是小数位*/     d.bah as patient_id,     d.zycs as visit_id,     a.pai_visit_id,     now(),     '住院患者影像学诊断费',     to_char(d.cyrq ,'yyyymmdd') AS st_date   from his_bi.ods_patient_medical_record d    left join his_bi.pts_pai_visit a   on (a.patient_id =d.bah and a.visit_id =d.zycs)  inner join (select inpati_id,max(hp_basic_business_id) as hp_basic_business_id                 from his_bi.emr_mrms_hp_basic_business               where reportcard_type is null                group by inpati_id) b      on a.pai_visit_id = b.inpati_id  inner join his_bi.emr_mrms_hp_datarecord c     on c.hp_basic_business_id = b.hp_basic_business_id  where d.cyrq  is not null     and c.hp_datacol_config_key = 'diagRadiologyFee'    and d.cyrq  >= to_date(c_daylist.day_id,'yyyyMMdd')    and d.cyrq  <  to_date(c_daylist.day_id,'yyyyMMdd')+1    and c.datastore_name <>'0.00';  ""]",['住院患者影像学诊断费   ']
64,his_bi,fun_dwd_D00067_d_16497,"
/***
函数名称：住院患者临床诊断项目费
    作用：统计某天住院患者临床诊断项目费（以病案首页归档数据中的费用数据为准）
  开发人：wy 2020-04-10
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00067  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_income_d
	 where key = 'D00067';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D00067';
	
  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
  select 
				 'D00067',
				 to_number(c.datastore_name,'9999999999.9999'),/*9999999999.9999 表示14位长度，其中4个是小数位*/
				 d.bah as patient_id,
				 d.zycs as visit_id,
				 a.pai_visit_id,
				 now(),
				 '住院患者临床诊断项目费',
			  to_char(d.cyrq,'yyyymmdd') AS st_date
   from his_bi.ods_patient_medical_record d 
   left join his_bi.pts_pai_visit a
   on (d.bah =a.patient_id and d.zycs =a.visit_id)
  inner join (select inpati_id,max(hp_basic_business_id) as hp_basic_business_id 
                from his_bi.emr_mrms_hp_basic_business
               where reportcard_type is null 
               group by inpati_id) b 
     on a.pai_visit_id = b.inpati_id
  inner join his_bi.emr_mrms_hp_datarecord c
     on c.hp_basic_business_id = b.hp_basic_business_id
  where d.cyrq is not null 
    and c.hp_datacol_config_key = 'diagClinicFee'
    and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
    and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1
    and c.datastore_name <>'0.00';
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00067'],"[""delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D00067';   INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,                    remark,st_date)   select      'D00067',     to_number(c.datastore_name,'9999999999.9999'),/*9999999999.9999 表示14位长度，其中4个是小数位*/     d.bah as patient_id,     d.zycs as visit_id,     a.pai_visit_id,     now(),     '住院患者临床诊断项目费',     to_char(d.cyrq,'yyyymmdd') AS st_date   from his_bi.ods_patient_medical_record d    left join his_bi.pts_pai_visit a   on (d.bah =a.patient_id and d.zycs =a.visit_id)  inner join (select inpati_id,max(hp_basic_business_id) as hp_basic_business_id                 from his_bi.emr_mrms_hp_basic_business               where reportcard_type is null                group by inpati_id) b      on a.pai_visit_id = b.inpati_id  inner join his_bi.emr_mrms_hp_datarecord c     on c.hp_basic_business_id = b.hp_basic_business_id  where d.cyrq is not null     and c.hp_datacol_config_key = 'diagClinicFee'    and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')    and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1    and c.datastore_name <>'0.00';  ""]",['住院患者临床诊断项目费   ']
65,his_bi,fun_dwd_D00039_d_16462,"
/***
函数名称：急诊抗菌药物处方数
    作用：统计某天急诊抗菌药物处方数
  开发人：liuf 2020-04-02
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00039  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_outp_quantity_d
	 where key = 'D00039';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_outp_quantity_d where st_date = c_daylist.day_id and key = 'D00039';
	
  INSERT into his_bi.dwd_outp_quantity_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,
																						remark,st_date) 
  SELECT 
		     'D00039',
				 count(distinct s.presc_no),
	       s.patient_id,
				 s.visit_id,
				 s.outp_visit_id,
				 now(),
				 '急诊抗菌药物处方数', 
				 to_char(s.create_date,'yyyymmdd') st_date
	 FROM  his_bi.dms_pds_supply  s
	 JOIN his_bi.dms_pds_supply_detail d ON s.supply_id = d.supply_id
	 JOIN his_bi.pts_outp_patient_visit t ON s.outp_visit_id=t.outp_visit_id
	 WHERE s.create_date >= to_date(c_daylist.day_id,'yyyyMMdd')
		 AND s.create_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
		 AND s.is_invalid = '1' 
		 AND s.presc_source='1' --表示来源于门诊
		 and t.outp_type_code='2' --表示门诊类型为急诊
		 and exists(select 1 from his_bi.dms_pham_cust_def_cont n 
		             where n.pham_std_code=d.pham_std_code 
								   and n.cont_type_id='TJ0055')
	 group by to_char(s.create_date,'yyyymmdd'),
						s.outp_visit_id,
						s.patient_id,
						s.visit_id;
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00039'],"[""delete from his_bi.dwd_outp_quantity_d where st_date = c_daylist.day_id and key = 'D00039';   INSERT into his_bi.dwd_outp_quantity_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,                      remark,st_date)   SELECT        'D00039',     count(distinct s.presc_no),        s.patient_id,     s.visit_id,     s.outp_visit_id,     now(),     '急诊抗菌药物处方数',      to_char(s.create_date,'yyyymmdd') st_date  FROM  his_bi.dms_pds_supply  s  JOIN his_bi.dms_pds_supply_detail d ON s.supply_id = d.supply_id  JOIN his_bi.pts_outp_patient_visit t ON s.outp_visit_id=t.outp_visit_id  WHERE s.create_date >= to_date(c_daylist.day_id,'yyyyMMdd')   AND s.create_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1   AND s.is_invalid = '1'    AND s.presc_source='1' --表示来源于门诊   and t.outp_type_code='2' --表示门诊类型为急诊   and exists(select 1 from his_bi.dms_pham_cust_def_cont n                where n.pham_std_code=d.pham_std_code            and n.cont_type_id='TJ0055')  group by to_char(s.create_date,'yyyymmdd'),      s.outp_visit_id,      s.patient_id,      s.visit_id; ""]",['急诊抗菌药物处方数   ']
66,his_bi,fun_dwd_D00040_d_16463,"
/***
函数名称：急诊静脉输液剂处方数
    作用：统计某天急诊静脉输液剂处方数
  开发人：liuf 2020-04-02
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00040  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_outp_quantity_d
	 where key = 'D00040';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_outp_quantity_d where st_date = c_daylist.day_id and key = 'D00040';
	
  INSERT into his_bi.dwd_outp_quantity_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,
																						remark,st_date) 
  SELECT 
		     'D00040',
				 count(distinct s.presc_no),
	       s.patient_id,
				 s.visit_id,
				 s.outp_visit_id,
				 now(),
				 '急诊静脉输液剂处方数', 
				 to_char(s.create_date,'yyyymmdd') st_date
	 FROM  his_bi.dms_pds_supply  s
	 LEFT JOIN his_bi.dms_pds_supply_detail d ON s.supply_id = d.supply_id
	 LEFT JOIN his_bi.pts_outp_patient_visit t ON s.outp_visit_id=t.outp_visit_id
	 WHERE s.create_date >= to_date(c_daylist.day_id,'yyyyMMdd')
		 AND s.create_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
		 AND s.is_invalid = '1' 
		 AND s.presc_source='1' --表示来源于门诊
		 and t.outp_type_code='2' --表示门诊类型为急诊
		 and exists(select 1 from his_bi.bds_bds_code_table_item m
		             where m.item_value=d.usage_cod
								   and m.t_id = '100655'
									 and (m.item_name LIKE '%静滴%' OR m.item_name LIKE '%滴注%' 
									      OR m.item_name LIKE '%静推%' OR m.item_name LIKE '%泵入%'))
	 group by to_char(s.create_date,'yyyymmdd'),
						s.outp_visit_id,
						s.patient_id,
						s.visit_id;
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00040'],"[""delete from his_bi.dwd_outp_quantity_d where st_date = c_daylist.day_id and key = 'D00040';   INSERT into his_bi.dwd_outp_quantity_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,                      remark,st_date)   SELECT        'D00040',     count(distinct s.presc_no),        s.patient_id,     s.visit_id,     s.outp_visit_id,     now(),     '急诊静脉输液剂处方数',      to_char(s.create_date,'yyyymmdd') st_date  FROM  his_bi.dms_pds_supply  s  LEFT JOIN his_bi.dms_pds_supply_detail d ON s.supply_id = d.supply_id  LEFT JOIN his_bi.pts_outp_patient_visit t ON s.outp_visit_id=t.outp_visit_id  WHERE s.create_date >= to_date(c_daylist.day_id,'yyyyMMdd')   AND s.create_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1   AND s.is_invalid = '1'    AND s.presc_source='1' --表示来源于门诊   and t.outp_type_code='2' --表示门诊类型为急诊   and exists(select 1 from his_bi.bds_bds_code_table_item m               where m.item_value=d.usage_cod           and m.t_id = '100655'          and (m.item_name LIKE '%静滴%' OR m.item_name LIKE '%滴注%'                OR m.item_name LIKE '%静推%' OR m.item_name LIKE '%泵入%'))  group by to_char(s.create_date,'yyyymmdd'),      s.outp_visit_id,      s.patient_id,      s.visit_id; ""]",['急诊静脉输液剂处方数   ']
67,his_bi,fun_dwd_D00041_d_16464,"
/***
函数名称：住院患者住院天数
    作用：统计某天住院患者住院天数（以病案首页归档数据中的费用数据为准）
  开发人：wy 2020-04-22
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00041  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00041';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00041';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
																			 
  select 'D00041',
				 a.zyts,
				 a.bah as patient_id,
				 a.zycs as visit_id,
				 b.pai_visit_id,
				 now(),
				 '住院天数',
			  to_char(a.cyrq,'yyyymmdd') AS st_date
   from his_bi.ods_patient_medical_record  a
  inner join his_bi.pts_pai_visit b
     on (b.patient_id =a.bah and b.visit_id =a.zycs)
    where a.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
      and a.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1
	 ;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00041'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00041';\r \r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r                    \r  select 'D00041',\r     a.zyts,\r     a.bah as patient_id,\r     a.zycs as visit_id,\r     b.pai_visit_id,\r     now(),\r     '住院天数',\r     to_char(a.cyrq,'yyyymmdd') AS st_date\r   from his_bi.ods_patient_medical_record  a\r  inner join his_bi.pts_pai_visit b\r     on (b.patient_id =a.bah and b.visit_id =a.zycs)\r    where a.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')\r      and a.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1\r  ;\r \r ""]",['住院患者住院天数\r   ']
68,his_bi,fun_dwd_D00042_d_16465,"
/***
函数名称：产伤——非器械辅助阴道分娩
    作用：统计某天住院患者产伤——器械辅助阴道分娩
  开发人：wrsong 2020-05-24
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00042  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
  c_daylist record;
  o_start_date varchar;
  o_end_date varchar;
  i_start_date varchar;
  i_end_date varchar;
  i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  /*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
    from his_bi.dwd_inp_medical_d 
   where key = 'D00042';
   
  if(i_count = 0)
    then 
      i_start_date := '20200101';
      --raise notice '0 i_start_date is: %', i_start_date;
  else if(i_count > 0)
    then
      i_start_date := i_end_date;
      --raise notice '1 i_start_date is: %', i_start_date;
  end if;
  end if;
    
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
  /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
    then 
      o_start_date := i_start_date;
      o_end_date := i_end_date;
      --raise notice '2 o_start_date is: %', o_start_date;
      --raise notice '2 o_end_date is: %', o_end_date;
  else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
  /*PG function 如果参入任何参数，那么以实际入参为准*/
    then 
      o_start_date := v_start_date;
      o_end_date := v_end_date;
      --raise notice '3 o_start_date is: %', o_start_date;
      --raise notice '3 o_end_date is: %', o_end_date;
  end if;
  end if;
  
  for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
  loop 
  
  --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
  
  delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00042';
  
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
                                       remark,st_date) 
  select distinct 'D00042' as key,
          1 as value,
          hf.patient_id,
          hf.visit_id,
          t1.pai_visit_id,
          Now () as insert_date,
          '非器械分娩' remark ,
          to_char(ha.cyrq,'yyyymmdd') as st_date
    from his_bi.ODS_PATIENT_MEDICAL_RECORD ha
    left join  his_bi.ods_patient_diag_info hf on ha.bah = hf.patient_id and ha.zycs = hf.visit_id
    left join his_bi.pts_pai_visit t1 on ha.bah = t1.patient_id and ha.zycs = t1.visit_id
   where 1=1 
	 and not exists
          (
              select 1
              from his_bi.ods_patient_diag_info tf
              where (tf.diagdiseasecode  like 'O81%' or  tf.diagdiseasecode like 'O84.1%')
              and hf.patient_id = tf.patient_id and hf.visit_id = tf.visit_id
          )
    -- and (hf.diagdiseasecode  not like 'O81%' or  hf.diagdiseasecode not like 'O84.1%')---排除器械分娩
		 and  (hf.diagdiseasecode  like 'O70%' or  hf.diagdiseasecode like 'O71%')
     and ha.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
     and ha.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 ; 
 
   end loop;
   RETURN 'SUCCESS';
END;
  ",['D00042'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00042';\r  \r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                                       remark,st_date) \r  select distinct 'D00042' as key,\r          1 as value,\r          hf.patient_id,\r          hf.visit_id,\r          t1.pai_visit_id,\r          Now () as insert_date,\r          '非器械分娩' remark ,\r          to_char(ha.cyrq,'yyyymmdd') as st_date\r    from his_bi.ODS_PATIENT_MEDICAL_RECORD ha\r    left join  his_bi.ods_patient_diag_info hf on ha.bah = hf.patient_id and ha.zycs = hf.visit_id\r    left join his_bi.pts_pai_visit t1 on ha.bah = t1.patient_id and ha.zycs = t1.visit_id\r   where 1=1 \r  and not exists\r          (\r              select 1\r              from his_bi.ods_patient_diag_info tf\r              where (tf.diagdiseasecode  like 'O81%' or  tf.diagdiseasecode like 'O84.1%')\r              and hf.patient_id = tf.patient_id and hf.visit_id = tf.visit_id\r          )\r    -- and (hf.diagdiseasecode  not like 'O81%' or  hf.diagdiseasecode not like 'O84.1%')---排除器械分娩\r   and  (hf.diagdiseasecode  like 'O70%' or  hf.diagdiseasecode like 'O71%')\r     and ha.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')\r     and ha.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 ; \r \r  ""]",['产伤——非器械辅助阴道分娩\r   ']
69,his_bi,fun_dwd_D00044_d_16467,"
/***
函数名称：住院患者是否手术并发症
    作用：统计某天住院患者是否手术并发症（以病案首页归档数据中的费用数据为准）
  开发人：wy 2020-04-22
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00044  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00044';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00044';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 																		 																	 
    select 
				 'D00044',
				 count(*), 
				 a.bah as patient_id,
				 a.zycs as visit_id,
				 c.pai_visit_id, 
				 now(),
				 '是否手术并发症',
			  to_char(a.cyrq,'yyyymmdd') as st_date
	 from his_bi.ods_patient_medical_record a
	inner join his_bi.ods_patient_diag_info b on (a.brxh = b.brxh and b.diagstatus = '1')   --入院病情为无
	inner join his_bi.ods_patient_opertion_info p on a.brxh = p.brxh --手术患者才能判断手术并发症
   left join his_bi.pts_pai_visit c on (c.patient_id =a.bah and c.visit_id =a.zycs)
	where exists(select 1 from his_bi.dim_oper_other_info t
							  where t.icd_code = b.diagdiseasecode
								  and t.icd_type = '手术并发症'
									)
    and a.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
    and a.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1
		group by 
					a.bah,
				  a.zycs,
				  c.pai_visit_id, 
			    to_char(a.cyrq,'yyyymmdd')
	 ;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00044'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00044';\r \r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date)                                      \r    select \r     'D00044',\r     count(*), \r     a.bah as patient_id,\r     a.zycs as visit_id,\r     c.pai_visit_id, \r     now(),\r     '是否手术并发症',\r     to_char(a.cyrq,'yyyymmdd') as st_date\r  from his_bi.ods_patient_medical_record a\r inner join his_bi.ods_patient_diag_info b on (a.brxh = b.brxh and b.diagstatus = '1')   --入院病情为无\r inner join his_bi.ods_patient_opertion_info p on a.brxh = p.brxh --手术患者才能判断手术并发症\r   left join his_bi.pts_pai_visit c on (c.patient_id =a.bah and c.visit_id =a.zycs)\r where exists(select 1 from his_bi.dim_oper_other_info t\r         where t.icd_code = b.diagdiseasecode\r          and t.icd_type = '手术并发症'\r         )\r    and a.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')\r    and a.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1\r  group by \r     a.bah,\r      a.zycs,\r      c.pai_visit_id, \r       to_char(a.cyrq,'yyyymmdd')\r  ;\r \r ""]",['住院患者是否手术并发症\r   ']
70,his_bi,fun_dwd_D00045_d_16469,"
/***
函数名称：住院患者是否择期手术
    作用：统计某天住院患者是否择期手术（以病案首页归档数据中的费用数据为准）
  开发人：wy 2020-04-22
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00045  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
		不取病案：select 
t1.patient_id,
t1.patient_visit_id,
t1.visit_id,
to_char(t1.apply_date,'yyyyMMdd') as st_date
from 
his_bi.emr_cpoe_app t1
inner join 
his_bi.emr_cpoe_app_common_deta t2 on t1.order_apply_id = t2.ord_apply_id
where 
t1.apply_type='F' 
and t1.apply_date >= to_date('20200401','yyyyMMdd')
and t1.apply_date < to_date('20200401','yyyyMMdd')+1
and t2.attribute_value = '择期手术'
and t2.attribute_key='operateTypeName'

***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00045';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00045';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
																			 
  select 
				 'D00045',
				 1,
				 d.bah as patient_id,
				 d.zycs as visit_id,
				 a.pai_visit_id,
				 now(),
				 '是否择期手术',
			  to_char(d.cyrq ,'yyyymmdd') AS st_date
   from his_bi.ods_patient_medical_record d 
   left join his_bi.pts_pai_visit a
   on (a.patient_id =d.bah and a.visit_id =d.zycs)
  where d.cyrq  is not null 
    and d.rytj <>'1' --入院方式非急诊入院
    and exists (select 1 from his_bi.ods_patient_opertion_info opoi 
			           where opoi.brxh =d.brxh and opoi.surgerytype in ('1','4')) --入院的手术患者（手术和介入治疗）
    and d.cyrq  >= to_date(c_daylist.day_id,'yyyyMMdd')
    and d.cyrq  <  to_date(c_daylist.day_id,'yyyyMMdd')+1;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00045'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00045';\r \r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r                    \r  select \r     'D00045',\r     1,\r     d.bah as patient_id,\r     d.zycs as visit_id,\r     a.pai_visit_id,\r     now(),\r     '是否择期手术',\r     to_char(d.cyrq ,'yyyymmdd') AS st_date\r   from his_bi.ods_patient_medical_record d \r   left join his_bi.pts_pai_visit a\r   on (a.patient_id =d.bah and a.visit_id =d.zycs)\r  where d.cyrq  is not null \r    and d.rytj <>'1' --入院方式非急诊入院\r    and exists (select 1 from his_bi.ods_patient_opertion_info opoi \r              where opoi.brxh =d.brxh and opoi.surgerytype in ('1','4')) --入院的手术患者（手术和介入治疗）\r    and d.cyrq  >= to_date(c_daylist.day_id,'yyyyMMdd')\r    and d.cyrq  <  to_date(c_daylist.day_id,'yyyyMMdd')+1;\r \r ""]",['住院患者是否择期手术\r   ']
71,his_bi,fun_dwd_D00068_d_16499,"
/***
函数名称：住院患者非手术治疗项目费
    作用：统计某天住院患者非手术治疗项目费（以病案首页归档数据中的费用数据为准）
  开发人：wy 2020-04-10
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00068  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_income_d
	 where key = 'D00068';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D00068';
	
  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
  select 
				 'D00068',
				 to_number(c.datastore_name,'9999999999.9999'),/*9999999999.9999 表示14位长度，其中4个是小数位*/
				 d.bah as patient_id,
				  d.zycs as visit_id,
				 a.pai_visit_id,
				 now(),
				 '住院患者非手术治疗项目费',
			  to_char(d.cyrq,'yyyymmdd') AS st_date
   from his_bi.ods_patient_medical_record d 
  left join his_bi.pts_pai_visit a
  on (d.bah =a.patient_id and d.zycs =a.visit_id )
  inner join (select inpati_id,max(hp_basic_business_id) as hp_basic_business_id 
                from his_bi.emr_mrms_hp_basic_business
               where reportcard_type is null 
               group by inpati_id) b 
     on a.pai_visit_id = b.inpati_id
  inner join his_bi.emr_mrms_hp_datarecord c
     on c.hp_basic_business_id = b.hp_basic_business_id
  where d.cyrq is not null 
    and c.hp_datacol_config_key = 'treatNoneSugeryFee'
    and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
    and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1
    and c.datastore_name <>'0.00';
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00068'],"[""delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D00068';   INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,                    remark,st_date)   select      'D00068',     to_number(c.datastore_name,'9999999999.9999'),/*9999999999.9999 表示14位长度，其中4个是小数位*/     d.bah as patient_id,      d.zycs as visit_id,     a.pai_visit_id,     now(),     '住院患者非手术治疗项目费',     to_char(d.cyrq,'yyyymmdd') AS st_date   from his_bi.ods_patient_medical_record d   left join his_bi.pts_pai_visit a  on (d.bah =a.patient_id and d.zycs =a.visit_id )  inner join (select inpati_id,max(hp_basic_business_id) as hp_basic_business_id                 from his_bi.emr_mrms_hp_basic_business               where reportcard_type is null                group by inpati_id) b      on a.pai_visit_id = b.inpati_id  inner join his_bi.emr_mrms_hp_datarecord c     on c.hp_basic_business_id = b.hp_basic_business_id  where d.cyrq is not null     and c.hp_datacol_config_key = 'treatNoneSugeryFee'    and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')    and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1    and c.datastore_name <>'0.00';  ""]",['住院患者非手术治疗项目费   ']
72,his_bi,fun_dwd_D00069_d_16501,"
/***
函数名称：住院患者临床物理治疗费
    作用：统计某天住院患者临床物理治疗费（以病案首页归档数据中的费用数据为准）
  开发人：wy 2020-04-10
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00069  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_income_d
	 where key = 'D00069';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D00069';
	
  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
  select 
				 'D00069',
				 to_number(c.datastore_name,'9999999999.9999'),/*9999999999.9999 表示14位长度，其中4个是小数位*/
				 d.bah as patient_id,
				 d.zycs as visit_id,
				 a.pai_visit_id,
				 now(),
				 '住院患者临床物理治疗费',
			  to_char(d.cyrq,'yyyymmdd') AS st_date
   from his_bi.ods_patient_medical_record d
  left join his_bi.pts_pai_visit a
  on (a.patient_id =d.bah and a.visit_id =d.zycs)
  inner join (select inpati_id,max(hp_basic_business_id) as hp_basic_business_id 
                from his_bi.emr_mrms_hp_basic_business
               where reportcard_type is null 
               group by inpati_id) b 
     on a.pai_visit_id = b.inpati_id
  inner join his_bi.emr_mrms_hp_datarecord c
     on c.hp_basic_business_id = b.hp_basic_business_id
  where d.cyrq is not null 
    and c.hp_datacol_config_key = 'treatClinicPhyFee'
    and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
    and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1
    and c.datastore_name <>'0.00';
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00069'],"[""delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D00069';   INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,                    remark,st_date)   select      'D00069',     to_number(c.datastore_name,'9999999999.9999'),/*9999999999.9999 表示14位长度，其中4个是小数位*/     d.bah as patient_id,     d.zycs as visit_id,     a.pai_visit_id,     now(),     '住院患者临床物理治疗费',     to_char(d.cyrq,'yyyymmdd') AS st_date   from his_bi.ods_patient_medical_record d  left join his_bi.pts_pai_visit a  on (a.patient_id =d.bah and a.visit_id =d.zycs)  inner join (select inpati_id,max(hp_basic_business_id) as hp_basic_business_id                 from his_bi.emr_mrms_hp_basic_business               where reportcard_type is null                group by inpati_id) b      on a.pai_visit_id = b.inpati_id  inner join his_bi.emr_mrms_hp_datarecord c     on c.hp_basic_business_id = b.hp_basic_business_id  where d.cyrq is not null     and c.hp_datacol_config_key = 'treatClinicPhyFee'    and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')    and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1    and c.datastore_name <>'0.00';  ""]",['住院患者临床物理治疗费   ']
73,his_bi,fun_dwd_D00070_d_16503,"
/***
函数名称：住院患者手术治疗费
    作用：统计某天住院患者手术治疗费（以病案首页归档数据中的费用数据为准）
  开发人：wy 2020-04-10
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00070  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_income_d
	 where key = 'D00070';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D00070';
	
  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
 select 
				 'D00070',
				 to_number(c.datastore_name,'9999999999.9999'),/*9999999999.9999 表示14位长度，其中4个是小数位*/
				 d.bah as patient_id,
				 d.zycs as visit_id,
				 a.pai_visit_id,
				 now(),
				 '住院患者手术治疗费',
			  to_char(d.cyrq ,'yyyymmdd') AS st_date
   from his_bi.ods_patient_medical_record d 
   left join his_bi.pts_pai_visit a
   on (d.bah =a.patient_id and d.zycs =a.visit_id)
  inner join (select inpati_id,max(hp_basic_business_id) as hp_basic_business_id 
                from his_bi.emr_mrms_hp_basic_business
               where reportcard_type is null 
               group by inpati_id) b 
     on a.pai_visit_id = b.inpati_id
  inner join his_bi.emr_mrms_hp_datarecord c
     on c.hp_basic_business_id = b.hp_basic_business_id
  where d.cyrq is not null 
    and c.hp_datacol_config_key = 'treatSugeryFeeTotal'
    and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
    and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1
    and c.datastore_name <>'0.00';
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00070'],"[""delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D00070';   INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,                    remark,st_date)  select      'D00070',     to_number(c.datastore_name,'9999999999.9999'),/*9999999999.9999 表示14位长度，其中4个是小数位*/     d.bah as patient_id,     d.zycs as visit_id,     a.pai_visit_id,     now(),     '住院患者手术治疗费',     to_char(d.cyrq ,'yyyymmdd') AS st_date   from his_bi.ods_patient_medical_record d    left join his_bi.pts_pai_visit a   on (d.bah =a.patient_id and d.zycs =a.visit_id)  inner join (select inpati_id,max(hp_basic_business_id) as hp_basic_business_id                 from his_bi.emr_mrms_hp_basic_business               where reportcard_type is null                group by inpati_id) b      on a.pai_visit_id = b.inpati_id  inner join his_bi.emr_mrms_hp_datarecord c     on c.hp_basic_business_id = b.hp_basic_business_id  where d.cyrq is not null     and c.hp_datacol_config_key = 'treatSugeryFeeTotal'    and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')    and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1    and c.datastore_name <>'0.00';  ""]",['住院患者手术治疗费   ']
74,his_bi,fun_dwd_D00071_d_16505,"
/***
函数名称：住院患者麻醉费
    作用：统计某天住院患者麻醉费（以病案首页归档数据中的费用数据为准）
  开发人：wy 2020-04-10
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00071  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_income_d
	 where key = 'D00071';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D00071';
	
  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
 select 'D00071',
				 to_number(c.datastore_name,'9999999999.9999'),/*9999999999.9999 表示14位长度，其中4个是小数位*/
				 d.bah as patient_id,
				 d.zycs as visit_id,
				 a.pai_visit_id,
				 now(),
				 '住院患者麻醉费',
			  to_char(d.cyrq,'yyyymmdd') AS st_date
   from his_bi.ods_patient_medical_record d
  left join his_bi.pts_pai_visit a
  on (a.patient_id =d.bah and a.visit_id =d.zycs)
  inner join (select inpati_id,max(hp_basic_business_id) as hp_basic_business_id 
                from his_bi.emr_mrms_hp_basic_business
               where reportcard_type is null 
               group by inpati_id) b 
     on a.pai_visit_id = b.inpati_id
  inner join his_bi.emr_mrms_hp_datarecord c
     on c.hp_basic_business_id = b.hp_basic_business_id
  where d.cyrq is not null 
    and c.hp_datacol_config_key = 'treatAnesthesiaFee'
    and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
    and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1
    and c.datastore_name <>'0.00';
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00071'],"[""delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D00071';   INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,                    remark,st_date)  select 'D00071',     to_number(c.datastore_name,'9999999999.9999'),/*9999999999.9999 表示14位长度，其中4个是小数位*/     d.bah as patient_id,     d.zycs as visit_id,     a.pai_visit_id,     now(),     '住院患者麻醉费',     to_char(d.cyrq,'yyyymmdd') AS st_date   from his_bi.ods_patient_medical_record d  left join his_bi.pts_pai_visit a  on (a.patient_id =d.bah and a.visit_id =d.zycs)  inner join (select inpati_id,max(hp_basic_business_id) as hp_basic_business_id                 from his_bi.emr_mrms_hp_basic_business               where reportcard_type is null                group by inpati_id) b      on a.pai_visit_id = b.inpati_id  inner join his_bi.emr_mrms_hp_datarecord c     on c.hp_basic_business_id = b.hp_basic_business_id  where d.cyrq is not null     and c.hp_datacol_config_key = 'treatAnesthesiaFee'    and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')    and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1    and c.datastore_name <>'0.00';  ""]",['住院患者麻醉费   ']
75,his_bi,fun_dwd_D00072_d_16507,"
/***
函数名称：住院患者手术费
    作用：统计某天住院患者手术费（以病案首页归档数据中的费用数据为准）
  开发人：wy 2020-04-10
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00072  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_income_d
	 where key = 'D00072';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D00072';
	
  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
  select 'D00072',
				 to_number(c.datastore_name,'9999999999.9999'),/*9999999999.9999 表示14位长度，其中4个是小数位*/
				 d.bah as patient_id,
				 d.zycs as visit_id,
				 a.pai_visit_id,
				 now(),
				 '住院患者手术费',
			  to_char(d.cyrq,'yyyymmdd') AS st_date
   from his_bi.ods_patient_medical_record d
  left join his_bi.pts_pai_visit a
  on (d.bah =a.patient_id and d.zycs =a.visit_id )
  inner join (select inpati_id,max(hp_basic_business_id) as hp_basic_business_id 
                from his_bi.emr_mrms_hp_basic_business
               where reportcard_type is null 
               group by inpati_id) b 
     on a.pai_visit_id = b.inpati_id
  inner join his_bi.emr_mrms_hp_datarecord c
     on c.hp_basic_business_id = b.hp_basic_business_id
  where d.cyrq is not null 
    and c.hp_datacol_config_key = 'treatSugeryFeeTotal'
    and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
    and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1
    and c.datastore_name <>'0.00';
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00072'],"[""delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D00072';   INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,                    remark,st_date)   select 'D00072',     to_number(c.datastore_name,'9999999999.9999'),/*9999999999.9999 表示14位长度，其中4个是小数位*/     d.bah as patient_id,     d.zycs as visit_id,     a.pai_visit_id,     now(),     '住院患者手术费',     to_char(d.cyrq,'yyyymmdd') AS st_date   from his_bi.ods_patient_medical_record d  left join his_bi.pts_pai_visit a  on (d.bah =a.patient_id and d.zycs =a.visit_id )  inner join (select inpati_id,max(hp_basic_business_id) as hp_basic_business_id                 from his_bi.emr_mrms_hp_basic_business               where reportcard_type is null                group by inpati_id) b      on a.pai_visit_id = b.inpati_id  inner join his_bi.emr_mrms_hp_datarecord c     on c.hp_basic_business_id = b.hp_basic_business_id  where d.cyrq is not null     and c.hp_datacol_config_key = 'treatSugeryFeeTotal'    and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')    and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1    and c.datastore_name <>'0.00';  ""]",['住院患者手术费   ']
76,his_bi,fun_dwd_D00073_d_16509,"
/***
函数名称：住院患者康复费
    作用：统计某天住院患者康复费（以病案首页归档数据中的费用数据为准）
  开发人：wy 2020-04-10
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00073  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_income_d
	 where key = 'D00073';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D00073';
	
  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
  select 'D00073',
				 to_number(c.datastore_name,'9999999999.9999'),/*9999999999.9999 表示14位长度，其中4个是小数位*/
				 d.bah as patient_id,
				 d.zycs as visit_id,
				 a.pai_visit_id,
				 now(),
				 '住院患者康复费',
			  to_char(d.cyrq,'yyyymmdd') AS st_date
   from his_bi.ods_patient_medical_record d 
   left join his_bi.pts_pai_visit a
   on (a.patient_id =d.bah and a.visit_id =d.zycs)
  inner join (select inpati_id,max(hp_basic_business_id) as hp_basic_business_id 
                from his_bi.emr_mrms_hp_basic_business
               where reportcard_type is null 
               group by inpati_id) b 
     on a.pai_visit_id = b.inpati_id
  inner join his_bi.emr_mrms_hp_datarecord c
     on c.hp_basic_business_id = b.hp_basic_business_id
  where d.cyrq is not null 
    and c.hp_datacol_config_key = 'healingFee'
    and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
    and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1
    and c.datastore_name <>'0.00';
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00073'],"[""delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D00073';   INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,                    remark,st_date)   select 'D00073',     to_number(c.datastore_name,'9999999999.9999'),/*9999999999.9999 表示14位长度，其中4个是小数位*/     d.bah as patient_id,     d.zycs as visit_id,     a.pai_visit_id,     now(),     '住院患者康复费',     to_char(d.cyrq,'yyyymmdd') AS st_date   from his_bi.ods_patient_medical_record d    left join his_bi.pts_pai_visit a   on (a.patient_id =d.bah and a.visit_id =d.zycs)  inner join (select inpati_id,max(hp_basic_business_id) as hp_basic_business_id                 from his_bi.emr_mrms_hp_basic_business               where reportcard_type is null                group by inpati_id) b      on a.pai_visit_id = b.inpati_id  inner join his_bi.emr_mrms_hp_datarecord c     on c.hp_basic_business_id = b.hp_basic_business_id  where d.cyrq is not null     and c.hp_datacol_config_key = 'healingFee'    and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')    and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1    and c.datastore_name <>'0.00';  ""]",['住院患者康复费   ']
77,his_bi,fun_dwd_D00046_d_16471,"
/***
函数名称：是否下转患者
    作用：统计某天住院患者是否下转患者（以病案首页归档数据为准）
  开发人：hamter.lize 2020年4月30日
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00046  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00046';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00046';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
																			 
  select 
				 'D00046',
				 1,
				 d.bah as patient_id,
				 d.zycs as visit_id,
				 a.pai_visit_id,
				 now(),
				 '是否下转患者',
			  to_char(d.cyrq ,'yyyymmdd') AS st_date
   from his_bi.ods_patient_medical_record d 
   left join his_bi.pts_pai_visit a
   on (a.patient_id =d.bah and a.visit_id =d.zycs)
  where d.cyrq  is not null 
    and d.lyfs='3'
    and d.cyrq  >= to_date(c_daylist.day_id,'yyyyMMdd')
    and d.cyrq  <  to_date(c_daylist.day_id,'yyyyMMdd')+1;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00046'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00046';   INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,                    remark,st_date)                       select      'D00046',     1,     d.bah as patient_id,     d.zycs as visit_id,     a.pai_visit_id,     now(),     '是否下转患者',     to_char(d.cyrq ,'yyyymmdd') AS st_date   from his_bi.ods_patient_medical_record d    left join his_bi.pts_pai_visit a   on (a.patient_id =d.bah and a.visit_id =d.zycs)  where d.cyrq  is not null     and d.lyfs='3'    and d.cyrq  >= to_date(c_daylist.day_id,'yyyyMMdd')    and d.cyrq  <  to_date(c_daylist.day_id,'yyyyMMdd')+1;  ""]",['是否下转患者   ']
78,his_bi,fun_dwd_D00048_d_16472,"
/***
函数名称：住院患者是否手术患者（国家标准）
    作用：统计某天住院患者是否手术患者（以病案首页归档数据中的费用数据为准）
  开发人：wy 2020-04-29
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00048  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00048';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00048';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
  select 'D00048',
				 1,
			   a.bah as patient_id,
				 a.zycs as visit_id,
				 pt.pai_visit_id,
				 now(),
			   '是否手术患者(0 否 1是)',
				 to_char(a.cyrq,'yyyymmdd') as st_date
	  from his_bi.ods_patient_medical_record a
	 inner join his_bi.pts_pai_visit pt on a.bah = pt.patient_id and a.zycs = pt.visit_id
	 where exists (select 1 from his_bi.ods_patient_opertion_info t
									where t.brxh =a.brxh 
									  and t.surgerytype in ('1','4')) --入院的手术患者（手术和介入治疗）
	  and a.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
	  and a.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 ;

	
	
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00048'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00048';   INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,                    remark,st_date)   select 'D00048',     1,      a.bah as patient_id,     a.zycs as visit_id,     pt.pai_visit_id,     now(),      '是否手术患者(0 否 1是)',     to_char(a.cyrq,'yyyymmdd') as st_date   from his_bi.ods_patient_medical_record a  inner join his_bi.pts_pai_visit pt on a.bah = pt.patient_id and a.zycs = pt.visit_id  where exists (select 1 from his_bi.ods_patient_opertion_info t         where t.brxh =a.brxh            and t.surgerytype in ('1','4')) --入院的手术患者（手术和介入治疗）   and a.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')   and a.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 ;    ""]",['住院患者是否手术患者（国家标准）   ']
79,his_bi,fun_dwd_D00049_d_16473,"
/***
函数名称：住院患者是否微创手术患者(0 否 1是)（国家标准）
    作用：统计某天住院患者是否微创手术患者(0 否 1是)（以病案首页归档数据中的费用数据为准）
  开发人：wy 2020-04-29
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00049  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00049';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00049';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
	 select distinct 'D00049',
					1,
				  a.bah as patient_id,
					a.zycs as visit_id,
					pt.pai_visit_id,
					now(),
					'是否微创手术患者(0 否 1是)',
				  to_char(a.cyrq,'yyyymmdd') as st_date
	   from his_bi.ods_patient_medical_record a
	  inner join his_bi.pts_pai_visit pt on a.bah = pt.patient_id and a.zycs = pt.visit_id
		inner join his_bi.ods_patient_opertion_info t on t.brxh =a.brxh
	  where 1=1
	    and exists(select 1 from his_bi.dim_oper_mini_info mf
									where t.surgerycode = mf.icd9_code)
	    and a.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
	    and a.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 
	 ;

	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00049'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00049';\r \r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r  select distinct 'D00049',\r     1,\r      a.bah as patient_id,\r     a.zycs as visit_id,\r     pt.pai_visit_id,\r     now(),\r     '是否微创手术患者(0 否 1是)',\r      to_char(a.cyrq,'yyyymmdd') as st_date\r    from his_bi.ods_patient_medical_record a\r   inner join his_bi.pts_pai_visit pt on a.bah = pt.patient_id and a.zycs = pt.visit_id\r  inner join his_bi.ods_patient_opertion_info t on t.brxh =a.brxh\r   where 1=1\r     and exists(select 1 from his_bi.dim_oper_mini_info mf\r         where t.surgerycode = mf.icd9_code)\r     and a.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')\r     and a.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 \r  ;\r\r ""]",['住院患者是否微创手术患者(0 否 1是)（国家标准）\r   ']
80,his_bi,fun_dwd_D00050_d_16474,"
/***
函数名称：住院患者是否四级手术患者(0 否 1是)（国家标准）
    作用：统计某天住院患者是否四级手术患者(0 否 1是)（以病案首页归档数据中的费用数据为准）
  开发人：wy 2020-04-29
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00050  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00050';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00050';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 

	 select distinct
				  'D00050',
				  1,
					a.bah as patient_id,
					a.zycs as visit_id,
					pt.pai_visit_id,
					now(),
					'是否四级手术患者(0 否 1是)',
					to_char(a.cyrq,'yyyymmdd') as st_date
	  from his_bi.ods_patient_medical_record a
	 inner join his_bi.pts_pai_visit pt on a.bah = pt.patient_id and a.zycs = pt.visit_id
	 inner join his_bi.ods_patient_opertion_info t on t.brxh =a.brxh 
	 where 1=1
		 and exists(select 1 from his_bi.dim_3_4_oper_info m
								 where t.surgerycode = m.icd9_code)
	   and a.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
	   and a.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 
	;

	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00050'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00050';   INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,                    remark,st_date)   select distinct      'D00050',      1,     a.bah as patient_id,     a.zycs as visit_id,     pt.pai_visit_id,     now(),     '是否四级手术患者(0 否 1是)',     to_char(a.cyrq,'yyyymmdd') as st_date   from his_bi.ods_patient_medical_record a  inner join his_bi.pts_pai_visit pt on a.bah = pt.patient_id and a.zycs = pt.visit_id  inner join his_bi.ods_patient_opertion_info t on t.brxh =a.brxh   where 1=1   and exists(select 1 from his_bi.dim_3_4_oper_info m         where t.surgerycode = m.icd9_code)    and a.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')    and a.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1  ; ""]",['住院患者是否四级手术患者(0 否 1是)（国家标准）   ']
81,his_bi,fun_dwd_D00074_d_16511,"
/***
函数名称：住院患者中医治疗费
    作用：统计某天住院患者中医治疗费（以病案首页归档数据中的费用数据为准）
  开发人：wy 2020-04-10
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00074  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_income_d
	 where key = 'D00074';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D00074';
	
  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
  select 'D00074',
				 to_number(c.datastore_name,'9999999999.9999'),/*9999999999.9999 表示14位长度，其中4个是小数位*/
				 d.bah as patient_id,
				 d.zycs as visit_id,
				 a.pai_visit_id,
				 now(),
				 '住院患者中医治疗费',
			  to_char(d.cyrq,'yyyymmdd') AS st_date
   from his_bi.ods_patient_medical_record d
   left join his_bi.pts_pai_visit a
   on (a.visit_id =d.zycs and a.patient_id =d.bah)
  inner join (select inpati_id,max(hp_basic_business_id) as hp_basic_business_id 
                from his_bi.emr_mrms_hp_basic_business
               where reportcard_type is null 
               group by inpati_id) b 
     on a.pai_visit_id = b.inpati_id
  inner join his_bi.emr_mrms_hp_datarecord c
     on c.hp_basic_business_id = b.hp_basic_business_id
  where d.cyrq is not null 
    and c.hp_datacol_config_key = 'tCMFee'
    and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
    and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1
    and c.datastore_name <>'0.00';
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00074'],"[""delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D00074';   INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,                    remark,st_date)   select 'D00074',     to_number(c.datastore_name,'9999999999.9999'),/*9999999999.9999 表示14位长度，其中4个是小数位*/     d.bah as patient_id,     d.zycs as visit_id,     a.pai_visit_id,     now(),     '住院患者中医治疗费',     to_char(d.cyrq,'yyyymmdd') AS st_date   from his_bi.ods_patient_medical_record d   left join his_bi.pts_pai_visit a   on (a.visit_id =d.zycs and a.patient_id =d.bah)  inner join (select inpati_id,max(hp_basic_business_id) as hp_basic_business_id                 from his_bi.emr_mrms_hp_basic_business               where reportcard_type is null                group by inpati_id) b      on a.pai_visit_id = b.inpati_id  inner join his_bi.emr_mrms_hp_datarecord c     on c.hp_basic_business_id = b.hp_basic_business_id  where d.cyrq is not null     and c.hp_datacol_config_key = 'tCMFee'    and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')    and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1    and c.datastore_name <>'0.00';  ""]",['住院患者中医治疗费   ']
82,his_bi,fun_dwd_D00051_d_16475,"
/***
函数名称：一类切口丙级愈合
开发者：wrsong
开发时间：2020-04-29
作用：统计是否I类切口感染
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
KPI编码：D00051  根据原子指标编码规划来的
入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
    c_daylist record;
    o_start_date varchar;
    o_end_date varchar;
    i_start_date varchar;
    i_end_date varchar;
    i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
    /*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
      from his_bi.dwd_inp_medical_d 
     where key = 'D00051';
     
  if(i_count = 0)
      then 
          i_start_date := '20200101';
            --raise notice '0 i_start_date is: %', i_start_date;
    else if(i_count > 0)
      then
          i_start_date := i_end_date;
            --raise notice '1 i_start_date is: %', i_start_date;
  end if;
    end if;
        
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
    /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
      then 
        o_start_date := i_start_date;
        o_end_date := i_end_date;
            --raise notice '2 o_start_date is: %', o_start_date;
            --raise notice '2 o_end_date is: %', o_end_date;
    else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
    /*PG function 如果参入任何参数，那么以实际入参为准*/
      then 
          o_start_date := v_start_date;
        o_end_date := v_end_date;
            --raise notice '3 o_start_date is: %', o_start_date;
            --raise notice '3 o_end_date is: %', o_end_date;
    end if;
    end if;
    
    for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
    loop 
    
    --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
    
  delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00051';
    
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
                                                                             remark,st_date)                                                                   
  select 'D00051',
				 1,
				 t.bah as patient_id,
				 t.zycs as visit_id,
				 t1.pai_visit_id,
				 now(),
				 'I类切口感染',
			   to_char(t.cyrq,'yyyymmdd') AS st_date
    from his_bi.ods_patient_medical_record t
    left join his_bi.pts_pai_visit t1 on (t1.patient_id =t.bah and t1.visit_id =t.zycs)
   where exists(select 1 from his_bi.ods_patient_opertion_info o
							   where o.brxh=t.brxh 
									 and o.cutgrade IN ('1')
                   and o.healgrade not in('1','2'))  --排除甲级、乙级愈合等级
     and t.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
     and t.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1
     ;
 
     end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00051'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00051';\r    \r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                                                                             remark,st_date)                                                                   \r  select 'D00051',\r     1,\r     t.bah as patient_id,\r     t.zycs as visit_id,\r     t1.pai_visit_id,\r     now(),\r     'I类切口感染',\r      to_char(t.cyrq,'yyyymmdd') AS st_date\r    from his_bi.ods_patient_medical_record t\r    left join his_bi.pts_pai_visit t1 on (t1.patient_id =t.bah and t1.visit_id =t.zycs)\r   where exists(select 1 from his_bi.ods_patient_opertion_info o\r          where o.brxh=t.brxh \r          and o.cutgrade IN ('1')\r                   and o.healgrade not in('1','2'))  --排除甲级、乙级愈合等级\r     and t.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')\r     and t.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1\r     ;\r \r    ""]",['一类切口丙级愈合\r开发者：wrsong\r开发时间：2020-04-29']
83,his_bi,fun_dwd_D00052_d_16476,"
/***
函数名称：I类切口手术
开发者：wrsong
开发时间：2020-04-29
作用：统计是否I类切口手术(0 否 1是)
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
KPI编码：D00052  根据原子指标编码规划来的
入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
    c_daylist record;
    o_start_date varchar;
    o_end_date varchar;
    i_start_date varchar;
    i_end_date varchar;
    i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
    /*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
      from his_bi.dwd_inp_medical_d 
     where key = 'D00052';
     
  if(i_count = 0)
      then 
          i_start_date := '20200101';
            --raise notice '0 i_start_date is: %', i_start_date;
    else if(i_count > 0)
      then
          i_start_date := i_end_date;
            --raise notice '1 i_start_date is: %', i_start_date;
  end if;
    end if;
        
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
    /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
      then 
        o_start_date := i_start_date;
        o_end_date := i_end_date;
            --raise notice '2 o_start_date is: %', o_start_date;
            --raise notice '2 o_end_date is: %', o_end_date;
    else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
    /*PG function 如果参入任何参数，那么以实际入参为准*/
      then 
          o_start_date := v_start_date;
        o_end_date := v_end_date;
            --raise notice '3 o_start_date is: %', o_start_date;
            --raise notice '3 o_end_date is: %', o_end_date;
    end if;
    end if;
    
    for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
    loop 
    
    --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
    
  delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00052';
    
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
                                                                             remark,st_date) 
  select 'D00052',
				 1,
				 t.bah as patient_id,
				 t.zycs as visit_id,
				 t1.pai_visit_id,
				 now(),
				 'I类切口手术',
			  to_char(t.cyrq,'yyyymmdd') AS st_date
   from his_bi.ods_patient_medical_record t
   left join his_bi.pts_pai_visit t1 on (t1.patient_id =t.bah and t1.visit_id =t.zycs)
  where EXISTS(select 1 from his_bi.ods_patient_opertion_info o
							  where o.brxh=t.brxh 
								  and o.cutgrade = '1') 
    and t.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
    and t.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1
     ;
 
     end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00052'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00052';      INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,                                                                             remark,st_date)   select 'D00052',     1,     t.bah as patient_id,     t.zycs as visit_id,     t1.pai_visit_id,     now(),     'I类切口手术',     to_char(t.cyrq,'yyyymmdd') AS st_date   from his_bi.ods_patient_medical_record t   left join his_bi.pts_pai_visit t1 on (t1.patient_id =t.bah and t1.visit_id =t.zycs)  where EXISTS(select 1 from his_bi.ods_patient_opertion_info o         where o.brxh=t.brxh           and o.cutgrade = '1')     and t.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')    and t.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1     ;     ""]",[]
84,his_bi,fun_dwd_D00053_d_16477,"
/***
函数名称：危重症患者
开发者：wrsong
开发时间：2020-04-29
作用：统计是否危重患者(0 否 1是)
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
KPI编码：D00053  根据原子指标编码规划来的
入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
    c_daylist record;
    o_start_date varchar;
    o_end_date varchar;
    i_start_date varchar;
    i_end_date varchar;
    i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
    /*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
      from his_bi.dwd_inp_medical_d 
     where key = 'D00053';
     
  if(i_count = 0)
      then 
          i_start_date := '20200101';
            --raise notice '0 i_start_date is: %', i_start_date;
    else if(i_count > 0)
      then
          i_start_date := i_end_date;
            --raise notice '1 i_start_date is: %', i_start_date;
  end if;
    end if;
        
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
    /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
      then 
        o_start_date := i_start_date;
        o_end_date := i_end_date;
            --raise notice '2 o_start_date is: %', o_start_date;
            --raise notice '2 o_end_date is: %', o_end_date;
    else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
    /*PG function 如果参入任何参数，那么以实际入参为准*/
      then 
          o_start_date := v_start_date;
        o_end_date := v_end_date;
            --raise notice '3 o_start_date is: %', o_start_date;
            --raise notice '3 o_end_date is: %', o_end_date;
    end if;
    end if;
    
    for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
    loop 
    
    --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
    
  delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00053';
    
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
                                                                             remark,st_date) 
                                                                             
  select 'D00053',
         1,
         t2.bah as patient_id,
         t2.zycs as visit_id,
         t3.pai_visit_id,
         now(),
         '危重患者',
         to_char(t2.cyrq,'yyyymmdd') AS st_date
    from his_bi.ods_patient_medical_record t2
    left join his_bi.pts_pai_visit t3 on (t3.patient_id =t2.bah and t3.visit_id =t2.zycs)
   where EXISTS(select 1 from his_bi.emr_cpoe_ord t1
								 where t1.patient_id=t2.bah 
                   and t1.visit_id=t2.zycs
									 and t1.order_source ='2' 
								   and t1.order_status = '3'
									 and t1.order_type_code = 'E' 
									 and (t1.order_name like '%危急%' or t1.order_name like '%重症%'))
    and t2.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
    and t2.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1
     ;
 
     end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00053'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00053';      INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,                                                                             remark,st_date)                                                                                select 'D00053',         1,         t2.bah as patient_id,         t2.zycs as visit_id,         t3.pai_visit_id,         now(),         '危重患者',         to_char(t2.cyrq,'yyyymmdd') AS st_date    from his_bi.ods_patient_medical_record t2    left join his_bi.pts_pai_visit t3 on (t3.patient_id =t2.bah and t3.visit_id =t2.zycs)   where EXISTS(select 1 from his_bi.emr_cpoe_ord t1         where t1.patient_id=t2.bah                    and t1.visit_id=t2.zycs          and t1.order_source ='2'            and t1.order_status = '3'          and t1.order_type_code = 'E'           and (t1.order_name like '%危急%' or t1.order_name like '%重症%'))    and t2.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')    and t2.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1     ;     ""]",[]
85,his_bi,fun_dwd_D00057_d_16478,"
/***
函数名称：住院患者总费用
    作用：统计某天住院患者总费用（以病案首页归档数据中的费用数据为准）
  开发人：liuf 2020-04-09
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00057  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_income_d
	 where key = 'D00057';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D00057';
	
  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
 select 
				 'D00057',
				 a.zfy,
				 a.bah as patient_id,
				 a.zycs as visit_id,
				 d.pai_visit_id,
				 now(),
				 '住院患者总费用',
			  to_char(a.cyrq,'yyyymmdd') AS st_date
   from his_bi.ods_patient_medical_record a 
   left join his_bi.pts_pai_visit d
   on (a.bah =d.patient_id and a.zycs =d.visit_id)
    where a.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
    and a.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1
	 and a.zfy <>'0.00';
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00057'],"[""delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D00057';   INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,                    remark,st_date)  select      'D00057',     a.zfy,     a.bah as patient_id,     a.zycs as visit_id,     d.pai_visit_id,     now(),     '住院患者总费用',     to_char(a.cyrq,'yyyymmdd') AS st_date   from his_bi.ods_patient_medical_record a    left join his_bi.pts_pai_visit d   on (a.bah =d.patient_id and a.zycs =d.visit_id)    where a.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')    and a.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1  and a.zfy <>'0.00';  ""]",['住院患者总费用   ']
86,his_bi,fun_dwd_D00058_d_16479,"
/***
函数名称：住院患者自费费用
    作用：统计某天住院患者自费费用（以病案首页归档数据中的费用数据为准）
  开发人：wy 2020-04-10
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00058  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_income_d
	 where key = 'D00058';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D00058';
	
  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
  select 
				 'D00058',
				 to_number(c.datastore_name,'9999999999.9999'),/*9999999999.9999 表示14位长度，其中4个是小数位*/
				 d.bah as patient_id,
				 d.zycs as visit_id,
				 a.pai_visit_id,
				 now(),
				 '住院患者自费费用',
			  to_char(d.cyrq,'yyyymmdd') AS st_date			  
   from his_bi.ods_patient_medical_record d
   left join his_bi.pts_pai_visit a
   on (d.bah =a.patient_id and d.zycs =a.visit_id)
  inner join (select inpati_id,max(hp_basic_business_id) as hp_basic_business_id 
                from his_bi.emr_mrms_hp_basic_business
               where reportcard_type is null 
               group by inpati_id) b 
     on a.pai_visit_id = b.inpati_id
  inner join his_bi.emr_mrms_hp_datarecord c
     on c.hp_basic_business_id = b.hp_basic_business_id
  where d.cyrq is not null 
    and c.hp_datacol_config_key = 'selfFee'
    and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
    and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1
	 and c.datastore_name <>'0.00';
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00058'],"[""delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D00058';   INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,                    remark,st_date)   select      'D00058',     to_number(c.datastore_name,'9999999999.9999'),/*9999999999.9999 表示14位长度，其中4个是小数位*/     d.bah as patient_id,     d.zycs as visit_id,     a.pai_visit_id,     now(),     '住院患者自费费用',     to_char(d.cyrq,'yyyymmdd') AS st_date        from his_bi.ods_patient_medical_record d   left join his_bi.pts_pai_visit a   on (d.bah =a.patient_id and d.zycs =a.visit_id)  inner join (select inpati_id,max(hp_basic_business_id) as hp_basic_business_id                 from his_bi.emr_mrms_hp_basic_business               where reportcard_type is null                group by inpati_id) b      on a.pai_visit_id = b.inpati_id  inner join his_bi.emr_mrms_hp_datarecord c     on c.hp_basic_business_id = b.hp_basic_business_id  where d.cyrq is not null     and c.hp_datacol_config_key = 'selfFee'    and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')    and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1  and c.datastore_name <>'0.00';  ""]",['住院患者自费费用   ']
87,his_bi,fun_dwd_D00059_d_16481,"
/***
函数名称：住院患者自付金额
    作用：统计某天住院患者自付金额（以病案首页归档数据中的费用数据为准）
  开发人：wy 2020-04-10
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00059  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_income_d
	 where key = 'D00059';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D00059';
	
  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
  select 
				 'D00059',
				 to_number(c.datastore_name,'9999999999.9999'),/*9999999999.9999 表示14位长度，其中4个是小数位*/
				 d.bah as patient_id,
				 d.zycs as visit_id,
				 a.pai_visit_id,
				 now(),
				 '住院患者自付金额',
			  to_char(d.cyrq,'yyyymmdd') AS st_date
   from his_bi.ods_patient_medical_record d 
   left join his_bi.pts_pai_visit a
   on (d.bah =a.patient_id and d.zycs =a.visit_id)
  inner join (select inpati_id,max(hp_basic_business_id) as hp_basic_business_id 
                from his_bi.emr_mrms_hp_basic_business
               where reportcard_type is null 
               group by inpati_id) b 
     on a.pai_visit_id = b.inpati_id
  inner join his_bi.emr_mrms_hp_datarecord c
     on c.hp_basic_business_id = b.hp_basic_business_id
  where d.cyrq is not null 
    and c.hp_datacol_config_key = 'selfFee'
     and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
    and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1
	 and c.datastore_name <>'0.00';
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00059'],"[""delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D00059';   INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,                    remark,st_date)   select      'D00059',     to_number(c.datastore_name,'9999999999.9999'),/*9999999999.9999 表示14位长度，其中4个是小数位*/     d.bah as patient_id,     d.zycs as visit_id,     a.pai_visit_id,     now(),     '住院患者自付金额',     to_char(d.cyrq,'yyyymmdd') AS st_date   from his_bi.ods_patient_medical_record d    left join his_bi.pts_pai_visit a   on (d.bah =a.patient_id and d.zycs =a.visit_id)  inner join (select inpati_id,max(hp_basic_business_id) as hp_basic_business_id                 from his_bi.emr_mrms_hp_basic_business               where reportcard_type is null                group by inpati_id) b      on a.pai_visit_id = b.inpati_id  inner join his_bi.emr_mrms_hp_datarecord c     on c.hp_basic_business_id = b.hp_basic_business_id  where d.cyrq is not null     and c.hp_datacol_config_key = 'selfFee'     and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')    and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1  and c.datastore_name <>'0.00';  ""]",['住院患者自付金额   ']
88,his_bi,fun_dwd_D00088_d_16539,"
/***
函数名称：抗菌药物—住院抗菌药物使用统计
    作用：统计某天住院患者中使用了抗菌药物的人数
  开发人：wy 2020-04-15
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00088  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_quantity_d
	 where key = 'D00088';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		

  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00088';
	
  INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																						remark,st_date) 
	select distinct 'D00088',
			   1,
				 pt.patient_id,
				 pt.visit_id,
				 pt.pai_visit_id,
				 now(),
				 '是否使用抗菌药物', 
				 to_char(pt.discharge_dept_date,'yyyyMMdd')
    from his_bi.pts_pai_visit pt
	 inner join his_bi.bms_bill_item bm on (bm.pai_visit_id = pt.pai_visit_id and bm.in_out_flag = 'I')
	 where pt.discharge_dept_date >= to_date(c_daylist.day_id,'yyyyMMdd')
     and pt.discharge_dept_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
	   and exists (select 1 from his_bi.dms_pham_cust_def_cont 
			            where cont_type_id = 'TJ0055' 
										and pham_std_code = bm.item_code)
	 ;
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00088'],"[""delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00088';\r \r  INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                      remark,st_date) \r select distinct 'D00088',\r      1,\r     pt.patient_id,\r     pt.visit_id,\r     pt.pai_visit_id,\r     now(),\r     '是否使用抗菌药物', \r     to_char(pt.discharge_dept_date,'yyyyMMdd')\r    from his_bi.pts_pai_visit pt\r  inner join his_bi.bms_bill_item bm on (bm.pai_visit_id = pt.pai_visit_id and bm.in_out_flag = 'I')\r  where pt.discharge_dept_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r     and pt.discharge_dept_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1\r    and exists (select 1 from his_bi.dms_pham_cust_def_cont \r               where cont_type_id = 'TJ0055' \r          and pham_std_code = bm.item_code)\r  ;\r ""]",['抗菌药物—住院抗菌药物使用统计\r   ']
89,his_bi,fun_dwd_D00089_d_16540,"
/***
函数名称：抗菌药物—住院非限制性抗菌药物使用统计
    作用：统计某天住院患者中使用了非限制性抗菌药物的人数
  开发人：wy 2020-04-14
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00089  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_quantity_d
	 where key = 'D00089';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		

  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00089';
	
  INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																						remark,st_date) 
  select distinct 'D00089',
			   1,
				 pt.patient_id,
				 pt.visit_id,
				 pt.pai_visit_id,
				 now(),
				 '是否使用非限制级抗菌药物', 
				 to_char(pt.discharge_dept_date,'yyyyMMdd')
    from his_bi.pts_pai_visit pt
	 inner join his_bi.bms_bill_item bm on (bm.pai_visit_id = pt.pai_visit_id and bm.in_out_flag = 'I')
	 where pt.discharge_dept_date >= to_date(c_daylist.day_id,'yyyyMMdd')
     and pt.discharge_dept_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
	   and exists (select 1 from his_bi.dms_pham_cust_def_cont 
			            where cont_type_id = 'TJ0055' 
									  and cont_value = '1' 
										and pham_std_code = bm.item_code)
	;
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00089'],"[""delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00089';\r \r  INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                      remark,st_date) \r  select distinct 'D00089',\r      1,\r     pt.patient_id,\r     pt.visit_id,\r     pt.pai_visit_id,\r     now(),\r     '是否使用非限制级抗菌药物', \r     to_char(pt.discharge_dept_date,'yyyyMMdd')\r    from his_bi.pts_pai_visit pt\r  inner join his_bi.bms_bill_item bm on (bm.pai_visit_id = pt.pai_visit_id and bm.in_out_flag = 'I')\r  where pt.discharge_dept_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r     and pt.discharge_dept_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1\r    and exists (select 1 from his_bi.dms_pham_cust_def_cont \r               where cont_type_id = 'TJ0055' \r           and cont_value = '1' \r          and pham_std_code = bm.item_code)\r ;\r ""]",['抗菌药物—住院非限制性抗菌药物使用统计\r   ']
90,his_bi,fun_dwd_D00090_d_16541,"
/***
函数名称：抗菌药物—住院限制性抗菌药物使用统计
    作用：统计某天住院患者中使用了非限制性抗菌药物的人数
  开发人：wy 2020-04-14
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00090  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_quantity_d
	 where key = 'D00090';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取对应key 最大日期加一天 对应逻辑line 12 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00090';
	
  INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																						remark,st_date) 
	select distinct 'D00090',
			   1,
				 pt.patient_id,
				 pt.visit_id,
				 pt.pai_visit_id,
				 now(),
				 '是否使用限制级抗菌药物', 
				 to_char(pt.discharge_dept_date,'yyyyMMdd')
    from his_bi.pts_pai_visit pt
	 inner join his_bi.bms_bill_item bm on (bm.pai_visit_id = pt.pai_visit_id and bm.in_out_flag = 'I')
	 where pt.discharge_dept_date >= to_date(c_daylist.day_id,'yyyyMMdd')
     and pt.discharge_dept_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
	   and exists (select 1 from his_bi.dms_pham_cust_def_cont 
			            where cont_type_id = 'TJ0055' 
									  and cont_value = '2' 
										and pham_std_code = bm.item_code)
	;
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00090'],"[""delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00090';\r \r  INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                      remark,st_date) \r select distinct 'D00090',\r      1,\r     pt.patient_id,\r     pt.visit_id,\r     pt.pai_visit_id,\r     now(),\r     '是否使用限制级抗菌药物', \r     to_char(pt.discharge_dept_date,'yyyyMMdd')\r    from his_bi.pts_pai_visit pt\r  inner join his_bi.bms_bill_item bm on (bm.pai_visit_id = pt.pai_visit_id and bm.in_out_flag = 'I')\r  where pt.discharge_dept_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r     and pt.discharge_dept_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1\r    and exists (select 1 from his_bi.dms_pham_cust_def_cont \r               where cont_type_id = 'TJ0055' \r           and cont_value = '2' \r          and pham_std_code = bm.item_code)\r ;\r ""]",['抗菌药物—住院限制性抗菌药物使用统计\r   ']
91,his_bi,fun_dwd_D00091_d_16542,"
/***
函数名称：抗菌药物—住院特殊级抗菌药物使用统计
    作用：统计某天住院患者中使用了非限制性抗菌药物的人数
  开发人：wy 2020-04-14
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00091  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_quantity_d
	 where key = 'D00091';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取对应key 最大日期加一天 对应逻辑line 12 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00091';
	
  INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																						remark,st_date) 
  select distinct 'D00091',
			   1,
				 pt.patient_id,
				 pt.visit_id,
				 pt.pai_visit_id,
				 now(),
				 '是否使用特殊级抗菌药物', 
				 to_char(pt.discharge_dept_date,'yyyyMMdd')
    from his_bi.pts_pai_visit pt
	 inner join his_bi.bms_bill_item bm on (bm.pai_visit_id = pt.pai_visit_id and bm.in_out_flag = 'I')
	 where pt.discharge_dept_date >= to_date(c_daylist.day_id,'yyyyMMdd')
     and pt.discharge_dept_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
	   and exists (select 1 from his_bi.dms_pham_cust_def_cont 
			            where cont_type_id = 'TJ0055' 
									  and cont_value = '3' 
										and pham_std_code = bm.item_code)
	 ;
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00091'],"[""delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00091';\r \r  INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                      remark,st_date) \r  select distinct 'D00091',\r      1,\r     pt.patient_id,\r     pt.visit_id,\r     pt.pai_visit_id,\r     now(),\r     '是否使用特殊级抗菌药物', \r     to_char(pt.discharge_dept_date,'yyyyMMdd')\r    from his_bi.pts_pai_visit pt\r  inner join his_bi.bms_bill_item bm on (bm.pai_visit_id = pt.pai_visit_id and bm.in_out_flag = 'I')\r  where pt.discharge_dept_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r     and pt.discharge_dept_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1\r    and exists (select 1 from his_bi.dms_pham_cust_def_cont \r               where cont_type_id = 'TJ0055' \r           and cont_value = '3' \r          and pham_std_code = bm.item_code)\r  ;\r ""]",['抗菌药物—住院特殊级抗菌药物使用统计\r   ']
92,his_bi,fun_dwd_D00108_d_16567,"
/***
函数名称：住院患者胎膜早破打标
    作用：统计某天住院患者中属于胎膜早破的人
  开发人：wy 2020-04-14
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00108  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据


***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00108';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00108';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
  select 'D00108',
				 1, 
				 d.bah as patient_id,
				 d.zycs as visit_id,
				 a.pai_visit_id,
				 now(),
				 '胎膜早破',
			  to_char(d.cyrq,'yyyymmdd') as st_date
	 from his_bi.ods_patient_medical_record d
	 left join his_bi.pts_pai_visit a
	 on (a.patient_id =d.bah and a.visit_id =d.zycs)
	inner join his_bi.ods_patient_diag_info b 
		 on d.brxh = b.brxh 
		and b.main_diag = '1'   --主诊断
	where  exists(select 1 from his_bi.dim_diag_oper_info t
							  where t.icd_code = b.diagdiseasecode 
							        and t.standard_resource = '甘肃妇幼重疾重返指标'
									and t.type_name = '重点疾病'
									and t.kpi_alias = '胎膜早破'
									and t.icd_type = 'ICD10'
									and t.compatible_type = '0' --表示指标本身标准编码
									)
		and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
		and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1; 
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00108'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00108';   INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,                    remark,st_date)   select 'D00108',     1,      d.bah as patient_id,     d.zycs as visit_id,     a.pai_visit_id,     now(),     '胎膜早破',     to_char(d.cyrq,'yyyymmdd') as st_date  from his_bi.ods_patient_medical_record d  left join his_bi.pts_pai_visit a  on (a.patient_id =d.bah and a.visit_id =d.zycs) inner join his_bi.ods_patient_diag_info b    on d.brxh = b.brxh   and b.main_diag = '1'   --主诊断 where  exists(select 1 from his_bi.dim_diag_oper_info t         where t.icd_code = b.diagdiseasecode                and t.standard_resource = '甘肃妇幼重疾重返指标'         and t.type_name = '重点疾病'         and t.kpi_alias = '胎膜早破'         and t.icd_type = 'ICD10'         and t.compatible_type = '0' --表示指标本身标准编码         )  and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')  and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1;   ""]",['住院患者胎膜早破打标   ']
93,his_bi,fun_dwd_D00109_d_16569,"
/***
函数名称：住院患者前置胎盘打标
    作用：统计某天住院患者中属于前置胎盘的人
  开发人：wy 2020-04-14
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00109  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据


***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00109';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00109';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
  select 'D00109',
				 1, 
				 d.bah as patient_id,
				 d.zycs as visit_id,
				 a.pai_visit_id,
				 now(),
				 '前置胎盘',
			  to_char(d.cyrq,'yyyymmdd') as st_date
	 from his_bi.ods_patient_medical_record d
	 left join his_bi.pts_pai_visit a
	 on (a.patient_id =d.bah and a.visit_id =d.zycs)
	inner join his_bi.ods_patient_diag_info b 
		 on d.brxh = b.brxh 
		and b.main_diag = '1'   --主诊断
	where  exists(select 1 from his_bi.dim_diag_oper_info t
							  where t.icd_code = b.diagdiseasecode 
							        and t.standard_resource = '甘肃妇幼重疾重返指标'
									and t.type_name = '重点疾病'
									and t.kpi_alias = '前置胎盘'
									and t.icd_type = 'ICD10'
									and t.compatible_type = '0' --表示指标本身标准编码
									)
		and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
		and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1; 
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00109'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00109';   INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,                    remark,st_date)   select 'D00109',     1,      d.bah as patient_id,     d.zycs as visit_id,     a.pai_visit_id,     now(),     '前置胎盘',     to_char(d.cyrq,'yyyymmdd') as st_date  from his_bi.ods_patient_medical_record d  left join his_bi.pts_pai_visit a  on (a.patient_id =d.bah and a.visit_id =d.zycs) inner join his_bi.ods_patient_diag_info b    on d.brxh = b.brxh   and b.main_diag = '1'   --主诊断 where  exists(select 1 from his_bi.dim_diag_oper_info t         where t.icd_code = b.diagdiseasecode                and t.standard_resource = '甘肃妇幼重疾重返指标'         and t.type_name = '重点疾病'         and t.kpi_alias = '前置胎盘'         and t.icd_type = 'ICD10'         and t.compatible_type = '0' --表示指标本身标准编码         )  and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')  and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1;   ""]",['住院患者前置胎盘打标   ']
94,his_bi,fun_dwd_D00093_d_16544,"
/***
函数名称：住院抗菌药物—抗菌药物累计DDD数统计
    作用：统计某天住院患者中使用了抗菌药物累计DDD数
  开发人：wy 2020-04-30
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00093  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
  c_daylist record;
  o_start_date varchar;
  o_end_date varchar;
  i_start_date varchar;
  i_end_date varchar;
  i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
    from his_bi.dwd_inp_quantity_d
   where key = 'D00093';
   
  if(i_count = 0)
    then 
      i_start_date := '20200101';
      --raise notice '0 i_start_date is: %', i_start_date;
  else if(i_count > 0)
    then
      i_start_date := i_end_date;
      --raise notice '1 i_start_date is: %', i_start_date;
  end if;
  end if;
    
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
  /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取对应key 最大日期加一天 对应逻辑line 12 */
    then 
      o_start_date := i_start_date;
      o_end_date := i_end_date;
      --raise notice '2 o_start_date is: %', o_start_date;
      --raise notice '2 o_end_date is: %', o_end_date;
  else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
  /*PG function 如果参入任何参数，那么以实际入参为准*/
    then 
      o_start_date := v_start_date;
      o_end_date := v_end_date;
      --raise notice '3 o_start_date is: %', o_start_date;
      --raise notice '3 o_end_date is: %', o_end_date;
  end if;
  end if;
  
  for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
  loop 
  
  --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
  
  delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00093';
  
  INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
                                            remark,st_date) 
  select 'D00093',
         sum(hp.ddds) as ddds,
         hp.patient_id,
         hp.visit_id,
         hp.patient_visit_id,
         now(),
         '住院抗菌药物累计DDD数', 
         to_char(hp.exec_date,'yyyymmdd')
    from his_bi.v_ddds_antictrl hp
		where hp.in_out_flag = 'I'
		  and hp.exec_date >= to_date(c_daylist.day_id,'yyyymmdd')
			and hp.exec_date <  to_date(c_daylist.day_id,'yyyymmdd') + 1
    group by hp.patient_id,
         hp.visit_id,
         hp.patient_visit_id,
         to_char(hp.exec_date,'yyyymmdd');
    
   end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00093'],"[""delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00093';    INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,                                            remark,st_date)   select 'D00093',         sum(hp.ddds) as ddds,         hp.patient_id,         hp.visit_id,         hp.patient_visit_id,         now(),         '住院抗菌药物累计DDD数',          to_char(hp.exec_date,'yyyymmdd')    from his_bi.v_ddds_antictrl hp  where hp.in_out_flag = 'I'    and hp.exec_date >= to_date(c_daylist.day_id,'yyyymmdd')   and hp.exec_date <  to_date(c_daylist.day_id,'yyyymmdd') + 1    group by hp.patient_id,         hp.visit_id,         hp.patient_visit_id,         to_char(hp.exec_date,'yyyymmdd');      ""]",['住院抗菌药物—抗菌药物累计DDD数统计   ']
95,his_bi,fun_dwd_D00094_d_16545,"
/***
函数名称：抗菌药物—非限制级抗菌药物累计DDD数统计
    作用：统计某天住院患者中使用了非限制级抗菌药物累计DDD数
  开发人：wy 2020-04-30
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00094  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
  c_daylist record;
  o_start_date varchar;
  o_end_date varchar;
  i_start_date varchar;
  i_end_date varchar;
  i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
    from his_bi.dwd_inp_quantity_d
   where key = 'D00094';
   
  if(i_count = 0)
    then 
      i_start_date := '20200101';
      --raise notice '0 i_start_date is: %', i_start_date;
  else if(i_count > 0)
    then
      i_start_date := i_end_date;
      --raise notice '1 i_start_date is: %', i_start_date;
  end if;
  end if;
    
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
  /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取对应key 最大日期加一天 对应逻辑line 12 */
    then 
      o_start_date := i_start_date;
      o_end_date := i_end_date;
      --raise notice '2 o_start_date is: %', o_start_date;
      --raise notice '2 o_end_date is: %', o_end_date;
  else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
  /*PG function 如果参入任何参数，那么以实际入参为准*/
    then 
      o_start_date := v_start_date;
      o_end_date := v_end_date;
      --raise notice '3 o_start_date is: %', o_start_date;
      --raise notice '3 o_end_date is: %', o_end_date;
  end if;
  end if;
  
  for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
  loop 
  
  --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
  
  delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00094';
  
  INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
                                            remark,st_date) 
  select 'D00094',
         sum(hp.ddds) as ddds,
         hp.patient_id,
         hp.visit_id,
         hp.patient_visit_id,
         now(),
         '住院非限制级抗菌药物累计DDD数', 
         to_char(hp.exec_date,'yyyymmdd')
    from his_bi.v_ddds_antictrl hp
	  where hp.cont_value = '1'
		and hp.in_out_flag = 'I'
		and hp.exec_date >= to_date(c_daylist.day_id,'yyyymmdd')
	  and hp.exec_date <  to_date(c_daylist.day_id,'yyyymmdd') + 1
    group by hp.patient_id,
         hp.visit_id,
         hp.patient_visit_id,
         to_char(hp.exec_date,'yyyymmdd');
    
   end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00094'],"[""delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00094';    INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,                                            remark,st_date)   select 'D00094',         sum(hp.ddds) as ddds,         hp.patient_id,         hp.visit_id,         hp.patient_visit_id,         now(),         '住院非限制级抗菌药物累计DDD数',          to_char(hp.exec_date,'yyyymmdd')    from his_bi.v_ddds_antictrl hp   where hp.cont_value = '1'  and hp.in_out_flag = 'I'  and hp.exec_date >= to_date(c_daylist.day_id,'yyyymmdd')   and hp.exec_date <  to_date(c_daylist.day_id,'yyyymmdd') + 1    group by hp.patient_id,         hp.visit_id,         hp.patient_visit_id,         to_char(hp.exec_date,'yyyymmdd');      ""]",['抗菌药物—非限制级抗菌药物累计DDD数统计   ']
96,his_bi,fun_dwd_D00095_d_16546,"
/***
函数名称：抗菌药物—限制级抗菌药物累计DDD数统计
    作用：统计某天住院患者中使用了限制级抗菌药物累计DDD数
  开发人：wy 2020-04-30
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00095  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
  c_daylist record;
  o_start_date varchar;
  o_end_date varchar;
  i_start_date varchar;
  i_end_date varchar;
  i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
    from his_bi.dwd_inp_quantity_d
   where key = 'D00095';
   
  if(i_count = 0)
    then 
      i_start_date := '20200101';
      --raise notice '0 i_start_date is: %', i_start_date;
  else if(i_count > 0)
    then
      i_start_date := i_end_date;
      --raise notice '1 i_start_date is: %', i_start_date;
  end if;
  end if;
    
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
  /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取对应key 最大日期加一天 对应逻辑line 12 */
    then 
      o_start_date := i_start_date;
      o_end_date := i_end_date;
      --raise notice '2 o_start_date is: %', o_start_date;
      --raise notice '2 o_end_date is: %', o_end_date;
  else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
  /*PG function 如果参入任何参数，那么以实际入参为准*/
    then 
      o_start_date := v_start_date;
      o_end_date := v_end_date;
      --raise notice '3 o_start_date is: %', o_start_date;
      --raise notice '3 o_end_date is: %', o_end_date;
  end if;
  end if;
  
  for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
  loop 
  
  --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
  
  delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00095';
  
  INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
                                            remark,st_date) 
  select 'D00095',
         sum(hp.ddds) as ddds,
         hp.patient_id,
         hp.visit_id,
         hp.patient_visit_id,
         now(),
         '住院限制级抗菌药物累计DDD数', 
         to_char(hp.exec_date,'yyyymmdd')
    from his_bi.v_ddds_antictrl hp
	  where hp.cont_value = '2'
		and hp.in_out_flag = 'I'
		and hp.exec_date >= to_date(c_daylist.day_id,'yyyymmdd')
	  and hp.exec_date <  to_date(c_daylist.day_id,'yyyymmdd') + 1
    group by hp.patient_id,
         hp.visit_id,
         hp.patient_visit_id,
         to_char(hp.exec_date,'yyyymmdd');
    
   end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00095'],"[""delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00095';    INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,                                            remark,st_date)   select 'D00095',         sum(hp.ddds) as ddds,         hp.patient_id,         hp.visit_id,         hp.patient_visit_id,         now(),         '住院限制级抗菌药物累计DDD数',          to_char(hp.exec_date,'yyyymmdd')    from his_bi.v_ddds_antictrl hp   where hp.cont_value = '2'  and hp.in_out_flag = 'I'  and hp.exec_date >= to_date(c_daylist.day_id,'yyyymmdd')   and hp.exec_date <  to_date(c_daylist.day_id,'yyyymmdd') + 1    group by hp.patient_id,         hp.visit_id,         hp.patient_visit_id,         to_char(hp.exec_date,'yyyymmdd');      ""]",['抗菌药物—限制级抗菌药物累计DDD数统计   ']
97,his_bi,fun_dwd_D00096_d_16547,"
/***
函数名称：抗菌药物—特殊级抗菌药物累计DDD数统计
    作用：统计某天住院患者中使用了特殊级抗菌药物累计DDD数
  开发人：wy 2020-04-30
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00096  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
  c_daylist record;
  o_start_date varchar;
  o_end_date varchar;
  i_start_date varchar;
  i_end_date varchar;
  i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
    from his_bi.dwd_inp_quantity_d
   where key = 'D00096';
   
  if(i_count = 0)
    then 
      i_start_date := '20200101';
      --raise notice '0 i_start_date is: %', i_start_date;
  else if(i_count > 0)
    then
      i_start_date := i_end_date;
      --raise notice '1 i_start_date is: %', i_start_date;
  end if;
  end if;
    
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
  /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取对应key 最大日期加一天 对应逻辑line 12 */
    then 
      o_start_date := i_start_date;
      o_end_date := i_end_date;
      --raise notice '2 o_start_date is: %', o_start_date;
      --raise notice '2 o_end_date is: %', o_end_date;
  else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
  /*PG function 如果参入任何参数，那么以实际入参为准*/
    then 
      o_start_date := v_start_date;
      o_end_date := v_end_date;
      --raise notice '3 o_start_date is: %', o_start_date;
      --raise notice '3 o_end_date is: %', o_end_date;
  end if;
  end if;
  
  for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
  loop 
  
  --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
  
  delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00096';
  
  INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
                                            remark,st_date) 
  select 'D00096',
         sum(hp.ddds) as ddds,
         hp.patient_id,
         hp.visit_id,
         hp.patient_visit_id,
         now(),
         '住院特殊级抗菌药物累计DDD数', 
         to_char(hp.exec_date,'yyyymmdd')
    from his_bi.v_ddds_antictrl hp
	  where hp.cont_value = '3'
		and hp.in_out_flag = 'I'
		and hp.exec_date >= to_date(c_daylist.day_id,'yyyymmdd')
	  and hp.exec_date <  to_date(c_daylist.day_id,'yyyymmdd') + 1
    group by hp.patient_id,
         hp.visit_id,
         hp.patient_visit_id,
         to_char(hp.exec_date,'yyyymmdd');
    
   end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00096'],"[""delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00096';    INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,                                            remark,st_date)   select 'D00096',         sum(hp.ddds) as ddds,         hp.patient_id,         hp.visit_id,         hp.patient_visit_id,         now(),         '住院特殊级抗菌药物累计DDD数',          to_char(hp.exec_date,'yyyymmdd')    from his_bi.v_ddds_antictrl hp   where hp.cont_value = '3'  and hp.in_out_flag = 'I'  and hp.exec_date >= to_date(c_daylist.day_id,'yyyymmdd')   and hp.exec_date <  to_date(c_daylist.day_id,'yyyymmdd') + 1    group by hp.patient_id,         hp.visit_id,         hp.patient_visit_id,         to_char(hp.exec_date,'yyyymmdd');      ""]",['抗菌药物—特殊级抗菌药物累计DDD数统计   ']
98,his_bi,fun_dwd_D00110_d_16571,"
/***
函数名称：住院患者胎盘早剥打标
    作用：统计某天住院患者中属于胎盘早剥的人
  开发人：wy 2020-04-14
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00110  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据


***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00110';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00110';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
  select 'D00110',
				 1, 
				 d.bah as patient_id,
				 d.zycs as visit_id,
				 a.pai_visit_id,
				 now(),
				 '胎盘早剥',
			  to_char(d.cyrq,'yyyymmdd') as st_date
	 from his_bi.ods_patient_medical_record d
	 left join his_bi.pts_pai_visit a
	 on (a.patient_id =d.bah and a.visit_id =d.zycs)
	inner join his_bi.ods_patient_diag_info b 
		 on d.brxh = b.brxh 
		and b.main_diag = '1'   --主诊断
	where  exists(select 1 from his_bi.dim_diag_oper_info t
							  where t.icd_code = b.diagdiseasecode 
							        and t.standard_resource = '甘肃妇幼重疾重返指标'
									and t.type_name = '重点疾病'
									and t.kpi_alias = '胎盘早剥'
									and t.icd_type = 'ICD10'
									and t.compatible_type = '0' --表示指标本身标准编码
									)
		and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
		and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1; 
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00110'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00110';   INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,                    remark,st_date)   select 'D00110',     1,      d.bah as patient_id,     d.zycs as visit_id,     a.pai_visit_id,     now(),     '胎盘早剥',     to_char(d.cyrq,'yyyymmdd') as st_date  from his_bi.ods_patient_medical_record d  left join his_bi.pts_pai_visit a  on (a.patient_id =d.bah and a.visit_id =d.zycs) inner join his_bi.ods_patient_diag_info b    on d.brxh = b.brxh   and b.main_diag = '1'   --主诊断 where  exists(select 1 from his_bi.dim_diag_oper_info t         where t.icd_code = b.diagdiseasecode                and t.standard_resource = '甘肃妇幼重疾重返指标'         and t.type_name = '重点疾病'         and t.kpi_alias = '胎盘早剥'         and t.icd_type = 'ICD10'         and t.compatible_type = '0' --表示指标本身标准编码         )  and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')  and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1;   ""]",['住院患者胎盘早剥打标   ']
99,his_bi,fun_dwd_D00111_d_16573,"
/***
函数名称：住院患者重度子痫前期打标
    作用：统计某天住院患者中属于重度子痫前期的人
  开发人：wy 2020-04-14
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00111  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据


***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00111';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00111';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
  select 'D00111',
				 1, 
				 d.bah as patient_id,
				 d.zycs as visit_id,
				 a.pai_visit_id,
				 now(),
				 '重度子痫前期',
			  to_char(d.cyrq,'yyyymmdd') as st_date
	 from his_bi.ods_patient_medical_record d
	 left join his_bi.pts_pai_visit a
	 on (a.patient_id =d.bah and a.visit_id =d.zycs)
	inner join his_bi.ods_patient_diag_info b 
		 on d.brxh = b.brxh 
		and b.main_diag = '1'   --主诊断
	where  exists(select 1 from his_bi.dim_diag_oper_info t
							  where t.icd_code = b.diagdiseasecode 
							        and t.standard_resource = '甘肃妇幼重疾重返指标'
									and t.type_name = '重点疾病'
									and t.kpi_alias = '重度子痫前期'
									and t.icd_type = 'ICD10'
									and t.compatible_type = '0' --表示指标本身标准编码
									)
		and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
		and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1; 
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00111'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00111';   INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,                    remark,st_date)   select 'D00111',     1,      d.bah as patient_id,     d.zycs as visit_id,     a.pai_visit_id,     now(),     '重度子痫前期',     to_char(d.cyrq,'yyyymmdd') as st_date  from his_bi.ods_patient_medical_record d  left join his_bi.pts_pai_visit a  on (a.patient_id =d.bah and a.visit_id =d.zycs) inner join his_bi.ods_patient_diag_info b    on d.brxh = b.brxh   and b.main_diag = '1'   --主诊断 where  exists(select 1 from his_bi.dim_diag_oper_info t         where t.icd_code = b.diagdiseasecode                and t.standard_resource = '甘肃妇幼重疾重返指标'         and t.type_name = '重点疾病'         and t.kpi_alias = '重度子痫前期'         and t.icd_type = 'ICD10'         and t.compatible_type = '0' --表示指标本身标准编码         )  and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')  and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1;   ""]",['住院患者重度子痫前期打标   ']
100,his_bi,fun_dwd_D00112_d_16575,"
/***
函数名称：住院患者产褥感染打标
    作用：统计某天住院患者中属于产褥感染3的人
  开发人：wy 2020-04-14
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00112  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

    
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00112';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00112';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
  select 'D00112',
				 1, 
				 d.bah as patient_id,
				 d.zycs as visit_id,
				 a.pai_visit_id,
				 now(),
				 '产褥感染',
			  to_char(d.cyrq,'yyyymmdd') as st_date
	 from his_bi.ods_patient_medical_record d
	 left join his_bi.pts_pai_visit a
	 on (a.patient_id =d.bah and a.visit_id =d.zycs)
	inner join his_bi.ods_patient_diag_info b 
		 on d.brxh = b.brxh 
		and b.main_diag = '1'   --主诊断
	where  exists(select 1 from his_bi.dim_diag_oper_info t
							  where t.icd_code = b.diagdiseasecode 
							        and t.standard_resource = '甘肃妇幼重疾重返指标'
									and t.type_name = '重点疾病'
									and t.kpi_alias = '产褥感染'
									and t.icd_type = 'ICD10'
									and t.compatible_type = '0' --表示指标本身标准编码
									)
		and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
		and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1;  
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00112'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00112';   INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,                    remark,st_date)   select 'D00112',     1,      d.bah as patient_id,     d.zycs as visit_id,     a.pai_visit_id,     now(),     '产褥感染',     to_char(d.cyrq,'yyyymmdd') as st_date  from his_bi.ods_patient_medical_record d  left join his_bi.pts_pai_visit a  on (a.patient_id =d.bah and a.visit_id =d.zycs) inner join his_bi.ods_patient_diag_info b    on d.brxh = b.brxh   and b.main_diag = '1'   --主诊断 where  exists(select 1 from his_bi.dim_diag_oper_info t         where t.icd_code = b.diagdiseasecode                and t.standard_resource = '甘肃妇幼重疾重返指标'         and t.type_name = '重点疾病'         and t.kpi_alias = '产褥感染'         and t.icd_type = 'ICD10'         and t.compatible_type = '0' --表示指标本身标准编码         )  and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')  and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1;    ""]",['住院患者产褥感染打标   ']
101,his_bi,fun_dwd_D00113_d_16577,"
/***
函数名称：住院患者异位妊娠打标
    作用：统计某天住院患者中属于异位妊娠的人
  开发人：wy 2020-04-14
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00113  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

    
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00113';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00113';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
  select 'D00113',
				 1, 
				 d.bah as patient_id,
				 d.zycs as visit_id,
				 a.pai_visit_id,
				 now(),
				 '异位妊娠',
			  to_char(d.cyrq,'yyyymmdd') as st_date
	 from his_bi.ods_patient_medical_record d
	 left join his_bi.pts_pai_visit a
	 on (a.patient_id =d.bah and a.visit_id =d.zycs)
	inner join his_bi.ods_patient_diag_info b 
		 on d.brxh = b.brxh 
		and b.main_diag = '1'   --主诊断
	where  exists(select 1 from his_bi.dim_diag_oper_info t
							  where t.icd_code = b.diagdiseasecode 
							        and t.standard_resource = '甘肃妇幼重疾重返指标'
									and t.type_name = '重点疾病'
									and t.kpi_alias = '异位妊娠'
									and t.icd_type = 'ICD10'
									and t.compatible_type = '0' --表示指标本身标准编码
									)
		and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
		and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1; 
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00113'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00113';   INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,                    remark,st_date)   select 'D00113',     1,      d.bah as patient_id,     d.zycs as visit_id,     a.pai_visit_id,     now(),     '异位妊娠',     to_char(d.cyrq,'yyyymmdd') as st_date  from his_bi.ods_patient_medical_record d  left join his_bi.pts_pai_visit a  on (a.patient_id =d.bah and a.visit_id =d.zycs) inner join his_bi.ods_patient_diag_info b    on d.brxh = b.brxh   and b.main_diag = '1'   --主诊断 where  exists(select 1 from his_bi.dim_diag_oper_info t         where t.icd_code = b.diagdiseasecode                and t.standard_resource = '甘肃妇幼重疾重返指标'         and t.type_name = '重点疾病'         and t.kpi_alias = '异位妊娠'         and t.icd_type = 'ICD10'         and t.compatible_type = '0' --表示指标本身标准编码         )  and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')  and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1;   ""]",['住院患者异位妊娠打标   ']
102,his_bi,fun_dwd_D00097_d_16548,"
/***
函数名称：住院辅助用药费
    作用：统计某天住院辅助用药费（费用以价表进行统计TJ0030）
  开发人：wy 2020-04-15
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00097  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_quantity_d
	 where key = 'D00097';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.DWD_INP_QUANTITY_D where st_date = c_daylist.day_id and key = 'D00097';
	
  INSERT into his_bi.DWD_INP_QUANTITY_D(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
   select 'D00097',
				 coalesce(sum(t.charges),0),
				 d.bah as patient_id,
				 d.zycs as visit_id,
				 t.pai_visit_id,
         now(),
			  '住院辅助用药费',
			  to_char(d.cyrq,'yyyymmdd') AS st_date
   from his_bi.ods_patient_medical_record d
    left join  his_bi.bms_bill_item t
    on (t.patient_id =d.bah  and t.visit_id =d.zycs)
  where 
   t.charges <>0
    and t.in_out_flag = 'I' --只统计住院患者
		and t.item_class in('A','B','N')  --只统计西药、中成药、草药费
		and t.item_code in (select pham_std_code from his_bi.dms_pham_cust_def_cont 
			                   where cont_name like '%辅助药品%')
	 and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
     and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1
  group by to_char(d.cyrq,'yyyymmdd'),
					 d.bah,
					 d.zycs,
				   t.pai_visit_id;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00097'],"[""delete from his_bi.DWD_INP_QUANTITY_D where st_date = c_daylist.day_id and key = 'D00097';   INSERT into his_bi.DWD_INP_QUANTITY_D(key,value,patient_id,visit_id,pai_visit_id,insert_date,                    remark,st_date)    select 'D00097',     coalesce(sum(t.charges),0),     d.bah as patient_id,     d.zycs as visit_id,     t.pai_visit_id,         now(),     '住院辅助用药费',     to_char(d.cyrq,'yyyymmdd') AS st_date   from his_bi.ods_patient_medical_record d    left join  his_bi.bms_bill_item t    on (t.patient_id =d.bah  and t.visit_id =d.zycs)  where    t.charges <>0    and t.in_out_flag = 'I' --只统计住院患者  and t.item_class in('A','B','N')  --只统计西药、中成药、草药费  and t.item_code in (select pham_std_code from his_bi.dms_pham_cust_def_cont                       where cont_name like '%辅助药品%')  and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')     and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1  group by to_char(d.cyrq,'yyyymmdd'),      d.bah,      d.zycs,       t.pai_visit_id;  ""]",['住院辅助用药费   ']
103,his_bi,fun_dwd_D00098_d_16549,"
/***
函数名称：住院基本药物费
    作用：统计某天住院基本药物费（费用以价表进行统计TJ0030）
  开发人：wy 2020-04-14
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00098  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_quantity_d
	 where key = 'D00098';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.DWD_INP_QUANTITY_D where st_date = c_daylist.day_id and key = 'D00098';
	
  INSERT into his_bi.DWD_INP_QUANTITY_D(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
  select 'D00098',
				 coalesce(sum(t.charges),0),
				 d.bah as patient_id,
				 d.zycs as visit_id,
				 t.pai_visit_id,
         now(),
			  '住院基本药物费',
			  to_char(d.cyrq,'yyyymmdd') AS st_date
   from  his_bi.ods_patient_medical_record d
    left join his_bi.bms_bill_item t
   on (t.patient_id =d.bah  and t.visit_id =d.zycs)
  where 
     t.in_out_flag = 'I' --只统计住院患者
     and t.charges <>0
		and t.item_class in('A','B','N')  --只统计西药、中成药、草药费
		and t.item_code in (select pham_std_code from his_bi.dms_pham_basic_info where basic_pham='1')
		and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
       and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1
  group by to_char(d.cyrq,'yyyymmdd'),
					 d.bah,
					 d.zycs,
				    t.pai_visit_id;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00098'],"[""delete from his_bi.DWD_INP_QUANTITY_D where st_date = c_daylist.day_id and key = 'D00098';   INSERT into his_bi.DWD_INP_QUANTITY_D(key,value,patient_id,visit_id,pai_visit_id,insert_date,                    remark,st_date)   select 'D00098',     coalesce(sum(t.charges),0),     d.bah as patient_id,     d.zycs as visit_id,     t.pai_visit_id,         now(),     '住院基本药物费',     to_char(d.cyrq,'yyyymmdd') AS st_date   from  his_bi.ods_patient_medical_record d    left join his_bi.bms_bill_item t   on (t.patient_id =d.bah  and t.visit_id =d.zycs)  where      t.in_out_flag = 'I' --只统计住院患者     and t.charges <>0  and t.item_class in('A','B','N')  --只统计西药、中成药、草药费  and t.item_code in (select pham_std_code from his_bi.dms_pham_basic_info where basic_pham='1')  and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')       and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1  group by to_char(d.cyrq,'yyyymmdd'),      d.bah,      d.zycs,        t.pai_visit_id;  ""]",['住院基本药物费   ']
104,his_bi,fun_dwd_D00099_d_16550,"
/***
函数名称：住院重点监控药品费
    作用：统计某天住院重点监控药品费（费用以价表进行统计TJ0030）
  开发人：wy 2020-04-15
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00099  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_quantity_d
	 where key = 'D00099';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.DWD_INP_QUANTITY_D where st_date = c_daylist.day_id and key = 'D00099';
	
  INSERT into his_bi.DWD_INP_QUANTITY_D(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
  select 'D00099',
				  coalesce(sum(t.charges),0),
				 d.bah as patient_id,
				 d.zycs as visit_id,
				 t.pai_visit_id,
         now(),
			  '住院重点监控药品费',
			  to_char(d.cyrq,'yyyymmdd') AS st_date
   from  his_bi.ods_patient_medical_record d
    left join his_bi.bms_bill_item t
   on (t.patient_id =d.bah  and t.visit_id =d.zycs)
  where d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
    and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1
    and t.in_out_flag = 'I' --只统计住院患者
      and t.charges <>0
		and t.item_class in('A','B','N')  --只统计西药、中成药、草药费
		and exists (select 1 from his_bi.dms_pham_cust_def_cont 
			           where cont_name like '%重点监控药品%'
									 and pham_std_code = t.item_code)
  group by to_char(d.cyrq,'yyyymmdd'),
					  d.bah,
					  d.zycs,
				    t.pai_visit_id;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00099'],"[""delete from his_bi.DWD_INP_QUANTITY_D where st_date = c_daylist.day_id and key = 'D00099';   INSERT into his_bi.DWD_INP_QUANTITY_D(key,value,patient_id,visit_id,pai_visit_id,insert_date,                    remark,st_date)   select 'D00099',      coalesce(sum(t.charges),0),     d.bah as patient_id,     d.zycs as visit_id,     t.pai_visit_id,         now(),     '住院重点监控药品费',     to_char(d.cyrq,'yyyymmdd') AS st_date   from  his_bi.ods_patient_medical_record d    left join his_bi.bms_bill_item t   on (t.patient_id =d.bah  and t.visit_id =d.zycs)  where d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')    and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1    and t.in_out_flag = 'I' --只统计住院患者      and t.charges <>0  and t.item_class in('A','B','N')  --只统计西药、中成药、草药费  and exists (select 1 from his_bi.dms_pham_cust_def_cont               where cont_name like '%重点监控药品%'          and pham_std_code = t.item_code)  group by to_char(d.cyrq,'yyyymmdd'),       d.bah,       d.zycs,        t.pai_visit_id;  ""]",['住院重点监控药品费   ']
105,his_bi,fun_dwd_D00100_d_16551,"
/***
函数名称：住院重疾患者当天重返（国家标准）
    作用：统计某天住院重疾患者当天重返（以病案首页归档数据中的费用数据为准）
  开发人：wy 2020-04-22
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00100  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

重返业务说明，住院患者出院后非预期再住院判定：（同时满足以下二条件） 
1、同一医院，同一患者，第一次入院“是否 31 天再入院计划”为无或缺失。 
2、主要诊断亚目相同（即前四位），
排除主要诊断和其他诊断为 
1、肿瘤放疗患者《全国版与北京版》ICD-10Z51.0 放射治疗疗程， 
2、肿瘤化疗患者《全国版与北京版》ICD-10Z51.1 肿瘤化学治疗疗程，Z51.2 其 
他化学治疗，Z51.5 姑息性医疗，Z51.8 其他特指治疗。

当天（0.00 点至 24：00）先办理出院,后办理住院手续的患者
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00100';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00100';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
  select distinct 'D00100',
				 1 , 
				 patient_id,
				 visit_id,
				 pai_visit_id,
				 now(),
				 '重疾患者当天重返（国家标准）',
			  st_date
	from (
           select t.pai_visit_id as pai_visit_id,a.bah as patient_id,a.zycs as visit_id,to_char(a.cyrq,'yyyymmdd') as st_date
					from his_bi.ods_patient_medical_record  a
				 inner join his_bi.v_inp_return_patient t 
						on a.bah = t.patient_id 
					 and a.zycs > t.visit_id 
					 and to_date(to_char(a.ryrq,'yyyymmdd'),'yyyymmdd') = to_date(to_char(t.discharge_dept_date,'yyyymmdd'),'yyyymmdd')                                   
				 where  not exists (select 1 from his_bi.ods_patient_diag_info where a.bah=bah
															and diagdiseasecodestr in ('Z51.0','Z51.1','Z51.2','Z51.5','Z51.8'))    
					 and a.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
					 and a.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 
				 group by t.pai_visit_id,a.bah,a.zycs,to_char(a.cyrq,'yyyymmdd')
  ) s ; /*多次重返患者，出院当天只打一次重返标志*/
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00100'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00100';\r \r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r  select distinct 'D00100',\r     1 , \r     patient_id,\r     visit_id,\r     pai_visit_id,\r     now(),\r     '重疾患者当天重返（国家标准）',\r     st_date\r from (\r           select t.pai_visit_id as pai_visit_id,a.bah as patient_id,a.zycs as visit_id,to_char(a.cyrq,'yyyymmdd') as st_date\r     from his_bi.ods_patient_medical_record  a\r     inner join his_bi.v_inp_return_patient t \r      on a.bah = t.patient_id \r      and a.zycs > t.visit_id \r      and to_date(to_char(a.ryrq,'yyyymmdd'),'yyyymmdd') = to_date(to_char(t.discharge_dept_date,'yyyymmdd'),'yyyymmdd')                                   \r     where  not exists (select 1 from his_bi.ods_patient_diag_info where a.bah=bah\r               and diagdiseasecodestr in ('Z51.0','Z51.1','Z51.2','Z51.5','Z51.8'))    \r      and a.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')\r      and a.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 \r     group by t.pai_visit_id,a.bah,a.zycs,to_char(a.cyrq,'yyyymmdd')\r  ) s ; /*多次重返患者，出院当天只打一次重返标志*/\r \r ""]",['住院重疾患者当天重返（国家标准）\r   ']
106,his_bi,fun_dwd_D00101_d_16553,"
/***
函数名称：住院重疾患者2-15天重返（国家标准）
    作用：统计某天住院患者2-15天重返（以病案首页归档数据中的费用数据为准）
  开发人：liuf 2020-04-10
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00101  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

重返业务说明，住院患者出院后非预期再住院判定：（同时满足以下二条件） 
1、同一医院，同一患者，第一次入院“是否 31 天再入院计划”为无或缺失。 
2、主要诊断亚目相同（即前四位），
排除主要诊断和其他诊断为 
1、肿瘤放疗患者《全国版与北京版》ICD-10Z51.0 放射治疗疗程， 
2、肿瘤化疗患者《全国版与北京版》ICD-10Z51.1 肿瘤化学治疗疗程，Z51.2 其 
他化学治疗，Z51.5 姑息性医疗，Z51.8 其他特指治疗。

当天（0.00 点至 24：00）先办理出院,后办理住院手续的患者
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00101';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00101';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
  select distinct 'D00101',
				 1 , 
				 patient_id,
				 visit_id,
				 pai_visit_id,
				 now(),
				 '重疾患者2-15天重返（国家标准）',
			  st_date
	from (
				select a.pai_visit_id,d.bah as patient_id,d.zycs as visit_id,to_char(d.cyrq,'yyyymmdd') as st_date
					from his_bi.ods_patient_medical_record d 
				 left join	his_bi.pts_pai_visit a on (d.bah =a.patient_id and d.zycs =a.visit_id)
				 inner join his_bi.v_inp_return_patient t 
						on d.bah = t.patient_id 
					 and d.zycs > t.visit_id
					 and to_date(to_char(d.ryrq ,'yyyymmdd'),'yyyymmdd') >
							 to_date(to_char(t.discharge_dept_date,'yyyymmdd'),'yyyymmdd')
					 and to_date(to_char(d.ryrq,'yyyymmdd'),'yyyymmdd') - 15 <=
							 to_date(to_char(t.discharge_dept_date,'yyyymmdd'),'yyyymmdd')  
				 where not exists (select 1 from his_bi.ods_patient_diag_info where d.brxh=brxh
															and diagdiseasecodestr in ('Z51.0','Z51.1','Z51.2','Z51.5','Z51.8'))    
					 and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
					and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 
  ) s ; /*多次重返患者，出院当天只打一次重返标志*/
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00101'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00101';\r \r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r  select distinct 'D00101',\r     1 , \r     patient_id,\r     visit_id,\r     pai_visit_id,\r     now(),\r     '重疾患者2-15天重返（国家标准）',\r     st_date\r from (\r    select a.pai_visit_id,d.bah as patient_id,d.zycs as visit_id,to_char(d.cyrq,'yyyymmdd') as st_date\r     from his_bi.ods_patient_medical_record d \r     left join his_bi.pts_pai_visit a on (d.bah =a.patient_id and d.zycs =a.visit_id)\r     inner join his_bi.v_inp_return_patient t \r      on d.bah = t.patient_id \r      and d.zycs > t.visit_id\r      and to_date(to_char(d.ryrq ,'yyyymmdd'),'yyyymmdd') >\r        to_date(to_char(t.discharge_dept_date,'yyyymmdd'),'yyyymmdd')\r      and to_date(to_char(d.ryrq,'yyyymmdd'),'yyyymmdd') - 15 <=\r        to_date(to_char(t.discharge_dept_date,'yyyymmdd'),'yyyymmdd')  \r     where not exists (select 1 from his_bi.ods_patient_diag_info where d.brxh=brxh\r               and diagdiseasecodestr in ('Z51.0','Z51.1','Z51.2','Z51.5','Z51.8'))    \r      and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')\r     and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 \r  ) s ; /*多次重返患者，出院当天只打一次重返标志*/\r \r ""]",['住院重疾患者2-15天重返（国家标准）\r   ']
107,his_bi,fun_dwd_D00102_d_16555,"
/***
函数名称：住院重疾患者16-31天重返（国家标准）
    作用：统计某天住院患者16-31天重返（以病案首页归档数据中的费用数据为准）
  开发人：wy 2020-04-16
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00102  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

重返业务说明，住院患者出院后非预期再住院判定：（同时满足以下二条件） 
1、同一医院，同一患者，第一次入院“是否 31 天再入院计划”为无或缺失。 
2、主要诊断亚目相同（即前四位），
排除主要诊断和其他诊断为 
1、肿瘤放疗患者《全国版与北京版》ICD-10Z51.0 放射治疗疗程， 
2、肿瘤化疗患者《全国版与北京版》ICD-10Z51.1 肿瘤化学治疗疗程，Z51.2 其 
他化学治疗，Z51.5 姑息性医疗，Z51.8 其他特指治疗。

当天（0.00 点至 24：00）先办理出院,后办理住院手续的患者
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00102';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00102';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
  select distinct 'D00102',
				 1 , 
				 patient_id,
				 visit_id,
				 pai_visit_id,
				 now(),
				 '重疾患者16-31天重返（国家标准）',
			  st_date
	from (
				select a.pai_visit_id,d.bah as patient_id,d.zycs as visit_id,to_char(d.cyrq,'yyyymmdd') as st_date
					from his_bi.ods_patient_medical_record d 
				  left join	his_bi.pts_pai_visit a
				  on (d.bah =a.patient_id and d.zycs=a.visit_id)
				 inner join his_bi.v_inp_return_patient t 
						on d.bah = t.patient_id 
					 and d.zycs > t.visit_id 
					 and to_date(to_char(d.ryrq,'yyyymmdd'),'yyyymmdd')-15 >
							 to_date(to_char(t.discharge_dept_date,'yyyymmdd'),'yyyymmdd')
					 and to_date(to_char(d.ryrq,'yyyymmdd'),'yyyymmdd') - 31 <=
							 to_date(to_char(t.discharge_dept_date,'yyyymmdd'),'yyyymmdd')                                    
				 where  not exists (select 1 from his_bi.ods_patient_diag_info where d.brxh=brxh
															and diagdiseasecodestr in ('Z51.0','Z51.1','Z51.2','Z51.5','Z51.8'))    
					 and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
					and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 
  ) s ; /*多次重返患者，出院当天只打一次重返标志*/
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00102'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00102';\r \r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r  select distinct 'D00102',\r     1 , \r     patient_id,\r     visit_id,\r     pai_visit_id,\r     now(),\r     '重疾患者16-31天重返（国家标准）',\r     st_date\r from (\r    select a.pai_visit_id,d.bah as patient_id,d.zycs as visit_id,to_char(d.cyrq,'yyyymmdd') as st_date\r     from his_bi.ods_patient_medical_record d \r      left join his_bi.pts_pai_visit a\r      on (d.bah =a.patient_id and d.zycs=a.visit_id)\r     inner join his_bi.v_inp_return_patient t \r      on d.bah = t.patient_id \r      and d.zycs > t.visit_id \r      and to_date(to_char(d.ryrq,'yyyymmdd'),'yyyymmdd')-15 >\r        to_date(to_char(t.discharge_dept_date,'yyyymmdd'),'yyyymmdd')\r      and to_date(to_char(d.ryrq,'yyyymmdd'),'yyyymmdd') - 31 <=\r        to_date(to_char(t.discharge_dept_date,'yyyymmdd'),'yyyymmdd')                                    \r     where  not exists (select 1 from his_bi.ods_patient_diag_info where d.brxh=brxh\r               and diagdiseasecodestr in ('Z51.0','Z51.1','Z51.2','Z51.5','Z51.8'))    \r      and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')\r     and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 \r  ) s ; /*多次重返患者，出院当天只打一次重返标志*/\r \r ""]",['住院重疾患者16-31天重返（国家标准）\r   ']
108,his_bi,fun_dwd_D00103_d_16557,"
/***
函数名称：住院重疾患者1-31天重返（国家标准）
    作用：统计某天住院患者1-31天重返（以病案首页归档数据中的费用数据为准）
  开发人：wy 2020-04-16
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00103  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

重返业务说明，住院患者出院后非预期再住院判定：（同时满足以下二条件） 
1、同一医院，同一患者，第一次入院“是否 31 天再入院计划”为无或缺失。 
2、主要诊断亚目相同（即前四位），
排除主要诊断和其他诊断为 
1、肿瘤放疗患者《全国版与北京版》ICD-10Z51.0 放射治疗疗程， 
2、肿瘤化疗患者《全国版与北京版》ICD-10Z51.1 肿瘤化学治疗疗程，Z51.2 其 
他化学治疗，Z51.5 姑息性医疗，Z51.8 其他特指治疗。

当天（0.00 点至 24：00）先办理出院,后办理住院手续的患者
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00103';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00103';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
  select distinct 'D00103',
				 1 , 
				 patient_id,
				 visit_id,
				 pai_visit_id,
				 now(),
				 '重疾患者1-31天重返（国家标准）',
			  st_date
	from (
	 			select a.pai_visit_id,d.bah as patient_id,d.zycs as visit_id,to_char(d.cyrq ,'yyyymmdd') as st_date
					from his_bi.ods_patient_medical_record d 
					left join his_bi.pts_pai_visit a
					on (a.patient_id =d.bah and a.visit_id =d.zycs)
				 inner join his_bi.v_inp_return_patient t 
						on a.patient_id = t.patient_id 
					 and a.visit_id > t.visit_id
					 and to_date(to_char(d.ryrq ,'yyyymmdd'),'yyyymmdd') >=
							 to_date(to_char(t.discharge_dept_date,'yyyymmdd'),'yyyymmdd')
					 and to_date(to_char(d.ryrq,'yyyymmdd'),'yyyymmdd') - 31 <=
							 to_date(to_char(t.discharge_dept_date,'yyyymmdd'),'yyyymmdd')                                     
				 where  not exists (select 1 from his_bi.ods_patient_diag_info where d.brxh =brxh
															and diagdiseasecodestr in ('Z51.0','Z51.1','Z51.2','Z51.5','Z51.8'))    
					 and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
					 and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 
  ) s ; /*多次重返患者，出院当天只打一次重返标志*/
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00103'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00103';\r \r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r  select distinct 'D00103',\r     1 , \r     patient_id,\r     visit_id,\r     pai_visit_id,\r     now(),\r     '重疾患者1-31天重返（国家标准）',\r     st_date\r from (\r     select a.pai_visit_id,d.bah as patient_id,d.zycs as visit_id,to_char(d.cyrq ,'yyyymmdd') as st_date\r     from his_bi.ods_patient_medical_record d \r     left join his_bi.pts_pai_visit a\r     on (a.patient_id =d.bah and a.visit_id =d.zycs)\r     inner join his_bi.v_inp_return_patient t \r      on a.patient_id = t.patient_id \r      and a.visit_id > t.visit_id\r      and to_date(to_char(d.ryrq ,'yyyymmdd'),'yyyymmdd') >=\r        to_date(to_char(t.discharge_dept_date,'yyyymmdd'),'yyyymmdd')\r      and to_date(to_char(d.ryrq,'yyyymmdd'),'yyyymmdd') - 31 <=\r        to_date(to_char(t.discharge_dept_date,'yyyymmdd'),'yyyymmdd')                                     \r     where  not exists (select 1 from his_bi.ods_patient_diag_info where d.brxh =brxh\r               and diagdiseasecodestr in ('Z51.0','Z51.1','Z51.2','Z51.5','Z51.8'))    \r      and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')\r      and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 \r  ) s ; /*多次重返患者，出院当天只打一次重返标志*/\r \r ""]",['住院重疾患者1-31天重返（国家标准）\r   ']
109,his_bi,fun_dwd_D00104_d_16559,"
/***
函数名称：住院患者产前出血性疾病打标
    作用：统计某天住院患者中属于产前出血性疾病的人
  开发人：liuf 2020-04-10
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00104  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

    产前出血性疾病 ICD-10：O99.1
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00104';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00104';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
   select 'D00104',
				 1, 
				 a.bah as patient_id,
				 a.zycs as visit_id,
				 c.pai_visit_id as pai_visit_id, 
				 now(),
				 '产前出血性疾病',
			  to_char(a.cyrq,'yyyymmdd') as st_date
	 from his_bi.ods_patient_medical_record a
	inner join his_bi.ods_patient_diag_info b 
		 on (a.brxh = b.brxh and b.main_diag = '1')   --主诊断
    left join his_bi.pts_pai_visit c	
    on (c.patient_id=a.bah and c.visit_id =a.zycs)
	where exists(select 1 from his_bi.dim_diag_oper_info t
							  where t.icd_code = b.diagdiseasecode
							        and t.standard_resource = '甘肃妇幼重疾重返指标'
									and t.type_name = '重点疾病'
									and t.kpi_alias = '产前出血性疾病'
									and t.icd_type = 'ICD10'
									and t.compatible_type = '0' --表示指标本身标准编码
									)
		and a.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
		and a.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 
  ; 
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00104'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00104';   INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,                    remark,st_date)    select 'D00104',     1,      a.bah as patient_id,     a.zycs as visit_id,     c.pai_visit_id as pai_visit_id,      now(),     '产前出血性疾病',     to_char(a.cyrq,'yyyymmdd') as st_date  from his_bi.ods_patient_medical_record a inner join his_bi.ods_patient_diag_info b    on (a.brxh = b.brxh and b.main_diag = '1')   --主诊断    left join his_bi.pts_pai_visit c     on (c.patient_id=a.bah and c.visit_id =a.zycs) where exists(select 1 from his_bi.dim_diag_oper_info t         where t.icd_code = b.diagdiseasecode               and t.standard_resource = '甘肃妇幼重疾重返指标'         and t.type_name = '重点疾病'         and t.kpi_alias = '产前出血性疾病'         and t.icd_type = 'ICD10'         and t.compatible_type = '0' --表示指标本身标准编码         )  and a.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')  and a.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1   ;   ""]",['住院患者产前出血性疾病打标   ']
110,his_bi,fun_dwd_D00105_d_16561,"
/***
函数名称：住院患者产后出血打标
    作用：统计某天住院患者中属于产后出血的人
  开发人：wy 2020-04-14
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00105  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00105';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00105';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
  select 'D00105',
				 1, 
				 d.bah as patient_id,
				 d.zycs as visit_id,
				 a.pai_visit_id,
				 now(),
				 '产后出血',
			  to_char(d.cyrq,'yyyymmdd') as st_date
	 from his_bi.ods_patient_medical_record d
	 left join his_bi.pts_pai_visit a
	 on (a.patient_id =d.bah and a.visit_id =d.zycs)
	inner join his_bi.ods_patient_diag_info b 
		 on d.brxh = b.brxh 
		and b.main_diag = '1'   --主诊断
	where  exists(select 1 from his_bi.dim_diag_oper_info t
							  where t.icd_code = b.diagdiseasecode 
									and t.type_name = '重点疾病'
									and t.kpi_alias = '产后出血'
									and t.icd_type = 'ICD10'
									and t.compatible_type = '0' --表示指标本身标准编码
									)
		and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
		and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1; 
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00105'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00105';   INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,                    remark,st_date)   select 'D00105',     1,      d.bah as patient_id,     d.zycs as visit_id,     a.pai_visit_id,     now(),     '产后出血',     to_char(d.cyrq,'yyyymmdd') as st_date  from his_bi.ods_patient_medical_record d  left join his_bi.pts_pai_visit a  on (a.patient_id =d.bah and a.visit_id =d.zycs) inner join his_bi.ods_patient_diag_info b    on d.brxh = b.brxh   and b.main_diag = '1'   --主诊断 where  exists(select 1 from his_bi.dim_diag_oper_info t         where t.icd_code = b.diagdiseasecode          and t.type_name = '重点疾病'         and t.kpi_alias = '产后出血'         and t.icd_type = 'ICD10'         and t.compatible_type = '0' --表示指标本身标准编码         )  and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')  and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1;   ""]",['住院患者产后出血打标   ']
111,his_bi,fun_dwd_D00106_d_16563,"
/***
函数名称：住院患者早产打标
    作用：统计某天住院患者中属于早产的人
  开发人：wy 2020-04-14
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00106  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00106';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00106';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
  select 'D00106',
				 1, 
				 d.bah as patient_id,
				 d.zycs as visit_id,
				 a.pai_visit_id,
				 now(),
				 '早产',
			  to_char(d.cyrq,'yyyymmdd') as st_date
	 from his_bi.ods_patient_medical_record d
	 left join his_bi.pts_pai_visit a
	 on (a.patient_id =d.bah and a.visit_id =d.zycs)
	inner join his_bi.ods_patient_diag_info b 
		 on d.brxh = b.brxh 
		and b.main_diag = '1'   --主诊断
	where  exists(select 1 from his_bi.dim_diag_oper_info t
							  where t.icd_code = b.diagdiseasecode 
							        and t.standard_resource = '甘肃妇幼重疾重返指标'
									and t.type_name = '重点疾病'
									and t.kpi_alias = '早产'
									and t.icd_type = 'ICD10'
									and t.compatible_type = '0' --表示指标本身标准编码
									)
		and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
		and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00106'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00106';   INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,                    remark,st_date)   select 'D00106',     1,      d.bah as patient_id,     d.zycs as visit_id,     a.pai_visit_id,     now(),     '早产',     to_char(d.cyrq,'yyyymmdd') as st_date  from his_bi.ods_patient_medical_record d  left join his_bi.pts_pai_visit a  on (a.patient_id =d.bah and a.visit_id =d.zycs) inner join his_bi.ods_patient_diag_info b    on d.brxh = b.brxh   and b.main_diag = '1'   --主诊断 where  exists(select 1 from his_bi.dim_diag_oper_info t         where t.icd_code = b.diagdiseasecode                and t.standard_resource = '甘肃妇幼重疾重返指标'         and t.type_name = '重点疾病'         and t.kpi_alias = '早产'         and t.icd_type = 'ICD10'         and t.compatible_type = '0' --表示指标本身标准编码         )  and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')  and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1;  ""]",['住院患者早产打标   ']
112,his_bi,fun_dwd_D00107_d_16565,"
/***
函数名称：住院患者多胎妊娠打标
    作用：统计某天住院患者中属于多胎妊娠的人
  开发人：wy 2020-04-14
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00107  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据


***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00107';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00107';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
  select 'D00107',
				 1, 
				 d.bah as patient_id,
				 d.zycs as visit_id,
				 a.pai_visit_id,
				 now(),
				 '多胎妊娠',
			  to_char(d.cyrq,'yyyymmdd') as st_date
	 from his_bi.ods_patient_medical_record d
	 left join his_bi.pts_pai_visit a
	 on (a.patient_id =d.bah and a.visit_id =d.zycs)
	inner join his_bi.ods_patient_diag_info b 
		 on d.brxh = b.brxh 
		and b.main_diag = '1'   --主诊断
	where  exists(select 1 from his_bi.dim_diag_oper_info t
							  where t.icd_code = b.diagdiseasecode 
							        and t.standard_resource = '甘肃妇幼重疾重返指标'
									and t.type_name = '重点疾病'
									and t.kpi_alias = '多胎妊娠'
									and t.icd_type = 'ICD10'
									and t.compatible_type = '0' --表示指标本身标准编码
									)
		and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
		and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1; 
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00107'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00107';   INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,                    remark,st_date)   select 'D00107',     1,      d.bah as patient_id,     d.zycs as visit_id,     a.pai_visit_id,     now(),     '多胎妊娠',     to_char(d.cyrq,'yyyymmdd') as st_date  from his_bi.ods_patient_medical_record d  left join his_bi.pts_pai_visit a  on (a.patient_id =d.bah and a.visit_id =d.zycs) inner join his_bi.ods_patient_diag_info b    on d.brxh = b.brxh   and b.main_diag = '1'   --主诊断 where  exists(select 1 from his_bi.dim_diag_oper_info t         where t.icd_code = b.diagdiseasecode                and t.standard_resource = '甘肃妇幼重疾重返指标'         and t.type_name = '重点疾病'         and t.kpi_alias = '多胎妊娠'         and t.icd_type = 'ICD10'         and t.compatible_type = '0' --表示指标本身标准编码         )  and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')  and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1;   ""]",['住院患者多胎妊娠打标   ']
113,his_bi,fun_dwd_D00117_d_16585,"
/***
函数名称：住院患者女性生殖器脱垂打标
    作用：统计某天住院患者中属于女性生殖器脱垂的人
  开发人：wy 2020-04-14
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00117  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

    
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00117';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00117';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
  select 'D00117',
				 1, 
				 d.bah as patient_id,
				 d.zycs as visit_id,
				 a.pai_visit_id,
				 now(),
				 '女性生殖器脱垂',
			  to_char(d.cyrq,'yyyymmdd') as st_date
	 from his_bi.ods_patient_medical_record d
	 left join his_bi.pts_pai_visit a
	 on (a.patient_id =d.bah and a.visit_id =d.zycs)
	inner join his_bi.ods_patient_diag_info b 
		 on d.brxh = b.brxh 
		and b.main_diag = '1'   --主诊断
	where  exists(select 1 from his_bi.dim_diag_oper_info t
							  where t.icd_code = b.diagdiseasecode 
							        and t.standard_resource = '甘肃妇幼重疾重返指标'
									and t.type_name = '重点疾病'
									and t.kpi_alias = '女性生殖器脱垂'
									and t.icd_type = 'ICD10'
									and t.compatible_type = '0' --表示指标本身标准编码
									)
		and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
		and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1; 
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00117'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00117';   INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,                    remark,st_date)   select 'D00117',     1,      d.bah as patient_id,     d.zycs as visit_id,     a.pai_visit_id,     now(),     '女性生殖器脱垂',     to_char(d.cyrq,'yyyymmdd') as st_date  from his_bi.ods_patient_medical_record d  left join his_bi.pts_pai_visit a  on (a.patient_id =d.bah and a.visit_id =d.zycs) inner join his_bi.ods_patient_diag_info b    on d.brxh = b.brxh   and b.main_diag = '1'   --主诊断 where  exists(select 1 from his_bi.dim_diag_oper_info t         where t.icd_code = b.diagdiseasecode                and t.standard_resource = '甘肃妇幼重疾重返指标'         and t.type_name = '重点疾病'         and t.kpi_alias = '女性生殖器脱垂'         and t.icd_type = 'ICD10'         and t.compatible_type = '0' --表示指标本身标准编码         )  and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')  and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1;   ""]",['住院患者女性生殖器脱垂打标   ']
114,his_bi,fun_dwd_D00118_d_16587,"
/***
函数名称：住院患者子宫内膜异位症打标
    作用：统计某天住院患者中属于子宫内膜异位症的人
  开发人：wy 2020-04-14
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00118  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

    
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00118';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00118';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
  select 'D00118',
				 1, 
				 d.bah as patient_id,
				 d.zycs as visit_id,
				 a.pai_visit_id,
				 now(),
				 '子宫内膜异位症',
			  to_char(d.cyrq,'yyyymmdd') as st_date
	 from his_bi.ods_patient_medical_record d
	 left join his_bi.pts_pai_visit a
	 on (a.patient_id =d.bah and a.visit_id =d.zycs)
	inner join his_bi.ods_patient_diag_info b 
		 on d.brxh = b.brxh 
		and b.main_diag = '1'   --主诊断
	where  exists(select 1 from his_bi.dim_diag_oper_info t
							  where t.icd_code = b.diagdiseasecode 
							        and t.standard_resource = '甘肃妇幼重疾重返指标'
									and t.type_name = '重点疾病'
									and t.kpi_alias = '子宫内膜异位症'
									and t.icd_type = 'ICD10'
									and t.compatible_type = '0' --表示指标本身标准编码
									)
		and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
		and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1; 
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00118'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00118';   INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,                    remark,st_date)   select 'D00118',     1,      d.bah as patient_id,     d.zycs as visit_id,     a.pai_visit_id,     now(),     '子宫内膜异位症',     to_char(d.cyrq,'yyyymmdd') as st_date  from his_bi.ods_patient_medical_record d  left join his_bi.pts_pai_visit a  on (a.patient_id =d.bah and a.visit_id =d.zycs) inner join his_bi.ods_patient_diag_info b    on d.brxh = b.brxh   and b.main_diag = '1'   --主诊断 where  exists(select 1 from his_bi.dim_diag_oper_info t         where t.icd_code = b.diagdiseasecode                and t.standard_resource = '甘肃妇幼重疾重返指标'         and t.type_name = '重点疾病'         and t.kpi_alias = '子宫内膜异位症'         and t.icd_type = 'ICD10'         and t.compatible_type = '0' --表示指标本身标准编码         )  and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')  and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1;   ""]",['住院患者子宫内膜异位症打标   ']
115,his_bi,fun_dwd_D00119_d_16589,"
/***
函数名称：住院患者葡萄胎打标
    作用：统计某天住院患者中属于葡萄胎的人
  开发人：wy 2020-04-14
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00119  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

    
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00119';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00119';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
  select 'D00119',
				 1, 
				 d.bah as patient_id,
				 d.zycs as visit_id,
				 a.pai_visit_id,
				 now(),
				 '葡萄胎',
			  to_char(d.cyrq,'yyyymmdd') as st_date
	 from his_bi.ods_patient_medical_record d
	 left join his_bi.pts_pai_visit a
	 on (a.patient_id =d.bah and a.visit_id =d.zycs)
	inner join his_bi.ods_patient_diag_info b 
		 on d.brxh = b.brxh 
		and b.main_diag = '1'   --主诊断
	where  exists(select 1 from his_bi.dim_diag_oper_info t
							  where t.icd_code = b.diagdiseasecode 
							        and t.standard_resource = '甘肃妇幼重疾重返指标'
									and t.type_name = '重点疾病'
									and t.kpi_alias = '葡萄胎'
									and t.icd_type = 'ICD10'
									and t.compatible_type = '0' --表示指标本身标准编码
									)
		and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
		and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1; 
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00119'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00119';   INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,                    remark,st_date)   select 'D00119',     1,      d.bah as patient_id,     d.zycs as visit_id,     a.pai_visit_id,     now(),     '葡萄胎',     to_char(d.cyrq,'yyyymmdd') as st_date  from his_bi.ods_patient_medical_record d  left join his_bi.pts_pai_visit a  on (a.patient_id =d.bah and a.visit_id =d.zycs) inner join his_bi.ods_patient_diag_info b    on d.brxh = b.brxh   and b.main_diag = '1'   --主诊断 where  exists(select 1 from his_bi.dim_diag_oper_info t         where t.icd_code = b.diagdiseasecode                and t.standard_resource = '甘肃妇幼重疾重返指标'         and t.type_name = '重点疾病'         and t.kpi_alias = '葡萄胎'         and t.icd_type = 'ICD10'         and t.compatible_type = '0' --表示指标本身标准编码         )  and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')  and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1;   ""]",['住院患者葡萄胎打标   ']
116,his_bi,fun_dwd_D00120_d_16591,"
/***
函数名称：住院患者累及女性生殖道的瘘打标
    作用：统计某天住院患者中属于累及女性生殖道的瘘的人
  开发人：wy 2020-04-14
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00120  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

    
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00120';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00120';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
  select 'D00120',
				 1, 
				 d.bah as patient_id,
				 d.zycs as visit_id,
				 a.pai_visit_id,
				 now(),
				 '累及女性生殖道的瘘',
			  to_char(d.cyrq,'yyyymmdd') as st_date
	 from his_bi.ods_patient_medical_record d
	 left join his_bi.pts_pai_visit a
	 on (a.patient_id =d.bah and a.visit_id =d.zycs)
	inner join his_bi.ods_patient_diag_info b 
		 on d.brxh = b.brxh 
		and b.main_diag = '1'   --主诊断
	where  exists(select 1 from his_bi.dim_diag_oper_info t
							  where t.icd_code = b.diagdiseasecode 
							        and t.standard_resource = '甘肃妇幼重疾重返指标'
									and t.type_name = '重点疾病'
									and t.kpi_alias = '累及女性生殖道的瘘'
									and t.icd_type = 'ICD10'
									and t.compatible_type = '0' --表示指标本身标准编码
									)
		and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
		and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1;  
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00120'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00120';   INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,                    remark,st_date)   select 'D00120',     1,      d.bah as patient_id,     d.zycs as visit_id,     a.pai_visit_id,     now(),     '累及女性生殖道的瘘',     to_char(d.cyrq,'yyyymmdd') as st_date  from his_bi.ods_patient_medical_record d  left join his_bi.pts_pai_visit a  on (a.patient_id =d.bah and a.visit_id =d.zycs) inner join his_bi.ods_patient_diag_info b    on d.brxh = b.brxh   and b.main_diag = '1'   --主诊断 where  exists(select 1 from his_bi.dim_diag_oper_info t         where t.icd_code = b.diagdiseasecode                and t.standard_resource = '甘肃妇幼重疾重返指标'         and t.type_name = '重点疾病'         and t.kpi_alias = '累及女性生殖道的瘘'         and t.icd_type = 'ICD10'         and t.compatible_type = '0' --表示指标本身标准编码         )  and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')  and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1;    ""]",['住院患者累及女性生殖道的瘘打标   ']
117,his_bi,fun_dwd_D00121_d_16593,"
/***
函数名称：住院患者重度卵巢过度刺激综合征打标
    作用：统计某天住院患者中属于重度卵巢过度刺激综合征的人
  开发人：wy 2020-04-14
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00121  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

    
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00121';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00121';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
  select 'D00121',
				 1, 
				 d.bah as patient_id,
				 d.zycs as visit_id,
				 a.pai_visit_id,
				 now(),
				 '重度卵巢过度刺激综合征',
			  to_char(d.cyrq,'yyyymmdd') as st_date
	 from his_bi.ods_patient_medical_record d
	 left join his_bi.pts_pai_visit a
	 on (a.patient_id =d.bah and a.visit_id =d.zycs)
	inner join his_bi.ods_patient_diag_info b 
		 on d.brxh = b.brxh 
		and b.main_diag = '1'   --主诊断
	where  exists(select 1 from his_bi.dim_diag_oper_info t
							  where t.icd_code = b.diagdiseasecode 
							        and t.standard_resource = '甘肃妇幼重疾重返指标'
									and t.type_name = '重点疾病'
									and t.kpi_alias = '重度卵巢过度刺激综合征'
									and t.icd_type = 'ICD10'
									and t.compatible_type = '0' --表示指标本身标准编码
									)
		and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
		and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1; 
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00121'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00121';   INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,                    remark,st_date)   select 'D00121',     1,      d.bah as patient_id,     d.zycs as visit_id,     a.pai_visit_id,     now(),     '重度卵巢过度刺激综合征',     to_char(d.cyrq,'yyyymmdd') as st_date  from his_bi.ods_patient_medical_record d  left join his_bi.pts_pai_visit a  on (a.patient_id =d.bah and a.visit_id =d.zycs) inner join his_bi.ods_patient_diag_info b    on d.brxh = b.brxh   and b.main_diag = '1'   --主诊断 where  exists(select 1 from his_bi.dim_diag_oper_info t         where t.icd_code = b.diagdiseasecode                and t.standard_resource = '甘肃妇幼重疾重返指标'         and t.type_name = '重点疾病'         and t.kpi_alias = '重度卵巢过度刺激综合征'         and t.icd_type = 'ICD10'         and t.compatible_type = '0' --表示指标本身标准编码         )  and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')  and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1;   ""]",['住院患者重度卵巢过度刺激综合征打标   ']
118,his_bi,fun_dwd_D00122_d_16595,"
/***
函数名称：住院患者卵巢恶性肿瘤打标
    作用：统计某天住院患者中属于卵巢恶性肿瘤的人
  开发人：wy 2020-04-14
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00122  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

    
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00122';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00122';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
  select 'D00122',
				 1, 
				 d.bah as patient_id,
				 d.zycs as visit_id,
				 a.pai_visit_id,
				 now(),
				 '卵巢恶性肿瘤',
			  to_char(d.cyrq,'yyyymmdd') as st_date
	 from his_bi.ods_patient_medical_record d
	 left join his_bi.pts_pai_visit a
	 on (a.patient_id =d.bah and a.visit_id =d.zycs)
	inner join his_bi.ods_patient_diag_info b 
		 on d.brxh = b.brxh 
		and b.main_diag = '1'   --主诊断
	where  exists(select 1 from his_bi.dim_diag_oper_info t
							  where t.icd_code = b.diagdiseasecode 
							        and t.standard_resource = '甘肃妇幼重疾重返指标'
									and t.type_name = '重点疾病'
									and t.kpi_alias = '卵巢恶性肿瘤'
									and t.icd_type = 'ICD10'
									and t.compatible_type = '0' --表示指标本身标准编码
									)
		and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
		and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1; 
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00122'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00122';   INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,                    remark,st_date)   select 'D00122',     1,      d.bah as patient_id,     d.zycs as visit_id,     a.pai_visit_id,     now(),     '卵巢恶性肿瘤',     to_char(d.cyrq,'yyyymmdd') as st_date  from his_bi.ods_patient_medical_record d  left join his_bi.pts_pai_visit a  on (a.patient_id =d.bah and a.visit_id =d.zycs) inner join his_bi.ods_patient_diag_info b    on d.brxh = b.brxh   and b.main_diag = '1'   --主诊断 where  exists(select 1 from his_bi.dim_diag_oper_info t         where t.icd_code = b.diagdiseasecode                and t.standard_resource = '甘肃妇幼重疾重返指标'         and t.type_name = '重点疾病'         and t.kpi_alias = '卵巢恶性肿瘤'         and t.icd_type = 'ICD10'         and t.compatible_type = '0' --表示指标本身标准编码         )  and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')  and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1;   ""]",['住院患者卵巢恶性肿瘤打标   ']
119,his_bi,fun_dwd_D00123_d_16597,"
/***
函数名称：住院患者支气管肺炎打标
    作用：统计某天住院患者中属于支气管肺炎的人
  开发人：wy 2020-04-14
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00123  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

    
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00123';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00123';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
  select 'D00123',
				 1, 
				 d.bah as patient_id,
				 d.zycs as visit_id,
				 a.pai_visit_id,
				 now(),
				 '支气管肺炎',
			  to_char(d.cyrq,'yyyymmdd') as st_date
	 from his_bi.ods_patient_medical_record d
	 left join his_bi.pts_pai_visit a
	 on (a.patient_id =d.bah and a.visit_id =d.zycs)
	inner join his_bi.ods_patient_diag_info b 
		 on d.brxh = b.brxh 
		and b.main_diag = '1'   --主诊断
	where  exists(select 1 from his_bi.dim_diag_oper_info t
							  where t.icd_code = b.diagdiseasecode 
							        and t.standard_resource = '甘肃妇幼重疾重返指标'
									and t.type_name = '重点疾病'
									and t.kpi_alias = '支气管肺炎'
									and t.icd_type = 'ICD10'
									and t.compatible_type = '0' --表示指标本身标准编码
									)
		and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
		and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1; 
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00123'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00123';   INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,                    remark,st_date)   select 'D00123',     1,      d.bah as patient_id,     d.zycs as visit_id,     a.pai_visit_id,     now(),     '支气管肺炎',     to_char(d.cyrq,'yyyymmdd') as st_date  from his_bi.ods_patient_medical_record d  left join his_bi.pts_pai_visit a  on (a.patient_id =d.bah and a.visit_id =d.zycs) inner join his_bi.ods_patient_diag_info b    on d.brxh = b.brxh   and b.main_diag = '1'   --主诊断 where  exists(select 1 from his_bi.dim_diag_oper_info t         where t.icd_code = b.diagdiseasecode                and t.standard_resource = '甘肃妇幼重疾重返指标'         and t.type_name = '重点疾病'         and t.kpi_alias = '支气管肺炎'         and t.icd_type = 'ICD10'         and t.compatible_type = '0' --表示指标本身标准编码         )  and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')  and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1;   ""]",['住院患者支气管肺炎打标   ']
120,his_bi,fun_dwd_D00124_d_16599,"
/***
函数名称：住院患者小儿腹泻病打标
    作用：统计某天住院患者中属于小儿腹泻病的人
  开发人：wy 2020-04-14
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00124  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

    
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00124';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00124';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
  select 'D00124',
				 1, 
				 d.bah as patient_id,
				 d.zycs as visit_id,
				 a.pai_visit_id,
				 now(),
				 '小儿腹泻病',
			  to_char(d.cyrq,'yyyymmdd') as st_date
	 from his_bi.ods_patient_medical_record d
	 left join his_bi.pts_pai_visit a
	 on (a.patient_id =d.bah and a.visit_id =d.zycs)
	inner join his_bi.ods_patient_diag_info b 
		 on d.brxh = b.brxh 
		and b.main_diag = '1'   --主诊断
	where  exists(select 1 from his_bi.dim_diag_oper_info t
							  where t.icd_code = b.diagdiseasecode 
							        and t.standard_resource = '甘肃妇幼重疾重返指标'
									and t.type_name = '重点疾病'
									and t.kpi_alias = '小儿腹泻病'
									and t.icd_type = 'ICD10'
									and t.compatible_type = '0' --表示指标本身标准编码
									)
		and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
		and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1; 
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00124'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00124';   INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,                    remark,st_date)   select 'D00124',     1,      d.bah as patient_id,     d.zycs as visit_id,     a.pai_visit_id,     now(),     '小儿腹泻病',     to_char(d.cyrq,'yyyymmdd') as st_date  from his_bi.ods_patient_medical_record d  left join his_bi.pts_pai_visit a  on (a.patient_id =d.bah and a.visit_id =d.zycs) inner join his_bi.ods_patient_diag_info b    on d.brxh = b.brxh   and b.main_diag = '1'   --主诊断 where  exists(select 1 from his_bi.dim_diag_oper_info t         where t.icd_code = b.diagdiseasecode                and t.standard_resource = '甘肃妇幼重疾重返指标'         and t.type_name = '重点疾病'         and t.kpi_alias = '小儿腹泻病'         and t.icd_type = 'ICD10'         and t.compatible_type = '0' --表示指标本身标准编码         )  and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')  and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1;   ""]",['住院患者小儿腹泻病打标   ']
121,his_bi,fun_dwd_D00125_d_16601,"
/***
函数名称：住院患者低出生体重儿打标
    作用：统计某天住院患者中属于低出生体重儿的人
  开发人：wy 2020-04-14
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00125  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

    
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00125';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00125';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
  select 'D00125',
				 1, 
				 d.bah as patient_id,
				 d.zycs as visit_id,
				 a.pai_visit_id,
				 now(),
				 '低出生体重儿',
			  to_char(d.cyrq,'yyyymmdd') as st_date
	 from his_bi.ods_patient_medical_record d
	 left join his_bi.pts_pai_visit a
	 on (a.patient_id =d.bah and a.visit_id =d.zycs)
	inner join his_bi.ods_patient_diag_info b 
		 on d.brxh = b.brxh 
		and b.main_diag = '1'   --主诊断
	where  exists(select 1 from his_bi.dim_diag_oper_info t
							  where t.icd_code = b.diagdiseasecode 
							        and t.standard_resource = '甘肃妇幼重疾重返指标'
									and t.type_name = '重点疾病'
									and t.kpi_alias = '低出生体重儿'
									and t.icd_type = 'ICD10'
									and t.compatible_type = '0' --表示指标本身标准编码
									)
		and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
		and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1; 
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00125'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00125';   INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,                    remark,st_date)   select 'D00125',     1,      d.bah as patient_id,     d.zycs as visit_id,     a.pai_visit_id,     now(),     '低出生体重儿',     to_char(d.cyrq,'yyyymmdd') as st_date  from his_bi.ods_patient_medical_record d  left join his_bi.pts_pai_visit a  on (a.patient_id =d.bah and a.visit_id =d.zycs) inner join his_bi.ods_patient_diag_info b    on d.brxh = b.brxh   and b.main_diag = '1'   --主诊断 where  exists(select 1 from his_bi.dim_diag_oper_info t         where t.icd_code = b.diagdiseasecode                and t.standard_resource = '甘肃妇幼重疾重返指标'         and t.type_name = '重点疾病'         and t.kpi_alias = '低出生体重儿'         and t.icd_type = 'ICD10'         and t.compatible_type = '0' --表示指标本身标准编码         )  and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')  and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1;   ""]",['住院患者低出生体重儿打标   ']
122,his_bi,fun_dwd_D00126_d_16603,"
/***
函数名称：住院患者新生儿高胆红素血症打标
    作用：统计某天住院患者中属于新生儿高胆红素血症的人
  开发人：wy 2020-04-14
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00126  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

    
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00126';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00126';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
  select 'D00126',
				 1, 
				 d.bah as patient_id,
				 d.zycs as visit_id,
				 a.pai_visit_id,
				 now(),
				 '新生儿高胆红素血症',
			  to_char(d.cyrq,'yyyymmdd') as st_date
	 from his_bi.ods_patient_medical_record d
	 left join his_bi.pts_pai_visit a
	 on (a.patient_id =d.bah and a.visit_id =d.zycs)
	inner join his_bi.ods_patient_diag_info b 
		 on d.brxh = b.brxh 
		and b.main_diag = '1'   --主诊断
	where  exists(select 1 from his_bi.dim_diag_oper_info t
							  where t.icd_code = b.diagdiseasecode 
							        and t.standard_resource = '甘肃妇幼重疾重返指标'
									and t.type_name = '重点疾病'
									and t.kpi_alias = '新生儿高胆红素血症'
									and t.icd_type = 'ICD10'
									and t.compatible_type = '0' --表示指标本身标准编码
									)
		and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
		and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1; 
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00126'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00126';   INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,                    remark,st_date)   select 'D00126',     1,      d.bah as patient_id,     d.zycs as visit_id,     a.pai_visit_id,     now(),     '新生儿高胆红素血症',     to_char(d.cyrq,'yyyymmdd') as st_date  from his_bi.ods_patient_medical_record d  left join his_bi.pts_pai_visit a  on (a.patient_id =d.bah and a.visit_id =d.zycs) inner join his_bi.ods_patient_diag_info b    on d.brxh = b.brxh   and b.main_diag = '1'   --主诊断 where  exists(select 1 from his_bi.dim_diag_oper_info t         where t.icd_code = b.diagdiseasecode                and t.standard_resource = '甘肃妇幼重疾重返指标'         and t.type_name = '重点疾病'         and t.kpi_alias = '新生儿高胆红素血症'         and t.icd_type = 'ICD10'         and t.compatible_type = '0' --表示指标本身标准编码         )  and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')  and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1;   ""]",['住院患者新生儿高胆红素血症打标   ']
123,his_bi,fun_dwd_D00127_d_16605,"
/***
函数名称：住院患者新生儿窒息打标
    作用：统计某天住院患者中属于新生儿窒息的人
  开发人：wy 2020-04-14
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00127  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

    
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00127';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00127';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
  select 'D00127',
				 1, 
				 d.bah as patient_id,
				 d.zycs as visit_id,
				 a.pai_visit_id,
				 now(),
				 '新生儿窒息',
			  to_char(d.cyrq,'yyyymmdd') as st_date
	 from his_bi.ods_patient_medical_record d
	 left join his_bi.pts_pai_visit a
	 on (a.patient_id =d.bah and a.visit_id =d.zycs)
	inner join his_bi.ods_patient_diag_info b 
		 on d.brxh = b.brxh 
		and b.main_diag = '1'   --主诊断
	where  exists(select 1 from his_bi.dim_diag_oper_info t
							  where t.icd_code = b.diagdiseasecode 
							        and t.standard_resource = '甘肃妇幼重疾重返指标'
									and t.type_name = '重点疾病'
									and t.kpi_alias = '新生儿窒息'
									and t.icd_type = 'ICD10'
									and t.compatible_type = '0' --表示指标本身标准编码
									)
		and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
		and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1; 
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00127'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00127';   INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,                    remark,st_date)   select 'D00127',     1,      d.bah as patient_id,     d.zycs as visit_id,     a.pai_visit_id,     now(),     '新生儿窒息',     to_char(d.cyrq,'yyyymmdd') as st_date  from his_bi.ods_patient_medical_record d  left join his_bi.pts_pai_visit a  on (a.patient_id =d.bah and a.visit_id =d.zycs) inner join his_bi.ods_patient_diag_info b    on d.brxh = b.brxh   and b.main_diag = '1'   --主诊断 where  exists(select 1 from his_bi.dim_diag_oper_info t         where t.icd_code = b.diagdiseasecode                and t.standard_resource = '甘肃妇幼重疾重返指标'         and t.type_name = '重点疾病'         and t.kpi_alias = '新生儿窒息'         and t.icd_type = 'ICD10'         and t.compatible_type = '0' --表示指标本身标准编码         )  and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')  and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1;   ""]",['住院患者新生儿窒息打标   ']
124,his_bi,fun_dwd_D00128_d_16607,"
/***
函数名称：住院患者新生儿呼吸窘迫综合征打标
    作用：统计某天住院患者中属于新生儿呼吸窘迫综合征的人
  开发人：wy 2020-04-14
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00128  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

    
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00128';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00128';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
  select 'D00128',
				 1, 
				 d.bah as patient_id,
				 d.zycs as visit_id,
				 a.pai_visit_id,
				 now(),
				 '新生儿呼吸窘迫综合征',
			  to_char(d.cyrq,'yyyymmdd') as st_date
	 from his_bi.ods_patient_medical_record d
	 left join his_bi.pts_pai_visit a
	 on (a.patient_id =d.bah and a.visit_id =d.zycs)
	inner join his_bi.ods_patient_diag_info b 
		 on d.brxh = b.brxh 
		and b.main_diag = '1'   --主诊断
	where  exists(select 1 from his_bi.dim_diag_oper_info t
							  where t.icd_code = b.diagdiseasecode 
							        and t.standard_resource = '甘肃妇幼重疾重返指标'
									and t.type_name = '重点疾病'
									and t.kpi_alias = '新生儿呼吸窘迫综合征'
									and t.icd_type = 'ICD10'
									and t.compatible_type = '0' --表示指标本身标准编码
									)
		and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
		and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1; 
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00128'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00128';   INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,                    remark,st_date)   select 'D00128',     1,      d.bah as patient_id,     d.zycs as visit_id,     a.pai_visit_id,     now(),     '新生儿呼吸窘迫综合征',     to_char(d.cyrq,'yyyymmdd') as st_date  from his_bi.ods_patient_medical_record d  left join his_bi.pts_pai_visit a  on (a.patient_id =d.bah and a.visit_id =d.zycs) inner join his_bi.ods_patient_diag_info b    on d.brxh = b.brxh   and b.main_diag = '1'   --主诊断 where  exists(select 1 from his_bi.dim_diag_oper_info t         where t.icd_code = b.diagdiseasecode                and t.standard_resource = '甘肃妇幼重疾重返指标'         and t.type_name = '重点疾病'         and t.kpi_alias = '新生儿呼吸窘迫综合征'         and t.icd_type = 'ICD10'         and t.compatible_type = '0' --表示指标本身标准编码         )  and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')  and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1;   ""]",['住院患者新生儿呼吸窘迫综合征打标   ']
125,his_bi,fun_dwd_D00129_d_16609,"
/***
函数名称：门诊急诊人次（不含体检和急诊）
    作用：统计某天门诊急诊人次（不含体检和急诊）
  开发人：wy 2020-05-06
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00129  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_outp_work_d
	 where key = 'D00129';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_outp_work_d where st_date = c_daylist.day_id and key = 'D00129';
	
  INSERT into his_bi.dwd_outp_work_d(key,value,dept_code,insert_date,remark,st_date,outp_visit_id,patient_id,visit_id) 
  select 'D00129',
				 1,
         p.dept_code,
         now(),
			  '急诊人次',
			  to_char(p.ghsj,'yyyymmdd') AS st_date,
				p.outp_visit_id,
				p.patient_id,
				p.visit_id
   from his_bi.pts_outp_patient_visit p
  where p.ghsj >= to_date(c_daylist.day_id,'yyyyMMdd')
    and p.ghsj <  to_date(c_daylist.day_id,'yyyyMMdd')+1
    and p.outp_type_code = '2'  --急诊类型
    and p.registry_flag IN ('0','1') ;--包含未就诊和已就诊

 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00129'],"[""delete from his_bi.dwd_outp_work_d where st_date = c_daylist.day_id and key = 'D00129';   INSERT into his_bi.dwd_outp_work_d(key,value,dept_code,insert_date,remark,st_date,outp_visit_id,patient_id,visit_id)   select 'D00129',     1,         p.dept_code,         now(),     '急诊人次',     to_char(p.ghsj,'yyyymmdd') AS st_date,    p.outp_visit_id,    p.patient_id,    p.visit_id   from his_bi.pts_outp_patient_visit p  where p.ghsj >= to_date(c_daylist.day_id,'yyyyMMdd')    and p.ghsj <  to_date(c_daylist.day_id,'yyyyMMdd')+1    and p.outp_type_code = '2'  --急诊类型    and p.registry_flag IN ('0','1') ;--包含未就诊和已就诊  ""]",['门诊急诊人次（不含体检和急诊）   ']
126,his_bi,fun_dwd_D00130_d_16610,"
/***
函数名称：留观人次
    作用：统计某天留观人次，甘肃没有开展留观业务，采取门急诊患者收取床位费取判断
  开发人：wy 2020-05-06
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00130  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_outp_work_d
	 where key = 'D00130';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_outp_work_d where st_date = c_daylist.day_id and key = 'D00130';
	
  INSERT into his_bi.dwd_outp_work_d(key,value,dept_code,insert_date,remark,st_date,outp_visit_id,patient_id,visit_id) 
  select 'D00130',
				 1,
         p.dept_code,
         now(),
			  '留观人次',
			  to_char(p.ghsj,'yyyymmdd') AS st_date,
				p.outp_visit_id,
				p.patient_id,
				p.visit_id
  from his_bi.pts_outp_patient_visit p
	inner join his_bi.bms_bill_item p1 on p.patient_id = p1.patient_id and p.visit_id = p1.visit_id
	where p.ghsj >= to_date(c_daylist.day_id,'yyyyMMdd')
	and p.ghsj <  to_date(c_daylist.day_id,'yyyyMMdd')+1
	and p1.in_out_flag='O'
  and p1.item_class in ('J');

 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00130'],"[""delete from his_bi.dwd_outp_work_d where st_date = c_daylist.day_id and key = 'D00130';\r \r  INSERT into his_bi.dwd_outp_work_d(key,value,dept_code,insert_date,remark,st_date,outp_visit_id,patient_id,visit_id) \r  select 'D00130',\r     1,\r         p.dept_code,\r         now(),\r     '留观人次',\r     to_char(p.ghsj,'yyyymmdd') AS st_date,\r    p.outp_visit_id,\r    p.patient_id,\r    p.visit_id\r  from his_bi.pts_outp_patient_visit p\r inner join his_bi.bms_bill_item p1 on p.patient_id = p1.patient_id and p.visit_id = p1.visit_id\r where p.ghsj >= to_date(c_daylist.day_id,'yyyyMMdd')\r and p.ghsj <  to_date(c_daylist.day_id,'yyyyMMdd')+1\r and p1.in_out_flag='O'\r  and p1.item_class in ('J');\r\r \r ""]",['留观人次\r   ']
127,his_bi,fun_dwd_D00131_d_16611,"
/***
函数名称：体检人次
    作用：统计某天体检人次
  开发人：wy 2020-05-06
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00131  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_outp_work_d
	 where key = 'D00131';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_outp_work_d where st_date = c_daylist.day_id and key = 'D00131';
	
  INSERT into his_bi.dwd_outp_work_d(key,value,dept_code,insert_date,remark,st_date,outp_visit_id,patient_id,visit_id) 
  select distinct
	      'D00131',
				 1,
				 M.ORDERED_BY,
				 now(),
				 '体检人次',
				 TO_CHAR(M.ENTER_DATE, 'yyyymmdd') AS st_date,
				 m.pai_visit_id,
				 m.patient_id,
				 m.visit_id
    FROM his_bi.BMS_BILL_ITEM M
    WHERE M.IN_OUT_FLAG = 'O'
		AND m.item_name LIKE '%体检%' 
		AND M.REFUND_FLAG IS NULL
		AND M.REL_REFUND_ID IS NULL
		AND M.ENTER_DATE >=  to_date(c_daylist.day_id,'yyyyMMdd')
		AND M.ENTER_DATE <   to_date(c_daylist.day_id,'yyyyMMdd')+1;


 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00131'],"[""delete from his_bi.dwd_outp_work_d where st_date = c_daylist.day_id and key = 'D00131';\r \r  INSERT into his_bi.dwd_outp_work_d(key,value,dept_code,insert_date,remark,st_date,outp_visit_id,patient_id,visit_id) \r  select distinct\r       'D00131',\r     1,\r     M.ORDERED_BY,\r     now(),\r     '体检人次',\r     TO_CHAR(M.ENTER_DATE, 'yyyymmdd') AS st_date,\r     m.pai_visit_id,\r     m.patient_id,\r     m.visit_id\r    FROM his_bi.BMS_BILL_ITEM M\r    WHERE M.IN_OUT_FLAG = 'O'\r  AND m.item_name LIKE '%体检%' \r  AND M.REFUND_FLAG IS NULL\r  AND M.REL_REFUND_ID IS NULL\r  AND M.ENTER_DATE >=  to_date(c_daylist.day_id,'yyyyMMdd')\r  AND M.ENTER_DATE <   to_date(c_daylist.day_id,'yyyyMMdd')+1;\r\r\r \r ""]",['体检人次\r   ']
128,his_bi,fun_dwd_D00132_d_16612,"
/***
函数名称：挂号类型人次
    作用：统计某天挂号类型人次
  开发人：wy 2020-05-06
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00132  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_outp_work_d
	 where key = 'D00132';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_outp_work_d where st_date = c_daylist.day_id and key = 'D00132';
	
  INSERT into his_bi.dwd_outp_work_d(key,value,dept_code,insert_date,remark,st_date,outp_visit_id,patient_id,visit_id) 
  select 'D00132',
				 cast (p.outp_type_code as numeric), --2--急、('3','4','13','17') 				           --专家、特需、知名、专家（6岁以下）
         p.dept_code,
         now(),
			  '挂号类型',
			  to_char(p.ghsj,'yyyymmdd') AS st_date,
				p.outp_visit_id,
				p.patient_id,
				p.visit_id
   from his_bi.pts_outp_patient_visit p
   where p.ghsj >= to_date(c_daylist.day_id,'yyyyMMdd')
   and p.ghsj <  to_date(c_daylist.day_id,'yyyyMMdd')+1;


 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00132'],"[""delete from his_bi.dwd_outp_work_d where st_date = c_daylist.day_id and key = 'D00132';   INSERT into his_bi.dwd_outp_work_d(key,value,dept_code,insert_date,remark,st_date,outp_visit_id,patient_id,visit_id)   select 'D00132',     cast (p.outp_type_code as numeric), --2--急、('3','4','13','17')                --专家、特需、知名、专家（6岁以下）         p.dept_code,         now(),     '挂号类型',     to_char(p.ghsj,'yyyymmdd') AS st_date,    p.outp_visit_id,    p.patient_id,    p.visit_id   from his_bi.pts_outp_patient_visit p   where p.ghsj >= to_date(c_daylist.day_id,'yyyyMMdd')   and p.ghsj <  to_date(c_daylist.day_id,'yyyyMMdd')+1;  ""]",['挂号类型人次   ']
129,his_bi,fun_dwd_D00133_d_16613,"
/***
函数名称：已就诊人次
    作用：统计已就诊人次
  开发人：wrsong 2020-05-06
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00133根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
    c_daylist record;
    o_start_date varchar;
    o_end_date varchar;
    i_start_date varchar;
    i_end_date varchar;
    i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
      from his_bi.dwd_outp_work_d
     where key = 'D00133';
     
  if(i_count = 0)
      then 
          i_start_date := '20200101';
            --raise notice '0 i_start_date is: %', i_start_date;
    else if(i_count > 0)
      then
          i_start_date := i_end_date;
            --raise notice '1 i_start_date is: %', i_start_date;
  end if;
    end if;
        
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
    /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
      then 
        o_start_date := i_start_date;
        o_end_date := i_end_date;
            --raise notice '2 o_start_date is: %', o_start_date;
            --raise notice '2 o_end_date is: %', o_end_date;
    else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
    /*PG function 如果参入任何参数，那么以实际入参为准*/
      then 
          o_start_date := v_start_date;
        o_end_date := v_end_date;
            --raise notice '3 o_start_date is: %', o_start_date;
            --raise notice '3 o_end_date is: %', o_end_date;
    end if;
    end if;
    
    for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
    loop 
    
    --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
    
    delete from his_bi.dwd_outp_work_d where st_date = c_daylist.day_id and key = 'D00133';
    
  INSERT into his_bi.dwd_outp_work_d(st_date,dept_code,key,value,insert_date,remark,outp_visit_id,patient_id,visit_id) 
  select to_char(p.ghsj,'yyyymmdd') AS st_date,
         p.dept_code,
				 'D00133',
         1,
         now(),
         '已就诊人次',
         p.outp_visit_id,
         p.patient_id,
         p.visit_id
   from his_bi.pts_outp_patient_visit p
  where p.ghsj >= to_date(c_daylist.day_id,'yyyyMMdd')
    and p.ghsj <  to_date(c_daylist.day_id,'yyyyMMdd')+1
    and p.registry_flag = '1'; --已就诊
     end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00133'],"[""delete from his_bi.dwd_outp_work_d where st_date = c_daylist.day_id and key = 'D00133';      INSERT into his_bi.dwd_outp_work_d(st_date,dept_code,key,value,insert_date,remark,outp_visit_id,patient_id,visit_id)   select to_char(p.ghsj,'yyyymmdd') AS st_date,         p.dept_code,     'D00133',         1,         now(),         '已就诊人次',         p.outp_visit_id,         p.patient_id,         p.visit_id   from his_bi.pts_outp_patient_visit p  where p.ghsj >= to_date(c_daylist.day_id,'yyyyMMdd')    and p.ghsj <  to_date(c_daylist.day_id,'yyyyMMdd')+1    and p.registry_flag = '1'; --已就诊    ""]",['已就诊人次   ']
130,his_bi,fun_dwd_D00134_d_16614,"
/***
函数名称：未就诊人次
    作用：统计未就诊人次
  开发人：wrsong 2020-05-06
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00134根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
    c_daylist record;
    o_start_date varchar;
    o_end_date varchar;
    i_start_date varchar;
    i_end_date varchar;
    i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
      from his_bi.dwd_outp_work_d
     where key = 'D00134';
     
  if(i_count = 0)
      then 
          i_start_date := '20200101';
            --raise notice '0 i_start_date is: %', i_start_date;
    else if(i_count > 0)
      then
          i_start_date := i_end_date;
            --raise notice '1 i_start_date is: %', i_start_date;
  end if;
    end if;
        
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
    /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
      then 
        o_start_date := i_start_date;
        o_end_date := i_end_date;
            --raise notice '2 o_start_date is: %', o_start_date;
            --raise notice '2 o_end_date is: %', o_end_date;
    else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
    /*PG function 如果参入任何参数，那么以实际入参为准*/
      then 
          o_start_date := v_start_date;
        o_end_date := v_end_date;
            --raise notice '3 o_start_date is: %', o_start_date;
            --raise notice '3 o_end_date is: %', o_end_date;
    end if;
    end if;
    
    for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
    loop 
    
    --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
    
    delete from his_bi.dwd_outp_work_d where st_date = c_daylist.day_id and key = 'D00134';
    
  INSERT into his_bi.dwd_outp_work_d(key,value,dept_code,insert_date,remark,st_date,outp_visit_id,patient_id,visit_id) 
  select 'D00134',
         1,
         p.dept_code,
         now(),
         '未就诊人次',
         to_char(p.ghsj,'yyyymmdd') AS st_date,
         p.outp_visit_id,
         p.patient_id,
         p.visit_id
   from his_bi.pts_outp_patient_visit p
  where p.ghsj >= to_date(c_daylist.day_id,'yyyyMMdd')
    and p.ghsj <  to_date(c_daylist.day_id,'yyyyMMdd')+1
    and p.registry_flag = '0'; --未就诊
     end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00134'],"[""delete from his_bi.dwd_outp_work_d where st_date = c_daylist.day_id and key = 'D00134';      INSERT into his_bi.dwd_outp_work_d(key,value,dept_code,insert_date,remark,st_date,outp_visit_id,patient_id,visit_id)   select 'D00134',         1,         p.dept_code,         now(),         '未就诊人次',         to_char(p.ghsj,'yyyymmdd') AS st_date,         p.outp_visit_id,         p.patient_id,         p.visit_id   from his_bi.pts_outp_patient_visit p  where p.ghsj >= to_date(c_daylist.day_id,'yyyyMMdd')    and p.ghsj <  to_date(c_daylist.day_id,'yyyyMMdd')+1    and p.registry_flag = '0'; --未就诊    ""]",['未就诊人次   ']
131,his_bi,fun_dwd_D00135_d_16615,"
/***
函数名称：复诊人次
    作用：统计复诊人次
  开发人：wy 2020-05-07
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00135根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
    c_daylist record;
    o_start_date varchar;
    o_end_date varchar;
    i_start_date varchar;
    i_end_date varchar;
    i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
      from his_bi.dwd_outp_work_d
     where key = 'D00135';
     
  if(i_count = 0)
      then 
          i_start_date := '20200101';
            --raise notice '0 i_start_date is: %', i_start_date;
    else if(i_count > 0)
      then
          i_start_date := i_end_date;
            --raise notice '1 i_start_date is: %', i_start_date;
  end if;
    end if;
        
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
    /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
      then 
        o_start_date := i_start_date;
        o_end_date := i_end_date;
            --raise notice '2 o_start_date is: %', o_start_date;
            --raise notice '2 o_end_date is: %', o_end_date;
    else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
    /*PG function 如果参入任何参数，那么以实际入参为准*/
      then 
          o_start_date := v_start_date;
        o_end_date := v_end_date;
            --raise notice '3 o_start_date is: %', o_start_date;
            --raise notice '3 o_end_date is: %', o_end_date;
    end if;
    end if;
    
    for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
    loop 
    
    --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
    
    delete from his_bi.dwd_outp_work_d where st_date = c_daylist.day_id and key = 'D00135';
    
  INSERT into his_bi.dwd_outp_work_d(key,value,dept_code,insert_date,remark,st_date,outp_visit_id,patient_id,visit_id) 
  select 
         'D00135',
         1,
         p.dept_code,
         now(),
         '复诊人次',
         to_char(p.ghsj,'yyyymmdd') AS st_date,
         p.outp_visit_id,
         p.patient_id,
         p.visit_id
   from his_bi.pts_outp_patient_visit p
   where p.ghsj >= to_date(c_daylist.day_id,'yyyyMMdd')
   and p.ghsj <  to_date(c_daylist.day_id,'yyyyMMdd')+1
   and p.registry_flag in ('0','1')
	 and p.return_visit = '1';
		
    end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00135'],"[""delete from his_bi.dwd_outp_work_d where st_date = c_daylist.day_id and key = 'D00135';      INSERT into his_bi.dwd_outp_work_d(key,value,dept_code,insert_date,remark,st_date,outp_visit_id,patient_id,visit_id)   select          'D00135',         1,         p.dept_code,         now(),         '复诊人次',         to_char(p.ghsj,'yyyymmdd') AS st_date,         p.outp_visit_id,         p.patient_id,         p.visit_id   from his_bi.pts_outp_patient_visit p   where p.ghsj >= to_date(c_daylist.day_id,'yyyyMMdd')   and p.ghsj <  to_date(c_daylist.day_id,'yyyyMMdd')+1   and p.registry_flag in ('0','1')  and p.return_visit = '1';     ""]",['复诊人次   ']
132,his_bi,fun_dwd_D00136_d_16616,"
/***
函数名称：就诊到缴费
    作用：统计就诊到缴费
  开发人：wy 2020-05-08
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00136根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
    c_daylist record;
    o_start_date varchar;
    o_end_date varchar;
    i_start_date varchar;
    i_end_date varchar;
    i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
      from his_bi.dwd_outp_work_d
     where key = 'D00136';
     
  if(i_count = 0)
      then 
          i_start_date := '20200101';
            --raise notice '0 i_start_date is: %', i_start_date;
    else if(i_count > 0)
      then
          i_start_date := i_end_date;
            --raise notice '1 i_start_date is: %', i_start_date;
  end if;
    end if;
        
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
    /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
      then 
        o_start_date := i_start_date;
        o_end_date := i_end_date;
            --raise notice '2 o_start_date is: %', o_start_date;
            --raise notice '2 o_end_date is: %', o_end_date;
    else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
    /*PG function 如果参入任何参数，那么以实际入参为准*/
      then 
          o_start_date := v_start_date;
        o_end_date := v_end_date;
            --raise notice '3 o_start_date is: %', o_start_date;
            --raise notice '3 o_end_date is: %', o_end_date;
    end if;
    end if;
    
    for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
    loop 
    
    --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
    
    delete from his_bi.dwd_outp_work_d where st_date = c_daylist.day_id and key = 'D00136';
    
  INSERT into his_bi.dwd_outp_work_d(key,value,dept_code,insert_date,remark,st_date,outp_visit_id,patient_id,visit_id) 
  select 
         'D00136',
				 sum(round(abs(date_part('epoch', k.rek_date - opv.visit_begin_date))::NUMERIC / 60,4)),--就诊-缴费时间
         opv.dept_code,
         now(),
         '就诊到缴费',
         to_char(opv.visit_begin_date,'yyyymmdd') AS st_date,
         opv.outp_visit_id,
         opv.patient_id,
         opv.visit_id
	from his_bi.pts_outp_patient_visit opv
	left join his_bi.bms_rek k on k.patient_id = opv.patient_id and k.visit_id = opv.visit_id and k.in_out_flag = 'O' and k.rek_type = '0' and k.settle_type = '0'
	where opv.registry_flag = '1'
	and opv.outp_type_code not in ('2','11') --排除便民，急诊
	and opv.sign_in_date is not null
	and opv.visit_begin_date >= to_date(c_daylist.day_id,'yyyyMMdd')
	and opv.visit_begin_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
	group by 
				 opv.dept_code,
         to_char(opv.visit_begin_date,'yyyymmdd'),
         opv.outp_visit_id,
         opv.patient_id,
         opv.visit_id;
	
   end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00136'],"[""delete from his_bi.dwd_outp_work_d where st_date = c_daylist.day_id and key = 'D00136';      INSERT into his_bi.dwd_outp_work_d(key,value,dept_code,insert_date,remark,st_date,outp_visit_id,patient_id,visit_id)   select          'D00136',     sum(round(abs(date_part('epoch', k.rek_date - opv.visit_begin_date))::NUMERIC / 60,4)),--就诊-缴费时间         opv.dept_code,         now(),         '就诊到缴费',         to_char(opv.visit_begin_date,'yyyymmdd') AS st_date,         opv.outp_visit_id,         opv.patient_id,         opv.visit_id from his_bi.pts_outp_patient_visit opv left join his_bi.bms_rek k on k.patient_id = opv.patient_id and k.visit_id = opv.visit_id and k.in_out_flag = 'O' and k.rek_type = '0' and k.settle_type = '0' where opv.registry_flag = '1' and opv.outp_type_code not in ('2','11') --排除便民，急诊 and opv.sign_in_date is not null and opv.visit_begin_date >= to_date(c_daylist.day_id,'yyyyMMdd') and opv.visit_begin_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1 group by      opv.dept_code,         to_char(opv.visit_begin_date,'yyyymmdd'),         opv.outp_visit_id,         opv.patient_id,         opv.visit_id;   ""]",['就诊到缴费   ']
133,his_bi,fun_dwd_D00137_d_16617,"
/***
函数名称：签到到缴费
    作用：统计签到到缴费
  开发人：wy 2020-05-07
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00137根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
    c_daylist record;
    o_start_date varchar;
    o_end_date varchar;
    i_start_date varchar;
    i_end_date varchar;
    i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
      from his_bi.dwd_outp_work_d
     where key = 'D00137';
     
  if(i_count = 0)
      then 
          i_start_date := '20200101';
            --raise notice '0 i_start_date is: %', i_start_date;
    else if(i_count > 0)
      then
          i_start_date := i_end_date;
            --raise notice '1 i_start_date is: %', i_start_date;
  end if;
    end if;
        
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
    /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
      then 
        o_start_date := i_start_date;
        o_end_date := i_end_date;
            --raise notice '2 o_start_date is: %', o_start_date;
            --raise notice '2 o_end_date is: %', o_end_date;
    else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
    /*PG function 如果参入任何参数，那么以实际入参为准*/
      then 
          o_start_date := v_start_date;
        o_end_date := v_end_date;
            --raise notice '3 o_start_date is: %', o_start_date;
            --raise notice '3 o_end_date is: %', o_end_date;
    end if;
    end if;
    
    for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
    loop 
    
    --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
    
    delete from his_bi.dwd_outp_work_d where st_date = c_daylist.day_id and key = 'D00137';
    
  INSERT into his_bi.dwd_outp_work_d(key,value,dept_code,insert_date,remark,st_date,outp_visit_id,patient_id,visit_id) 
  select 
         'D00137',
				 sum(round(abs(date_part('epoch', k.rek_date - opv.sign_in_date))::NUMERIC / 60,4)),--签到-缴费时间	
         opv.dept_code,
         now(),
         '签到到缴费',
         to_char(opv.visit_begin_date,'yyyymmdd') AS st_date,
         opv.outp_visit_id,
         opv.patient_id,
         opv.visit_id
	from his_bi.pts_outp_patient_visit opv
	left join his_bi.bms_rek k on k.patient_id = opv.patient_id and k.visit_id = opv.visit_id and k.in_out_flag = 'O' and k.rek_type = '0' and k.settle_type = '0'
	where opv.registry_flag = '1'
	and opv.outp_type_code not in ('2','11') --排除便民，急诊
	and opv.sign_in_date is not null
	and opv.visit_begin_date >= to_date(c_daylist.day_id,'yyyyMMdd')
	and opv.visit_begin_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
	group by 
				 opv.dept_code,
         to_char(opv.visit_begin_date,'yyyymmdd'),
         opv.outp_visit_id,
         opv.patient_id,
         opv.visit_id;
	
   end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00137'],"[""delete from his_bi.dwd_outp_work_d where st_date = c_daylist.day_id and key = 'D00137';      INSERT into his_bi.dwd_outp_work_d(key,value,dept_code,insert_date,remark,st_date,outp_visit_id,patient_id,visit_id)   select          'D00137',     sum(round(abs(date_part('epoch', k.rek_date - opv.sign_in_date))::NUMERIC / 60,4)),--签到-缴费时间          opv.dept_code,         now(),         '签到到缴费',         to_char(opv.visit_begin_date,'yyyymmdd') AS st_date,         opv.outp_visit_id,         opv.patient_id,         opv.visit_id from his_bi.pts_outp_patient_visit opv left join his_bi.bms_rek k on k.patient_id = opv.patient_id and k.visit_id = opv.visit_id and k.in_out_flag = 'O' and k.rek_type = '0' and k.settle_type = '0' where opv.registry_flag = '1' and opv.outp_type_code not in ('2','11') --排除便民，急诊 and opv.sign_in_date is not null and opv.visit_begin_date >= to_date(c_daylist.day_id,'yyyyMMdd') and opv.visit_begin_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1 group by      opv.dept_code,         to_char(opv.visit_begin_date,'yyyymmdd'),         opv.outp_visit_id,         opv.patient_id,         opv.visit_id;   ""]",['签到到缴费   ']
134,his_bi,fun_dwd_D00138_d_16618,"
/***
函数名称：挂号途径
    作用：统计挂号途径(1-自助机、2-APP、3-微信、4-支付宝、5-人工窗口、6-其他)
  开发人：wy 2020-05-06
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00138 根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
    c_daylist record;
    o_start_date varchar;
    o_end_date varchar;
    i_start_date varchar;
    i_end_date varchar;
    i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
      from his_bi.dwd_outp_work_d
     where key = 'D00138';
     
  if(i_count = 0)
      then 
          i_start_date := '20200101';
            --raise notice '0 i_start_date is: %', i_start_date;
    else if(i_count > 0)
      then
          i_start_date := i_end_date;
            --raise notice '1 i_start_date is: %', i_start_date;
  end if;
    end if;
        
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
    /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
      then 
        o_start_date := i_start_date;
        o_end_date := i_end_date;
            --raise notice '2 o_start_date is: %', o_start_date;
            --raise notice '2 o_end_date is: %', o_end_date;
    else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
    /*PG function 如果参入任何参数，那么以实际入参为准*/
      then 
          o_start_date := v_start_date;
        o_end_date := v_end_date;
            --raise notice '3 o_start_date is: %', o_start_date;
            --raise notice '3 o_end_date is: %', o_end_date;
    end if;
    end if;
    
    for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
    loop 
    
    --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
    
    delete from his_bi.dwd_outp_work_d where st_date = c_daylist.day_id and key = 'D00138';
    
  INSERT into his_bi.dwd_outp_work_d(key,value,dept_code,insert_date,remark,st_date,outp_visit_id,patient_id,visit_id) 
  select 
         'D00138',
          COALESCE(case 
					when us.people_class = '7' and p.operator not like '%APP%' THEN 1 
					WHEN PR.OPERATOR LIKE '%APP%' OR PR.OPERATOR LIKE '%app%' THEN 2
					WHEN PR.OPERATOR LIKE '%微信%' THEN 3 
					WHEN PR.OPERATOR LIKE '%支付宝%' THEN 4
					WHEN P.Registry_Resource = 1 then 5
					ELSE 6 END,6),--1-自助机、2-APP、3-微信、4-支付宝、5-人工窗口、6-其他
					 p.dept_code,
					 now(),
					 '挂号途径',
					 to_char(p.registering_time,'yyyymmdd') AS st_date,
					 p.outp_visit_id,
					 p.patient_id,
					 p.visit_id
   from his_bi.pts_outp_patient_visit p
	 left join his_bi.uum_uum_user us on p.operator = us.user_name
	 left join his_bi.pts_outp_patient_reserve pr on p.outp_visit_id = pr.outp_visit_id and pr.reserve_status<>0
   where p.registering_time >= to_date(c_daylist.day_id,'yyyyMMdd')
   and p.registering_time <  to_date(c_daylist.day_id,'yyyyMMdd')+1
	 and p.registry_flag in ('0','1');
   end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00138'],"[""delete from his_bi.dwd_outp_work_d where st_date = c_daylist.day_id and key = 'D00138';      INSERT into his_bi.dwd_outp_work_d(key,value,dept_code,insert_date,remark,st_date,outp_visit_id,patient_id,visit_id)   select          'D00138',          COALESCE(case      when us.people_class = '7' and p.operator not like '%APP%' THEN 1      WHEN PR.OPERATOR LIKE '%APP%' OR PR.OPERATOR LIKE '%app%' THEN 2     WHEN PR.OPERATOR LIKE '%微信%' THEN 3      WHEN PR.OPERATOR LIKE '%支付宝%' THEN 4     WHEN P.Registry_Resource = 1 then 5     ELSE 6 END,6),--1-自助机、2-APP、3-微信、4-支付宝、5-人工窗口、6-其他      p.dept_code,      now(),      '挂号途径',      to_char(p.registering_time,'yyyymmdd') AS st_date,      p.outp_visit_id,      p.patient_id,      p.visit_id   from his_bi.pts_outp_patient_visit p  left join his_bi.uum_uum_user us on p.operator = us.user_name  left join his_bi.pts_outp_patient_reserve pr on p.outp_visit_id = pr.outp_visit_id and pr.reserve_status<>0   where p.registering_time >= to_date(c_daylist.day_id,'yyyyMMdd')   and p.registering_time <  to_date(c_daylist.day_id,'yyyyMMdd')+1  and p.registry_flag in ('0','1');  ""]",['挂号途径   ']
135,his_bi,fun_dwd_D00139_d_16619,"
/***
函数名称：预约挂号数
    作用：统计预约挂号数
  开发人：wy 2020-05-07
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00139 根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
    c_daylist record;
    o_start_date varchar;
    o_end_date varchar;
    i_start_date varchar;
    i_end_date varchar;
    i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
      from his_bi.dwd_outp_work_d
     where key = 'D00139';
     
  if(i_count = 0)
      then 
          i_start_date := '20200101';
            --raise notice '0 i_start_date is: %', i_start_date;
    else if(i_count > 0)
      then
          i_start_date := i_end_date;
            --raise notice '1 i_start_date is: %', i_start_date;
  end if;
    end if;
        
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
    /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
      then 
        o_start_date := i_start_date;
        o_end_date := i_end_date;
            --raise notice '2 o_start_date is: %', o_start_date;
            --raise notice '2 o_end_date is: %', o_end_date;
    else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
    /*PG function 如果参入任何参数，那么以实际入参为准*/
      then 
          o_start_date := v_start_date;
        o_end_date := v_end_date;
            --raise notice '3 o_start_date is: %', o_start_date;
            --raise notice '3 o_end_date is: %', o_end_date;
    end if;
    end if;
    
    for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
    loop 
    
    --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
    
    delete from his_bi.dwd_outp_work_d where st_date = c_daylist.day_id and key = 'D00139';
    
  INSERT into his_bi.dwd_outp_work_d(key,value,dept_code,insert_date,remark,st_date,outp_visit_id,patient_id,visit_id) 
  select 
         'D00139',
         1,
				 a.dept_code,
				 now(),
				 '预约挂号',
				 to_char(a.outp_date,'yyyymmdd') AS st_date,
				 a.outp_visit_id,
				 a.patient_id,
				 a.visit_id
	from his_bi.pts_outp_patient_visit a
	inner join his_bi.pts_outp_patient_reserve b on a.outp_visit_id=b.outp_visit_id
	where  b.business_type in ('3','5') and b.reserve_status !='0' 
	and a.registry_flag in (0,1)
	and a.outp_date >= to_date(c_daylist.day_id,'yyyyMMdd')
	AND a.outp_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1;
   end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00139'],"[""delete from his_bi.dwd_outp_work_d where st_date = c_daylist.day_id and key = 'D00139';      INSERT into his_bi.dwd_outp_work_d(key,value,dept_code,insert_date,remark,st_date,outp_visit_id,patient_id,visit_id)   select          'D00139',         1,     a.dept_code,     now(),     '预约挂号',     to_char(a.outp_date,'yyyymmdd') AS st_date,     a.outp_visit_id,     a.patient_id,     a.visit_id from his_bi.pts_outp_patient_visit a inner join his_bi.pts_outp_patient_reserve b on a.outp_visit_id=b.outp_visit_id where  b.business_type in ('3','5') and b.reserve_status !='0'  and a.registry_flag in (0,1) and a.outp_date >= to_date(c_daylist.day_id,'yyyyMMdd') AND a.outp_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1;  ""]",['预约挂号数   ']
136,his_bi,fun_dwd_D00140_d_16620,"
/***
函数名称：预约检查
    作用：统计预约检查
  开发人：wy 2020-05-07
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00140 根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
    c_daylist record;
    o_start_date varchar;
    o_end_date varchar;
    i_start_date varchar;
    i_end_date varchar;
    i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
      from his_bi.dwd_outp_work_d
     where key = 'D00140';
     
  if(i_count = 0)
      then 
          i_start_date := '20200101';
            --raise notice '0 i_start_date is: %', i_start_date;
    else if(i_count > 0)
      then
          i_start_date := i_end_date;
            --raise notice '1 i_start_date is: %', i_start_date;
  end if;
    end if;
        
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
    /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
      then 
        o_start_date := i_start_date;
        o_end_date := i_end_date;
            --raise notice '2 o_start_date is: %', o_start_date;
            --raise notice '2 o_end_date is: %', o_end_date;
    else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
    /*PG function 如果参入任何参数，那么以实际入参为准*/
      then 
          o_start_date := v_start_date;
        o_end_date := v_end_date;
            --raise notice '3 o_start_date is: %', o_start_date;
            --raise notice '3 o_end_date is: %', o_end_date;
    end if;
    end if;
    
    for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
    loop 
    
    --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
    
    delete from his_bi.dwd_outp_work_d where st_date = c_daylist.day_id and key = 'D00140';
    
  INSERT into his_bi.dwd_outp_work_d(key,value,dept_code,insert_date,remark,st_date,outp_visit_id,patient_id,visit_id) 
  select 
         'D00140',
         1,
				 a.dept_code,
				 now(),
				 '预约检查',
				 to_char(a.outp_date,'yyyymmdd') AS st_date,
				 a.outp_visit_id,
				 a.patient_id,
				 a.visit_id
	from his_bi.pts_outp_patient_visit a
	--inner join his_bi.pts_outp_patient_reserve b on a.outp_visit_id=b.outp_visit_id
	inner join
	(
			 select distinct ep.patient_id,ep.visit_id
			 from his_bi.emr_cpoe_app ep
			 where ep.apply_type = 'D'
			 and coalesce(ep.is_valid,'1') = '1'
			 and ep.apply_date >= to_date(c_daylist.day_id,'yyyyMMdd')
			 and ep.apply_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
	)ep on a.patient_id = ep.patient_id and a.visit_id = ep.visit_id
	where 1=1 
	and a.registry_flag in (0,1)
	and a.outp_date >= to_date(c_daylist.day_id,'yyyyMMdd')
	and a.outp_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1;
   end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00140'],"[""delete from his_bi.dwd_outp_work_d where st_date = c_daylist.day_id and key = 'D00140';      INSERT into his_bi.dwd_outp_work_d(key,value,dept_code,insert_date,remark,st_date,outp_visit_id,patient_id,visit_id)   select          'D00140',         1,     a.dept_code,     now(),     '预约检查',     to_char(a.outp_date,'yyyymmdd') AS st_date,     a.outp_visit_id,     a.patient_id,     a.visit_id from his_bi.pts_outp_patient_visit a --inner join his_bi.pts_outp_patient_reserve b on a.outp_visit_id=b.outp_visit_id inner join (    select distinct ep.patient_id,ep.visit_id    from his_bi.emr_cpoe_app ep    where ep.apply_type = 'D'    and coalesce(ep.is_valid,'1') = '1'    and ep.apply_date >= to_date(c_daylist.day_id,'yyyyMMdd')    and ep.apply_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1 )ep on a.patient_id = ep.patient_id and a.visit_id = ep.visit_id where 1=1  and a.registry_flag in (0,1) and a.outp_date >= to_date(c_daylist.day_id,'yyyyMMdd') and a.outp_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1;  ""]",['预约检查   ']
137,his_bi,fun_dwd_D00141_d_16621,"
/***
函数名称：门诊抗菌药物—抗菌药物累计DDD数统计
    作用：统计某天门诊患者中使用了抗菌药物累计DDD数
  开发人：wy 2020-05-09
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00141  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
  c_daylist record;
  o_start_date varchar;
  o_end_date varchar;
  i_start_date varchar;
  i_end_date varchar;
  i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
    from his_bi.dwd_outp_quantity_d
   where key = 'D00141';
   
  if(i_count = 0)
    then 
      i_start_date := '20200101';
      --raise notice '0 i_start_date is: %', i_start_date;
  else if(i_count > 0)
    then
      i_start_date := i_end_date;
      --raise notice '1 i_start_date is: %', i_start_date;
  end if;
  end if;
    
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
  /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取对应key 最大日期加一天 对应逻辑line 12 */
    then 
      o_start_date := i_start_date;
      o_end_date := i_end_date;
      --raise notice '2 o_start_date is: %', o_start_date;
      --raise notice '2 o_end_date is: %', o_end_date;
  else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
  /*PG function 如果参入任何参数，那么以实际入参为准*/
    then 
      o_start_date := v_start_date;
      o_end_date := v_end_date;
      --raise notice '3 o_start_date is: %', o_start_date;
      --raise notice '3 o_end_date is: %', o_end_date;
  end if;
  end if;
  
  for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
  loop 
  
  --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
  
  delete from his_bi.dwd_outp_quantity_d where st_date = c_daylist.day_id and key = 'D00141';
  
  INSERT into his_bi.dwd_outp_quantity_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,
                                            remark,st_date) 
  select 'D00141',
         sum(hp.ddds) as ddds,
         hp.patient_id,
         hp.visit_id,
         hp.patient_visit_id,
         now(),
         '门诊抗菌药物累计DDD数', 
         to_char(hp.exec_date,'yyyymmdd')
    from his_bi.v_ddds_antictrl hp
		where hp.in_out_flag = 'O'
		  and hp.exec_date >= to_date(c_daylist.day_id,'yyyymmdd')
			and hp.exec_date <  to_date(c_daylist.day_id,'yyyymmdd') + 1
    group by hp.patient_id,
         hp.visit_id,
         hp.patient_visit_id,
         to_char(hp.exec_date,'yyyymmdd');
    
   end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00141'],"[""delete from his_bi.dwd_outp_quantity_d where st_date = c_daylist.day_id and key = 'D00141';    INSERT into his_bi.dwd_outp_quantity_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,                                            remark,st_date)   select 'D00141',         sum(hp.ddds) as ddds,         hp.patient_id,         hp.visit_id,         hp.patient_visit_id,         now(),         '门诊抗菌药物累计DDD数',          to_char(hp.exec_date,'yyyymmdd')    from his_bi.v_ddds_antictrl hp  where hp.in_out_flag = 'O'    and hp.exec_date >= to_date(c_daylist.day_id,'yyyymmdd')   and hp.exec_date <  to_date(c_daylist.day_id,'yyyymmdd') + 1    group by hp.patient_id,         hp.visit_id,         hp.patient_visit_id,         to_char(hp.exec_date,'yyyymmdd');      ""]",['门诊抗菌药物—抗菌药物累计DDD数统计   ']
138,his_bi,fun_dwd_D00142_d_16622,"
/***
函数名称：门诊抗菌药物—非限制级抗菌药物累计DDD数统计
    作用：统计某天门诊患者中使用了非限制级抗菌药物累计DDD数
  开发人：wy 2020-05-09
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00142  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
  c_daylist record;
  o_start_date varchar;
  o_end_date varchar;
  i_start_date varchar;
  i_end_date varchar;
  i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
    from his_bi.dwd_outp_quantity_d
   where key = 'D00142';
   
  if(i_count = 0)
    then 
      i_start_date := '20200101';
      --raise notice '0 i_start_date is: %', i_start_date;
  else if(i_count > 0)
    then
      i_start_date := i_end_date;
      --raise notice '1 i_start_date is: %', i_start_date;
  end if;
  end if;
    
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
  /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取对应key 最大日期加一天 对应逻辑line 12 */
    then 
      o_start_date := i_start_date;
      o_end_date := i_end_date;
      --raise notice '2 o_start_date is: %', o_start_date;
      --raise notice '2 o_end_date is: %', o_end_date;
  else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
  /*PG function 如果参入任何参数，那么以实际入参为准*/
    then 
      o_start_date := v_start_date;
      o_end_date := v_end_date;
      --raise notice '3 o_start_date is: %', o_start_date;
      --raise notice '3 o_end_date is: %', o_end_date;
  end if;
  end if;
  
  for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
  loop 
  
  --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
  
  delete from his_bi.dwd_outp_quantity_d where st_date = c_daylist.day_id and key = 'D00142';
  
  INSERT into his_bi.dwd_outp_quantity_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,
                                            remark,st_date) 
  select 'D00142',
         sum(hp.ddds) as ddds,
         hp.patient_id,
         hp.visit_id,
         hp.patient_visit_id,
         now(),
         '门诊非限制级抗菌药物累计DDD数', 
         to_char(hp.exec_date,'yyyymmdd')
    from his_bi.v_ddds_antictrl hp
		where hp.in_out_flag = 'O'
			and hp.cont_value = '1'
		  and hp.exec_date >= to_date(c_daylist.day_id,'yyyymmdd')
			and hp.exec_date <  to_date(c_daylist.day_id,'yyyymmdd') + 1
    group by hp.patient_id,
         hp.visit_id,
         hp.patient_visit_id,
         to_char(hp.exec_date,'yyyymmdd');
				 
    
   end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00142'],"[""delete from his_bi.dwd_outp_quantity_d where st_date = c_daylist.day_id and key = 'D00142';    INSERT into his_bi.dwd_outp_quantity_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,                                            remark,st_date)   select 'D00142',         sum(hp.ddds) as ddds,         hp.patient_id,         hp.visit_id,         hp.patient_visit_id,         now(),         '门诊非限制级抗菌药物累计DDD数',          to_char(hp.exec_date,'yyyymmdd')    from his_bi.v_ddds_antictrl hp  where hp.in_out_flag = 'O'   and hp.cont_value = '1'    and hp.exec_date >= to_date(c_daylist.day_id,'yyyymmdd')   and hp.exec_date <  to_date(c_daylist.day_id,'yyyymmdd') + 1    group by hp.patient_id,         hp.visit_id,         hp.patient_visit_id,         to_char(hp.exec_date,'yyyymmdd');           ""]",['门诊抗菌药物—非限制级抗菌药物累计DDD数统计   ']
139,his_bi,fun_dwd_D00143_d_16623,"
/***
函数名称：门诊抗菌药物—限制级抗菌药物累计DDD数统计
    作用：统计某天门诊患者中使用了限制级抗菌药物累计DDD数
  开发人：wy 2020-05-09
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00143  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
  c_daylist record;
  o_start_date varchar;
  o_end_date varchar;
  i_start_date varchar;
  i_end_date varchar;
  i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
    from his_bi.dwd_outp_quantity_d
   where key = 'D00143';
   
  if(i_count = 0)
    then 
      i_start_date := '20200101';
      --raise notice '0 i_start_date is: %', i_start_date;
  else if(i_count > 0)
    then
      i_start_date := i_end_date;
      --raise notice '1 i_start_date is: %', i_start_date;
  end if;
  end if;
    
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
  /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取对应key 最大日期加一天 对应逻辑line 12 */
    then 
      o_start_date := i_start_date;
      o_end_date := i_end_date;
      --raise notice '2 o_start_date is: %', o_start_date;
      --raise notice '2 o_end_date is: %', o_end_date;
  else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
  /*PG function 如果参入任何参数，那么以实际入参为准*/
    then 
      o_start_date := v_start_date;
      o_end_date := v_end_date;
      --raise notice '3 o_start_date is: %', o_start_date;
      --raise notice '3 o_end_date is: %', o_end_date;
  end if;
  end if;
  
  for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
  loop 
  
  --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
  
  delete from his_bi.dwd_outp_quantity_d where st_date = c_daylist.day_id and key = 'D00143';
  
  INSERT into his_bi.dwd_outp_quantity_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,
                                            remark,st_date) 
  select 'D00143',
         sum(hp.ddds) as ddds,
         hp.patient_id,
         hp.visit_id,
         hp.patient_visit_id,
         now(),
         '门诊非限制级抗菌药物累计DDD数', 
         to_char(hp.exec_date,'yyyymmdd')
    from his_bi.v_ddds_antictrl hp
		where hp.in_out_flag = 'O'
			and hp.cont_value = '2'
		  and hp.exec_date >= to_date(c_daylist.day_id,'yyyymmdd')
			and hp.exec_date <  to_date(c_daylist.day_id,'yyyymmdd') + 1
    group by hp.patient_id,
         hp.visit_id,
         hp.patient_visit_id,
         to_char(hp.exec_date,'yyyymmdd');
				 
    
   end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00143'],"[""delete from his_bi.dwd_outp_quantity_d where st_date = c_daylist.day_id and key = 'D00143';    INSERT into his_bi.dwd_outp_quantity_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,                                            remark,st_date)   select 'D00143',         sum(hp.ddds) as ddds,         hp.patient_id,         hp.visit_id,         hp.patient_visit_id,         now(),         '门诊非限制级抗菌药物累计DDD数',          to_char(hp.exec_date,'yyyymmdd')    from his_bi.v_ddds_antictrl hp  where hp.in_out_flag = 'O'   and hp.cont_value = '2'    and hp.exec_date >= to_date(c_daylist.day_id,'yyyymmdd')   and hp.exec_date <  to_date(c_daylist.day_id,'yyyymmdd') + 1    group by hp.patient_id,         hp.visit_id,         hp.patient_visit_id,         to_char(hp.exec_date,'yyyymmdd');           ""]",['门诊抗菌药物—限制级抗菌药物累计DDD数统计   ']
140,his_bi,fun_dwd_D00144_d_16624,"
/***
函数名称：门诊抗菌药物—特殊级抗菌药物累计DDD数统计
    作用：统计某天门诊患者中使用了特殊级抗菌药物累计DDD数
  开发人：wy 2020-05-09
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00144  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
  c_daylist record;
  o_start_date varchar;
  o_end_date varchar;
  i_start_date varchar;
  i_end_date varchar;
  i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
    from his_bi.dwd_outp_quantity_d
   where key = 'D00144';
   
  if(i_count = 0)
    then 
      i_start_date := '20200101';
      --raise notice '0 i_start_date is: %', i_start_date;
  else if(i_count > 0)
    then
      i_start_date := i_end_date;
      --raise notice '1 i_start_date is: %', i_start_date;
  end if;
  end if;
    
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
  /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取对应key 最大日期加一天 对应逻辑line 12 */
    then 
      o_start_date := i_start_date;
      o_end_date := i_end_date;
      --raise notice '2 o_start_date is: %', o_start_date;
      --raise notice '2 o_end_date is: %', o_end_date;
  else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
  /*PG function 如果参入任何参数，那么以实际入参为准*/
    then 
      o_start_date := v_start_date;
      o_end_date := v_end_date;
      --raise notice '3 o_start_date is: %', o_start_date;
      --raise notice '3 o_end_date is: %', o_end_date;
  end if;
  end if;
  
  for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
  loop 
  
  --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
  
  delete from his_bi.dwd_outp_quantity_d where st_date = c_daylist.day_id and key = 'D00144';
  
  INSERT into his_bi.dwd_outp_quantity_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,
                                            remark,st_date) 
  select 'D00144',
         sum(hp.ddds) as ddds,
         hp.patient_id,
         hp.visit_id,
         hp.patient_visit_id,
         now(),
         '门诊特殊级抗菌药物累计DDD数', 
         to_char(hp.exec_date,'yyyymmdd')
    from his_bi.v_ddds_antictrl hp
		where hp.in_out_flag = 'O'
			and hp.cont_value = '3'
		  and hp.exec_date >= to_date(c_daylist.day_id,'yyyymmdd')
			and hp.exec_date <  to_date(c_daylist.day_id,'yyyymmdd') + 1
    group by hp.patient_id,
         hp.visit_id,
         hp.patient_visit_id,
         to_char(hp.exec_date,'yyyymmdd');
				 
    
   end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00144'],"[""delete from his_bi.dwd_outp_quantity_d where st_date = c_daylist.day_id and key = 'D00144';    INSERT into his_bi.dwd_outp_quantity_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,                                            remark,st_date)   select 'D00144',         sum(hp.ddds) as ddds,         hp.patient_id,         hp.visit_id,         hp.patient_visit_id,         now(),         '门诊特殊级抗菌药物累计DDD数',          to_char(hp.exec_date,'yyyymmdd')    from his_bi.v_ddds_antictrl hp  where hp.in_out_flag = 'O'   and hp.cont_value = '3'    and hp.exec_date >= to_date(c_daylist.day_id,'yyyymmdd')   and hp.exec_date <  to_date(c_daylist.day_id,'yyyymmdd') + 1    group by hp.patient_id,         hp.visit_id,         hp.patient_visit_id,         to_char(hp.exec_date,'yyyymmdd');           ""]",['门诊抗菌药物—特殊级抗菌药物累计DDD数统计   ']
141,his_bi,fun_dwd_D00146_d_16626,"
/***
函数名称：门诊护理费
    作用：统计某天门诊护理费（费用以会计科目统计）
  开发人：wy 2020-05-12
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00146  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_outp_income_d
	 where key = 'D00146';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_outp_income_d where st_date = c_daylist.day_id and key = 'D00146';
	
  INSERT into his_bi.dwd_outp_income_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,
																			 remark,st_date) 
  select 
				 'D00146',
				 coalesce(sum(t.charges),0),
				 t.patient_id,
				 t.visit_id,
				 t.pai_visit_id,
         now(),
			  '门诊护理费',
			  to_char(t.enter_date,'yyyymmdd') AS st_date
   from his_bi.bms_bill_item t
  where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')
    and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
    and t.in_out_flag = 'O' --只统计门诊患者
	and t.subj_code in('H01')  --护理费
	and t.charges<>0
  group by to_char(t.enter_date,'yyyymmdd'),
					 t.patient_id,
					 t.visit_id,
				   t.pai_visit_id;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00146'],"[""delete from his_bi.dwd_outp_income_d where st_date = c_daylist.day_id and key = 'D00146';   INSERT into his_bi.dwd_outp_income_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,                    remark,st_date)   select      'D00146',     coalesce(sum(t.charges),0),     t.patient_id,     t.visit_id,     t.pai_visit_id,         now(),     '门诊护理费',     to_char(t.enter_date,'yyyymmdd') AS st_date   from his_bi.bms_bill_item t  where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')    and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1    and t.in_out_flag = 'O' --只统计门诊患者 and t.subj_code in('H01')  --护理费 and t.charges<>0  group by to_char(t.enter_date,'yyyymmdd'),      t.patient_id,      t.visit_id,       t.pai_visit_id;  ""]",['门诊护理费   ']
142,his_bi,fun_dwd_D00147_d_16627,"
/***
函数名称：门诊手术费
    作用：统计某天门诊手术费（费用以会计科目统计）
  开发人：wy 2020-05-12
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00147  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_outp_income_d
	 where key = 'D00147';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_outp_income_d where st_date = c_daylist.day_id and key = 'D00147';
	
  INSERT into his_bi.dwd_outp_income_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,
																			 remark,st_date) 
  select 
				 'D00147',
				 coalesce(sum(t.charges),0),
				 t.patient_id,
				 t.visit_id,
				 t.pai_visit_id,
         now(),
			  '门诊手术费',
			  to_char(t.enter_date,'yyyymmdd') AS st_date
   from his_bi.bms_bill_item t
  where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')
    and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
    and t.in_out_flag = 'O' --只统计门诊患者
	and t.subj_code in('G01')  --手术费
	and t.charges<>0
  group by to_char(t.enter_date,'yyyymmdd'),
					 t.patient_id,
					 t.visit_id,
				   t.pai_visit_id;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00147'],"[""delete from his_bi.dwd_outp_income_d where st_date = c_daylist.day_id and key = 'D00147';   INSERT into his_bi.dwd_outp_income_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,                    remark,st_date)   select      'D00147',     coalesce(sum(t.charges),0),     t.patient_id,     t.visit_id,     t.pai_visit_id,         now(),     '门诊手术费',     to_char(t.enter_date,'yyyymmdd') AS st_date   from his_bi.bms_bill_item t  where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')    and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1    and t.in_out_flag = 'O' --只统计门诊患者 and t.subj_code in('G01')  --手术费 and t.charges<>0  group by to_char(t.enter_date,'yyyymmdd'),      t.patient_id,      t.visit_id,       t.pai_visit_id;  ""]",['门诊手术费   ']
143,his_bi,fun_dwd_D00148_d_16628,"
/***
函数名称：门诊替代食品费
    作用：统计某天门诊替代食品费（费用以会计科目统计）
  开发人：wy 2020-05-12
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00148  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_outp_income_d
	 where key = 'D00148';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_outp_income_d where st_date = c_daylist.day_id and key = 'D00148';
	
  INSERT into his_bi.dwd_outp_income_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,
																			 remark,st_date) 
  select 
				 'D00148',
				 coalesce(sum(t.charges),0),
				 t.patient_id,
				 t.visit_id,
				 t.pai_visit_id,
         now(),
			  '门诊替代食品费',
			  to_char(t.enter_date,'yyyymmdd') AS st_date
   from his_bi.bms_bill_item t
  where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')
    and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
    and t.in_out_flag = 'O' --只统计门诊患者
	and t.subj_code in('P')  --替代食品费
	and t.charges<>0
  group by to_char(t.enter_date,'yyyymmdd'),
					 t.patient_id,
					 t.visit_id,
				   t.pai_visit_id;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00148'],"[""delete from his_bi.dwd_outp_income_d where st_date = c_daylist.day_id and key = 'D00148';   INSERT into his_bi.dwd_outp_income_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,                    remark,st_date)   select      'D00148',     coalesce(sum(t.charges),0),     t.patient_id,     t.visit_id,     t.pai_visit_id,         now(),     '门诊替代食品费',     to_char(t.enter_date,'yyyymmdd') AS st_date   from his_bi.bms_bill_item t  where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')    and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1    and t.in_out_flag = 'O' --只统计门诊患者 and t.subj_code in('P')  --替代食品费 and t.charges<>0  group by to_char(t.enter_date,'yyyymmdd'),      t.patient_id,      t.visit_id,       t.pai_visit_id;  ""]",['门诊替代食品费   ']
144,his_bi,fun_dwd_D00149_d_16629,"
/***
函数名称：门诊院内调剂费
    作用：统计某天门诊院内调剂费（费用以会计科目统计）
  开发人：wy 2020-05-12
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00149  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_outp_income_d
	 where key = 'D00149';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_outp_income_d where st_date = c_daylist.day_id and key = 'D00149';
	
  INSERT into his_bi.dwd_outp_income_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,
																			 remark,st_date) 
  select 
				 'D00149',
				 coalesce(sum(t.charges),0),
				 t.patient_id,
				 t.visit_id,
				 t.pai_visit_id,
         now(),
			  '门诊院内调剂费',
			  to_char(t.enter_date,'yyyymmdd') AS st_date
   from his_bi.bms_bill_item t
  where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')
    and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
    and t.in_out_flag = 'O' --只统计门诊患者
	and t.subj_code in('O')  --院内调剂费
	and t.charges<>0
  group by to_char(t.enter_date,'yyyymmdd'),
					 t.patient_id,
					 t.visit_id,
				   t.pai_visit_id;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00149'],"[""delete from his_bi.dwd_outp_income_d where st_date = c_daylist.day_id and key = 'D00149';   INSERT into his_bi.dwd_outp_income_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,                    remark,st_date)   select      'D00149',     coalesce(sum(t.charges),0),     t.patient_id,     t.visit_id,     t.pai_visit_id,         now(),     '门诊院内调剂费',     to_char(t.enter_date,'yyyymmdd') AS st_date   from his_bi.bms_bill_item t  where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')    and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1    and t.in_out_flag = 'O' --只统计门诊患者 and t.subj_code in('O')  --院内调剂费 and t.charges<>0  group by to_char(t.enter_date,'yyyymmdd'),      t.patient_id,      t.visit_id,       t.pai_visit_id;  ""]",['门诊院内调剂费   ']
145,his_bi,fun_dwd_D00150_d_16630,"
/***
函数名称：门诊中药饮片人数统计
    作用：统计某天门诊中药饮片人数
  开发人：wy 2020-04-30
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00150  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
  c_daylist record;
  o_start_date varchar;
  o_end_date varchar;
  i_start_date varchar;
  i_end_date varchar;
  i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
    from his_bi.dwd_outp_quantity_d
   where key = 'D00150';
   
  if(i_count = 0)
    then 
      i_start_date := '20200101';
      --raise notice '0 i_start_date is: %', i_start_date;
  else if(i_count > 0)
    then
      i_start_date := i_end_date;
      --raise notice '1 i_start_date is: %', i_start_date;
  end if;
  end if;
    
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
  /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取对应key 最大日期加一天 对应逻辑line 12 */
    then 
      o_start_date := i_start_date;
      o_end_date := i_end_date;
      --raise notice '2 o_start_date is: %', o_start_date;
      --raise notice '2 o_end_date is: %', o_end_date;
  else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
  /*PG function 如果参入任何参数，那么以实际入参为准*/
    then 
      o_start_date := v_start_date;
      o_end_date := v_end_date;
      --raise notice '3 o_start_date is: %', o_start_date;
      --raise notice '3 o_end_date is: %', o_end_date;
  end if;
  end if;
  
  for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
  loop 
  
  --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
  
  delete from his_bi.dwd_outp_quantity_d where st_date = c_daylist.day_id and key = 'D00150';
  
  INSERT into his_bi.dwd_outp_quantity_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,
                                            remark,st_date) 
	select
		distinct
		'D00150',
		1,
		t.patient_id,
		t.visit_id,
		t.pai_visit_id,
		now(),
		'门诊中药饮片人数',
		to_char(t.enter_date,'yyyymmdd') AS st_date
	from his_bi.bms_bill_item t
	inner join his_bi.pts_outp_patient_visit p on t.patient_id = p.patient_id and t.visit_id = p.visit_id
	inner join his_bi.dms_pham_attribute_info df on t.item_code = df.pham_std_code
	where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')
	and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
	and t.in_out_flag = 'O' --只统计门诊患者
	and t.item_class = 'B'  --中成药
	and df.pham_form = '4301' --剂型为饮片
	and t.charges<>0;
    
	end loop;
	RETURN 'SUCCESS';  
END;
  ",['D00150'],"[""delete from his_bi.dwd_outp_quantity_d where st_date = c_daylist.day_id and key = 'D00150';    INSERT into his_bi.dwd_outp_quantity_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,                                            remark,st_date)  select  distinct  'D00150',  1,  t.patient_id,  t.visit_id,  t.pai_visit_id,  now(),  '门诊中药饮片人数',  to_char(t.enter_date,'yyyymmdd') AS st_date from his_bi.bms_bill_item t inner join his_bi.pts_outp_patient_visit p on t.patient_id = p.patient_id and t.visit_id = p.visit_id inner join his_bi.dms_pham_attribute_info df on t.item_code = df.pham_std_code where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd') and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1 and t.in_out_flag = 'O' --只统计门诊患者 and t.item_class = 'B'  --中成药 and df.pham_form = '4301' --剂型为饮片 and t.charges<>0;    ""]",['门诊中药饮片人数统计   ']
146,his_bi,fun_dwd_D00151_d_16631,"
/***
函数名称：是否经产妇人数统计
    作用：统计某天是否经产妇人数
  开发人：wy 2020-05-14
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00151  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
  c_daylist record;
  o_start_date varchar;
  o_end_date varchar;
  i_start_date varchar;
  i_end_date varchar;
  i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
    from his_bi.dwd_inp_quantity_d
   where key = 'D00151';
   
  if(i_count = 0)
    then 
      i_start_date := '20200101';
      --raise notice '0 i_start_date is: %', i_start_date;
  else if(i_count > 0)
    then
      i_start_date := i_end_date;
      --raise notice '1 i_start_date is: %', i_start_date;
  end if;
  end if;
    
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
  /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取对应key 最大日期加一天 对应逻辑line 12 */
    then 
      o_start_date := i_start_date;
      o_end_date := i_end_date;
      --raise notice '2 o_start_date is: %', o_start_date;
      --raise notice '2 o_end_date is: %', o_end_date;
  else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
  /*PG function 如果参入任何参数，那么以实际入参为准*/
    then 
      o_start_date := v_start_date;
      o_end_date := v_end_date;
      --raise notice '3 o_start_date is: %', o_start_date;
      --raise notice '3 o_end_date is: %', o_end_date;
  end if;
  end if;
  
  for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
  loop 
  
  --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
  
  delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00151';
  
  INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
                                            remark,st_date) 
	select
		distinct
		'D00151',
		1,
		pt.patient_id,
		pt.visit_id,
		pt.pai_visit_id,
		now(),
		'是否经产妇',
		to_char(t.birth_date,'yyyymmdd') AS st_date
	from his_bi.pts_pai_birth_reg t
	left join his_bi.pts_pai_visit pt on t.pai_visit_id = pt.pai_visit_id
	where t.birth_date >= to_date(c_daylist.day_id,'yyyyMMdd')
  and t.birth_date < to_date(c_daylist.day_id,'yyyyMMdd') + 1 
	and COALESCE(t.status, '1') = '1'
	and t.birth_times >= 1            --生产次数大于1
	;
    
	end loop;
	RETURN 'SUCCESS';  
END;
  ",['D00151'],"[""delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00151';\r  \r  INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                                            remark,st_date) \r select\r  distinct\r  'D00151',\r  1,\r  pt.patient_id,\r  pt.visit_id,\r  pt.pai_visit_id,\r  now(),\r  '是否经产妇',\r  to_char(t.birth_date,'yyyymmdd') AS st_date\r from his_bi.pts_pai_birth_reg t\r left join his_bi.pts_pai_visit pt on t.pai_visit_id = pt.pai_visit_id\r where t.birth_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r  and t.birth_date < to_date(c_daylist.day_id,'yyyyMMdd') + 1 \r and COALESCE(t.status, '1') = '1'\r and t.birth_times >= 1            --生产次数大于1\r ;\r    \r""]",['是否经产妇人数统计\r   ']
147,his_bi,fun_dwd_D00152_d_16632,"
/***
函数名称：产妇分娩胎次
    作用：统计某天产妇分娩胎次
  开发人：wy 2020-05-14
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00152  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
  c_daylist record;
  o_start_date varchar;
  o_end_date varchar;
  i_start_date varchar;
  i_end_date varchar;
  i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
    from his_bi.dwd_inp_quantity_d
   where key = 'D00152';
   
  if(i_count = 0)
    then 
      i_start_date := '20200101';
      --raise notice '0 i_start_date is: %', i_start_date;
  else if(i_count > 0)
    then
      i_start_date := i_end_date;
      --raise notice '1 i_start_date is: %', i_start_date;
  end if;
  end if;
    
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
  /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取对应key 最大日期加一天 对应逻辑line 12 */
    then 
      o_start_date := i_start_date;
      o_end_date := i_end_date;
      --raise notice '2 o_start_date is: %', o_start_date;
      --raise notice '2 o_end_date is: %', o_end_date;
  else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
  /*PG function 如果参入任何参数，那么以实际入参为准*/
    then 
      o_start_date := v_start_date;
      o_end_date := v_end_date;
      --raise notice '3 o_start_date is: %', o_start_date;
      --raise notice '3 o_end_date is: %', o_end_date;
  end if;
  end if;
  
  for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
  loop 
  
  --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
  
  delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00152';
  
  INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
                                            remark,st_date) 
	select
		distinct
		'D00152',
		1,
		pt.patient_id,
		pt.visit_id,
		pt.pai_visit_id,
		now(),
		'产妇分娩胎次',
		to_char(t.birth_date,'yyyymmdd') AS st_date
	from his_bi.pts_pai_birth_reg t
	left join his_bi.pts_pai_visit pt on t.pai_visit_id = pt.pai_visit_id
	where t.birth_date >= to_date(c_daylist.day_id,'yyyyMMdd')
  and t.birth_date < to_date(c_daylist.day_id,'yyyyMMdd') + 1 
	and COALESCE(t.status,'1') = '1'
	and t.ismultiplebirths in ('否','单胎')  --单胎
	;
    
	end loop;
	RETURN 'SUCCESS';  
END;
  ",['D00152'],"[""delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00152';    INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,                                            remark,st_date)  select  distinct  'D00152',  1,  pt.patient_id,  pt.visit_id,  pt.pai_visit_id,  now(),  '产妇分娩胎次',  to_char(t.birth_date,'yyyymmdd') AS st_date from his_bi.pts_pai_birth_reg t left join his_bi.pts_pai_visit pt on t.pai_visit_id = pt.pai_visit_id where t.birth_date >= to_date(c_daylist.day_id,'yyyyMMdd')  and t.birth_date < to_date(c_daylist.day_id,'yyyyMMdd') + 1  and COALESCE(t.status,'1') = '1' and t.ismultiplebirths in ('否','单胎')  --单胎 ;    ""]",['产妇分娩胎次   ']
148,his_bi,fun_dwd_D00153_d_16633,"
/***
函数名称：双胞胎产妇
    作用：统计某天双胞胎产妇
  开发人：wy 2020-05-14
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00153  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
  c_daylist record;
  o_start_date varchar;
  o_end_date varchar;
  i_start_date varchar;
  i_end_date varchar;
  i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
    from his_bi.dwd_inp_quantity_d
   where key = 'D00153';
   
  if(i_count = 0)
    then 
      i_start_date := '20200101';
      --raise notice '0 i_start_date is: %', i_start_date;
  else if(i_count > 0)
    then
      i_start_date := i_end_date;
      --raise notice '1 i_start_date is: %', i_start_date;
  end if;
  end if;
    
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
  /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取对应key 最大日期加一天 对应逻辑line 12 */
    then 
      o_start_date := i_start_date;
      o_end_date := i_end_date;
      --raise notice '2 o_start_date is: %', o_start_date;
      --raise notice '2 o_end_date is: %', o_end_date;
  else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
  /*PG function 如果参入任何参数，那么以实际入参为准*/
    then 
      o_start_date := v_start_date;
      o_end_date := v_end_date;
      --raise notice '3 o_start_date is: %', o_start_date;
      --raise notice '3 o_end_date is: %', o_end_date;
  end if;
  end if;
  
  for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
  loop 
  
  --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
  
  delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00153';
  
  INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
                                            remark,st_date) 
	select
		distinct
		'D00153',
		1,
		pt.patient_id || '|'|| t.baby_numeric as patient_id,
		pt.visit_id,
		cast((cast(pt.pai_visit_id as text) || cast(t.baby_numeric as text)) as numeric) as pai_visit_id,
		now(),
		'是否双胞胎产妇',
		to_char(t.birth_date,'yyyymmdd') AS st_date
	from his_bi.pts_pai_birth_reg t
	left join his_bi.pts_pai_visit pt on t.pai_visit_id = pt.pai_visit_id
	where t.birth_date >= to_date(c_daylist.day_id,'yyyyMMdd')
  and t.birth_date < to_date(c_daylist.day_id,'yyyyMMdd') + 1 
	and COALESCE(t.status,'1') = '1'
	and t.ismultiplebirths in ('双胎')  --双胎
	;
    
	end loop;
	RETURN 'SUCCESS';  
END;
  ",['D00153'],"[""delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00153';\r  \r  INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                                            remark,st_date) \r select\r  distinct\r  'D00153',\r  1,\r  pt.patient_id || '|'|| t.baby_numeric as patient_id,\r  pt.visit_id,\r  cast((cast(pt.pai_visit_id as text) || cast(t.baby_numeric as text)) as numeric) as pai_visit_id,\r  now(),\r  '是否双胞胎产妇',\r  to_char(t.birth_date,'yyyymmdd') AS st_date\r from his_bi.pts_pai_birth_reg t\r left join his_bi.pts_pai_visit pt on t.pai_visit_id = pt.pai_visit_id\r where t.birth_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r  and t.birth_date < to_date(c_daylist.day_id,'yyyyMMdd') + 1 \r and COALESCE(t.status,'1') = '1'\r and t.ismultiplebirths in ('双胎')  --双胎\r ;\r    \r""]",['双胞胎产妇\r   ']
149,his_bi,fun_dwd_D00154_d_16634,"
/***
函数名称：患者结算方式--(枚举值:1城乡医保(CXYB)、2异地职工(YDZG)、3本院职工(BYZG)、4省医保(GSPHI)、5商业医疗(SYYL)、6异地居民(YDJM)、7市医保(LZCHI)、
          --8居民医保(JM)、9全公费(QGF)、10电力医保(DLYB)、11自费(A)、12铁路医保(TLYB)、13新农合(GSNRCMI)、14农合自费(NHZF)、15省直生育(SZSY)、
          --16新生儿(XSE)、17贫困救助(PKJZ)、18医疗保险(YLBX)、19老年减免(LNJM))
    作用：统计某天患者结算方式
  开发人：wy 2020-05-15
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00154 根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
  c_daylist record;
  o_start_date varchar;
  o_end_date varchar;
  i_start_date varchar;
  i_end_date varchar;
  i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
    from his_bi.dwd_inp_quantity_d
   where key = 'D00154';
   
  if(i_count = 0)
    then 
      i_start_date := '20200101';
      --raise notice '0 i_start_date is: %', i_start_date;
  else if(i_count > 0)
    then
      i_start_date := i_end_date;
      --raise notice '1 i_start_date is: %', i_start_date;
  end if;
  end if;
    
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
  /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取对应key 最大日期加一天 对应逻辑line 12 */
    then 
      o_start_date := i_start_date;
      o_end_date := i_end_date;
      --raise notice '2 o_start_date is: %', o_start_date;
      --raise notice '2 o_end_date is: %', o_end_date;
  else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
  /*PG function 如果参入任何参数，那么以实际入参为准*/
    then 
      o_start_date := v_start_date;
      o_end_date := v_end_date;
      --raise notice '3 o_start_date is: %', o_start_date;
      --raise notice '3 o_end_date is: %', o_end_date;
  end if;
  end if;
  
  for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
  loop 
  
  --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
  
  delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00154';
  
  INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
                                            remark,st_date) 
	select 'D00154',
					case 
					when pt.cost_type = 'CXYB'then 1
					when pt.cost_type = 'YDZG'then 2
					when pt.cost_type = 'BYZG'then 3
					when pt.cost_type = 'GSPHI'then 4
					when pt.cost_type = 'SYYL'then 5
					when pt.cost_type = 'YDJM'then 6
					when pt.cost_type = 'LZCHI'then 7
					when pt.cost_type = 'JM'then 8
					when pt.cost_type = 'QGF'then 9
					when pt.cost_type = 'DLYB'then 10
					when pt.cost_type = 'A'then 11
					when pt.cost_type = 'TLYB'then 12
					when pt.cost_type = 'GSNRCMI'then 13
					when pt.cost_type = 'NHZF'then 14
					when pt.cost_type = 'SZSY'then 15
					when pt.cost_type = 'XSE'then 16
					when pt.cost_type = 'PKJZ'then 17
					when pt.cost_type = 'YLBX'then 18
					when pt.cost_type = 'LNJM'then 19
					end, 
					--(枚举值:1城乡医保(CXYB)、2异地职工(YDZG)、3本院职工(BYZG)、4省医保(GSPHI)、5商业医疗(SYYL)、6异地居民(YDJM)、7市医保(LZCHI)、
          --8居民医保(JM)、9全公费(QGF)、10电力医保(DLYB)、11自费(A)、12铁路医保(TLYB)、13新农合(GSNRCMI)、14农合自费(NHZF)、15省直生育(SZSY)、
          --16新生儿(XSE)、17贫困救助(PKJZ)、18医疗保险(YLBX)、19老年减免(LNJM))
					pt.patient_id,
					pt.visit_id,
					pt.pai_visit_id,
					now(),
					'患者结算方式', 
					to_char(pt.discharge_dept_date,'yyyyMMdd')
	from his_bi.pts_pai_visit pt
	where 1=1
		and pt.discharge_dept_date >= to_date(c_daylist.day_id,'yyyyMMdd')
		and pt.discharge_dept_date <  to_date(c_daylist.day_id,'yyyyMMdd') + 1	
		;
    
	end loop;
	RETURN 'SUCCESS';  
END;
  ",['D00154'],"[""delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00154';    INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,                                            remark,st_date)  select 'D00154',     case      when pt.cost_type = 'CXYB'then 1     when pt.cost_type = 'YDZG'then 2     when pt.cost_type = 'BYZG'then 3     when pt.cost_type = 'GSPHI'then 4     when pt.cost_type = 'SYYL'then 5     when pt.cost_type = 'YDJM'then 6     when pt.cost_type = 'LZCHI'then 7     when pt.cost_type = 'JM'then 8     when pt.cost_type = 'QGF'then 9     when pt.cost_type = 'DLYB'then 10     when pt.cost_type = 'A'then 11     when pt.cost_type = 'TLYB'then 12     when pt.cost_type = 'GSNRCMI'then 13     when pt.cost_type = 'NHZF'then 14     when pt.cost_type = 'SZSY'then 15     when pt.cost_type = 'XSE'then 16     when pt.cost_type = 'PKJZ'then 17     when pt.cost_type = 'YLBX'then 18     when pt.cost_type = 'LNJM'then 19     end,      --(枚举值:1城乡医保(CXYB)、2异地职工(YDZG)、3本院职工(BYZG)、4省医保(GSPHI)、5商业医疗(SYYL)、6异地居民(YDJM)、7市医保(LZCHI)、          --8居民医保(JM)、9全公费(QGF)、10电力医保(DLYB)、11自费(A)、12铁路医保(TLYB)、13新农合(GSNRCMI)、14农合自费(NHZF)、15省直生育(SZSY)、          --16新生儿(XSE)、17贫困救助(PKJZ)、18医疗保险(YLBX)、19老年减免(LNJM))     pt.patient_id,     pt.visit_id,     pt.pai_visit_id,     now(),     '患者结算方式',      to_char(pt.discharge_dept_date,'yyyyMMdd') from his_bi.pts_pai_visit pt where 1=1  and pt.discharge_dept_date >= to_date(c_daylist.day_id,'yyyyMMdd')  and pt.discharge_dept_date <  to_date(c_daylist.day_id,'yyyyMMdd') + 1   ;    ""]",['患者结算方式--(枚举值:1城乡医保(CXYB)、2异地职工(YDZG)、3本院职工(BYZG)、4省医保(GSPHI)、5商业医疗(SYYL)、6异地居民(YDJM)、7市医保(LZCHI)、          --8居民医保(JM)、9全公费(QGF)、10电力医保(DLYB)、11自费(A)、12铁路医保(TLYB)、13新农合(GSNRCMI)、14农合自费(NHZF)、15省直生育(SZSY)、          --16新生儿(XSE)、17贫困救助(PKJZ)、18医疗保险(YLBX)、19老年减免(LNJM))   ']
150,his_bi,fun_dwd_D00155_d_16636,"
/***
函数名称：是否产妇死亡
    作用：统计某天是否产妇死亡
  开发人：wy 2020-05-14
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00155  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
  c_daylist record;
  o_start_date varchar;
  o_end_date varchar;
  i_start_date varchar;
  i_end_date varchar;
  i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
    from his_bi.dwd_inp_quantity_d
   where key = 'D00155';
   
  if(i_count = 0)
    then 
      i_start_date := '20200101';
      --raise notice '0 i_start_date is: %', i_start_date;
  else if(i_count > 0)
    then
      i_start_date := i_end_date;
      --raise notice '1 i_start_date is: %', i_start_date;
  end if;
  end if;
    
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
  /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取对应key 最大日期加一天 对应逻辑line 12 */
    then 
      o_start_date := i_start_date;
      o_end_date := i_end_date;
      --raise notice '2 o_start_date is: %', o_start_date;
      --raise notice '2 o_end_date is: %', o_end_date;
  else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
  /*PG function 如果参入任何参数，那么以实际入参为准*/
    then 
      o_start_date := v_start_date;
      o_end_date := v_end_date;
      --raise notice '3 o_start_date is: %', o_start_date;
      --raise notice '3 o_end_date is: %', o_end_date;
  end if;
  end if;
  
  for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
  loop 
  
  --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
  
  delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00155';
  
  INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
                                            remark,st_date) 
	select
		distinct
		'D00155',
		1,
		t.bah as patient_id,
		t.zycs as visit_id,
		pt.pai_visit_id,
		now(),
		'是否死亡',
		to_char(t.cyrq,'yyyymmdd') AS st_date
	from his_bi.ods_patient_medical_record t
	left join his_bi.pts_pai_visit pt on t.bah = pt.patient_id and t.zycs = pt.visit_id
	where t.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
    and t.cyrq < to_date(c_daylist.day_id,'yyyyMMdd') + 1 
	  and t.lyfs = '5' --离院方式，1：医嘱离院，2：医嘱转院，3：医嘱转社区卫生服务机构，4：非医嘱离院，5：死亡，9：其他
	;
    
	end loop;
	RETURN 'SUCCESS';  
END;
  ",['D00155'],"[""delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00155';\r  \r  INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                                            remark,st_date) \r select\r  distinct\r  'D00155',\r  1,\r  t.bah as patient_id,\r  t.zycs as visit_id,\r  pt.pai_visit_id,\r  now(),\r  '是否死亡',\r  to_char(t.cyrq,'yyyymmdd') AS st_date\r from his_bi.ods_patient_medical_record t\r left join his_bi.pts_pai_visit pt on t.bah = pt.patient_id and t.zycs = pt.visit_id\r where t.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')\r    and t.cyrq < to_date(c_daylist.day_id,'yyyyMMdd') + 1 \r   and t.lyfs = '5' --离院方式，1：医嘱离院，2：医嘱转院，3：医嘱转社区卫生服务机构，4：非医嘱离院，5：死亡，9：其他\r ;\r    \r""]",['是否产妇死亡\r   ']
151,his_bi,fun_dwd_D00156_d_16637,"
/***
函数名称：产妇产后出血量
    作用：统计某天产妇产后出血量
  开发人：wy 2020-05-14
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00156  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
  c_daylist record;
  o_start_date varchar;
  o_end_date varchar;
  i_start_date varchar;
  i_end_date varchar;
  i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
    from his_bi.dwd_inp_quantity_d
   where key = 'D00156';
   
  if(i_count = 0)
    then 
      i_start_date := '20200101';
      --raise notice '0 i_start_date is: %', i_start_date;
  else if(i_count > 0)
    then
      i_start_date := i_end_date;
      --raise notice '1 i_start_date is: %', i_start_date;
  end if;
  end if;
    
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
  /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取对应key 最大日期加一天 对应逻辑line 12 */
    then 
      o_start_date := i_start_date;
      o_end_date := i_end_date;
      --raise notice '2 o_start_date is: %', o_start_date;
      --raise notice '2 o_end_date is: %', o_end_date;
  else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
  /*PG function 如果参入任何参数，那么以实际入参为准*/
    then 
      o_start_date := v_start_date;
      o_end_date := v_end_date;
      --raise notice '3 o_start_date is: %', o_start_date;
      --raise notice '3 o_end_date is: %', o_end_date;
  end if;
  end if;
  
  for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
  loop 
  
  --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
  
  delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00156';
  
  INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
                                            remark,st_date) 
	select 'D00156',
					sum(b.postpartum_hemorrhage),
					a.patient_id,
					a.visit_id,
					a.pai_visit_id,
					now(),
					'产妇出血量', 
					to_char(b.birth_date,'yyyyMMdd')
	from his_bi.pts_pai_visit a
	inner join his_bi.pts_pai_birth_reg b on a.pai_visit_id = b.pai_visit_id
	where COALESCE(b.status, '1') = '1'
		and b.birth_date >= to_date(c_daylist.day_id,'yyyyMMdd')
		and b.birth_date <  to_date(c_daylist.day_id,'yyyyMMdd') + 1
	group by 
		a.patient_id,
		a.visit_id,
		a.pai_visit_id,
		to_char(b.birth_date,'yyyyMMdd');
    
	end loop;
	RETURN 'SUCCESS';  
END;
  ",['D00156'],"[""delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00156';    INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,                                            remark,st_date)  select 'D00156',     sum(b.postpartum_hemorrhage),     a.patient_id,     a.visit_id,     a.pai_visit_id,     now(),     '产妇出血量',      to_char(b.birth_date,'yyyyMMdd') from his_bi.pts_pai_visit a inner join his_bi.pts_pai_birth_reg b on a.pai_visit_id = b.pai_visit_id where COALESCE(b.status, '1') = '1'  and b.birth_date >= to_date(c_daylist.day_id,'yyyyMMdd')  and b.birth_date <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 group by   a.patient_id,  a.visit_id,  a.pai_visit_id,  to_char(b.birth_date,'yyyyMMdd');    ""]",['产妇产后出血量   ']
152,his_bi,fun_dwd_D00157_d_16638,"
/***
函数名称：新生儿出生情况(1活产、2死产、3死胎、4畸形)
    作用：统计某天新生儿出生情况
  开发人：wy 2020-05-14
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00157  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
  c_daylist record;
  o_start_date varchar;
  o_end_date varchar;
  i_start_date varchar;
  i_end_date varchar;
  i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
    from his_bi.dwd_inp_quantity_d
   where key = 'D00157';
   
  if(i_count = 0)
    then 
      i_start_date := '20200101';
      --raise notice '0 i_start_date is: %', i_start_date;
  else if(i_count > 0)
    then
      i_start_date := i_end_date;
      --raise notice '1 i_start_date is: %', i_start_date;
  end if;
  end if;
    
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
  /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取对应key 最大日期加一天 对应逻辑line 12 */
    then 
      o_start_date := i_start_date;
      o_end_date := i_end_date;
      --raise notice '2 o_start_date is: %', o_start_date;
      --raise notice '2 o_end_date is: %', o_end_date;
  else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
  /*PG function 如果参入任何参数，那么以实际入参为准*/
    then 
      o_start_date := v_start_date;
      o_end_date := v_end_date;
      --raise notice '3 o_start_date is: %', o_start_date;
      --raise notice '3 o_end_date is: %', o_end_date;
  end if;
  end if;
  
  for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
  loop 
  
  --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
  
  delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00157';
  
  INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
                                            remark,st_date) 
	select 'D00157',
					case 
					when COALESCE(a.baby_status,'活产') = '活产' then 1
					when a.baby_status = '死产' then 2
					when a.baby_status = '死胎' then 3
					when a.baby_status = '畸形' then 4 end,   --1活产、2死产、3死胎、4畸形
					pt.patient_id || '|'|| a.baby_numeric as patient_id,
					pt.visit_id,
					cast((cast(pt.pai_visit_id as text) || cast(a.baby_numeric as text)) as numeric) as pai_visit_id ,
					now(),
					'新生儿出生情况', 
					to_char(a.birth_date,'yyyyMMdd')
	from his_bi.pts_pai_birth_reg a
	left join his_bi.pts_pai_visit pt on a.pai_visit_id = pt.pai_visit_id
	where COALESCE(a.status, '1') = '1'
		and a.birth_date >= to_date(c_daylist.day_id,'yyyyMMdd')
		and a.birth_date <  to_date(c_daylist.day_id,'yyyyMMdd') + 1
		;
    
	end loop;
	RETURN 'SUCCESS';  
END;
  ",['D00157'],"[""delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00157';\r  \r  INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                                            remark,st_date) \r select 'D00157',\r     case \r     when COALESCE(a.baby_status,'活产') = '活产' then 1\r     when a.baby_status = '死产' then 2\r     when a.baby_status = '死胎' then 3\r     when a.baby_status = '畸形' then 4 end,   --1活产、2死产、3死胎、4畸形\r     pt.patient_id || '|'|| a.baby_numeric as patient_id,\r     pt.visit_id,\r     cast((cast(pt.pai_visit_id as text) || cast(a.baby_numeric as text)) as numeric) as pai_visit_id ,\r     now(),\r     '新生儿出生情况', \r     to_char(a.birth_date,'yyyyMMdd')\r from his_bi.pts_pai_birth_reg a\r left join his_bi.pts_pai_visit pt on a.pai_visit_id = pt.pai_visit_id\r where COALESCE(a.status, '1') = '1'\r  and a.birth_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r  and a.birth_date <  to_date(c_daylist.day_id,'yyyyMMdd') + 1\r  ;\r    \r""]",['新生儿出生情况(1活产、2死产、3死胎、4畸形)\r   ']
153,his_bi,fun_dwd_D00158_d_16639,"
/***
函数名称：是否剖宫产
    作用：统计某天孕妇是否剖宫产
  开发人：wy 2020-05-15
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00158 根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
  c_daylist record;
  o_start_date varchar;
  o_end_date varchar;
  i_start_date varchar;
  i_end_date varchar;
  i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
    from his_bi.dwd_inp_quantity_d
   where key = 'D00158';
   
  if(i_count = 0)
    then 
      i_start_date := '20200101';
      --raise notice '0 i_start_date is: %', i_start_date;
  else if(i_count > 0)
    then
      i_start_date := i_end_date;
      --raise notice '1 i_start_date is: %', i_start_date;
  end if;
  end if;
    
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
  /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取对应key 最大日期加一天 对应逻辑line 12 */
    then 
      o_start_date := i_start_date;
      o_end_date := i_end_date;
      --raise notice '2 o_start_date is: %', o_start_date;
      --raise notice '2 o_end_date is: %', o_end_date;
  else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
  /*PG function 如果参入任何参数，那么以实际入参为准*/
    then 
      o_start_date := v_start_date;
      o_end_date := v_end_date;
      --raise notice '3 o_start_date is: %', o_start_date;
      --raise notice '3 o_end_date is: %', o_end_date;
  end if;
  end if;
  
  for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
  loop 
  
  --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
  
  delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00158';
  
  INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
                                            remark,st_date) 
	select 'D00158',
					1,
					pt.patient_id || '|'|| a.baby_numeric as patient_id,
					pt.visit_id,
					cast((cast(pt.pai_visit_id as text) || cast(a.baby_numeric as text)) as numeric) as pai_visit_id,
					now(),
					'是否剖宫产', 
					to_char(a.birth_date,'yyyyMMdd')
	from his_bi.pts_pai_birth_reg a
	left join his_bi.pts_pai_visit pt on a.pai_visit_id = pt.pai_visit_id
	where COALESCE(a.status, '1') = '1'
		and a.birth_date >= to_date(c_daylist.day_id,'yyyyMMdd')
		and a.birth_date <  to_date(c_daylist.day_id,'yyyyMMdd') + 1
		and a.birth_way IN ('剖宫分娩','手术') --剖宫产
		
		;
    
	end loop;
	RETURN 'SUCCESS';  
END;
  ",['D00158'],"[""delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00158';\r  \r  INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                                            remark,st_date) \r select 'D00158',\r     1,\r     pt.patient_id || '|'|| a.baby_numeric as patient_id,\r     pt.visit_id,\r     cast((cast(pt.pai_visit_id as text) || cast(a.baby_numeric as text)) as numeric) as pai_visit_id,\r     now(),\r     '是否剖宫产', \r     to_char(a.birth_date,'yyyyMMdd')\r from his_bi.pts_pai_birth_reg a\r left join his_bi.pts_pai_visit pt on a.pai_visit_id = pt.pai_visit_id\r where COALESCE(a.status, '1') = '1'\r  and a.birth_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r  and a.birth_date <  to_date(c_daylist.day_id,'yyyyMMdd') + 1\r  and a.birth_way IN ('剖宫分娩','手术') --剖宫产\r  \r  ;\r    \r""]",['是否剖宫产\r   ']
154,his_bi,fun_dwd_D00159_d_16640,"
/***
函数名称：是否产妇
    作用：统计患者是否产妇
  开发人：wy 2020-05-15
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00159 根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
  c_daylist record;
  o_start_date varchar;
  o_end_date varchar;
  i_start_date varchar;
  i_end_date varchar;
  i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
    from his_bi.dwd_inp_quantity_d
   where key = 'D00159';
   
  if(i_count = 0)
    then 
      i_start_date := '20200101';
      --raise notice '0 i_start_date is: %', i_start_date;
  else if(i_count > 0)
    then
      i_start_date := i_end_date;
      --raise notice '1 i_start_date is: %', i_start_date;
  end if;
  end if;
    
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
  /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取对应key 最大日期加一天 对应逻辑line 12 */
    then 
      o_start_date := i_start_date;
      o_end_date := i_end_date;
      --raise notice '2 o_start_date is: %', o_start_date;
      --raise notice '2 o_end_date is: %', o_end_date;
  else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
  /*PG function 如果参入任何参数，那么以实际入参为准*/
    then 
      o_start_date := v_start_date;
      o_end_date := v_end_date;
      --raise notice '3 o_start_date is: %', o_start_date;
      --raise notice '3 o_end_date is: %', o_end_date;
  end if;
  end if;
  
  for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
  loop 
  
  --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
  
  delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00159';
  
  INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
                                            remark,st_date) 
	select 'D00159',
					1,
					pt.patient_id,
					pt.visit_id,
					max(pt.pai_visit_id),
					now(),
					'是否产妇', 
					to_char(a.birth_date,'yyyyMMdd')
	from his_bi.pts_pai_birth_reg a
	left join his_bi.pts_pai_visit pt on a.pai_visit_id = pt.pai_visit_id
	where COALESCE(a.status, '1') = '1'
		and a.birth_date >= to_date(c_daylist.day_id,'yyyyMMdd')
		and a.birth_date <  to_date(c_daylist.day_id,'yyyyMMdd') + 1	
		group by 
					pt.patient_id,
					pt.visit_id,
					to_char(a.birth_date,'yyyyMMdd')
		;
    
	end loop;
	RETURN 'SUCCESS';  
END;
  ",['D00159'],"[""delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00159';\r  \r  INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                                            remark,st_date) \r select 'D00159',\r     1,\r     pt.patient_id,\r     pt.visit_id,\r     max(pt.pai_visit_id),\r     now(),\r     '是否产妇', \r     to_char(a.birth_date,'yyyyMMdd')\r from his_bi.pts_pai_birth_reg a\r left join his_bi.pts_pai_visit pt on a.pai_visit_id = pt.pai_visit_id\r where COALESCE(a.status, '1') = '1'\r  and a.birth_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r  and a.birth_date <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 \r  group by \r     pt.patient_id,\r     pt.visit_id,\r     to_char(a.birth_date,'yyyyMMdd')\r  ;\r    \r""]",['是否产妇\r   ']
155,his_bi,fun_dwd_D00160_d_16641,"
/***
函数名称：产妇会阴情况(:0:Ⅰ°;1:Ⅱ°;2:侧切;3:正中切)
    作用：统计某天产妇会阴情况
  开发人：wy 2020-05-15
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00160 根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
  c_daylist record;
  o_start_date varchar;
  o_end_date varchar;
  i_start_date varchar;
  i_end_date varchar;
  i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
    from his_bi.dwd_inp_quantity_d
   where key = 'D00160';
   
  if(i_count = 0)
    then 
      i_start_date := '20200101';
      --raise notice '0 i_start_date is: %', i_start_date;
  else if(i_count > 0)
    then
      i_start_date := i_end_date;
      --raise notice '1 i_start_date is: %', i_start_date;
  end if;
  end if;
    
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
  /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取对应key 最大日期加一天 对应逻辑line 12 */
    then 
      o_start_date := i_start_date;
      o_end_date := i_end_date;
      --raise notice '2 o_start_date is: %', o_start_date;
      --raise notice '2 o_end_date is: %', o_end_date;
  else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
  /*PG function 如果参入任何参数，那么以实际入参为准*/
    then 
      o_start_date := v_start_date;
      o_end_date := v_end_date;
      --raise notice '3 o_start_date is: %', o_start_date;
      --raise notice '3 o_end_date is: %', o_end_date;
  end if;
  end if;
  
  for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
  loop 
  
  --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
  
  delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00160';
  
  INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
                                            remark,st_date) 
	select 'D00160',
					case 
					when a.perineum_fission like '%Ⅰ°%'  then 0
					when a.perineum_fission like '%Ⅱ°%' then 1
					when a.perineum_incision like '%侧切%'  then 2
					when a.perineum_incision like '%正中切%' then 3
					end, --(:0:Ⅰ°;1:Ⅱ°;2:侧切;3:正中切)
					pt.patient_id || '|'|| a.baby_numeric as patient_id,
					pt.visit_id,
					cast((cast(pt.pai_visit_id as text) || cast(a.baby_numeric as text)) as numeric) as pai_visit_id,
					now(),
					'会阴情况', 
					to_char(a.birth_date,'yyyyMMdd')
	from his_bi.pts_pai_birth_reg a
	left join his_bi.pts_pai_visit pt on a.pai_visit_id = pt.pai_visit_id
	where COALESCE(a.status, '1') = '1'
		and a.birth_date >= to_date(c_daylist.day_id,'yyyyMMdd')
		and a.birth_date <  to_date(c_daylist.day_id,'yyyyMMdd') + 1	
		;
    
	end loop;
	RETURN 'SUCCESS';  
END;
  ",['D00160'],"[""delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00160';\r  \r  INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                                            remark,st_date) \r select 'D00160',\r     case \r     when a.perineum_fission like '%Ⅰ°%'  then 0\r     when a.perineum_fission like '%Ⅱ°%' then 1\r     when a.perineum_incision like '%侧切%'  then 2\r     when a.perineum_incision like '%正中切%' then 3\r     end, --(:0:Ⅰ°;1:Ⅱ°;2:侧切;3:正中切)\r     pt.patient_id || '|'|| a.baby_numeric as patient_id,\r     pt.visit_id,\r     cast((cast(pt.pai_visit_id as text) || cast(a.baby_numeric as text)) as numeric) as pai_visit_id,\r     now(),\r     '会阴情况', \r     to_char(a.birth_date,'yyyyMMdd')\r from his_bi.pts_pai_birth_reg a\r left join his_bi.pts_pai_visit pt on a.pai_visit_id = pt.pai_visit_id\r where COALESCE(a.status, '1') = '1'\r  and a.birth_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r  and a.birth_date <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 \r  ;\r    \r""]",['产妇会阴情况(:0:Ⅰ°;1:Ⅱ°;2:侧切;3:正中切)\r   ']
156,his_bi,fun_dwd_D00161_d_16642,"
/***
函数名称：产妇分娩方式(枚举值:0:自娩;1:剖宫分娩;2:手术;3:无痛分娩;4:胎头吸入;5:臀位助娩;6:出口产钳;7:低位产钳;8:自然分娩;)
    作用：统计某天产妇分娩方式
  开发人：wy 2020-05-15
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00161 根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
  c_daylist record;
  o_start_date varchar;
  o_end_date varchar;
  i_start_date varchar;
  i_end_date varchar;
  i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
    from his_bi.dwd_inp_quantity_d
   where key = 'D00161';
   
  if(i_count = 0)
    then 
      i_start_date := '20200101';
      --raise notice '0 i_start_date is: %', i_start_date;
  else if(i_count > 0)
    then
      i_start_date := i_end_date;
      --raise notice '1 i_start_date is: %', i_start_date;
  end if;
  end if;
    
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
  /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取对应key 最大日期加一天 对应逻辑line 12 */
    then 
      o_start_date := i_start_date;
      o_end_date := i_end_date;
      --raise notice '2 o_start_date is: %', o_start_date;
      --raise notice '2 o_end_date is: %', o_end_date;
  else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
  /*PG function 如果参入任何参数，那么以实际入参为准*/
    then 
      o_start_date := v_start_date;
      o_end_date := v_end_date;
      --raise notice '3 o_start_date is: %', o_start_date;
      --raise notice '3 o_end_date is: %', o_end_date;
  end if;
  end if;
  
  for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
  loop 
  
  --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
  
  delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00161';
  
  INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
                                            remark,st_date) 
	select 'D00161',
					case 
					when a.birth_way = '自娩'  then 0
					when a.birth_way = '剖宫分娩' then 1
					when a.birth_way = '手术'  then 2
					when a.birth_way = '无痛分娩' then 3
					when a.birth_way = '胎头吸入' then 4
					when a.birth_way = '臀位助娩' then 5
					when a.birth_way = '出口产钳' then 6
					when a.birth_way = '低位产钳' then 7
					when a.birth_way = '自然分娩' then 8
					end, --(枚举值:0:自娩;1:剖宫分娩;2:手术;3:无痛分娩;4:胎头吸入;5:臀位助娩;6:出口产钳;7:低位产钳;8:自然分娩;)
					pt.patient_id || '|'|| a.baby_numeric as patient_id,
					pt.visit_id,
					cast((cast(pt.pai_visit_id as text) || cast(a.baby_numeric as text)) as numeric) as pai_visit_id,
					now(),
					'分娩方式', 
					to_char(a.birth_date,'yyyyMMdd')
	from his_bi.pts_pai_birth_reg a
	left join his_bi.pts_pai_visit pt on a.pai_visit_id = pt.pai_visit_id
	where COALESCE(a.status, '1') = '1'
		and a.birth_date >= to_date(c_daylist.day_id,'yyyyMMdd')
		and a.birth_date <  to_date(c_daylist.day_id,'yyyyMMdd') + 1
		;
    
	end loop;
	RETURN 'SUCCESS';  
END;
  ",['D00161'],"[""delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00161';\r  \r  INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                                            remark,st_date) \r select 'D00161',\r     case \r     when a.birth_way = '自娩'  then 0\r     when a.birth_way = '剖宫分娩' then 1\r     when a.birth_way = '手术'  then 2\r     when a.birth_way = '无痛分娩' then 3\r     when a.birth_way = '胎头吸入' then 4\r     when a.birth_way = '臀位助娩' then 5\r     when a.birth_way = '出口产钳' then 6\r     when a.birth_way = '低位产钳' then 7\r     when a.birth_way = '自然分娩' then 8\r     end, --(枚举值:0:自娩;1:剖宫分娩;2:手术;3:无痛分娩;4:胎头吸入;5:臀位助娩;6:出口产钳;7:低位产钳;8:自然分娩;)\r     pt.patient_id || '|'|| a.baby_numeric as patient_id,\r     pt.visit_id,\r     cast((cast(pt.pai_visit_id as text) || cast(a.baby_numeric as text)) as numeric) as pai_visit_id,\r     now(),\r     '分娩方式', \r     to_char(a.birth_date,'yyyyMMdd')\r from his_bi.pts_pai_birth_reg a\r left join his_bi.pts_pai_visit pt on a.pai_visit_id = pt.pai_visit_id\r where COALESCE(a.status, '1') = '1'\r  and a.birth_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r  and a.birth_date <  to_date(c_daylist.day_id,'yyyyMMdd') + 1\r  ;\r    \r""]",['产妇分娩方式(枚举值:0:自娩;1:剖宫分娩;2:手术;3:无痛分娩;4:胎头吸入;5:臀位助娩;6:出口产钳;7:低位产钳;8:自然分娩;)\r   ']
157,his_bi,fun_dwd_D00162_d_16643,"
/***
函数名称：产妇分娩方位(枚举值:0:LOA;1:LSA;2:ROA;3:手术;4:自娩;5:RSA;6:胎头;)
    作用：统计某天产妇分娩方位
  开发人：wy 2020-05-15
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00162 根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
  c_daylist record;
  o_start_date varchar;
  o_end_date varchar;
  i_start_date varchar;
  i_end_date varchar;
  i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
    from his_bi.dwd_inp_quantity_d
   where key = 'D00162';
   
  if(i_count = 0)
    then 
      i_start_date := '20200101';
      --raise notice '0 i_start_date is: %', i_start_date;
  else if(i_count > 0)
    then
      i_start_date := i_end_date;
      --raise notice '1 i_start_date is: %', i_start_date;
  end if;
  end if;
    
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
  /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取对应key 最大日期加一天 对应逻辑line 12 */
    then 
      o_start_date := i_start_date;
      o_end_date := i_end_date;
      --raise notice '2 o_start_date is: %', o_start_date;
      --raise notice '2 o_end_date is: %', o_end_date;
  else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
  /*PG function 如果参入任何参数，那么以实际入参为准*/
    then 
      o_start_date := v_start_date;
      o_end_date := v_end_date;
      --raise notice '3 o_start_date is: %', o_start_date;
      --raise notice '3 o_end_date is: %', o_end_date;
  end if;
  end if;
  
  for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
  loop 
  
  --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
  
  delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00162';
  
  INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
                                            remark,st_date) 
	select 'D00162',
          case 
          when a.birth_loc = 'LOA'  then 0
          when a.birth_loc = 'LSA' then 1
          when a.birth_loc = 'ROA'  then 2
          when a.birth_loc = '手术' then 3
          when a.birth_loc = '自娩' then 4
          when a.birth_loc = 'RSA' then 5
          when a.birth_loc = '胎头' then 6
          end, --(枚举值:0:LOA;1:LSA;2:ROA;3:手术;4:自娩;5:RSA;6:胎头;)
          pt.patient_id || '|'|| a.baby_numeric ,
          pt.visit_id,
         cast((cast(pt.pai_visit_id as text) || cast(a.baby_numeric as text)) as numeric) as pai_visit_id,
          now(),
          '分娩方位', 
          to_char(a.birth_date,'yyyyMMdd')
  from his_bi.pts_pai_birth_reg a
  left join his_bi.pts_pai_visit pt on a.pai_visit_id = pt.pai_visit_id
  where COALESCE(a.status, '1') = '1'
    and a.birth_date >= to_date(c_daylist.day_id,'yyyyMMdd')
    and a.birth_date <  to_date(c_daylist.day_id,'yyyyMMdd') + 1  
    ;
    
	end loop;
	RETURN 'SUCCESS';  
END;
  ",['D00162'],"[""delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00162';\r  \r  INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                                            remark,st_date) \r select 'D00162',\r          case \r          when a.birth_loc = 'LOA'  then 0\r          when a.birth_loc = 'LSA' then 1\r          when a.birth_loc = 'ROA'  then 2\r          when a.birth_loc = '手术' then 3\r          when a.birth_loc = '自娩' then 4\r          when a.birth_loc = 'RSA' then 5\r          when a.birth_loc = '胎头' then 6\r          end, --(枚举值:0:LOA;1:LSA;2:ROA;3:手术;4:自娩;5:RSA;6:胎头;)\r          pt.patient_id || '|'|| a.baby_numeric ,\r          pt.visit_id,\r         cast((cast(pt.pai_visit_id as text) || cast(a.baby_numeric as text)) as numeric) as pai_visit_id,\r          now(),\r          '分娩方位', \r          to_char(a.birth_date,'yyyyMMdd')\r  from his_bi.pts_pai_birth_reg a\r  left join his_bi.pts_pai_visit pt on a.pai_visit_id = pt.pai_visit_id\r  where COALESCE(a.status, '1') = '1'\r    and a.birth_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r    and a.birth_date <  to_date(c_daylist.day_id,'yyyyMMdd') + 1  \r    ;\r    \r""]",['产妇分娩方位(枚举值:0:LOA;1:LSA;2:ROA;3:手术;4:自娩;5:RSA;6:胎头;)\r   ']
158,his_bi,fun_dwd_D00163_d_16644,"
/***
函数名称：分娩情况患者-引导分娩统计
    作用：统计某天住院患者中分娩情况-引导分娩人数分布情况
  开发人：wrsong 2020-05-14
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00163  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
    c_daylist record;
    o_start_date varchar;
    o_end_date varchar;
    i_start_date varchar;
    i_end_date varchar;
    i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
      from his_bi.dwd_inp_quantity_d
     where key = 'D00163';
     
  if(i_count = 0)
      then 
          i_start_date := '20200101';
            --raise notice '0 i_start_date is: %', i_start_date;
    else if(i_count > 0)
      then
          i_start_date := i_end_date;
            --raise notice '1 i_start_date is: %', i_start_date;
  end if;
    end if;
        

  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
    /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
      then 
        o_start_date := i_start_date;
        o_end_date := i_end_date;
            --raise notice '2 o_start_date is: %', o_start_date;
            --raise notice '2 o_end_date is: %', o_end_date;
    else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
    /*PG function 如果参入任何参数，那么以实际入参为准*/
      then 
          o_start_date := v_start_date;
        o_end_date := v_end_date;
            --raise notice '3 o_start_date is: %', o_start_date;
            --raise notice '3 o_end_date is: %', o_end_date;
    end if;
    end if;
    
    for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
    loop 
    
    --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
    
    delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00163';
    
  INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
                                                                                        remark,st_date) 
   select 'D00163',
           1 ,
           a.patient_id || '|'|| b.baby_numeric as patient_id,
           a.visit_id,
           cast((cast(a.pai_visit_id as text) || cast(b.baby_numeric as text)) as numeric) as pai_visit_id,
           now(),
           '分娩情况:引导分娩', 
           to_char(b.birth_date,'yyyyMMdd')
      from his_bi.pts_pai_visit a
inner join his_bi.pts_pai_birth_reg b on a.pai_visit_id = b.pai_visit_id
     where b.isodinopoeia = '是' 
       and COALESCE(b.status, '1') = '1'
       and b.birth_date >= to_date(c_daylist.day_id,'yyyyMMdd')
       and b.birth_date <  to_date(c_daylist.day_id,'yyyyMMdd') + 1
      ;
     end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00163'],"[""delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00163';\r    \r  INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                                                                                        remark,st_date) \r   select 'D00163',\r           1 ,\r           a.patient_id || '|'|| b.baby_numeric as patient_id,\r           a.visit_id,\r           cast((cast(a.pai_visit_id as text) || cast(b.baby_numeric as text)) as numeric) as pai_visit_id,\r           now(),\r           '分娩情况:引导分娩', \r           to_char(b.birth_date,'yyyyMMdd')\r      from his_bi.pts_pai_visit a\rinner join his_bi.pts_pai_birth_reg b on a.pai_visit_id = b.pai_visit_id\r     where b.isodinopoeia = '是' \r       and COALESCE(b.status, '1') = '1'\r       and b.birth_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r       and b.birth_date <  to_date(c_daylist.day_id,'yyyyMMdd') + 1\r      ;\r    ""]",['分娩情况患者-引导分娩统计\r   ']
159,his_bi,fun_dwd_D00164_d_16645,"
/***
函数名称：宫颈修补患者统计
    作用：统计某天住院患者中宫颈修补患者的人数
  开发人：wrsong 2020-05-14
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00164  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
    c_daylist record;
    o_start_date varchar;
    o_end_date varchar;
    i_start_date varchar;
    i_end_date varchar;
    i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
      from his_bi.dwd_inp_quantity_d
     where key = 'D00164';
     
  if(i_count = 0)
      then 
          i_start_date := '20200101';
            --raise notice '0 i_start_date is: %', i_start_date;
    else if(i_count > 0)
      then
          i_start_date := i_end_date;
            --raise notice '1 i_start_date is: %', i_start_date;
  end if;
    end if;
        

  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
    /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
      then 
        o_start_date := i_start_date;
        o_end_date := i_end_date;
            --raise notice '2 o_start_date is: %', o_start_date;
            --raise notice '2 o_end_date is: %', o_end_date;
    else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
    /*PG function 如果参入任何参数，那么以实际入参为准*/
      then 
          o_start_date := v_start_date;
        o_end_date := v_end_date;
            --raise notice '3 o_start_date is: %', o_start_date;
            --raise notice '3 o_end_date is: %', o_end_date;
    end if;
    end if;
    
    for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
    loop 
    
    --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
    
    delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00164';
    
  INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
                                                                                        remark,st_date) 
   select 'D00164',
           1,
           a.patient_id,
           a.visit_id,
           a.pai_visit_id,
           now(),
           '宫颈修补', 
           to_char(b.birth_date,'yyyyMMdd')
      from his_bi.pts_pai_visit a
inner join his_bi.pts_pai_birth_reg b on a.pai_visit_id = b.pai_visit_id
     where b.ismazischesis = '是' 
       and COALESCE(b.status, '1') = '1'
       and b.birth_date >= to_date(c_daylist.day_id,'yyyyMMdd')
       and b.birth_date <  to_date(c_daylist.day_id,'yyyyMMdd') + 1
      ;
     end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00164'],"[""delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00164';      INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,                                                                                        remark,st_date)    select 'D00164',           1,           a.patient_id,           a.visit_id,           a.pai_visit_id,           now(),           '宫颈修补',            to_char(b.birth_date,'yyyyMMdd')      from his_bi.pts_pai_visit ainner join his_bi.pts_pai_birth_reg b on a.pai_visit_id = b.pai_visit_id     where b.ismazischesis = '是'        and COALESCE(b.status, '1') = '1'       and b.birth_date >= to_date(c_daylist.day_id,'yyyyMMdd')       and b.birth_date <  to_date(c_daylist.day_id,'yyyyMMdd') + 1      ;    ""]",['宫颈修补患者统计   ']
160,his_bi,fun_dwd_D00165_d_16646,"
/***
函数名称：胎盘滞留患者统计
    作用：统计某天住院患者中胎盘滞留患者的人数
  开发人：wrsong 2020-05-14
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00165  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
    c_daylist record;
    o_start_date varchar;
    o_end_date varchar;
    i_start_date varchar;
    i_end_date varchar;
    i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
      from his_bi.dwd_inp_quantity_d
     where key = 'D00165';
     
  if(i_count = 0)
      then 
          i_start_date := '20200101';
            --raise notice '0 i_start_date is: %', i_start_date;
    else if(i_count > 0)
      then
          i_start_date := i_end_date;
            --raise notice '1 i_start_date is: %', i_start_date;
  end if;
    end if;
        

  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
    /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
      then 
        o_start_date := i_start_date;
        o_end_date := i_end_date;
            --raise notice '2 o_start_date is: %', o_start_date;
            --raise notice '2 o_end_date is: %', o_end_date;
    else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
    /*PG function 如果参入任何参数，那么以实际入参为准*/
      then 
          o_start_date := v_start_date;
        o_end_date := v_end_date;
            --raise notice '3 o_start_date is: %', o_start_date;
            --raise notice '3 o_end_date is: %', o_end_date;
    end if;
    end if;
    
    for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
    loop 
    
    --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
    
    delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00165';
    
  INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
                                                                                        remark,st_date) 
   select 'D00165',
           1,
           a.patient_id,
           a.visit_id,
           a.pai_visit_id,
           now(),
           '胎盘滞留', 
           to_char(b.birth_date,'yyyyMMdd')
      from his_bi.pts_pai_visit a
inner join his_bi.pts_pai_birth_reg b on a.pai_visit_id = b.pai_visit_id
     where b.ismazischesis = '是' 
       and COALESCE(b.status, '1') = '1'
       and b.birth_date >= to_date(c_daylist.day_id,'yyyyMMdd')
       and b.birth_date <  to_date(c_daylist.day_id,'yyyyMMdd') + 1
      ;
     end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00165'],"[""delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00165';      INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,                                                                                        remark,st_date)    select 'D00165',           1,           a.patient_id,           a.visit_id,           a.pai_visit_id,           now(),           '胎盘滞留',            to_char(b.birth_date,'yyyyMMdd')      from his_bi.pts_pai_visit ainner join his_bi.pts_pai_birth_reg b on a.pai_visit_id = b.pai_visit_id     where b.ismazischesis = '是'        and COALESCE(b.status, '1') = '1'       and b.birth_date >= to_date(c_daylist.day_id,'yyyyMMdd')       and b.birth_date <  to_date(c_daylist.day_id,'yyyyMMdd') + 1      ;    ""]",['胎盘滞留患者统计   ']
161,his_bi,fun_dwd_D00166_d_16647,"
/***
函数名称：清宫患者统计
    作用：统计某天住院患者中清宫患者的人数
  开发人：wrsong 2020-05-14
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00166  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
    c_daylist record;
    o_start_date varchar;
    o_end_date varchar;
    i_start_date varchar;
    i_end_date varchar;
    i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
      from his_bi.dwd_inp_quantity_d
     where key = 'D00166';
     
  if(i_count = 0)
      then 
          i_start_date := '20200101';
            --raise notice '0 i_start_date is: %', i_start_date;
    else if(i_count > 0)
      then
          i_start_date := i_end_date;
            --raise notice '1 i_start_date is: %', i_start_date;
  end if;
    end if;
        

  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
    /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
      then 
        o_start_date := i_start_date;
        o_end_date := i_end_date;
            --raise notice '2 o_start_date is: %', o_start_date;
            --raise notice '2 o_end_date is: %', o_end_date;
    else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
    /*PG function 如果参入任何参数，那么以实际入参为准*/
      then 
          o_start_date := v_start_date;
        o_end_date := v_end_date;
            --raise notice '3 o_start_date is: %', o_start_date;
            --raise notice '3 o_end_date is: %', o_end_date;
    end if;
    end if;
    
    for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
    loop 
    
    --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
    
    delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00166';
    
  INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
                                                                                        remark,st_date) 
   select 'D00166',
           '1',
           a.patient_id,
           a.visit_id,
           a.pai_visit_id,
           now(),
           '清宫', 
           to_char(b.birth_date,'yyyyMMdd')
      from his_bi.pts_pai_visit a
inner join his_bi.pts_pai_birth_reg b on a.pai_visit_id = b.pai_visit_id
     where b.remark like '%清宫%'
       and COALESCE(b.status, '1') = '1'
       and b.birth_date >= to_date(c_daylist.day_id,'yyyyMMdd')
       and b.birth_date <  to_date(c_daylist.day_id,'yyyyMMdd') + 1
      ;
     end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00166'],"[""delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00166';      INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,                                                                                        remark,st_date)    select 'D00166',           '1',           a.patient_id,           a.visit_id,           a.pai_visit_id,           now(),           '清宫',            to_char(b.birth_date,'yyyyMMdd')      from his_bi.pts_pai_visit ainner join his_bi.pts_pai_birth_reg b on a.pai_visit_id = b.pai_visit_id     where b.remark like '%清宫%'       and COALESCE(b.status, '1') = '1'       and b.birth_date >= to_date(c_daylist.day_id,'yyyyMMdd')       and b.birth_date <  to_date(c_daylist.day_id,'yyyyMMdd') + 1      ;    ""]",['清宫患者统计   ']
162,his_bi,fun_dwd_D00167_d_16648,"
/***
函数名称：清宫患者统计
    作用：统计某天住院患者中清宫患者的人数
  开发人：wrsong 2020-05-14
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00167  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
    c_daylist record;
    o_start_date varchar;
    o_end_date varchar;
    i_start_date varchar;
    i_end_date varchar;
    i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
      from his_bi.dwd_inp_quantity_d
     where key = 'D00167';
     
  if(i_count = 0)
      then 
          i_start_date := '20200101';
            --raise notice '0 i_start_date is: %', i_start_date;
    else if(i_count > 0)
      then
          i_start_date := i_end_date;
            --raise notice '1 i_start_date is: %', i_start_date;
  end if;
    end if;
        

  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
    /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
      then 
        o_start_date := i_start_date;
        o_end_date := i_end_date;
            --raise notice '2 o_start_date is: %', o_start_date;
            --raise notice '2 o_end_date is: %', o_end_date;
    else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
    /*PG function 如果参入任何参数，那么以实际入参为准*/
      then 
          o_start_date := v_start_date;
        o_end_date := v_end_date;
            --raise notice '3 o_start_date is: %', o_start_date;
            --raise notice '3 o_end_date is: %', o_end_date;
    end if;
    end if;
    
    for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
    loop 
    
    --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
    
    delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00167';
    
  INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
                                                                                        remark,st_date) 
   select 'D00167',
           '1',
           a.patient_id,
           a.visit_id,
           a.pai_visit_id,
           now(),
           '手剥胎盘', 
           to_char(b.birth_date,'yyyyMMdd')
      from his_bi.pts_pai_visit a
inner join his_bi.pts_pai_birth_reg b on a.pai_visit_id = b.pai_visit_id
     where b.remark like '%手剥胎盘%'
       and COALESCE(b.status, '1') = '1'
       and b.birth_date >= to_date(c_daylist.day_id,'yyyyMMdd')
       and b.birth_date <  to_date(c_daylist.day_id,'yyyyMMdd') + 1;
     end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00167'],"[""delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00167';\r    \r  INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                                                                                        remark,st_date) \r   select 'D00167',\r           '1',\r           a.patient_id,\r           a.visit_id,\r           a.pai_visit_id,\r           now(),\r           '手剥胎盘', \r           to_char(b.birth_date,'yyyyMMdd')\r      from his_bi.pts_pai_visit a\rinner join his_bi.pts_pai_birth_reg b on a.pai_visit_id = b.pai_visit_id\r     where b.remark like '%手剥胎盘%'\r       and COALESCE(b.status, '1') = '1'\r       and b.birth_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r       and b.birth_date <  to_date(c_daylist.day_id,'yyyyMMdd') + 1;\r    ""]",['清宫患者统计\r   ']
163,his_bi,fun_dwd_D00168_d_16649,"
/***
函数名称：会阴麻醉患者统计
    作用：统计某天住院患者中会阴麻醉患者的人数
  开发人：wrsong 2020-05-14
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00168  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
    c_daylist record;
    o_start_date varchar;
    o_end_date varchar;
    i_start_date varchar;
    i_end_date varchar;
    i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
      from his_bi.dwd_inp_quantity_d
     where key = 'D00168';
     
  if(i_count = 0)
      then 
          i_start_date := '20200101';
            --raise notice '0 i_start_date is: %', i_start_date;
    else if(i_count > 0)
      then
          i_start_date := i_end_date;
            --raise notice '1 i_start_date is: %', i_start_date;
  end if;
    end if;
        

  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
    /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
      then 
        o_start_date := i_start_date;
        o_end_date := i_end_date;
            --raise notice '2 o_start_date is: %', o_start_date;
            --raise notice '2 o_end_date is: %', o_end_date;
    else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
    /*PG function 如果参入任何参数，那么以实际入参为准*/
      then 
          o_start_date := v_start_date;
        o_end_date := v_end_date;
            --raise notice '3 o_start_date is: %', o_start_date;
            --raise notice '3 o_end_date is: %', o_end_date;
    end if;
    end if;
    
    for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
    loop 
    
    --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
    
    delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00168';
    
  INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
                                                                                        remark,st_date) 
   select 'D00168',
           1,
           a.patient_id,
           a.visit_id,
           a.pai_visit_id,
           now(),
           '会阴麻醉', 
           to_char(b.birth_date,'yyyyMMdd')
      from his_bi.pts_pai_visit a
inner join his_bi.pts_pai_birth_reg b on a.pai_visit_id = b.pai_visit_id
     where COALESCE(b.status, '1') = '1'
       and b.isperineal_block_anesthesia='1' --取会阴麻醉患者
       and b.birth_date >= to_date(c_daylist.day_id,'yyyyMMdd')
       and b.birth_date <  to_date(c_daylist.day_id,'yyyyMMdd') + 1
      ;
     end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00168'],"[""delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00168';      INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,                                                                                        remark,st_date)    select 'D00168',           1,           a.patient_id,           a.visit_id,           a.pai_visit_id,           now(),           '会阴麻醉',            to_char(b.birth_date,'yyyyMMdd')      from his_bi.pts_pai_visit ainner join his_bi.pts_pai_birth_reg b on a.pai_visit_id = b.pai_visit_id     where COALESCE(b.status, '1') = '1'       and b.isperineal_block_anesthesia='1' --取会阴麻醉患者       and b.birth_date >= to_date(c_daylist.day_id,'yyyyMMdd')       and b.birth_date <  to_date(c_daylist.day_id,'yyyyMMdd') + 1      ;    ""]",['会阴麻醉患者统计   ']
164,his_bi,fun_dwd_D00169_d_16650,"
/***
函数名称：产后出血统计
    作用：统计某天住院患者中产后出血的人数
  开发人：wrsong 2020-05-14
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00169  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
    c_daylist record;
    o_start_date varchar;
    o_end_date varchar;
    i_start_date varchar;
    i_end_date varchar;
    i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
      from his_bi.dwd_inp_quantity_d
     where key = 'D00169';
     
  if(i_count = 0)
      then 
          i_start_date := '20200101';
            --raise notice '0 i_start_date is: %', i_start_date;
    else if(i_count > 0)
      then
          i_start_date := i_end_date;
            --raise notice '1 i_start_date is: %', i_start_date;
  end if;
    end if;
        

  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
    /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
      then 
        o_start_date := i_start_date;
        o_end_date := i_end_date;
            --raise notice '2 o_start_date is: %', o_start_date;
            --raise notice '2 o_end_date is: %', o_end_date;
    else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
    /*PG function 如果参入任何参数，那么以实际入参为准*/
      then 
          o_start_date := v_start_date;
        o_end_date := v_end_date;
            --raise notice '3 o_start_date is: %', o_start_date;
            --raise notice '3 o_end_date is: %', o_end_date;
    end if;
    end if;
    
    for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
    loop 
    
    --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
    
    delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00169';
    
  INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
                                                                                        remark,st_date) 
  select 'D00169',
           1,
           a.patient_id,
           a.visit_id,
           max(a.pai_visit_id),
           now(),
           '是否产后出血', 
           to_char(b.birth_date,'yyyyMMdd')
      from his_bi.pts_pai_visit a
inner join his_bi.pts_pai_birth_reg b on a.pai_visit_id = b.pai_visit_id
     where COALESCE(b.status, '1') = '1'
       and b.postpartum_hemorrhage>0
       and b.birth_date >= to_date(c_daylist.day_id,'yyyyMMdd')
       and b.birth_date <  to_date(c_daylist.day_id,'yyyyMMdd') + 1
			 group by 
			 a.patient_id,
			 a.visit_id,
			 to_char(b.birth_date,'yyyyMMdd')
      ;
     end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00169'],"[""delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00169';\r    \r  INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                                                                                        remark,st_date) \r  select 'D00169',\r           1,\r           a.patient_id,\r           a.visit_id,\r           max(a.pai_visit_id),\r           now(),\r           '是否产后出血', \r           to_char(b.birth_date,'yyyyMMdd')\r      from his_bi.pts_pai_visit a\rinner join his_bi.pts_pai_birth_reg b on a.pai_visit_id = b.pai_visit_id\r     where COALESCE(b.status, '1') = '1'\r       and b.postpartum_hemorrhage>0\r       and b.birth_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r       and b.birth_date <  to_date(c_daylist.day_id,'yyyyMMdd') + 1\r    group by \r    a.patient_id,\r    a.visit_id,\r    to_char(b.birth_date,'yyyyMMdd')\r      ;\r    ""]",['产后出血统计\r   ']
165,his_bi,fun_dwd_D00170_d_16651,"
/***
函数名称：导乐统计
    作用：统计某天住院患者中使用了导乐的人数
  开发人：wrsong 2020-05-14
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00170  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
    c_daylist record;
    o_start_date varchar;
    o_end_date varchar;
    i_start_date varchar;
    i_end_date varchar;
    i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
      from his_bi.dwd_inp_quantity_d
     where key = 'D00170';
     
  if(i_count = 0)
      then 
          i_start_date := '20200101';
            --raise notice '0 i_start_date is: %', i_start_date;
    else if(i_count > 0)
      then
          i_start_date := i_end_date;
            --raise notice '1 i_start_date is: %', i_start_date;
  end if;
    end if;
        

  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
    /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
      then 
        o_start_date := i_start_date;
        o_end_date := i_end_date;
            --raise notice '2 o_start_date is: %', o_start_date;
            --raise notice '2 o_end_date is: %', o_end_date;
    else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
    /*PG function 如果参入任何参数，那么以实际入参为准*/
      then 
          o_start_date := v_start_date;
        o_end_date := v_end_date;
            --raise notice '3 o_start_date is: %', o_start_date;
            --raise notice '3 o_end_date is: %', o_end_date;
    end if;
    end if;
    
    for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
    loop 
    
    --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
    
    delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00170';
    
  INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
                                                                                        remark,st_date) 
  select 'D00170',
           1,
           a.patient_id,
           a.visit_id,
           a.pai_visit_id,
           now(),
           '导乐', 
           to_char(b.birth_date,'yyyyMMdd')
      from his_bi.pts_pai_visit a
  inner join his_bi.pts_pai_birth_reg b on a.pai_visit_id = b.pai_visit_id
       where b.remark like '%导乐%'
         and COALESCE(b.status, '1') = '1'
         and b.birth_date >= to_date(c_daylist.day_id,'yyyyMMdd')
         and b.birth_date <  to_date(c_daylist.day_id,'yyyyMMdd') + 1
      ;
     end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00170'],"[""delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00170';      INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,                                                                                        remark,st_date)   select 'D00170',           1,           a.patient_id,           a.visit_id,           a.pai_visit_id,           now(),           '导乐',            to_char(b.birth_date,'yyyyMMdd')      from his_bi.pts_pai_visit a  inner join his_bi.pts_pai_birth_reg b on a.pai_visit_id = b.pai_visit_id       where b.remark like '%导乐%'         and COALESCE(b.status, '1') = '1'         and b.birth_date >= to_date(c_daylist.day_id,'yyyyMMdd')         and b.birth_date <  to_date(c_daylist.day_id,'yyyyMMdd') + 1      ;    ""]",['导乐统计   ']
166,his_bi,fun_dwd_D00171_d_16652,"
/***
函数名称：水中分娩统计
    作用：统计某天住院患者中使用了水中分娩的人数
  开发人：wrsong 2020-05-14
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00171  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
    c_daylist record;
    o_start_date varchar;
    o_end_date varchar;
    i_start_date varchar;
    i_end_date varchar;
    i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
      from his_bi.dwd_inp_quantity_d
     where key = 'D00171';
     
  if(i_count = 0)
      then 
          i_start_date := '20200101';
            --raise notice '0 i_start_date is: %', i_start_date;
    else if(i_count > 0)
      then
          i_start_date := i_end_date;
            --raise notice '1 i_start_date is: %', i_start_date;
  end if;
    end if;
        

  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
    /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
      then 
        o_start_date := i_start_date;
        o_end_date := i_end_date;
            --raise notice '2 o_start_date is: %', o_start_date;
            --raise notice '2 o_end_date is: %', o_end_date;
    else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
    /*PG function 如果参入任何参数，那么以实际入参为准*/
      then 
          o_start_date := v_start_date;
        o_end_date := v_end_date;
            --raise notice '3 o_start_date is: %', o_start_date;
            --raise notice '3 o_end_date is: %', o_end_date;
    end if;
    end if;
    
    for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
    loop 
    
    --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
    
    delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00171';
    
  INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
                                                                                        remark,st_date) 
  select 'D00171',
           1,
           a.patient_id,
           a.visit_id,
           a.pai_visit_id,
           now(),
           '水中分娩', 
           to_char(b.birth_date,'yyyyMMdd')
      from his_bi.pts_pai_visit a
  inner join his_bi.pts_pai_birth_reg b on a.pai_visit_id = b.pai_visit_id
       where b.birth_way = '水中分娩'
         and COALESCE(b.status, '1') = '1'
         and b.birth_date >= to_date(c_daylist.day_id,'yyyyMMdd')
         and b.birth_date <  to_date(c_daylist.day_id,'yyyyMMdd') + 1
      ;
     end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00171'],"[""delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00171';      INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,                                                                                        remark,st_date)   select 'D00171',           1,           a.patient_id,           a.visit_id,           a.pai_visit_id,           now(),           '水中分娩',            to_char(b.birth_date,'yyyyMMdd')      from his_bi.pts_pai_visit a  inner join his_bi.pts_pai_birth_reg b on a.pai_visit_id = b.pai_visit_id       where b.birth_way = '水中分娩'         and COALESCE(b.status, '1') = '1'         and b.birth_date >= to_date(c_daylist.day_id,'yyyyMMdd')         and b.birth_date <  to_date(c_daylist.day_id,'yyyyMMdd') + 1      ;    ""]",['水中分娩统计   ']
167,his_bi,fun_dwd_D00172_d_16653,"
/***
函数名称：死胎死产
    作用：统计某天住院患者中死胎死产的人数
  开发人：wrsong 2020-05-14
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00172  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
    c_daylist record;
    o_start_date varchar;
    o_end_date varchar;
    i_start_date varchar;
    i_end_date varchar;
    i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
      from his_bi.dwd_inp_quantity_d
     where key = 'D00172';
     
  if(i_count = 0)
      then 
          i_start_date := '20200101';
            --raise notice '0 i_start_date is: %', i_start_date;
    else if(i_count > 0)
      then
          i_start_date := i_end_date;
            --raise notice '1 i_start_date is: %', i_start_date;
  end if;
    end if;
        

  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
    /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
      then 
        o_start_date := i_start_date;
        o_end_date := i_end_date;
            --raise notice '2 o_start_date is: %', o_start_date;
            --raise notice '2 o_end_date is: %', o_end_date;
    else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
    /*PG function 如果参入任何参数，那么以实际入参为准*/
      then 
          o_start_date := v_start_date;
        o_end_date := v_end_date;
            --raise notice '3 o_start_date is: %', o_start_date;
            --raise notice '3 o_end_date is: %', o_end_date;
    end if;
    end if;
    
    for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
    loop 
    
    --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
    
    delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00172';
    
  INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
                                                                                        remark,st_date) 
  select 'D00172',
           1,
           a.patient_id,
           a.visit_id,
           max(a.pai_visit_id),
           now(),
           '死胎死产', 
           to_char(b.birth_date,'yyyyMMdd')
      from his_bi.pts_pai_visit a
  inner join his_bi.pts_pai_birth_reg b on a.pai_visit_id = b.pai_visit_id
       where b.baby_status in ('死胎','死产')
         and COALESCE(b.status, '1') = '1'
         and b.birth_date >= to_date(c_daylist.day_id,'yyyyMMdd')
         and b.birth_date <  to_date(c_daylist.day_id,'yyyyMMdd') + 1
			 group by 
				  a.patient_id,
           a.visit_id,
           to_char(b.birth_date,'yyyyMMdd')
      ;
     end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00172'],"[""delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00172';\r    \r  INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                                                                                        remark,st_date) \r  select 'D00172',\r           1,\r           a.patient_id,\r           a.visit_id,\r           max(a.pai_visit_id),\r           now(),\r           '死胎死产', \r           to_char(b.birth_date,'yyyyMMdd')\r      from his_bi.pts_pai_visit a\r  inner join his_bi.pts_pai_birth_reg b on a.pai_visit_id = b.pai_visit_id\r       where b.baby_status in ('死胎','死产')\r         and COALESCE(b.status, '1') = '1'\r         and b.birth_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r         and b.birth_date <  to_date(c_daylist.day_id,'yyyyMMdd') + 1\r    group by \r      a.patient_id,\r           a.visit_id,\r           to_char(b.birth_date,'yyyyMMdd')\r      ;\r    ""]",['死胎死产\r   ']
168,his_bi,fun_dwd_D00173_d_16654,"
/***
函数名称：社区获得性肺炎--住院、儿童
    作用：社区获得性肺炎--住院、儿童
  开发人：leslie 2020-06-17
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00173  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
    c_daylist record;
    o_start_date varchar;
    o_end_date varchar;
    i_start_date varchar;
    i_end_date varchar;
    i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
      from his_bi.dwd_inp_medical_d
     where key = 'D00173';
     
  if(i_count = 0)
      then 
          i_start_date := '20200101';
            --raise notice '0 i_start_date is: %', i_start_date;
    else if(i_count > 0)
      then
          i_start_date := i_end_date;
            --raise notice '1 i_start_date is: %', i_start_date;
  end if;
    end if;
        

  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
    /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
      then 
        o_start_date := i_start_date;
        o_end_date := i_end_date;
            --raise notice '2 o_start_date is: %', o_start_date;
            --raise notice '2 o_end_date is: %', o_end_date;
    else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
    /*PG function 如果参入任何参数，那么以实际入参为准*/
      then 
          o_start_date := v_start_date;
        o_end_date := v_end_date;
            --raise notice '3 o_start_date is: %', o_start_date;
            --raise notice '3 o_end_date is: %', o_end_date;
    end if;
    end if;
    
    for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
    loop 
    
    --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
    
    delete from his_bi.dwd_inp_medical_d where st_date = c_daylist.day_id and key = 'D00173';
    
  INSERT into his_bi.dwd_inp_medical_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
                                                                                        remark,st_date) 
      select 'D00173',
				 1, 
				 d.bah as patient_id,
				 d.zycs as visit_id,
				 a.pai_visit_id,
				 now(),
				 '社区获得性肺炎--住院、儿童',
			  to_char(d.cyrq,'yyyymmdd') as st_date
	 from his_bi.ods_patient_medical_record d
	 left join his_bi.pts_pai_visit a
	 on (a.patient_id =d.bah and a.visit_id =d.zycs)
	inner join his_bi.ods_patient_diag_info b 
		 on d.brxh = b.brxh 
		and b.main_diag = '1'   --主诊断
	where  exists(select * from his_bi.dim_oper_other_info t
							  where t.icd_code = b.diagdiseasecode 
									and t.icd_type = '单病种'
									and t.icd_describe = '社区获得性肺炎--住院、儿童'
									)
				and d.nl like '%岁%'
				and cast(split_part(d.nl,'岁',1) as int) < 14
        and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
        and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1; 
     end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00173'],"[""delete from his_bi.dwd_inp_medical_d where st_date = c_daylist.day_id and key = 'D00173';\r    \r  INSERT into his_bi.dwd_inp_medical_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                                                                                        remark,st_date) \r      select 'D00173',\r     1, \r     d.bah as patient_id,\r     d.zycs as visit_id,\r     a.pai_visit_id,\r     now(),\r     '社区获得性肺炎--住院、儿童',\r     to_char(d.cyrq,'yyyymmdd') as st_date\r  from his_bi.ods_patient_medical_record d\r  left join his_bi.pts_pai_visit a\r  on (a.patient_id =d.bah and a.visit_id =d.zycs)\r inner join his_bi.ods_patient_diag_info b \r   on d.brxh = b.brxh \r  and b.main_diag = '1'   --主诊断\r where  exists(select * from his_bi.dim_oper_other_info t\r         where t.icd_code = b.diagdiseasecode \r         and t.icd_type = '单病种'\r         and t.icd_describe = '社区获得性肺炎--住院、儿童'\r         )\r    and d.nl like '%岁%'\r    and cast(split_part(d.nl,'岁',1) as int) < 14\r        and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')\r        and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1; \r    ""]",['社区获得性肺炎--住院、儿童\r   ']
169,his_bi,fun_dwd_D00174_d_16655,"
/***
函数名称：住院患者髋、膝关节置换术打标
    作用：统计某天住院患者中做了髋、膝关节置换术的人
  开发人：肖斌 2020-05-16
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00174  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

   髋、膝关节置换术
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00174';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00174';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
   SELECT
		'D00174' as key,
		count(1) as value,
		pai.patient_id,
		pai.visit_id,
		pai.pai_visit_id,
		Now () as insert_date,
		'重点手术：髋、膝关节置换术' remark ,
		to_char(o.surgerydate,'yyyymmdd') as st_date
	FROM
		his_bi.ods_patient_opertion_info o,
		his_bi.pts_pai_visit pai 
	WHERE
		o.patient_id = pai.patient_id 
		AND o.visit_id = pai.visit_id 
		AND his_bi.has_matched_icd9_rule ('SJGL_DJPS_ZDSS',o.surgerycode,'髋、膝关节置换术')
		AND o.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')
		AND o.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 
		GROUP BY
		pai.patient_id,
		pai.visit_id,
		pai.pai_visit_id,
		insert_date,
		remark ,
		st_date
  ; 
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00174'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00174';\r \r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r   SELECT\r  'D00174' as key,\r  count(1) as value,\r  pai.patient_id,\r  pai.visit_id,\r  pai.pai_visit_id,\r  Now () as insert_date,\r  '重点手术：髋、膝关节置换术' remark ,\r  to_char(o.surgerydate,'yyyymmdd') as st_date\r FROM\r  his_bi.ods_patient_opertion_info o,\r  his_bi.pts_pai_visit pai \r WHERE\r  o.patient_id = pai.patient_id \r  AND o.visit_id = pai.visit_id \r  AND his_bi.has_matched_icd9_rule ('SJGL_DJPS_ZDSS',o.surgerycode,'髋、膝关节置换术')\r  AND o.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')\r  AND o.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 \r  GROUP BY\r  pai.patient_id,\r  pai.visit_id,\r  pai.pai_visit_id,\r  insert_date,\r  remark ,\r  st_date\r  ; \r \r ""]",['住院患者髋、膝关节置换术打标\r   ']
170,his_bi,fun_dwd_D00175_d_16656,"
/***
函数名称：住院患者椎板切除术或脊柱融合相关手术打标
    作用：统计某天住院患者中做了椎板切除术或脊柱融合相关手术的人
  开发人：肖斌 2020-05-16
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00175  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

   椎板切除术或脊柱融合相关手术
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00175';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00175';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
   SELECT
		'D00175' as key,
		count(1) as value,
		pai.patient_id,
		pai.visit_id,
		pai.pai_visit_id,
		Now () as insert_date,
		'重点手术：椎板切除术或脊柱融合相关手术' remark ,
		to_char(o.surgerydate,'yyyymmdd') as st_date
	FROM
		his_bi.ods_patient_opertion_info o,
		his_bi.pts_pai_visit pai 
	WHERE
		o.patient_id = pai.patient_id 
		AND o.visit_id = pai.visit_id 
		AND his_bi.has_matched_icd9_rule ('SJGL_DJPS_ZDSS',o.surgerycode,'椎板切除术或脊柱融合相关手术')
		AND o.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')
		AND o.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 
		GROUP BY
		pai.patient_id,
		pai.visit_id,
		pai.pai_visit_id,
		insert_date,
		remark ,
		st_date
  ; 
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00175'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00175';\r \r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r   SELECT\r  'D00175' as key,\r  count(1) as value,\r  pai.patient_id,\r  pai.visit_id,\r  pai.pai_visit_id,\r  Now () as insert_date,\r  '重点手术：椎板切除术或脊柱融合相关手术' remark ,\r  to_char(o.surgerydate,'yyyymmdd') as st_date\r FROM\r  his_bi.ods_patient_opertion_info o,\r  his_bi.pts_pai_visit pai \r WHERE\r  o.patient_id = pai.patient_id \r  AND o.visit_id = pai.visit_id \r  AND his_bi.has_matched_icd9_rule ('SJGL_DJPS_ZDSS',o.surgerycode,'椎板切除术或脊柱融合相关手术')\r  AND o.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')\r  AND o.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 \r  GROUP BY\r  pai.patient_id,\r  pai.visit_id,\r  pai.pai_visit_id,\r  insert_date,\r  remark ,\r  st_date\r  ; \r \r ""]",['住院患者椎板切除术或脊柱融合相关手术打标\r   ']
171,his_bi,fun_dwd_D00176_d_16657,"
/***
函数名称：住院患者胰腺切除手术打标
    作用：统计某天住院患者中做了胰腺切除手术的人
  开发人：肖斌 2020-05-16
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00176  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

   胰腺切除手术
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00176';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00176';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
   SELECT
		'D00176' as key,
		count(1) as value,
		pai.patient_id,
		pai.visit_id,
		pai.pai_visit_id,
		Now () as insert_date,
		'重点手术：胰腺切除手术' remark ,
		to_char(o.surgerydate,'yyyymmdd') as st_date
	FROM
		his_bi.ods_patient_opertion_info o,
		his_bi.pts_pai_visit pai 
	WHERE
		o.patient_id = pai.patient_id 
		AND o.visit_id = pai.visit_id 
		AND his_bi.has_matched_icd9_rule ('SJGL_DJPS_ZDSS',o.surgerycode,'胰腺切除手术')
		AND o.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')
		AND o.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 
		GROUP BY
		pai.patient_id,
		pai.visit_id,
		pai.pai_visit_id,
		insert_date,
		remark ,
		st_date
  ; 
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00176'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00176';\r \r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r   SELECT\r  'D00176' as key,\r  count(1) as value,\r  pai.patient_id,\r  pai.visit_id,\r  pai.pai_visit_id,\r  Now () as insert_date,\r  '重点手术：胰腺切除手术' remark ,\r  to_char(o.surgerydate,'yyyymmdd') as st_date\r FROM\r  his_bi.ods_patient_opertion_info o,\r  his_bi.pts_pai_visit pai \r WHERE\r  o.patient_id = pai.patient_id \r  AND o.visit_id = pai.visit_id \r  AND his_bi.has_matched_icd9_rule ('SJGL_DJPS_ZDSS',o.surgerycode,'胰腺切除手术')\r  AND o.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')\r  AND o.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 \r  GROUP BY\r  pai.patient_id,\r  pai.visit_id,\r  pai.pai_visit_id,\r  insert_date,\r  remark ,\r  st_date\r  ; \r \r ""]",['住院患者胰腺切除手术打标\r   ']
172,his_bi,fun_dwd_D00177_d_16658,"
/***
函数名称：住院患者食管切除手术打标
    作用：统计某天住院患者中做了食管切除手术的人
  开发人：肖斌 2020-05-16
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00177  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

   食管切除手术
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00177';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00177';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
   SELECT
		'D00177' as key,
		count(1) as value,
		pai.patient_id,
		pai.visit_id,
		pai.pai_visit_id,
		Now () as insert_date,
		'重点手术：食管切除手术' remark ,
		to_char(o.surgerydate,'yyyymmdd') as st_date
	FROM
		his_bi.ods_patient_opertion_info o,
		his_bi.pts_pai_visit pai 
	WHERE
		o.patient_id = pai.patient_id 
		AND o.visit_id = pai.visit_id 
		AND his_bi.has_matched_icd9_rule ('SJGL_DJPS_ZDSS',o.surgerycode,'食管切除手术')
		AND o.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')
		AND o.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 
		GROUP BY
		pai.patient_id,
		pai.visit_id,
		pai.pai_visit_id,
		insert_date,
		remark ,
		st_date
  ; 
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00177'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00177';\r \r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r   SELECT\r  'D00177' as key,\r  count(1) as value,\r  pai.patient_id,\r  pai.visit_id,\r  pai.pai_visit_id,\r  Now () as insert_date,\r  '重点手术：食管切除手术' remark ,\r  to_char(o.surgerydate,'yyyymmdd') as st_date\r FROM\r  his_bi.ods_patient_opertion_info o,\r  his_bi.pts_pai_visit pai \r WHERE\r  o.patient_id = pai.patient_id \r  AND o.visit_id = pai.visit_id \r  AND his_bi.has_matched_icd9_rule ('SJGL_DJPS_ZDSS',o.surgerycode,'食管切除手术')\r  AND o.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')\r  AND o.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 \r  GROUP BY\r  pai.patient_id,\r  pai.visit_id,\r  pai.pai_visit_id,\r  insert_date,\r  remark ,\r  st_date\r  ; \r \r ""]",['住院患者食管切除手术打标\r   ']
173,his_bi,fun_dwd_D00178_d_16659,"
/***
函数名称：住院患者腹腔镜下胆囊切除术打标
    作用：统计某天住院患者中做了腹腔镜下胆囊切除术的人
  开发人：肖斌 2020-05-16
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00178  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

   腹腔镜下胆囊切除术
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00178';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00178';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
   SELECT
		'D00178' as key,
		count(1) as value,
		pai.patient_id,
		pai.visit_id,
		pai.pai_visit_id,
		Now () as insert_date,
		'重点手术：腹腔镜下胆囊切除术' remark ,
		to_char(o.surgerydate,'yyyymmdd') as st_date
	FROM
		his_bi.ods_patient_opertion_info o,
		his_bi.pts_pai_visit pai 
	WHERE
		o.patient_id = pai.patient_id 
		AND o.visit_id = pai.visit_id 
		AND his_bi.has_matched_icd9_rule ('SJGL_DJPS_ZDSS',o.surgerycode,'腹腔镜下胆囊切除术')
		AND o.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')
		AND o.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 
		GROUP BY
		pai.patient_id,
		pai.visit_id,
		pai.pai_visit_id,
		insert_date,
		remark ,
		st_date
  ; 
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00178'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00178';\r \r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r   SELECT\r  'D00178' as key,\r  count(1) as value,\r  pai.patient_id,\r  pai.visit_id,\r  pai.pai_visit_id,\r  Now () as insert_date,\r  '重点手术：腹腔镜下胆囊切除术' remark ,\r  to_char(o.surgerydate,'yyyymmdd') as st_date\r FROM\r  his_bi.ods_patient_opertion_info o,\r  his_bi.pts_pai_visit pai \r WHERE\r  o.patient_id = pai.patient_id \r  AND o.visit_id = pai.visit_id \r  AND his_bi.has_matched_icd9_rule ('SJGL_DJPS_ZDSS',o.surgerycode,'腹腔镜下胆囊切除术')\r  AND o.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')\r  AND o.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 \r  GROUP BY\r  pai.patient_id,\r  pai.visit_id,\r  pai.pai_visit_id,\r  insert_date,\r  remark ,\r  st_date\r  ; \r \r ""]",['住院患者腹腔镜下胆囊切除术打标\r   ']
174,his_bi,fun_dwd_D00179_d_16660,"
/***
函数名称：住院患者冠状动脉旁路移植术(CABG)打标
    作用：统计某天住院患者中做了冠状动脉旁路移植术(CABG)的人
  开发人：肖斌 2020-05-16
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00179  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

   冠状动脉旁路移植术(CABG)
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00179';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00179';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
   SELECT
		'D00179' as key,
		count(1) as value,
		pai.patient_id,
		pai.visit_id,
		pai.pai_visit_id,
		Now () as insert_date,
		'重点手术：冠状动脉旁路移植术(CABG)' remark ,
		to_char(o.surgerydate,'yyyymmdd') as st_date
	FROM
		his_bi.ods_patient_opertion_info o,
		his_bi.pts_pai_visit pai 
	WHERE
		o.patient_id = pai.patient_id 
		AND o.visit_id = pai.visit_id 
		AND his_bi.has_matched_icd9_rule ('SJGL_DJPS_ZDSS',o.surgerycode,'冠状动脉旁路移植术(CABG)')
		AND o.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')
		AND o.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 
		GROUP BY
		pai.patient_id,
		pai.visit_id,
		pai.pai_visit_id,
		insert_date,
		remark ,
		st_date
  ; 
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00179'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00179';\r \r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r   SELECT\r  'D00179' as key,\r  count(1) as value,\r  pai.patient_id,\r  pai.visit_id,\r  pai.pai_visit_id,\r  Now () as insert_date,\r  '重点手术：冠状动脉旁路移植术(CABG)' remark ,\r  to_char(o.surgerydate,'yyyymmdd') as st_date\r FROM\r  his_bi.ods_patient_opertion_info o,\r  his_bi.pts_pai_visit pai \r WHERE\r  o.patient_id = pai.patient_id \r  AND o.visit_id = pai.visit_id \r  AND his_bi.has_matched_icd9_rule ('SJGL_DJPS_ZDSS',o.surgerycode,'冠状动脉旁路移植术(CABG)')\r  AND o.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')\r  AND o.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 \r  GROUP BY\r  pai.patient_id,\r  pai.visit_id,\r  pai.pai_visit_id,\r  insert_date,\r  remark ,\r  st_date\r  ; \r \r ""]",['住院患者冠状动脉旁路移植术(CABG)打标\r   ']
175,his_bi,fun_dwd_D00180_d_16661,"
/***
函数名称：住院患者经皮冠状动脉介入治疗(PCI)打标
    作用：统计某天住院患者中做了经皮冠状动脉介入治疗(PCI)的人
  开发人：肖斌 2020-05-16
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00180  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

   经皮冠状动脉介入治疗(PCI)
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00180';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00180';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
   SELECT
		'D00180' as key,
		count(1) as value,
		pai.patient_id,
		pai.visit_id,
		pai.pai_visit_id,
		Now () as insert_date,
		'重点手术：经皮冠状动脉介入治疗(PCI)' remark ,
		to_char(o.surgerydate,'yyyymmdd') as st_date
	FROM
		his_bi.ods_patient_opertion_info o,
		his_bi.pts_pai_visit pai 
	WHERE
		o.patient_id = pai.patient_id 
		AND o.visit_id = pai.visit_id 
		AND his_bi.has_matched_icd9_rule ('SJGL_DJPS_ZDSS',o.surgerycode,'经皮冠状动脉介入治疗(PCI)')
		AND o.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')
		AND o.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 
		GROUP BY
		pai.patient_id,
		pai.visit_id,
		pai.pai_visit_id,
		insert_date,
		remark ,
		st_date
  ; 
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00180'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00180';\r \r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r   SELECT\r  'D00180' as key,\r  count(1) as value,\r  pai.patient_id,\r  pai.visit_id,\r  pai.pai_visit_id,\r  Now () as insert_date,\r  '重点手术：经皮冠状动脉介入治疗(PCI)' remark ,\r  to_char(o.surgerydate,'yyyymmdd') as st_date\r FROM\r  his_bi.ods_patient_opertion_info o,\r  his_bi.pts_pai_visit pai \r WHERE\r  o.patient_id = pai.patient_id \r  AND o.visit_id = pai.visit_id \r  AND his_bi.has_matched_icd9_rule ('SJGL_DJPS_ZDSS',o.surgerycode,'经皮冠状动脉介入治疗(PCI)')\r  AND o.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')\r  AND o.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 \r  GROUP BY\r  pai.patient_id,\r  pai.visit_id,\r  pai.pai_visit_id,\r  insert_date,\r  remark ,\r  st_date\r  ; \r \r ""]",['住院患者经皮冠状动脉介入治疗(PCI)打标\r   ']
176,his_bi,fun_dwd_D00181_d_16662,"
/***
函数名称：住院患者颅、脑手术打标
    作用：统计某天住院患者中做了颅、脑手术的人
  开发人：肖斌 2020-05-16
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00181  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

   颅、脑手术
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00181';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00181';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
   SELECT
		'D00181' as key,
		count(1) as value,
		pai.patient_id,
		pai.visit_id,
		pai.pai_visit_id,
		Now () as insert_date,
		'重点手术：颅、脑手术' remark ,
		to_char(o.surgerydate,'yyyymmdd') as st_date
	FROM
		his_bi.ods_patient_opertion_info o,
		his_bi.pts_pai_visit pai 
	WHERE
		o.patient_id = pai.patient_id 
		AND o.visit_id = pai.visit_id 
		AND his_bi.has_matched_icd9_rule ('SJGL_DJPS_ZDSS',o.surgerycode,'颅、脑手术')
		AND o.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')
		AND o.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 
		GROUP BY
		pai.patient_id,
		pai.visit_id,
		pai.pai_visit_id,
		insert_date,
		remark ,
		st_date
  ; 
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00181'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00181';\r \r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r   SELECT\r  'D00181' as key,\r  count(1) as value,\r  pai.patient_id,\r  pai.visit_id,\r  pai.pai_visit_id,\r  Now () as insert_date,\r  '重点手术：颅、脑手术' remark ,\r  to_char(o.surgerydate,'yyyymmdd') as st_date\r FROM\r  his_bi.ods_patient_opertion_info o,\r  his_bi.pts_pai_visit pai \r WHERE\r  o.patient_id = pai.patient_id \r  AND o.visit_id = pai.visit_id \r  AND his_bi.has_matched_icd9_rule ('SJGL_DJPS_ZDSS',o.surgerycode,'颅、脑手术')\r  AND o.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')\r  AND o.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 \r  GROUP BY\r  pai.patient_id,\r  pai.visit_id,\r  pai.pai_visit_id,\r  insert_date,\r  remark ,\r  st_date\r  ; \r \r ""]",['住院患者颅、脑手术打标\r   ']
177,his_bi,fun_dwd_D00182_d_16663,"
/***
函数名称：住院患者子宫切除术打标
    作用：统计某天住院患者中做了子宫切除术的人
  开发人：肖斌 2020-05-16
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00182  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

   子宫切除术
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00182';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00182';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
   SELECT
		'D00182' as key,
		count(1) as value,
		pai.patient_id,
		pai.visit_id,
		pai.pai_visit_id,
		Now () as insert_date,
		'重点手术：子宫切除术' remark ,
		to_char(o.surgerydate,'yyyymmdd') as st_date
	FROM
		his_bi.ods_patient_opertion_info o,
		his_bi.pts_pai_visit pai 
	WHERE
		o.patient_id = pai.patient_id 
		AND o.visit_id = pai.visit_id 
		AND his_bi.has_matched_icd9_rule ('SJGL_DJPS_ZDSS',o.surgerycode,'子宫切除术')
		AND o.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')
		AND o.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 
		GROUP BY
		pai.patient_id,
		pai.visit_id,
		pai.pai_visit_id,
		insert_date,
		remark ,
		st_date
  ; 
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00182'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00182';\r \r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r   SELECT\r  'D00182' as key,\r  count(1) as value,\r  pai.patient_id,\r  pai.visit_id,\r  pai.pai_visit_id,\r  Now () as insert_date,\r  '重点手术：子宫切除术' remark ,\r  to_char(o.surgerydate,'yyyymmdd') as st_date\r FROM\r  his_bi.ods_patient_opertion_info o,\r  his_bi.pts_pai_visit pai \r WHERE\r  o.patient_id = pai.patient_id \r  AND o.visit_id = pai.visit_id \r  AND his_bi.has_matched_icd9_rule ('SJGL_DJPS_ZDSS',o.surgerycode,'子宫切除术')\r  AND o.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')\r  AND o.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 \r  GROUP BY\r  pai.patient_id,\r  pai.visit_id,\r  pai.pai_visit_id,\r  insert_date,\r  remark ,\r  st_date\r  ; \r \r ""]",['住院患者子宫切除术打标\r   ']
178,his_bi,fun_dwd_D00183_d_16664,"
/***
函数名称：住院患者剖宫产打标
    作用：统计某天住院患者中做了剖宫产的人
  开发人：肖斌 2020-05-16
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00183  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

   剖宫产
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00183';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00183';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
   SELECT
		distinct 'D00183' as key,
		count(1) as value,
		pai.patient_id,
		pai.visit_id,
		pai.pai_visit_id,
		Now () as insert_date,
		'重点手术：剖宫产' remark ,
		to_char(o.surgerydate,'yyyymmdd') as st_date
	FROM
		his_bi.ods_patient_opertion_info o,
		his_bi.pts_pai_visit pai 
	WHERE
		o.patient_id = pai.patient_id 
		AND o.visit_id = pai.visit_id 
		AND his_bi.has_matched_icd9_rule ('SJGL_DJPS_ZDSS',o.surgerycode,'剖宫产')
		AND o.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')
		AND o.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 
		GROUP BY
		pai.patient_id,
		pai.visit_id,
		pai.pai_visit_id,
		insert_date,
		remark ,
		st_date
  ; 
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00183'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00183';\r \r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r   SELECT\r  distinct 'D00183' as key,\r  count(1) as value,\r  pai.patient_id,\r  pai.visit_id,\r  pai.pai_visit_id,\r  Now () as insert_date,\r  '重点手术：剖宫产' remark ,\r  to_char(o.surgerydate,'yyyymmdd') as st_date\r FROM\r  his_bi.ods_patient_opertion_info o,\r  his_bi.pts_pai_visit pai \r WHERE\r  o.patient_id = pai.patient_id \r  AND o.visit_id = pai.visit_id \r  AND his_bi.has_matched_icd9_rule ('SJGL_DJPS_ZDSS',o.surgerycode,'剖宫产')\r  AND o.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')\r  AND o.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 \r  GROUP BY\r  pai.patient_id,\r  pai.visit_id,\r  pai.pai_visit_id,\r  insert_date,\r  remark ,\r  st_date\r  ; \r \r ""]",['住院患者剖宫产打标\r   ']
179,his_bi,fun_dwd_D00184_d_16665,"
/***
函数名称：住院患者阴道分娩打标
    作用：统计某天住院患者中做了阴道分娩的人
  开发人：肖斌 2020-05-16
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00184  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

   阴道分娩
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00184';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00184';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
   SELECT
		'D00184' as key,
		count(1) as value,
		pai.patient_id,
		pai.visit_id,
		pai.pai_visit_id,
		Now () as insert_date,
		'重点手术：阴道分娩' remark ,
		to_char(o.surgerydate,'yyyymmdd') as st_date
	FROM
		his_bi.ods_patient_opertion_info o,
		his_bi.pts_pai_visit pai 
	WHERE
		o.patient_id = pai.patient_id 
		AND o.visit_id = pai.visit_id 
		AND his_bi.has_matched_icd9_rule ('SJGL_DJPS_ZDSS',o.surgerycode,'阴道分娩')
		AND o.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')
		AND o.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 
		GROUP BY
		pai.patient_id,
		pai.visit_id,
		pai.pai_visit_id,
		insert_date,
		remark ,
		st_date
  ; 
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00184'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00184';\r \r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r   SELECT\r  'D00184' as key,\r  count(1) as value,\r  pai.patient_id,\r  pai.visit_id,\r  pai.pai_visit_id,\r  Now () as insert_date,\r  '重点手术：阴道分娩' remark ,\r  to_char(o.surgerydate,'yyyymmdd') as st_date\r FROM\r  his_bi.ods_patient_opertion_info o,\r  his_bi.pts_pai_visit pai \r WHERE\r  o.patient_id = pai.patient_id \r  AND o.visit_id = pai.visit_id \r  AND his_bi.has_matched_icd9_rule ('SJGL_DJPS_ZDSS',o.surgerycode,'阴道分娩')\r  AND o.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')\r  AND o.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 \r  GROUP BY\r  pai.patient_id,\r  pai.visit_id,\r  pai.pai_visit_id,\r  insert_date,\r  remark ,\r  st_date\r  ; \r \r ""]",['住院患者阴道分娩打标\r   ']
180,his_bi,fun_dwd_D00185_d_16666,"
/***
函数名称：住院患者乳腺手术打标
    作用：统计某天住院患者中做了乳腺手术的人
  开发人：肖斌 2020-05-16
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00185  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

   乳腺手术
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00185';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00185';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
   SELECT
		'D00185' as key,
		count(1) as value,
		pai.patient_id,
		pai.visit_id,
		pai.pai_visit_id,
		Now () as insert_date,
		'重点手术：乳腺手术' remark ,
		to_char(o.surgerydate,'yyyymmdd') as st_date
	FROM
		his_bi.ods_patient_opertion_info o,
		his_bi.pts_pai_visit pai 
	WHERE
		o.patient_id = pai.patient_id 
		AND o.visit_id = pai.visit_id 
		AND his_bi.has_matched_icd9_rule ('SJGL_DJPS_ZDSS',o.surgerycode,'乳腺手术')
		AND o.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')
		AND o.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 
		GROUP BY
		pai.patient_id,
		pai.visit_id,
		pai.pai_visit_id,
		insert_date,
		remark ,
		st_date
  ; 
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00185'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00185';\r \r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r   SELECT\r  'D00185' as key,\r  count(1) as value,\r  pai.patient_id,\r  pai.visit_id,\r  pai.pai_visit_id,\r  Now () as insert_date,\r  '重点手术：乳腺手术' remark ,\r  to_char(o.surgerydate,'yyyymmdd') as st_date\r FROM\r  his_bi.ods_patient_opertion_info o,\r  his_bi.pts_pai_visit pai \r WHERE\r  o.patient_id = pai.patient_id \r  AND o.visit_id = pai.visit_id \r  AND his_bi.has_matched_icd9_rule ('SJGL_DJPS_ZDSS',o.surgerycode,'乳腺手术')\r  AND o.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')\r  AND o.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 \r  GROUP BY\r  pai.patient_id,\r  pai.visit_id,\r  pai.pai_visit_id,\r  insert_date,\r  remark ,\r  st_date\r  ; \r \r ""]",['住院患者乳腺手术打标\r   ']
181,his_bi,fun_dwd_D00186_d_16667,"
/***
函数名称：住院患者肺切除术打标
    作用：统计某天住院患者中做了肺切除术的人
  开发人：肖斌 2020-05-16
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00186  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

   肺切除术
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00186';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00186';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
   SELECT
		'D00186' as key,
		count(1) as value,
		pai.patient_id,
		pai.visit_id,
		pai.pai_visit_id,
		Now () as insert_date,
		'重点手术：肺切除术' remark ,
		to_char(o.surgerydate,'yyyymmdd') as st_date
	FROM
		his_bi.ods_patient_opertion_info o,
		his_bi.pts_pai_visit pai 
	WHERE
		o.patient_id = pai.patient_id 
		AND o.visit_id = pai.visit_id 
		AND his_bi.has_matched_icd9_rule ('SJGL_DJPS_ZDSS',o.surgerycode,'肺切除术')
		AND o.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')
		AND o.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 
		GROUP BY
		pai.patient_id,
		pai.visit_id,
		pai.pai_visit_id,
		insert_date,
		remark ,
		st_date
  ; 
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00186'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00186';\r \r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r   SELECT\r  'D00186' as key,\r  count(1) as value,\r  pai.patient_id,\r  pai.visit_id,\r  pai.pai_visit_id,\r  Now () as insert_date,\r  '重点手术：肺切除术' remark ,\r  to_char(o.surgerydate,'yyyymmdd') as st_date\r FROM\r  his_bi.ods_patient_opertion_info o,\r  his_bi.pts_pai_visit pai \r WHERE\r  o.patient_id = pai.patient_id \r  AND o.visit_id = pai.visit_id \r  AND his_bi.has_matched_icd9_rule ('SJGL_DJPS_ZDSS',o.surgerycode,'肺切除术')\r  AND o.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')\r  AND o.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 \r  GROUP BY\r  pai.patient_id,\r  pai.visit_id,\r  pai.pai_visit_id,\r  insert_date,\r  remark ,\r  st_date\r  ; \r \r ""]",['住院患者肺切除术打标\r   ']
182,his_bi,fun_dwd_D00187_d_16668,"
/***
函数名称：住院患者胃切除术打标
    作用：统计某天住院患者中做了胃切除术的人
  开发人：肖斌 2020-05-16
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00187  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

   胃切除术
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00187';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00187';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
   SELECT
		'D00187' as key,
		count(1) as value,
		pai.patient_id,
		pai.visit_id,
		pai.pai_visit_id,
		Now () as insert_date,
		'重点手术：胃切除术' remark ,
		to_char(o.surgerydate,'yyyymmdd') as st_date
	FROM
		his_bi.ods_patient_opertion_info o,
		his_bi.pts_pai_visit pai 
	WHERE
		o.patient_id = pai.patient_id 
		AND o.visit_id = pai.visit_id 
		AND his_bi.has_matched_icd9_rule ('SJGL_DJPS_ZDSS',o.surgerycode,'胃切除术')
		AND o.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')
		AND o.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 
		GROUP BY
		pai.patient_id,
		pai.visit_id,
		pai.pai_visit_id,
		insert_date,
		remark ,
		st_date
  ; 
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00187'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00187';\r \r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r   SELECT\r  'D00187' as key,\r  count(1) as value,\r  pai.patient_id,\r  pai.visit_id,\r  pai.pai_visit_id,\r  Now () as insert_date,\r  '重点手术：胃切除术' remark ,\r  to_char(o.surgerydate,'yyyymmdd') as st_date\r FROM\r  his_bi.ods_patient_opertion_info o,\r  his_bi.pts_pai_visit pai \r WHERE\r  o.patient_id = pai.patient_id \r  AND o.visit_id = pai.visit_id \r  AND his_bi.has_matched_icd9_rule ('SJGL_DJPS_ZDSS',o.surgerycode,'胃切除术')\r  AND o.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')\r  AND o.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 \r  GROUP BY\r  pai.patient_id,\r  pai.visit_id,\r  pai.pai_visit_id,\r  insert_date,\r  remark ,\r  st_date\r  ; \r \r ""]",['住院患者胃切除术打标\r   ']
183,his_bi,fun_dwd_D00188_d_16669,"
/***
函数名称：住院患者直肠切除术打标
    作用：统计某天住院患者中做了直肠切除术的人
  开发人：肖斌 2020-05-16
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00188  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

   直肠切除术
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00188';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00188';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
   SELECT
		'D00188' as key,
		count(1) as value,
		pai.patient_id,
		pai.visit_id,
		pai.pai_visit_id,
		Now () as insert_date,
		'重点手术：直肠切除术' remark ,
		to_char(o.surgerydate,'yyyymmdd') as st_date
	FROM
		his_bi.ods_patient_opertion_info o,
		his_bi.pts_pai_visit pai 
	WHERE
		o.patient_id = pai.patient_id 
		AND o.visit_id = pai.visit_id 
		AND his_bi.has_matched_icd9_rule ('SJGL_DJPS_ZDSS',o.surgerycode,'直肠切除术')
		AND o.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')
		AND o.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 
		GROUP BY
		pai.patient_id,
		pai.visit_id,
		pai.pai_visit_id,
		insert_date,
		remark ,
		st_date
  ; 
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00188'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00188';\r \r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r   SELECT\r  'D00188' as key,\r  count(1) as value,\r  pai.patient_id,\r  pai.visit_id,\r  pai.pai_visit_id,\r  Now () as insert_date,\r  '重点手术：直肠切除术' remark ,\r  to_char(o.surgerydate,'yyyymmdd') as st_date\r FROM\r  his_bi.ods_patient_opertion_info o,\r  his_bi.pts_pai_visit pai \r WHERE\r  o.patient_id = pai.patient_id \r  AND o.visit_id = pai.visit_id \r  AND his_bi.has_matched_icd9_rule ('SJGL_DJPS_ZDSS',o.surgerycode,'直肠切除术')\r  AND o.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')\r  AND o.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 \r  GROUP BY\r  pai.patient_id,\r  pai.visit_id,\r  pai.pai_visit_id,\r  insert_date,\r  remark ,\r  st_date\r  ; \r \r ""]",['住院患者直肠切除术打标\r   ']
184,his_bi,fun_dwd_D00189_d_16670,"
/***
函数名称：住院患者肾与前列腺相关手术打标
    作用：统计某天住院患者中做了肾与前列腺相关手术的人
  开发人：肖斌 2020-05-16
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00189  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

   肾与前列腺相关手术
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00189';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00189';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
   SELECT
		'D00189' as key,
		count(1) as value,
		pai.patient_id,
		pai.visit_id,
		pai.pai_visit_id,
		Now () as insert_date,
		'重点手术：肾与前列腺相关手术' remark ,
		to_char(o.surgerydate,'yyyymmdd') as st_date
	FROM
		his_bi.ods_patient_opertion_info o,
		his_bi.pts_pai_visit pai 
	WHERE
		o.patient_id = pai.patient_id 
		AND o.visit_id = pai.visit_id 
		AND his_bi.has_matched_icd9_rule ('SJGL_DJPS_ZDSS',o.surgerycode,'肾与前列腺相关手术')
		AND o.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')
		AND o.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 
		GROUP BY
		pai.patient_id,
		pai.visit_id,
		pai.pai_visit_id,
		insert_date,
		remark ,
		st_date
  ; 
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00189'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00189';\r \r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r   SELECT\r  'D00189' as key,\r  count(1) as value,\r  pai.patient_id,\r  pai.visit_id,\r  pai.pai_visit_id,\r  Now () as insert_date,\r  '重点手术：肾与前列腺相关手术' remark ,\r  to_char(o.surgerydate,'yyyymmdd') as st_date\r FROM\r  his_bi.ods_patient_opertion_info o,\r  his_bi.pts_pai_visit pai \r WHERE\r  o.patient_id = pai.patient_id \r  AND o.visit_id = pai.visit_id \r  AND his_bi.has_matched_icd9_rule ('SJGL_DJPS_ZDSS',o.surgerycode,'肾与前列腺相关手术')\r  AND o.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')\r  AND o.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 \r  GROUP BY\r  pai.patient_id,\r  pai.visit_id,\r  pai.pai_visit_id,\r  insert_date,\r  remark ,\r  st_date\r  ; \r \r ""]",['住院患者肾与前列腺相关手术打标\r   ']
185,his_bi,fun_dwd_D00190_d_16671,"
/***
函数名称：住院患者血管内修补术打标
    作用：统计某天住院患者中做了血管内修补术的人
  开发人：肖斌 2020-05-16
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00190  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

   血管内修补术
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00190';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00190';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
   SELECT
		'D00190' as key,
		count(1) as value,
		pai.patient_id,
		pai.visit_id,
		pai.pai_visit_id,
		Now () as insert_date,
		'重点手术：血管内修补术' remark ,
		to_char(o.surgerydate,'yyyymmdd') as st_date
	FROM
		his_bi.ods_patient_opertion_info o,
		his_bi.pts_pai_visit pai 
	WHERE
		o.patient_id = pai.patient_id 
		AND o.visit_id = pai.visit_id 
		AND his_bi.has_matched_icd9_rule ('SJGL_DJPS_ZDSS',o.surgerycode,'血管内修补术')
		AND o.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')
		AND o.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 
		GROUP BY
		pai.patient_id,
		pai.visit_id,
		pai.pai_visit_id,
		insert_date,
		remark ,
		st_date
  ; 
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00190'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00190';\r \r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r   SELECT\r  'D00190' as key,\r  count(1) as value,\r  pai.patient_id,\r  pai.visit_id,\r  pai.pai_visit_id,\r  Now () as insert_date,\r  '重点手术：血管内修补术' remark ,\r  to_char(o.surgerydate,'yyyymmdd') as st_date\r FROM\r  his_bi.ods_patient_opertion_info o,\r  his_bi.pts_pai_visit pai \r WHERE\r  o.patient_id = pai.patient_id \r  AND o.visit_id = pai.visit_id \r  AND his_bi.has_matched_icd9_rule ('SJGL_DJPS_ZDSS',o.surgerycode,'血管内修补术')\r  AND o.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')\r  AND o.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 \r  GROUP BY\r  pai.patient_id,\r  pai.visit_id,\r  pai.pai_visit_id,\r  insert_date,\r  remark ,\r  st_date\r  ; \r \r ""]",['住院患者血管内修补术打标\r   ']
186,his_bi,fun_dwd_D00191_d_16672,"
/***
函数名称：住院患者恶性肿瘤手术打标
    作用：统计某天住院患者中做了恶性肿瘤手术的人
  开发人：肖斌 2020-05-16
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00191  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

   恶性肿瘤手术
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00191';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00191';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
   SELECT
		'D00191' as key,
		count(1) as value,
		pai.patient_id,
		pai.visit_id,
		pai.pai_visit_id,
		Now () as insert_date,
		'重点手术：恶性肿瘤手术' remark ,
		to_char(o.surgerydate,'yyyymmdd') as st_date
	FROM
		his_bi.ods_patient_opertion_info o,
		his_bi.pts_pai_visit pai 
	WHERE
		o.patient_id = pai.patient_id 
		AND o.visit_id = pai.visit_id 
		AND his_bi.has_matched_icd9_rule ('SJGL_DJPS_ZDSS',o.surgerycode,'恶性肿瘤手术')
		AND o.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')
		AND o.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 
		GROUP BY
		pai.patient_id,
		pai.visit_id,
		pai.pai_visit_id,
		insert_date,
		remark ,
		st_date
  ; 
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00191'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00191';\r \r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r   SELECT\r  'D00191' as key,\r  count(1) as value,\r  pai.patient_id,\r  pai.visit_id,\r  pai.pai_visit_id,\r  Now () as insert_date,\r  '重点手术：恶性肿瘤手术' remark ,\r  to_char(o.surgerydate,'yyyymmdd') as st_date\r FROM\r  his_bi.ods_patient_opertion_info o,\r  his_bi.pts_pai_visit pai \r WHERE\r  o.patient_id = pai.patient_id \r  AND o.visit_id = pai.visit_id \r  AND his_bi.has_matched_icd9_rule ('SJGL_DJPS_ZDSS',o.surgerycode,'恶性肿瘤手术')\r  AND o.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')\r  AND o.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 \r  GROUP BY\r  pai.patient_id,\r  pai.visit_id,\r  pai.pai_visit_id,\r  insert_date,\r  remark ,\r  st_date\r  ; \r \r ""]",['住院患者恶性肿瘤手术打标\r   ']
187,his_bi,fun_dwd_D00192_d_16673,"
/***
函数名称：住院患者子宫切除术打标(三级妇幼等级评审)
    作用：统计某天住院患者中做了子宫切除术的人
  开发人：肖斌 2020-05-16
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00192  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

   子宫切除术
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00192';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00192';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
   SELECT
		'D00192' as key,
		count(1) as value,
		pai.patient_id,
		pai.visit_id,
		pai.pai_visit_id,
		Now () as insert_date,
		'重点手术：子宫切除术' remark ,
		to_char(o.surgerydate,'yyyymmdd') as st_date
	FROM
		his_bi.ods_patient_opertion_info o,
		his_bi.pts_pai_visit pai 
	WHERE
		o.patient_id = pai.patient_id 
		AND o.visit_id = pai.visit_id 
		AND his_bi.has_matched_icd9_rule ('SJFY_DJPS_ZDSS',o.surgerycode,'子宫切除术')
		AND o.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')
		AND o.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 
		GROUP BY
		pai.patient_id,
		pai.visit_id,
		pai.pai_visit_id,
		insert_date,
		remark ,
		st_date
  ; 
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00192'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00192';\r \r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r   SELECT\r  'D00192' as key,\r  count(1) as value,\r  pai.patient_id,\r  pai.visit_id,\r  pai.pai_visit_id,\r  Now () as insert_date,\r  '重点手术：子宫切除术' remark ,\r  to_char(o.surgerydate,'yyyymmdd') as st_date\r FROM\r  his_bi.ods_patient_opertion_info o,\r  his_bi.pts_pai_visit pai \r WHERE\r  o.patient_id = pai.patient_id \r  AND o.visit_id = pai.visit_id \r  AND his_bi.has_matched_icd9_rule ('SJFY_DJPS_ZDSS',o.surgerycode,'子宫切除术')\r  AND o.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')\r  AND o.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 \r  GROUP BY\r  pai.patient_id,\r  pai.visit_id,\r  pai.pai_visit_id,\r  insert_date,\r  remark ,\r  st_date\r  ; \r \r ""]",['住院患者子宫切除术打标(三级妇幼等级评审)\r   ']
188,his_bi,fun_dwd_D00193_d_16674,"
/***
函数名称：住院患者宫腔镜下宫腔粘连切除术打标(三级妇幼等级评审)
    作用：统计某天住院患者中做了宫腔镜下宫腔粘连切除术的人
  开发人：肖斌 2020-05-16
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00193  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

   宫腔镜下宫腔粘连切除术
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00193';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00193';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
   SELECT
		'D00193' as key,
		count(1) as value,
		pai.patient_id,
		pai.visit_id,
		pai.pai_visit_id,
		Now () as insert_date,
		'重点手术：宫腔镜下宫腔粘连切除术' remark ,
		to_char(o.surgerydate,'yyyymmdd') as st_date
	FROM
		his_bi.ods_patient_opertion_info o,
		his_bi.pts_pai_visit pai 
	WHERE
		o.patient_id = pai.patient_id 
		AND o.visit_id = pai.visit_id 
		AND his_bi.has_matched_icd9_rule ('SJFY_DJPS_ZDSS',o.surgerycode,'宫腔镜下宫腔粘连切除术')
		AND o.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')
		AND o.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 
		GROUP BY
		pai.patient_id,
		pai.visit_id,
		pai.pai_visit_id,
		insert_date,
		remark ,
		st_date
  ; 
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00193'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00193';\r \r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r   SELECT\r  'D00193' as key,\r  count(1) as value,\r  pai.patient_id,\r  pai.visit_id,\r  pai.pai_visit_id,\r  Now () as insert_date,\r  '重点手术：宫腔镜下宫腔粘连切除术' remark ,\r  to_char(o.surgerydate,'yyyymmdd') as st_date\r FROM\r  his_bi.ods_patient_opertion_info o,\r  his_bi.pts_pai_visit pai \r WHERE\r  o.patient_id = pai.patient_id \r  AND o.visit_id = pai.visit_id \r  AND his_bi.has_matched_icd9_rule ('SJFY_DJPS_ZDSS',o.surgerycode,'宫腔镜下宫腔粘连切除术')\r  AND o.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')\r  AND o.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 \r  GROUP BY\r  pai.patient_id,\r  pai.visit_id,\r  pai.pai_visit_id,\r  insert_date,\r  remark ,\r  st_date\r  ; \r \r ""]",['住院患者宫腔镜下宫腔粘连切除术打标(三级妇幼等级评审)\r   ']
189,his_bi,fun_dwd_D00194_d_16675,"
/***
函数名称：住院患者盆底重建术打标(三级妇幼等级评审)
    作用：统计某天住院患者中做了盆底重建术的人
  开发人：肖斌 2020-05-16
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00194  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

   盆底重建术
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00194';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00194';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
   SELECT
		'D00194' as key,
		count(1) as value,
		pai.patient_id,
		pai.visit_id,
		pai.pai_visit_id,
		Now () as insert_date,
		'重点手术：盆底重建术' remark ,
		to_char(o.surgerydate,'yyyymmdd') as st_date
	FROM
		his_bi.ods_patient_opertion_info o,
		his_bi.pts_pai_visit pai 
	WHERE
		o.patient_id = pai.patient_id 
		AND o.visit_id = pai.visit_id 
		AND his_bi.has_matched_icd9_rule ('SJFY_DJPS_ZDSS',o.surgerycode,'盆底重建术')
		AND o.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')
		AND o.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 
		GROUP BY
		pai.patient_id,
		pai.visit_id,
		pai.pai_visit_id,
		insert_date,
		remark ,
		st_date
  ; 
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00194'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00194';\r \r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r   SELECT\r  'D00194' as key,\r  count(1) as value,\r  pai.patient_id,\r  pai.visit_id,\r  pai.pai_visit_id,\r  Now () as insert_date,\r  '重点手术：盆底重建术' remark ,\r  to_char(o.surgerydate,'yyyymmdd') as st_date\r FROM\r  his_bi.ods_patient_opertion_info o,\r  his_bi.pts_pai_visit pai \r WHERE\r  o.patient_id = pai.patient_id \r  AND o.visit_id = pai.visit_id \r  AND his_bi.has_matched_icd9_rule ('SJFY_DJPS_ZDSS',o.surgerycode,'盆底重建术')\r  AND o.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')\r  AND o.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 \r  GROUP BY\r  pai.patient_id,\r  pai.visit_id,\r  pai.pai_visit_id,\r  insert_date,\r  remark ,\r  st_date\r  ; \r \r ""]",['住院患者盆底重建术打标(三级妇幼等级评审)\r   ']
190,his_bi,fun_dwd_D00195_d_16676,"
/***
函数名称：住院患者剖宫产打标(三级妇幼等级评审)
    作用：统计某天住院患者中做了剖宫产的人
  开发人：肖斌 2020-05-16
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00195  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

   剖宫产
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00195';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00195';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
   SELECT
		'D00195' as key,
		count(1) as value,
		pai.patient_id,
		pai.visit_id,
		pai.pai_visit_id,
		Now () as insert_date,
		'重点手术：剖宫产' remark ,
		to_char(o.surgerydate,'yyyymmdd') as st_date
	FROM
		his_bi.ods_patient_opertion_info o,
		his_bi.pts_pai_visit pai 
	WHERE
		o.patient_id = pai.patient_id 
		AND o.visit_id = pai.visit_id 
		AND his_bi.has_matched_icd9_rule ('SJFY_DJPS_ZDSS',o.surgerycode,'剖宫产')
		AND o.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')
		AND o.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 
		GROUP BY
		pai.patient_id,
		pai.visit_id,
		pai.pai_visit_id,
		insert_date,
		remark ,
		st_date
  ; 
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00195'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00195';\r \r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r   SELECT\r  'D00195' as key,\r  count(1) as value,\r  pai.patient_id,\r  pai.visit_id,\r  pai.pai_visit_id,\r  Now () as insert_date,\r  '重点手术：剖宫产' remark ,\r  to_char(o.surgerydate,'yyyymmdd') as st_date\r FROM\r  his_bi.ods_patient_opertion_info o,\r  his_bi.pts_pai_visit pai \r WHERE\r  o.patient_id = pai.patient_id \r  AND o.visit_id = pai.visit_id \r  AND his_bi.has_matched_icd9_rule ('SJFY_DJPS_ZDSS',o.surgerycode,'剖宫产')\r  AND o.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')\r  AND o.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 \r  GROUP BY\r  pai.patient_id,\r  pai.visit_id,\r  pai.pai_visit_id,\r  insert_date,\r  remark ,\r  st_date\r  ; \r \r ""]",['住院患者剖宫产打标(三级妇幼等级评审)\r   ']
191,his_bi,fun_dwd_D00196_d_16677,"
/***
函数名称：住院患者产钳助产术打标(三级妇幼等级评审)
    作用：统计某天住院患者中做了产钳助产术的人
  开发人：肖斌 2020-05-16
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00196  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

   产钳助产术
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00196';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00196';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
   SELECT
		'D00196' as key,
		count(1) as value,
		pai.patient_id,
		pai.visit_id,
		pai.pai_visit_id,
		Now () as insert_date,
		'重点手术：产钳助产术' remark ,
		to_char(o.surgerydate,'yyyymmdd') as st_date
	FROM
		his_bi.ods_patient_opertion_info o,
		his_bi.pts_pai_visit pai 
	WHERE
		o.patient_id = pai.patient_id 
		AND o.visit_id = pai.visit_id 
		AND his_bi.has_matched_icd9_rule ('SJFY_DJPS_ZDSS',o.surgerycode,'产钳助产术')
		AND o.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')
		AND o.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 
		GROUP BY
		pai.patient_id,
		pai.visit_id,
		pai.pai_visit_id,
		insert_date,
		remark ,
		st_date
  ; 
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00196'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00196';\r \r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r   SELECT\r  'D00196' as key,\r  count(1) as value,\r  pai.patient_id,\r  pai.visit_id,\r  pai.pai_visit_id,\r  Now () as insert_date,\r  '重点手术：产钳助产术' remark ,\r  to_char(o.surgerydate,'yyyymmdd') as st_date\r FROM\r  his_bi.ods_patient_opertion_info o,\r  his_bi.pts_pai_visit pai \r WHERE\r  o.patient_id = pai.patient_id \r  AND o.visit_id = pai.visit_id \r  AND his_bi.has_matched_icd9_rule ('SJFY_DJPS_ZDSS',o.surgerycode,'产钳助产术')\r  AND o.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')\r  AND o.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 \r  GROUP BY\r  pai.patient_id,\r  pai.visit_id,\r  pai.pai_visit_id,\r  insert_date,\r  remark ,\r  st_date\r  ; \r \r ""]",['住院患者产钳助产术打标(三级妇幼等级评审)\r   ']
192,his_bi,fun_dwd_D00197_d_16678,"
/***
函数名称：住院患者子宫颈根治性切除术打标(三级妇幼等级评审)
    作用：统计某天住院患者中做了子宫颈根治性切除术的人
  开发人：肖斌 2020-05-16
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00197  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

   子宫颈根治性切除术
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00197';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00197';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
   SELECT
		'D00197' as key,
		count(1) as value,
		pai.patient_id,
		pai.visit_id,
		pai.pai_visit_id,
		Now () as insert_date,
		'重点手术：子宫颈根治性切除术' remark ,
		to_char(o.surgerydate,'yyyymmdd') as st_date
	FROM
		his_bi.ods_patient_opertion_info o,
		his_bi.pts_pai_visit pai 
	WHERE
		o.patient_id = pai.patient_id 
		AND o.visit_id = pai.visit_id 
		AND his_bi.has_matched_icd9_rule ('SJFY_DJPS_ZDSS',o.surgerycode,'子宫颈根治性切除术')
		AND o.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')
		AND o.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 
		GROUP BY
		pai.patient_id,
		pai.visit_id,
		pai.pai_visit_id,
		insert_date,
		remark ,
		st_date
  ; 
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00197'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00197';\r \r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r   SELECT\r  'D00197' as key,\r  count(1) as value,\r  pai.patient_id,\r  pai.visit_id,\r  pai.pai_visit_id,\r  Now () as insert_date,\r  '重点手术：子宫颈根治性切除术' remark ,\r  to_char(o.surgerydate,'yyyymmdd') as st_date\r FROM\r  his_bi.ods_patient_opertion_info o,\r  his_bi.pts_pai_visit pai \r WHERE\r  o.patient_id = pai.patient_id \r  AND o.visit_id = pai.visit_id \r  AND his_bi.has_matched_icd9_rule ('SJFY_DJPS_ZDSS',o.surgerycode,'子宫颈根治性切除术')\r  AND o.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')\r  AND o.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 \r  GROUP BY\r  pai.patient_id,\r  pai.visit_id,\r  pai.pai_visit_id,\r  insert_date,\r  remark ,\r  st_date\r  ; \r \r ""]",['住院患者子宫颈根治性切除术打标(三级妇幼等级评审)\r   ']
193,his_bi,fun_dwd_D00198_d_16679,"
/***
函数名称：住院患者腹腔镜下子宫次全切除术打标(三级妇幼等级评审)
    作用：统计某天住院患者中做了腹腔镜下子宫次全切除术的人
  开发人：肖斌 2020-05-16
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00198  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

   腹腔镜下子宫次全切除术
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00198';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00198';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
   SELECT
		'D00198' as key,
		count(1) as value,
		pai.patient_id,
		pai.visit_id,
		pai.pai_visit_id,
		Now () as insert_date,
		'重点手术：腹腔镜下子宫次全切除术' remark ,
		to_char(o.surgerydate,'yyyymmdd') as st_date
	FROM
		his_bi.ods_patient_opertion_info o,
		his_bi.pts_pai_visit pai 
	WHERE
		o.patient_id = pai.patient_id 
		AND o.visit_id = pai.visit_id 
		AND his_bi.has_matched_icd9_rule ('SJFY_DJPS_ZDSS',o.surgerycode,'腹腔镜下子宫次全切除术')
		AND o.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')
		AND o.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 
		GROUP BY
		pai.patient_id,
		pai.visit_id,
		pai.pai_visit_id,
		insert_date,
		remark ,
		st_date
  ; 
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00198'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00198';\r \r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r   SELECT\r  'D00198' as key,\r  count(1) as value,\r  pai.patient_id,\r  pai.visit_id,\r  pai.pai_visit_id,\r  Now () as insert_date,\r  '重点手术：腹腔镜下子宫次全切除术' remark ,\r  to_char(o.surgerydate,'yyyymmdd') as st_date\r FROM\r  his_bi.ods_patient_opertion_info o,\r  his_bi.pts_pai_visit pai \r WHERE\r  o.patient_id = pai.patient_id \r  AND o.visit_id = pai.visit_id \r  AND his_bi.has_matched_icd9_rule ('SJFY_DJPS_ZDSS',o.surgerycode,'腹腔镜下子宫次全切除术')\r  AND o.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')\r  AND o.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 \r  GROUP BY\r  pai.patient_id,\r  pai.visit_id,\r  pai.pai_visit_id,\r  insert_date,\r  remark ,\r  st_date\r  ; \r \r ""]",['住院患者腹腔镜下子宫次全切除术打标(三级妇幼等级评审)\r   ']
194,his_bi,fun_dwd_D00199_d_16680,"
/***
函数名称：住院患者腹腔镜下子宫全切除术打标(三级妇幼等级评审)
    作用：统计某天住院患者中做了腹腔镜下子宫全切除术的人
  开发人：肖斌 2020-05-16
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00199  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

   腹腔镜下子宫全切除术
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00199';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00199';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
   SELECT
		'D00199' as key,
		count(1) as value,
		pai.patient_id,
		pai.visit_id,
		pai.pai_visit_id,
		Now () as insert_date,
		'重点手术：腹腔镜下子宫全切除术' remark ,
		to_char(o.surgerydate,'yyyymmdd') as st_date
	FROM
		his_bi.ods_patient_opertion_info o,
		his_bi.pts_pai_visit pai 
	WHERE
		o.patient_id = pai.patient_id 
		AND o.visit_id = pai.visit_id 
		AND his_bi.has_matched_icd9_rule ('SJFY_DJPS_ZDSS',o.surgerycode,'腹腔镜下子宫全切除术')
		AND o.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')
		AND o.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 
		GROUP BY
		pai.patient_id,
		pai.visit_id,
		pai.pai_visit_id,
		insert_date,
		remark ,
		st_date
  ; 
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00199'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00199';\r \r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r   SELECT\r  'D00199' as key,\r  count(1) as value,\r  pai.patient_id,\r  pai.visit_id,\r  pai.pai_visit_id,\r  Now () as insert_date,\r  '重点手术：腹腔镜下子宫全切除术' remark ,\r  to_char(o.surgerydate,'yyyymmdd') as st_date\r FROM\r  his_bi.ods_patient_opertion_info o,\r  his_bi.pts_pai_visit pai \r WHERE\r  o.patient_id = pai.patient_id \r  AND o.visit_id = pai.visit_id \r  AND his_bi.has_matched_icd9_rule ('SJFY_DJPS_ZDSS',o.surgerycode,'腹腔镜下子宫全切除术')\r  AND o.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')\r  AND o.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 \r  GROUP BY\r  pai.patient_id,\r  pai.visit_id,\r  pai.pai_visit_id,\r  insert_date,\r  remark ,\r  st_date\r  ; \r \r ""]",['住院患者腹腔镜下子宫全切除术打标(三级妇幼等级评审)\r   ']
195,his_bi,fun_dwd_D00200_d_16681,"
/***
函数名称：住院患者腹腔镜下子宫肌瘤切除术打标(三级妇幼等级评审)
    作用：统计某天住院患者中做了腹腔镜下子宫肌瘤切除术的人
  开发人：肖斌 2020-05-16
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00200  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

   腹腔镜下子宫肌瘤切除术
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00200';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00200';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
   SELECT
		'D00200' as key,
		count(1) as value,
		pai.patient_id,
		pai.visit_id,
		pai.pai_visit_id,
		Now () as insert_date,
		'重点手术：腹腔镜下子宫肌瘤切除术' remark ,
		to_char(o.surgerydate,'yyyymmdd') as st_date
	FROM
		his_bi.ods_patient_opertion_info o,
		his_bi.pts_pai_visit pai 
	WHERE
		o.patient_id = pai.patient_id 
		AND o.visit_id = pai.visit_id 
		AND his_bi.has_matched_icd9_rule ('SJFY_DJPS_ZDSS',o.surgerycode,'腹腔镜下子宫肌瘤切除术')
		AND o.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')
		AND o.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 
		GROUP BY
		pai.patient_id,
		pai.visit_id,
		pai.pai_visit_id,
		insert_date,
		remark ,
		st_date
  ; 
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00200'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00200';\r \r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r   SELECT\r  'D00200' as key,\r  count(1) as value,\r  pai.patient_id,\r  pai.visit_id,\r  pai.pai_visit_id,\r  Now () as insert_date,\r  '重点手术：腹腔镜下子宫肌瘤切除术' remark ,\r  to_char(o.surgerydate,'yyyymmdd') as st_date\r FROM\r  his_bi.ods_patient_opertion_info o,\r  his_bi.pts_pai_visit pai \r WHERE\r  o.patient_id = pai.patient_id \r  AND o.visit_id = pai.visit_id \r  AND his_bi.has_matched_icd9_rule ('SJFY_DJPS_ZDSS',o.surgerycode,'腹腔镜下子宫肌瘤切除术')\r  AND o.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')\r  AND o.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 \r  GROUP BY\r  pai.patient_id,\r  pai.visit_id,\r  pai.pai_visit_id,\r  insert_date,\r  remark ,\r  st_date\r  ; \r \r ""]",['住院患者腹腔镜下子宫肌瘤切除术打标(三级妇幼等级评审)\r   ']
196,his_bi,fun_dwd_D00201_d_16682,"
/***
函数名称：住院患者宫腔镜电切术打标(三级妇幼等级评审)
    作用：统计某天住院患者中做了宫腔镜电切术的人
  开发人：肖斌 2020-05-16
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00201  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

   宫腔镜电切术
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00201';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00201';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
   SELECT
		'D00201' as key,
		'1' as value,
		pai.patient_id,
		pai.visit_id,
		pai.pai_visit_id,
		Now () as insert_date,
		'重点手术：宫腔镜电切术' remark ,
		to_char(o.surgerydate,'yyyymmdd') as st_date
	FROM
		his_bi.ods_patient_opertion_info o,
		his_bi.pts_pai_visit pai 
	WHERE
		o.patient_id = pai.patient_id 
		AND o.visit_id = pai.visit_id 
		AND his_bi.has_matched_icd9_rule ('SJFY_DJPS_ZDSS',o.surgerycode,'宫腔镜电切术')
		AND o.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')
		AND o.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 
  ; 
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00201'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00201';   INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,                    remark,st_date)    SELECT  'D00201' as key,  '1' as value,  pai.patient_id,  pai.visit_id,  pai.pai_visit_id,  Now () as insert_date,  '重点手术：宫腔镜电切术' remark ,  to_char(o.surgerydate,'yyyymmdd') as st_date FROM  his_bi.ods_patient_opertion_info o,  his_bi.pts_pai_visit pai  WHERE  o.patient_id = pai.patient_id   AND o.visit_id = pai.visit_id   AND his_bi.has_matched_icd9_rule ('SJFY_DJPS_ZDSS',o.surgerycode,'宫腔镜电切术')  AND o.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')  AND o.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1   ;   ""]",['住院患者宫腔镜电切术打标(三级妇幼等级评审)   ']
197,his_bi,fun_dwd_D00202_d_16683,"
/***
函数名称：住院患者阴式子宫肌瘤切除术打标(三级妇幼等级评审)
    作用：统计某天住院患者中做了阴式子宫肌瘤切除术的人
  开发人：肖斌 2020-05-16
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00202  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

   阴式子宫肌瘤切除术
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00202';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00202';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
   SELECT
		'D00202' as key,
		count(1) as value,
		pai.patient_id,
		pai.visit_id,
		pai.pai_visit_id,
		Now () as insert_date,
		'重点手术：阴式子宫肌瘤切除术' remark ,
		to_char(o.surgerydate,'yyyymmdd') as st_date
	FROM
		his_bi.ods_patient_opertion_info o,
		his_bi.pts_pai_visit pai 
	WHERE
		o.patient_id = pai.patient_id 
		AND o.visit_id = pai.visit_id 
		AND his_bi.has_matched_icd9_rule ('SJFY_DJPS_ZDSS',o.surgerycode,'阴式子宫肌瘤切除术')
		AND o.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')
		AND o.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 
		GROUP BY
		pai.patient_id,
		pai.visit_id,
		pai.pai_visit_id,
		insert_date,
		remark ,
		st_date
  ; 
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00202'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00202';\r \r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r   SELECT\r  'D00202' as key,\r  count(1) as value,\r  pai.patient_id,\r  pai.visit_id,\r  pai.pai_visit_id,\r  Now () as insert_date,\r  '重点手术：阴式子宫肌瘤切除术' remark ,\r  to_char(o.surgerydate,'yyyymmdd') as st_date\r FROM\r  his_bi.ods_patient_opertion_info o,\r  his_bi.pts_pai_visit pai \r WHERE\r  o.patient_id = pai.patient_id \r  AND o.visit_id = pai.visit_id \r  AND his_bi.has_matched_icd9_rule ('SJFY_DJPS_ZDSS',o.surgerycode,'阴式子宫肌瘤切除术')\r  AND o.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')\r  AND o.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 \r  GROUP BY\r  pai.patient_id,\r  pai.visit_id,\r  pai.pai_visit_id,\r  insert_date,\r  remark ,\r  st_date\r  ; \r \r ""]",['住院患者阴式子宫肌瘤切除术打标(三级妇幼等级评审)\r   ']
198,his_bi,fun_dwd_D00203_d_16684,"
/***
函数名称：住院患者广泛全子宫清除术+盆腔淋巴结清扫术打标(三级妇幼等级评审)
    作用：统计某天住院患者中做了广泛全子宫清除术+盆腔淋巴结清扫术的人
  开发人：肖斌 2020-05-16
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00203  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

   广泛全子宫清除术+盆腔淋巴结清扫术
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00203';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00203';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
   SELECT
		'D00203' as key,
		count(1) as value,
		pai.patient_id,
		pai.visit_id,
		pai.pai_visit_id,
		Now () as insert_date,
		'重点手术：广泛全子宫清除术+盆腔淋巴结清扫术' remark ,
		to_char(o.surgerydate,'yyyymmdd') as st_date
	FROM
		his_bi.ods_patient_opertion_info o,
		his_bi.pts_pai_visit pai 
	WHERE
		o.patient_id = pai.patient_id 
		AND o.visit_id = pai.visit_id 
		AND o.surgerycode in('68.402','68.405')
		AND EXISTS(select 1 from his_bi.ods_patient_opertion_info t where t.surgerycode in('40.5903','40.5905') and t.patient_id=o.patient_id and t.visit_id=o.visit_id)
		AND o.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')
		AND o.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 
		GROUP BY
		pai.patient_id,
		pai.visit_id,
		pai.pai_visit_id,
		insert_date,
		remark ,
		st_date
  ; 
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00203'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00203';\r \r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r   SELECT\r  'D00203' as key,\r  count(1) as value,\r  pai.patient_id,\r  pai.visit_id,\r  pai.pai_visit_id,\r  Now () as insert_date,\r  '重点手术：广泛全子宫清除术+盆腔淋巴结清扫术' remark ,\r  to_char(o.surgerydate,'yyyymmdd') as st_date\r FROM\r  his_bi.ods_patient_opertion_info o,\r  his_bi.pts_pai_visit pai \r WHERE\r  o.patient_id = pai.patient_id \r  AND o.visit_id = pai.visit_id \r  AND o.surgerycode in('68.402','68.405')\r  AND EXISTS(select 1 from his_bi.ods_patient_opertion_info t where t.surgerycode in('40.5903','40.5905') and t.patient_id=o.patient_id and t.visit_id=o.visit_id)\r  AND o.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')\r  AND o.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 \r  GROUP BY\r  pai.patient_id,\r  pai.visit_id,\r  pai.pai_visit_id,\r  insert_date,\r  remark ,\r  st_date\r  ; \r \r ""]",['住院患者广泛全子宫清除术+盆腔淋巴结清扫术打标(三级妇幼等级评审)\r   ']
199,his_bi,fun_dwd_D00219_d_16700,"
/***
函数名称：抗肿瘤药物使用人次
    作用：统计某天抗肿瘤药物使用人次
  开发人：wy 2020-05-22
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00219  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_quantity_d
	 where key = 'D00219';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取对应key 最大日期加一天 对应逻辑line 12 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00219';
	
  INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																						remark,st_date) 
					
	select distinct 'D00219',
					1,
					tm.patient_id,
					tm.visit_id,
					max(tm.pai_visit_id),
					now(),
					'是否使用抗肿瘤药物', 
					to_char(tm.enter_date,'yyyyMMdd')
	from his_bi.bms_bill_item tm
	inner join his_bi.dms_pham_basic_info df on tm.item_code = df.pham_std_code
	left join his_bi.dms_inside_code_dict dt on df.pham_code = dt.cate_code
	where dt.cate_name like '%抗肿瘤%'
	and tm.pai_visit_id is not null
	and tm.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')
	and tm.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
	
	GROUP BY
	tm.patient_id,
	tm.visit_id,
	to_char(tm.enter_date,'yyyyMMdd')
;
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00219'],"[""delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00219';\r \r  INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                      remark,st_date) \r     \r select distinct 'D00219',\r     1,\r     tm.patient_id,\r     tm.visit_id,\r     max(tm.pai_visit_id),\r     now(),\r     '是否使用抗肿瘤药物', \r     to_char(tm.enter_date,'yyyyMMdd')\r from his_bi.bms_bill_item tm\r inner join his_bi.dms_pham_basic_info df on tm.item_code = df.pham_std_code\r left join his_bi.dms_inside_code_dict dt on df.pham_code = dt.cate_code\r where dt.cate_name like '%抗肿瘤%'\r and tm.pai_visit_id is not null\r and tm.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r and tm.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1\r \r GROUP BY\r tm.patient_id,\r tm.visit_id,\r to_char(tm.enter_date,'yyyyMMdd')\r;\r ""]",['抗肿瘤药物使用人次\r   ']
200,his_bi,fun_dwd_D00204_d_16686,"
/***
函数名称：住院患者乳腺癌根治术打标(三级妇幼等级评审)
    作用：统计某天住院患者中做了乳腺癌根治术的人
  开发人：肖斌 2020-05-16
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00204  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

   乳腺癌根治术
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00204';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00204';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
   SELECT
		'D00204' as key,
		count(1) as value,
		pai.patient_id,
		pai.visit_id,
		pai.pai_visit_id,
		Now () as insert_date,
		'重点手术：乳腺癌根治术' remark ,
		to_char(o.surgerydate,'yyyymmdd') as st_date
	FROM
		his_bi.ods_patient_opertion_info o,
		his_bi.pts_pai_visit pai 
	WHERE
		o.patient_id = pai.patient_id 
		AND o.visit_id = pai.visit_id 
		AND his_bi.has_matched_icd9_rule ('SJFY_DJPS_ZDSS',o.surgerycode,'乳腺癌根治术')
		AND o.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')
		AND o.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 
		GROUP BY
		pai.patient_id,
		pai.visit_id,
		pai.pai_visit_id,
		insert_date,
		remark ,
		st_date
  ; 
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00204'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00204';\r \r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r   SELECT\r  'D00204' as key,\r  count(1) as value,\r  pai.patient_id,\r  pai.visit_id,\r  pai.pai_visit_id,\r  Now () as insert_date,\r  '重点手术：乳腺癌根治术' remark ,\r  to_char(o.surgerydate,'yyyymmdd') as st_date\r FROM\r  his_bi.ods_patient_opertion_info o,\r  his_bi.pts_pai_visit pai \r WHERE\r  o.patient_id = pai.patient_id \r  AND o.visit_id = pai.visit_id \r  AND his_bi.has_matched_icd9_rule ('SJFY_DJPS_ZDSS',o.surgerycode,'乳腺癌根治术')\r  AND o.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')\r  AND o.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 \r  GROUP BY\r  pai.patient_id,\r  pai.visit_id,\r  pai.pai_visit_id,\r  insert_date,\r  remark ,\r  st_date\r  ; \r \r ""]",['住院患者乳腺癌根治术打标(三级妇幼等级评审)\r   ']
201,his_bi,fun_dwd_D00205_d_16687,"
/***
函数名称：住院患者日间手术标识
    作用：统计患者出院时某天是否做了日间手术
  开发人：肖斌 2020-05-17
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00205  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

***/
DECLARE
  c_daylist record;
  o_start_date varchar;
  o_end_date varchar;
  i_start_date varchar;
  i_end_date varchar;
  i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  /*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
select count(1),
       to_char(to_date(to_char(now(), 'yyyymmdd'), 'yyyymmdd') - 15,
               'yyyymmdd')
  into i_count, i_end_date
  from his_bi.dwd_inp_medical_d
 where key = 'D00205';

if (i_count = 0) then
  i_start_date := '20200101';
  --raise notice '0 i_start_date is: %', i_start_date;
else
  if (i_count > 0) then
    i_start_date := i_end_date;
    --raise notice '1 i_start_date is: %', i_start_date;
  end if;
end if;

if (length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
 then
  o_start_date := i_start_date;
  o_end_date   := i_end_date;
  --raise notice '2 o_start_date is: %', o_start_date;
  --raise notice '2 o_end_date is: %', o_end_date;
else
  if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
  /*PG function 如果参入任何参数，那么以实际入参为准*/
   then
    o_start_date := v_start_date;
    o_end_date   := v_end_date;
    --raise notice '3 o_start_date is: %', o_start_date;
    --raise notice '3 o_end_date is: %', o_end_date;
  end if;
end if;

for c_daylist in (select day_id
                    from his_bi.dim_date_info
                   where day_id >= o_start_date
                     and day_id <= o_end_date
                   order by day_id) loop

  --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;

  delete from his_bi.dwd_inp_medical_d
   where st_date = c_daylist.day_id
     and key = 'D00205';

  INSERT into his_bi.dwd_inp_medical_d
    (key,
     value,
     patient_id,
     visit_id,
     pai_visit_id,
     insert_date,
     remark,
     st_date)
  --单手术编码能确定日间手术
    select 'D00205' as key,
           count(1) as value,
           o.patient_id,
           o.visit_id,
           pt.pai_visit_id,
           now() as insert_date,
           '日间手术次数' as remark,
           to_char(o.surgerydate,'yyyymmdd') as st_date
      FROM his_bi.ods_patient_opertion_info o
      LEFT JOIN his_bi.ods_patient_medical_record r
        on o.patient_id = r.bah
       AND o.visit_id = r.zycs
      LEFT JOIN his_bi.pts_pai_visit pt
        on o.patient_id = pt.patient_id
       and o.visit_id = pt.visit_id
     WHERE o.surgerydate >= to_date(c_daylist.day_id, 'yyyyMMdd')
       AND o.surgerydate < to_date(c_daylist.day_id, 'yyyyMMdd') + 1
       AND his_bi.has_matched_icd9_rule('SJGL_JXKH_RJSS',
                                        o.surgerycode,
                                        '日间手术')
       AND (r.cyrq - r.ryrq) < TIMESTAMP
     '2020-01-03 00:00:00' - TIMESTAMP '2020-01-01 00:00:00'
		 GROUP BY o.patient_id,
           o.visit_id,
           pt.pai_visit_id,
           insert_date,
           remark,
           st_date
    UNION ALL
    --泪道重建术+人工泪管置入术
    select 'D00205' as key,
           count(1) as value,
           o.patient_id,
           o.visit_id,
           pt.pai_visit_id,
           now() as insert_date,
           '日间手术次数' as remark,
           to_char(o.surgerydate,'yyyymmdd') as st_date
      FROM his_bi.ods_patient_opertion_info o
      LEFT JOIN his_bi.ods_patient_medical_record r
        on o.patient_id = r.bah
       AND o.visit_id = r.zycs
      LEFT JOIN his_bi.pts_pai_visit pt
        on o.patient_id = pt.patient_id
       and o.visit_id = pt.visit_id
     WHERE o.surgerydate >= to_date(c_daylist.day_id, 'yyyyMMdd')
       AND o.surgerydate < to_date(c_daylist.day_id, 'yyyyMMdd') + 1
       AND EXISTS (select 1
              from his_bi.ods_patient_opertion_info o1
             where o1.surgerycode = '09.7300x004'  and o.patient_id= o1.patient_id and 
           o.visit_id=o1.visit_id)
       AND EXISTS (select 1
              from his_bi.ods_patient_opertion_info o1
             where o1.surgerycode = '09.7301' and o.patient_id= o1.patient_id and 
           o.visit_id=o1.visit_id)
       AND EXISTS (select 1
              from his_bi.ods_patient_opertion_info o1
             where o1.surgerycode = '09.4404' and o.patient_id= o1.patient_id and 
           o.visit_id=o1.visit_id)
       AND (r.cyrq - r.ryrq) < TIMESTAMP
     '2020-01-03 00:00:00' - TIMESTAMP '2020-01-01 00:00:00'
		  GROUP BY o.patient_id,
           o.visit_id,
           pt.pai_visit_id,
           insert_date,
           remark,
           st_date
    UNION ALL
    --泪小管探通术+人工泪管置入术
    select 'D00205' as key,
           count(1) as value,
           o.patient_id,
           o.visit_id,
           pt.pai_visit_id,
           now() as insert_date,
           '日间手术次数' as remark,
           to_char(o.surgerydate,'yyyymmdd') as st_date
      FROM his_bi.ods_patient_opertion_info o
      LEFT JOIN his_bi.ods_patient_medical_record r
        on o.patient_id = r.bah
       AND o.visit_id = r.zycs
      LEFT JOIN his_bi.pts_pai_visit pt
        on o.patient_id = pt.patient_id
       and o.visit_id = pt.visit_id
     WHERE o.surgerydate >= to_date(c_daylist.day_id, 'yyyyMMdd')
       AND o.surgerydate < to_date(c_daylist.day_id, 'yyyyMMdd') + 1
       AND EXISTS (select 1
              from his_bi.ods_patient_opertion_info o1
             where o1.surgerycode = '09.4200'  and o.patient_id= o1.patient_id and 
           o.visit_id=o1.visit_id)
       AND EXISTS (select 1
              from his_bi.ods_patient_opertion_info o1
             where o1.surgerycode = '09.4404'  and o.patient_id= o1.patient_id and 
           o.visit_id=o1.visit_id)
       AND (r.cyrq - r.ryrq) < TIMESTAMP
     '2020-01-03 00:00:00' - TIMESTAMP '2020-01-01 00:00:00'
		  GROUP BY o.patient_id,
           o.visit_id,
           pt.pai_visit_id,
           insert_date,
           remark,
           st_date
    UNION ALL
    --泪点重建术+人工泪管置入术
    select 'D00205' as key,
           count(1) as value,
           o.patient_id,
           o.visit_id,
           pt.pai_visit_id,
           now() as insert_date,
           '日间手术次数' as remark,
           to_char(o.surgerydate,'yyyymmdd') as st_date
      FROM his_bi.ods_patient_opertion_info o
      LEFT JOIN his_bi.ods_patient_medical_record r
        on o.patient_id = r.bah
       AND o.visit_id = r.zycs
      LEFT JOIN his_bi.pts_pai_visit pt
        on o.patient_id = pt.patient_id
       and o.visit_id = pt.visit_id
     WHERE o.surgerydate >= to_date(c_daylist.day_id, 'yyyyMMdd')
       AND o.surgerydate < to_date(c_daylist.day_id, 'yyyyMMdd') + 1
       AND EXISTS (select 1
              from his_bi.ods_patient_opertion_info o1
             where o1.surgerycode = '09.7201'  and o.patient_id= o1.patient_id and 
           o.visit_id=o1.visit_id)
       AND EXISTS (select 1
              from his_bi.ods_patient_opertion_info o1
             where o1.surgerycode = '09.4404'  and o.patient_id= o1.patient_id and 
           o.visit_id=o1.visit_id)
       AND (r.cyrq - r.ryrq) < TIMESTAMP
     '2020-01-03 00:00:00' - TIMESTAMP '2020-01-01 00:00:00'
		  GROUP BY o.patient_id,
           o.visit_id,
           pt.pai_visit_id,
           insert_date,
           remark,
           st_date
    UNION ALL
    --泪小管吻合术+人工泪管置入术
    select 'D00205' as key,
           count(1) as value,
           o.patient_id,
           o.visit_id,
           pt.pai_visit_id,
           now() as insert_date,
           '日间手术次数' as remark,
           to_char(o.surgerydate,'yyyymmdd') as st_date
      FROM his_bi.ods_patient_opertion_info o
      LEFT JOIN his_bi.ods_patient_medical_record r
        on o.patient_id = r.bah
       AND o.visit_id = r.zycs
      LEFT JOIN his_bi.pts_pai_visit pt
        on o.patient_id = pt.patient_id
       and o.visit_id = pt.visit_id
     WHERE o.surgerydate >= to_date(c_daylist.day_id, 'yyyyMMdd')
       AND o.surgerydate < to_date(c_daylist.day_id, 'yyyyMMdd') + 1
       AND EXISTS (select 1
              from his_bi.ods_patient_opertion_info o1
             where o1.surgerycode = '09.7301'  and o.patient_id= o1.patient_id and 
           o.visit_id=o1.visit_id)
       AND EXISTS (select 1
              from his_bi.ods_patient_opertion_info o1
             where o1.surgerycode = '09.4404'  and o.patient_id= o1.patient_id and 
           o.visit_id=o1.visit_id)
       AND (r.cyrq - r.ryrq) < TIMESTAMP
     '2020-01-03 00:00:00' - TIMESTAMP '2020-01-01 00:00:00'
		  GROUP BY o.patient_id,
           o.visit_id,
           pt.pai_visit_id,
           insert_date,
           remark,
           st_date;

end loop;
RETURN 'SUCCESS';
END; ",['D00205'],"[""delete from his_bi.dwd_inp_medical_d\r   where st_date = c_daylist.day_id\r     and key = 'D00205';\r\r  INSERT into his_bi.dwd_inp_medical_d\r    (key,\r     value,\r     patient_id,\r     visit_id,\r     pai_visit_id,\r     insert_date,\r     remark,\r     st_date)\r  --单手术编码能确定日间手术\r    select 'D00205' as key,\r           count(1) as value,\r           o.patient_id,\r           o.visit_id,\r           pt.pai_visit_id,\r           now() as insert_date,\r           '日间手术次数' as remark,\r           to_char(o.surgerydate,'yyyymmdd') as st_date\r      FROM his_bi.ods_patient_opertion_info o\r      LEFT JOIN his_bi.ods_patient_medical_record r\r        on o.patient_id = r.bah\r       AND o.visit_id = r.zycs\r      LEFT JOIN his_bi.pts_pai_visit pt\r        on o.patient_id = pt.patient_id\r       and o.visit_id = pt.visit_id\r     WHERE o.surgerydate >= to_date(c_daylist.day_id, 'yyyyMMdd')\r       AND o.surgerydate < to_date(c_daylist.day_id, 'yyyyMMdd') + 1\r       AND his_bi.has_matched_icd9_rule('SJGL_JXKH_RJSS',\r                                        o.surgerycode,\r                                        '日间手术')\r       AND (r.cyrq - r.ryrq) < TIMESTAMP\r     '2020-01-03 00:00:00' - TIMESTAMP '2020-01-01 00:00:00'\r   GROUP BY o.patient_id,\r           o.visit_id,\r           pt.pai_visit_id,\r           insert_date,\r           remark,\r           st_date\r    UNION ALL\r    --泪道重建术+人工泪管置入术\r    select 'D00205' as key,\r           count(1) as value,\r           o.patient_id,\r           o.visit_id,\r           pt.pai_visit_id,\r           now() as insert_date,\r           '日间手术次数' as remark,\r           to_char(o.surgerydate,'yyyymmdd') as st_date\r      FROM his_bi.ods_patient_opertion_info o\r      LEFT JOIN his_bi.ods_patient_medical_record r\r        on o.patient_id = r.bah\r       AND o.visit_id = r.zycs\r      LEFT JOIN his_bi.pts_pai_visit pt\r        on o.patient_id = pt.patient_id\r       and o.visit_id = pt.visit_id\r     WHERE o.surgerydate >= to_date(c_daylist.day_id, 'yyyyMMdd')\r       AND o.surgerydate < to_date(c_daylist.day_id, 'yyyyMMdd') + 1\r       AND EXISTS (select 1\r              from his_bi.ods_patient_opertion_info o1\r             where o1.surgerycode = '09.7300x004'  and o.patient_id= o1.patient_id and \r           o.visit_id=o1.visit_id)\r       AND EXISTS (select 1\r              from his_bi.ods_patient_opertion_info o1\r             where o1.surgerycode = '09.7301' and o.patient_id= o1.patient_id and \r           o.visit_id=o1.visit_id)\r       AND EXISTS (select 1\r              from his_bi.ods_patient_opertion_info o1\r             where o1.surgerycode = '09.4404' and o.patient_id= o1.patient_id and \r           o.visit_id=o1.visit_id)\r       AND (r.cyrq - r.ryrq) < TIMESTAMP\r     '2020-01-03 00:00:00' - TIMESTAMP '2020-01-01 00:00:00'\r    GROUP BY o.patient_id,\r           o.visit_id,\r           pt.pai_visit_id,\r           insert_date,\r           remark,\r           st_date\r    UNION ALL\r    --泪小管探通术+人工泪管置入术\r    select 'D00205' as key,\r           count(1) as value,\r           o.patient_id,\r           o.visit_id,\r           pt.pai_visit_id,\r           now() as insert_date,\r           '日间手术次数' as remark,\r           to_char(o.surgerydate,'yyyymmdd') as st_date\r      FROM his_bi.ods_patient_opertion_info o\r      LEFT JOIN his_bi.ods_patient_medical_record r\r        on o.patient_id = r.bah\r       AND o.visit_id = r.zycs\r      LEFT JOIN his_bi.pts_pai_visit pt\r        on o.patient_id = pt.patient_id\r       and o.visit_id = pt.visit_id\r     WHERE o.surgerydate >= to_date(c_daylist.day_id, 'yyyyMMdd')\r       AND o.surgerydate < to_date(c_daylist.day_id, 'yyyyMMdd') + 1\r       AND EXISTS (select 1\r              from his_bi.ods_patient_opertion_info o1\r             where o1.surgerycode = '09.4200'  and o.patient_id= o1.patient_id and \r           o.visit_id=o1.visit_id)\r       AND EXISTS (select 1\r              from his_bi.ods_patient_opertion_info o1\r             where o1.surgerycode = '09.4404'  and o.patient_id= o1.patient_id and \r           o.visit_id=o1.visit_id)\r       AND (r.cyrq - r.ryrq) < TIMESTAMP\r     '2020-01-03 00:00:00' - TIMESTAMP '2020-01-01 00:00:00'\r    GROUP BY o.patient_id,\r           o.visit_id,\r           pt.pai_visit_id,\r           insert_date,\r           remark,\r           st_date\r    UNION ALL\r    --泪点重建术+人工泪管置入术\r    select 'D00205' as key,\r           count(1) as value,\r           o.patient_id,\r           o.visit_id,\r           pt.pai_visit_id,\r           now() as insert_date,\r           '日间手术次数' as remark,\r           to_char(o.surgerydate,'yyyymmdd') as st_date\r      FROM his_bi.ods_patient_opertion_info o\r      LEFT JOIN his_bi.ods_patient_medical_record r\r        on o.patient_id = r.bah\r       AND o.visit_id = r.zycs\r      LEFT JOIN his_bi.pts_pai_visit pt\r        on o.patient_id = pt.patient_id\r       and o.visit_id = pt.visit_id\r     WHERE o.surgerydate >= to_date(c_daylist.day_id, 'yyyyMMdd')\r       AND o.surgerydate < to_date(c_daylist.day_id, 'yyyyMMdd') + 1\r       AND EXISTS (select 1\r              from his_bi.ods_patient_opertion_info o1\r             where o1.surgerycode = '09.7201'  and o.patient_id= o1.patient_id and \r           o.visit_id=o1.visit_id)\r       AND EXISTS (select 1\r              from his_bi.ods_patient_opertion_info o1\r             where o1.surgerycode = '09.4404'  and o.patient_id= o1.patient_id and \r           o.visit_id=o1.visit_id)\r       AND (r.cyrq - r.ryrq) < TIMESTAMP\r     '2020-01-03 00:00:00' - TIMESTAMP '2020-01-01 00:00:00'\r    GROUP BY o.patient_id,\r           o.visit_id,\r           pt.pai_visit_id,\r           insert_date,\r           remark,\r           st_date\r    UNION ALL\r    --泪小管吻合术+人工泪管置入术\r    select 'D00205' as key,\r           count(1) as value,\r           o.patient_id,\r           o.visit_id,\r           pt.pai_visit_id,\r           now() as insert_date,\r           '日间手术次数' as remark,\r           to_char(o.surgerydate,'yyyymmdd') as st_date\r      FROM his_bi.ods_patient_opertion_info o\r      LEFT JOIN his_bi.ods_patient_medical_record r\r        on o.patient_id = r.bah\r       AND o.visit_id = r.zycs\r      LEFT JOIN his_bi.pts_pai_visit pt\r        on o.patient_id = pt.patient_id\r       and o.visit_id = pt.visit_id\r     WHERE o.surgerydate >= to_date(c_daylist.day_id, 'yyyyMMdd')\r       AND o.surgerydate < to_date(c_daylist.day_id, 'yyyyMMdd') + 1\r       AND EXISTS (select 1\r              from his_bi.ods_patient_opertion_info o1\r             where o1.surgerycode = '09.7301'  and o.patient_id= o1.patient_id and \r           o.visit_id=o1.visit_id)\r       AND EXISTS (select 1\r              from his_bi.ods_patient_opertion_info o1\r             where o1.surgerycode = '09.4404'  and o.patient_id= o1.patient_id and \r           o.visit_id=o1.visit_id)\r       AND (r.cyrq - r.ryrq) < TIMESTAMP\r     '2020-01-03 00:00:00' - TIMESTAMP '2020-01-01 00:00:00'\r    GROUP BY o.patient_id,\r           o.visit_id,\r           pt.pai_visit_id,\r           insert_date,\r           remark,\r           st_date;\r""]",['住院患者日间手术标识\r   ']
202,his_bi,fun_dwd_D00206_d_16689,"
/***
函数名称：多学科诊疗患者
开发者：hamter.lize
开发时间：2020-5-19 11:44:16
作用：统计是否多学科诊疗患者(0 否 1是)
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
KPI编码：D00206  根据原子指标编码规划来的
入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
    c_daylist record;
    o_start_date varchar;
    o_end_date varchar;
    i_start_date varchar;
    i_end_date varchar;
    i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
    /*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
      from his_bi.dwd_inp_medical_d 
     where key = 'D00206';
     
  if(i_count = 0)
      then 
          i_start_date := '20200101';
            --raise notice '0 i_start_date is: %', i_start_date;
    else if(i_count > 0)
      then
          i_start_date := i_end_date;
            --raise notice '1 i_start_date is: %', i_start_date;
  end if;
    end if;
        
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
    /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
      then 
        o_start_date := i_start_date;
        o_end_date := i_end_date;
            --raise notice '2 o_start_date is: %', o_start_date;
            --raise notice '2 o_end_date is: %', o_end_date;
    else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
    /*PG function 如果参入任何参数，那么以实际入参为准*/
      then 
          o_start_date := v_start_date;
        o_end_date := v_end_date;
            --raise notice '3 o_start_date is: %', o_start_date;
            --raise notice '3 o_end_date is: %', o_end_date;
    end if;
    end if;
    
    for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
    loop 
    
    --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
    
  delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00206';
    
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
                                                                             remark,st_date) 
                                                                             
  select 'D00206',
         1,
         t2.bah as patient_id,
         t2.zycs as visit_id,
         t3.pai_visit_id,
         now(),
         '多学科诊疗患者',
         to_char(t2.cyrq,'yyyymmdd') AS st_date
    from his_bi.ods_patient_medical_record t2
    left join his_bi.pts_pai_visit t3 on (t3.patient_id =t2.bah and t3.visit_id =t2.zycs)
   where EXISTS(select 1 from his_bi.emr_cpoe_ord t1
								 where t1.patient_id=t2.bah 
                   and t1.visit_id=t2.zycs
									 and t1.order_source ='2' 
								   and t1.order_status = '3'
									 and t1.order_type_code = 'K')
    and t2.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
    and t2.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1
     ;
 
     end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00206'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00206';\r    \r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                                                                             remark,st_date) \r                                                                             \r  select 'D00206',\r         1,\r         t2.bah as patient_id,\r         t2.zycs as visit_id,\r         t3.pai_visit_id,\r         now(),\r         '多学科诊疗患者',\r         to_char(t2.cyrq,'yyyymmdd') AS st_date\r    from his_bi.ods_patient_medical_record t2\r    left join his_bi.pts_pai_visit t3 on (t3.patient_id =t2.bah and t3.visit_id =t2.zycs)\r   where EXISTS(select 1 from his_bi.emr_cpoe_ord t1\r         where t1.patient_id=t2.bah \r                   and t1.visit_id=t2.zycs\r          and t1.order_source ='2' \r           and t1.order_status = '3'\r          and t1.order_type_code = 'K')\r    and t2.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')\r    and t2.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd')+1\r     ;\r \r    ""]",['多学科诊疗患者\r开发者：hamter.lize\r开发时间：2020-5-19 11:44:16']
203,his_bi,fun_dwd_D00207_d_16690,"
/***
函数名称：恶性肿瘤-乳腺癌患者打标
开发者：liuf
开发时间：2020-06-16
作用：统计乳腺癌患者(1是)
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
KPI编码：D00207  根据原子指标编码规划来的
入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
    c_daylist record;
    o_start_date varchar;
    o_end_date varchar;
    i_start_date varchar;
    i_end_date varchar;
    i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
    /*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
      from his_bi.dwd_inp_medical_d 
     where key = 'D00207';
     
  if(i_count = 0)
      then 
          i_start_date := '20200101';
            --raise notice '0 i_start_date is: %', i_start_date;
    else if(i_count > 0)
      then
          i_start_date := i_end_date;
            --raise notice '1 i_start_date is: %', i_start_date;
  end if;
    end if;
        
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
    /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
      then 
        o_start_date := i_start_date;
        o_end_date := i_end_date;
            --raise notice '2 o_start_date is: %', o_start_date;
            --raise notice '2 o_end_date is: %', o_end_date;
    else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
    /*PG function 如果参入任何参数，那么以实际入参为准*/
      then 
          o_start_date := v_start_date;
        o_end_date := v_end_date;
            --raise notice '3 o_start_date is: %', o_start_date;
            --raise notice '3 o_end_date is: %', o_end_date;
    end if;
    end if;
    
    for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
    loop 
    
    --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
    
  delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00207';
    
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
                                                                             remark,st_date) 
		--乳腺癌
		SELECT distinct 'D00207',
		1,
		bf.patient_id,
		bf.visit_id,
		pt.pai_visit_id,
		now(),
		'恶性肿瘤-乳腺癌',
		to_char(bf.surgerydate,'yyyymmdd') AS st_date
		FROM his_bi.ods_patient_opertion_info bf
		left join his_bi.pts_pai_visit pt on bf.patient_id = pt.patient_id and bf.visit_id = pt.visit_id
		where (substring(bf.surgerycode,1,4) = '85.4' or substring(bf.surgerycode,1,5) = '85.21')
		and bf.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')
    and bf.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd')+1
		and EXISTS
		(
			select pg.brxh
			from his_bi.ods_patient_diag_info pg
			where substring(pg.diagdiseasecode,1,3) = 'C50'
			and bf.brxh = pg.brxh
		)
		;

   end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00207'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00207';\r    \r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                                                                             remark,st_date) \r  --乳腺癌\r  SELECT distinct 'D00207',\r  1,\r  bf.patient_id,\r  bf.visit_id,\r  pt.pai_visit_id,\r  now(),\r  '恶性肿瘤-乳腺癌',\r  to_char(bf.surgerydate,'yyyymmdd') AS st_date\r  FROM his_bi.ods_patient_opertion_info bf\r  left join his_bi.pts_pai_visit pt on bf.patient_id = pt.patient_id and bf.visit_id = pt.visit_id\r  where (substring(bf.surgerycode,1,4) = '85.4' or substring(bf.surgerycode,1,5) = '85.21')\r  and bf.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')\r    and bf.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd')+1\r  and EXISTS\r  (\r   select pg.brxh\r   from his_bi.ods_patient_diag_info pg\r   where substring(pg.diagdiseasecode,1,3) = 'C50'\r   and bf.brxh = pg.brxh\r  )\r  ;\r\r  ""]",['恶性肿瘤-乳腺癌患者打标\r开发者：liuf\r开发时间：2020-06-16']
204,his_bi,fun_dwd_D00208_d_16691,"
/***
函数名称：恶性肿瘤-宫颈癌
开发者：liuf
开发时间：2020-06-16
作用：统计恶性肿瘤-宫颈癌(1是)
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
KPI编码：D00208  根据原子指标编码规划来的
入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
    c_daylist record;
    o_start_date varchar;
    o_end_date varchar;
    i_start_date varchar;
    i_end_date varchar;
    i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
    /*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
      from his_bi.dwd_inp_medical_d 
     where key = 'D00208';
     
  if(i_count = 0)
      then 
          i_start_date := '20200101';
            --raise notice '0 i_start_date is: %', i_start_date;
    else if(i_count > 0)
      then
          i_start_date := i_end_date;
            --raise notice '1 i_start_date is: %', i_start_date;
  end if;
    end if;
        
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
    /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
      then 
        o_start_date := i_start_date;
        o_end_date := i_end_date;
            --raise notice '2 o_start_date is: %', o_start_date;
            --raise notice '2 o_end_date is: %', o_end_date;
    else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
    /*PG function 如果参入任何参数，那么以实际入参为准*/
      then 
          o_start_date := v_start_date;
        o_end_date := v_end_date;
            --raise notice '3 o_start_date is: %', o_start_date;
            --raise notice '3 o_end_date is: %', o_end_date;
    end if;
    end if;
    
    for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
    loop 
    
    --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
    
  delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00208';
    
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
                                                                             remark,st_date) 
		--宫颈癌
		SELECT distinct 'D00208',
		1,
		bf.patient_id,
		bf.visit_id,
		pt.pai_visit_id,
		now(),
		'恶性肿瘤-宫颈癌',
		to_char(bf.surgerydate,'yyyymmdd') AS st_date
		FROM his_bi.ods_patient_opertion_info bf
		left join his_bi.pts_pai_visit pt on bf.patient_id = pt.patient_id and bf.visit_id = pt.visit_id
		where (substring(bf.surgerycode,1,4) in ('65.6','67.2','68.4') or substring(bf.surgerycode,1,5) = '40.59')
		and bf.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')
    and bf.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd')+1
		and EXISTS
		(
			select pg.brxh
			from his_bi.ods_patient_diag_info pg
			where substring(pg.diagdiseasecode,1,3) in  ('C53','C06')
			and bf.brxh = pg.brxh
		)
		;
 
   end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00208'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00208';\r    \r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                                                                             remark,st_date) \r  --宫颈癌\r  SELECT distinct 'D00208',\r  1,\r  bf.patient_id,\r  bf.visit_id,\r  pt.pai_visit_id,\r  now(),\r  '恶性肿瘤-宫颈癌',\r  to_char(bf.surgerydate,'yyyymmdd') AS st_date\r  FROM his_bi.ods_patient_opertion_info bf\r  left join his_bi.pts_pai_visit pt on bf.patient_id = pt.patient_id and bf.visit_id = pt.visit_id\r  where (substring(bf.surgerycode,1,4) in ('65.6','67.2','68.4') or substring(bf.surgerycode,1,5) = '40.59')\r  and bf.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')\r    and bf.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd')+1\r  and EXISTS\r  (\r   select pg.brxh\r   from his_bi.ods_patient_diag_info pg\r   where substring(pg.diagdiseasecode,1,3) in  ('C53','C06')\r   and bf.brxh = pg.brxh\r  )\r  ;\r \r  ""]",['恶性肿瘤-宫颈癌\r开发者：liuf\r开发时间：2020-06-16']
205,his_bi,fun_dwd_D00209_d_16692,"
/***
函数名称：恶性肿瘤-卵巢癌
开发者：liuf
开发时间：2020-06-16
作用：统计恶性肿瘤-卵巢癌(1是)
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
KPI编码：D00209  根据原子指标编码规划来的
入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
    c_daylist record;
    o_start_date varchar;
    o_end_date varchar;
    i_start_date varchar;
    i_end_date varchar;
    i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
    /*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
      from his_bi.dwd_inp_medical_d 
     where key = 'D00209';
     
  if(i_count = 0)
      then 
          i_start_date := '20200101';
            --raise notice '0 i_start_date is: %', i_start_date;
    else if(i_count > 0)
      then
          i_start_date := i_end_date;
            --raise notice '1 i_start_date is: %', i_start_date;
  end if;
    end if;
        
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
    /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
      then 
        o_start_date := i_start_date;
        o_end_date := i_end_date;
            --raise notice '2 o_start_date is: %', o_start_date;
            --raise notice '2 o_end_date is: %', o_end_date;
    else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
    /*PG function 如果参入任何参数，那么以实际入参为准*/
      then 
          o_start_date := v_start_date;
        o_end_date := v_end_date;
            --raise notice '3 o_start_date is: %', o_start_date;
            --raise notice '3 o_end_date is: %', o_end_date;
    end if;
    end if;
    
    for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
    loop 
    
    --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
    
  delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00209';
    
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
                                                                             remark,st_date) 
		--卵巢癌
		SELECT distinct 'D00209',
		1,
		bf.patient_id,
		bf.visit_id,
		pt.pai_visit_id,
		now(),
		'恶性肿瘤-卵巢癌',
		to_char(bf.surgerydate,'yyyymmdd') AS st_date
		FROM his_bi.ods_patient_opertion_info bf
		left join his_bi.pts_pai_visit pt on bf.patient_id = pt.patient_id and bf.visit_id = pt.visit_id
		where (substring(bf.surgerycode,1,4) = '65.6' or substring(bf.surgerycode,1,5) = '40.59')
		and bf.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')
    and bf.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd')+1
		and exists
		(
			select pg.brxh
			from his_bi.ods_patient_diag_info pg
			where substring(pg.diagdiseasecode,1,3) in  ('C56')
			and bf.brxh = pg.brxh
		)
		;

   end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00209'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00209';\r    \r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                                                                             remark,st_date) \r  --卵巢癌\r  SELECT distinct 'D00209',\r  1,\r  bf.patient_id,\r  bf.visit_id,\r  pt.pai_visit_id,\r  now(),\r  '恶性肿瘤-卵巢癌',\r  to_char(bf.surgerydate,'yyyymmdd') AS st_date\r  FROM his_bi.ods_patient_opertion_info bf\r  left join his_bi.pts_pai_visit pt on bf.patient_id = pt.patient_id and bf.visit_id = pt.visit_id\r  where (substring(bf.surgerycode,1,4) = '65.6' or substring(bf.surgerycode,1,5) = '40.59')\r  and bf.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')\r    and bf.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd')+1\r  and exists\r  (\r   select pg.brxh\r   from his_bi.ods_patient_diag_info pg\r   where substring(pg.diagdiseasecode,1,3) in  ('C56')\r   and bf.brxh = pg.brxh\r  )\r  ;\r\r  ""]",['恶性肿瘤-卵巢癌\r开发者：liuf\r开发时间：2020-06-16']
206,his_bi,fun_dwd_D00210_d_16693,"
/***
函数名称：单病种-艾滋病、梅毒和乙肝母婴传播疾病
    作用：统计某天艾滋病、梅毒和乙肝母婴传播疾病的人
  开发人：leslie 2020-06-17
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00210  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

    
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00210';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00210';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
  select 'D00210',
				 1, 
				 d.bah as patient_id,
				 d.zycs as visit_id,
				 a.pai_visit_id,
				 now(),
				 '艾滋病、梅毒和乙肝母婴传播疾病',
			  to_char(d.cyrq,'yyyymmdd') as st_date
	 from his_bi.ods_patient_medical_record d
	 left join his_bi.pts_pai_visit a
	 on (a.patient_id =d.bah and a.visit_id =d.zycs)
	inner join his_bi.ods_patient_diag_info b 
		 on d.brxh = b.brxh 
		and b.main_diag = '1'   --主诊断
	where  exists(select * from his_bi.dim_oper_other_info t
							  where t.icd_code = b.diagdiseasecode 
									and t.icd_type = '单病种'
									and t.icd_describe = '艾滋病、梅毒和乙肝母婴传播疾病'
									)
		and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
		and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1; 
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00210'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00210';\r \r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r  select 'D00210',\r     1, \r     d.bah as patient_id,\r     d.zycs as visit_id,\r     a.pai_visit_id,\r     now(),\r     '艾滋病、梅毒和乙肝母婴传播疾病',\r     to_char(d.cyrq,'yyyymmdd') as st_date\r  from his_bi.ods_patient_medical_record d\r  left join his_bi.pts_pai_visit a\r  on (a.patient_id =d.bah and a.visit_id =d.zycs)\r inner join his_bi.ods_patient_diag_info b \r   on d.brxh = b.brxh \r  and b.main_diag = '1'   --主诊断\r where  exists(select * from his_bi.dim_oper_other_info t\r         where t.icd_code = b.diagdiseasecode \r         and t.icd_type = '单病种'\r         and t.icd_describe = '艾滋病、梅毒和乙肝母婴传播疾病'\r         )\r  and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')\r  and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1; \r \r ""]",['单病种-艾滋病、梅毒和乙肝母婴传播疾病\r   ']
207,his_bi,fun_dwd_D00215_d_16694,"
/***
函数名称：7-15天重返（国家标准）
    作用：统计某天住院患者7-15天重返
  开发人：liuf 2020-06-16
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00215  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00215';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00215';
	
	/*key = 'D00207' and value = 2 表示'C00' 到 'C97'诊断的 全部肿瘤*/
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
  select distinct 'D00215',
				 1 , 
				 patient_id,
				 visit_id,
				 pai_visit_id,
				 now(),
				 '重疾患者7-15天重返（国家标准）',
			  st_date
	from (
				select a.pai_visit_id,d.bah as patient_id,d.zycs as visit_id,to_char(d.cyrq,'yyyymmdd') as st_date
					from his_bi.ods_patient_medical_record d 
					left join	his_bi.pts_pai_visit a on (d.bah =a.patient_id and d.zycs =a.visit_id)
				 inner join his_bi.v_inp_return_patient t 
						on d.bah = t.patient_id 
					 and d.zycs > t.visit_id 
					 and to_date(to_char(d.ryrq ,'yyyymmdd'),'yyyymmdd') - 6 >
							 to_date(to_char(t.discharge_dept_date,'yyyymmdd'),'yyyymmdd')
					 and to_date(to_char(d.ryrq,'yyyymmdd'),'yyyymmdd') - 15 <=
							 to_date(to_char(t.discharge_dept_date,'yyyymmdd'),'yyyymmdd')  
				 where not exists (select 1 from his_bi.ods_patient_diag_info where d.brxh=brxh
															and diagdiseasecodestr in ('Z51.0','Z51.1','Z51.2','Z51.5','Z51.8'))    
					 and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
					and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 
  ) s ; /*多次重返患者，出院当天只打一次重返标志*/
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00207'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00215';\r \r /*key = 'D00207' and value = 2 表示'C00' 到 'C97'诊断的 全部肿瘤*/\r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r  select distinct 'D00215',\r     1 , \r     patient_id,\r     visit_id,\r     pai_visit_id,\r     now(),\r     '重疾患者7-15天重返（国家标准）',\r     st_date\r from (\r    select a.pai_visit_id,d.bah as patient_id,d.zycs as visit_id,to_char(d.cyrq,'yyyymmdd') as st_date\r     from his_bi.ods_patient_medical_record d \r     left join his_bi.pts_pai_visit a on (d.bah =a.patient_id and d.zycs =a.visit_id)\r     inner join his_bi.v_inp_return_patient t \r      on d.bah = t.patient_id \r      and d.zycs > t.visit_id \r      and to_date(to_char(d.ryrq ,'yyyymmdd'),'yyyymmdd') - 6 >\r        to_date(to_char(t.discharge_dept_date,'yyyymmdd'),'yyyymmdd')\r      and to_date(to_char(d.ryrq,'yyyymmdd'),'yyyymmdd') - 15 <=\r        to_date(to_char(t.discharge_dept_date,'yyyymmdd'),'yyyymmdd')  \r     where not exists (select 1 from his_bi.ods_patient_diag_info where d.brxh=brxh\r               and diagdiseasecodestr in ('Z51.0','Z51.1','Z51.2','Z51.5','Z51.8'))    \r      and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')\r     and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 \r  ) s ; /*多次重返患者，出院当天只打一次重返标志*/\r \r ""]",['7-15天重返（国家标准）\r   ']
208,his_bi,fun_dwd_D00216_d_16696,"
/***
函数名称：16-31天重返（国家标准）
    作用：统计某天住院患者16-31天重返
  开发人：liuf 2020-06-16
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00216  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00216';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00216';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
  select distinct 'D00216',
				 1 , 
				 patient_id,
				 visit_id,
				 pai_visit_id,
				 now(),
				 '重疾患者16-31天重返（国家标准）',
			  st_date
	from (
				select a.pai_visit_id,d.bah as patient_id,d.zycs as visit_id,to_char(d.cyrq,'yyyymmdd') as st_date
					from his_bi.ods_patient_medical_record d 
				  left join	his_bi.pts_pai_visit a on (d.bah =a.patient_id and d.zycs =a.visit_id)
				 inner join his_bi.v_inp_return_patient t 
						on d.bah = t.patient_id 
					 and d.zycs > t.visit_id 
					 and to_date(to_char(d.ryrq,'yyyymmdd'),'yyyymmdd')-15 >
							 to_date(to_char(t.discharge_dept_date,'yyyymmdd'),'yyyymmdd')
					 and to_date(to_char(d.ryrq,'yyyymmdd'),'yyyymmdd') - 31 <=
							 to_date(to_char(t.discharge_dept_date,'yyyymmdd'),'yyyymmdd')                                    
				 where not exists (select 1 from his_bi.ods_patient_diag_info where d.brxh=brxh
															and diagdiseasecodestr in ('Z51.0','Z51.1','Z51.2','Z51.5','Z51.8'))    
					 and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
					and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 
  ) s ; /*多次重返患者，出院当天只打一次重返标志*/
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00216'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00216';\r \r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r  select distinct 'D00216',\r     1 , \r     patient_id,\r     visit_id,\r     pai_visit_id,\r     now(),\r     '重疾患者16-31天重返（国家标准）',\r     st_date\r from (\r    select a.pai_visit_id,d.bah as patient_id,d.zycs as visit_id,to_char(d.cyrq,'yyyymmdd') as st_date\r     from his_bi.ods_patient_medical_record d \r      left join his_bi.pts_pai_visit a on (d.bah =a.patient_id and d.zycs =a.visit_id)\r     inner join his_bi.v_inp_return_patient t \r      on d.bah = t.patient_id \r      and d.zycs > t.visit_id \r      and to_date(to_char(d.ryrq,'yyyymmdd'),'yyyymmdd')-15 >\r        to_date(to_char(t.discharge_dept_date,'yyyymmdd'),'yyyymmdd')\r      and to_date(to_char(d.ryrq,'yyyymmdd'),'yyyymmdd') - 31 <=\r        to_date(to_char(t.discharge_dept_date,'yyyymmdd'),'yyyymmdd')                                    \r     where not exists (select 1 from his_bi.ods_patient_diag_info where d.brxh=brxh\r               and diagdiseasecodestr in ('Z51.0','Z51.1','Z51.2','Z51.5','Z51.8'))    \r      and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')\r     and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 \r  ) s ; /*多次重返患者，出院当天只打一次重返标志*/\r \r ""]",['16-31天重返（国家标准）\r   ']
209,his_bi,fun_dwd_D00217_d_16698,"
/***
函数名称：分娩情况-备术
    作用：统计某天住院患者中分娩情况-备术分布情况
  开发人：wrsong 2020-05-14
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00217  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
    c_daylist record;
    o_start_date varchar;
    o_end_date varchar;
    i_start_date varchar;
    i_end_date varchar;
    i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
      from his_bi.dwd_inp_quantity_d
     where key = 'D00217';
     
  if(i_count = 0)
      then 
          i_start_date := '20200101';
            --raise notice '0 i_start_date is: %', i_start_date;
    else if(i_count > 0)
      then
          i_start_date := i_end_date;
            --raise notice '1 i_start_date is: %', i_start_date;
  end if;
    end if;
        

  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
    /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
      then 
        o_start_date := i_start_date;
        o_end_date := i_end_date;
            --raise notice '2 o_start_date is: %', o_start_date;
            --raise notice '2 o_end_date is: %', o_end_date;
    else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
    /*PG function 如果参入任何参数，那么以实际入参为准*/
      then 
          o_start_date := v_start_date;
        o_end_date := v_end_date;
            --raise notice '3 o_start_date is: %', o_start_date;
            --raise notice '3 o_end_date is: %', o_end_date;
    end if;
    end if;
    
    for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
    loop 
    
    --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
    
    delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00217';
    
  INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
                                                                                        remark,st_date) 
   select 'D00217',
           1 ,
           a.patient_id || '|'|| b.baby_numeric as patient_id,
           a.visit_id,
          cast((cast(a.pai_visit_id as text) || cast(b.baby_numeric as text)) as numeric) as pai_visit_id,
           now(),
           '分娩情况：备术', 
           to_char(b.birth_date,'yyyyMMdd')
      from his_bi.pts_pai_visit a
inner join his_bi.pts_pai_birth_reg b on a.pai_visit_id = b.pai_visit_id
     where b.ispreparation = '是' 
       and COALESCE(b.status, '1') = '1'
       and b.birth_date >= to_date(c_daylist.day_id,'yyyyMMdd')
       and b.birth_date <  to_date(c_daylist.day_id,'yyyyMMdd') + 1
      ;
     end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00217'],"[""delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00217';\r    \r  INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                                                                                        remark,st_date) \r   select 'D00217',\r           1 ,\r           a.patient_id || '|'|| b.baby_numeric as patient_id,\r           a.visit_id,\r          cast((cast(a.pai_visit_id as text) || cast(b.baby_numeric as text)) as numeric) as pai_visit_id,\r           now(),\r           '分娩情况：备术', \r           to_char(b.birth_date,'yyyyMMdd')\r      from his_bi.pts_pai_visit a\rinner join his_bi.pts_pai_birth_reg b on a.pai_visit_id = b.pai_visit_id\r     where b.ispreparation = '是' \r       and COALESCE(b.status, '1') = '1'\r       and b.birth_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r       and b.birth_date <  to_date(c_daylist.day_id,'yyyyMMdd') + 1\r      ;\r    ""]",['分娩情况-备术\r   ']
210,his_bi,fun_dwd_D00218_d_16699,"
/***
函数名称：分娩情况-流产患者统计
    作用：统计某天住院患者中分娩情况-流产人数分布情况
  开发人：wrsong 2020-05-14
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00218  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
    c_daylist record;
    o_start_date varchar;
    o_end_date varchar;
    i_start_date varchar;
    i_end_date varchar;
    i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
      from his_bi.dwd_inp_quantity_d
     where key = 'D00218';
     
  if(i_count = 0)
      then 
          i_start_date := '20200101';
            --raise notice '0 i_start_date is: %', i_start_date;
    else if(i_count > 0)
      then
          i_start_date := i_end_date;
            --raise notice '1 i_start_date is: %', i_start_date;
  end if;
    end if;
        

  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
    /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
      then 
        o_start_date := i_start_date;
        o_end_date := i_end_date;
            --raise notice '2 o_start_date is: %', o_start_date;
            --raise notice '2 o_end_date is: %', o_end_date;
    else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
    /*PG function 如果参入任何参数，那么以实际入参为准*/
      then 
          o_start_date := v_start_date;
        o_end_date := v_end_date;
            --raise notice '3 o_start_date is: %', o_start_date;
            --raise notice '3 o_end_date is: %', o_end_date;
    end if;
    end if;
    
    for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
    loop 
    
    --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
    
    delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00218';
    
  INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
                                                                                        remark,st_date) 
   select 'D00218',
           1 ,
           a.patient_id || '|'|| b.baby_numeric as patient_id,
           a.visit_id,
          cast((cast(a.pai_visit_id as text) || cast(b.baby_numeric as text)) as numeric) as pai_visit_id,
           now(),
           '分娩情况:流产', 
           to_char(b.birth_date,'yyyyMMdd')
      from his_bi.pts_pai_visit a
inner join his_bi.pts_pai_birth_reg b on a.pai_visit_id = b.pai_visit_id
     where b.isabortion = '是' 
       and COALESCE(b.status, '1') = '1'
       and b.birth_date >= to_date(c_daylist.day_id,'yyyyMMdd')
       and b.birth_date <  to_date(c_daylist.day_id,'yyyyMMdd') + 1
      ;
     end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00218'],"[""delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00218';\r    \r  INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                                                                                        remark,st_date) \r   select 'D00218',\r           1 ,\r           a.patient_id || '|'|| b.baby_numeric as patient_id,\r           a.visit_id,\r          cast((cast(a.pai_visit_id as text) || cast(b.baby_numeric as text)) as numeric) as pai_visit_id,\r           now(),\r           '分娩情况:流产', \r           to_char(b.birth_date,'yyyyMMdd')\r      from his_bi.pts_pai_visit a\rinner join his_bi.pts_pai_birth_reg b on a.pai_visit_id = b.pai_visit_id\r     where b.isabortion = '是' \r       and COALESCE(b.status, '1') = '1'\r       and b.birth_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r       and b.birth_date <  to_date(c_daylist.day_id,'yyyyMMdd') + 1\r      ;\r    ""]",['分娩情况-流产患者统计\r   ']
211,his_bi,fun_dwd_D00220_d_16701,"
/***
函数名称：是否使用营养药物
    作用：统计某天患者是否使用营养药物
  开发人：wy 2020-05-22
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00220  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_quantity_d
	 where key = 'D00220';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取对应key 最大日期加一天 对应逻辑line 12 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00220';
	
  INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																						remark,st_date) 
					
	select distinct 'D00220',
					1,
					tm.patient_id,
					tm.visit_id,
					tm.pai_visit_id,
					now(),
					'是否使用营养药物', 
					to_char(tm.enter_date,'yyyyMMdd')
	from his_bi.bms_bill_item tm
	inner join his_bi.dms_pham_basic_info df on tm.item_code = df.pham_std_code
	left join his_bi.dms_inside_code_dict dt on df.pham_code = dt.cate_code
	where dt.cate_name like '%营养%'
	and tm.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')
	and tm.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
	;
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00220'],"[""delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00220';\r \r  INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                      remark,st_date) \r     \r select distinct 'D00220',\r     1,\r     tm.patient_id,\r     tm.visit_id,\r     tm.pai_visit_id,\r     now(),\r     '是否使用营养药物', \r     to_char(tm.enter_date,'yyyyMMdd')\r from his_bi.bms_bill_item tm\r inner join his_bi.dms_pham_basic_info df on tm.item_code = df.pham_std_code\r left join his_bi.dms_inside_code_dict dt on df.pham_code = dt.cate_code\r where dt.cate_name like '%营养%'\r and tm.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r and tm.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1\r ;\r ""]",['是否使用营养药物\r   ']
212,his_bi,fun_dwd_D00221_d_16702,"
/***
函数名称：是否使用抗病毒药物
    作用：统计某天患者是否使用抗病毒药物
  开发人：wy 2020-05-22
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00221  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_quantity_d
	 where key = 'D00221';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取对应key 最大日期加一天 对应逻辑line 12 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00221';
	
  INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																						remark,st_date) 
					
	select distinct 'D00221',
					1,
					tm.patient_id,
					tm.visit_id,
					tm.pai_visit_id,
					now(),
					'是否使用抗病毒药物', 
					to_char(tm.enter_date,'yyyyMMdd')
	from his_bi.bms_bill_item tm
	inner join his_bi.dms_pham_basic_info df on tm.item_code = df.pham_std_code
	left join his_bi.dms_inside_code_dict dt on df.pham_code = dt.cate_code
	where dt.cate_name like '%抗病毒%'
	and tm.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')
	and tm.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
	;
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00221'],"[""delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00221';\r \r  INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                      remark,st_date) \r     \r select distinct 'D00221',\r     1,\r     tm.patient_id,\r     tm.visit_id,\r     tm.pai_visit_id,\r     now(),\r     '是否使用抗病毒药物', \r     to_char(tm.enter_date,'yyyyMMdd')\r from his_bi.bms_bill_item tm\r inner join his_bi.dms_pham_basic_info df on tm.item_code = df.pham_std_code\r left join his_bi.dms_inside_code_dict dt on df.pham_code = dt.cate_code\r where dt.cate_name like '%抗病毒%'\r and tm.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r and tm.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1\r ;\r ""]",['是否使用抗病毒药物\r   ']
213,his_bi,fun_dwd_D00222_d_16703,"
/***
函数名称：是否使用激素药物
    作用：统计某天患者是否使用激素药物
  开发人：wy 2020-05-22
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00222  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_quantity_d
	 where key = 'D00222';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取对应key 最大日期加一天 对应逻辑line 12 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00222';
	
  INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																						remark,st_date) 
					
	select distinct 'D00222',
					1,
					tm.patient_id,
					tm.visit_id,
					max(tm.pai_visit_id),
					now(),
					'是否使用激素药物', 
					to_char(tm.enter_date,'yyyyMMdd')
	from his_bi.bms_bill_item tm
	inner join his_bi.dms_pham_basic_info df on tm.item_code = df.pham_std_code
	left join his_bi.dms_inside_code_dict dt on df.pham_code = dt.cate_code
	where dt.cate_name like '%激素%'
	and tm.pai_visit_id is not null
	and tm.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')
	and tm.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
		group by 
		tm.patient_id,
		tm.visit_id,
		to_char(tm.enter_date,'yyyyMMdd')
	;
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00222'],"[""delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00222';\r \r  INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                      remark,st_date) \r     \r select distinct 'D00222',\r     1,\r     tm.patient_id,\r     tm.visit_id,\r     max(tm.pai_visit_id),\r     now(),\r     '是否使用激素药物', \r     to_char(tm.enter_date,'yyyyMMdd')\r from his_bi.bms_bill_item tm\r inner join his_bi.dms_pham_basic_info df on tm.item_code = df.pham_std_code\r left join his_bi.dms_inside_code_dict dt on df.pham_code = dt.cate_code\r where dt.cate_name like '%激素%'\r and tm.pai_visit_id is not null\r and tm.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r and tm.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1\r  group by \r  tm.patient_id,\r  tm.visit_id,\r  to_char(tm.enter_date,'yyyyMMdd')\r ;\r ""]",['是否使用激素药物\r   ']
214,his_bi,fun_dwd_D00223_d_16704,"
/***
函数名称：是否使用血液制品
    作用：统计某天患者是否使用血液制品
  开发人：wy 2020-05-22
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00223  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_quantity_d
	 where key = 'D00223';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取对应key 最大日期加一天 对应逻辑line 12 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00223';
	
  INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																						remark,st_date) 
					
	select distinct 'D00223',
					1,
					tm.patient_id,
					tm.visit_id,
					max(tm.pai_visit_id),
					now(),
					'是否使用血液制品', 
					to_char(tm.enter_date,'yyyyMMdd')
	from his_bi.bms_bill_item tm
	inner join his_bi.dms_pham_basic_info df on tm.item_code = df.pham_std_code
	left join his_bi.dms_inside_code_dict dt on df.pham_code = dt.cate_code
	where dt.cate_name like '%血液%'
	and tm.pai_visit_id is not null
	and tm.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')
	and tm.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
	group by 
						tm.patient_id,
					tm.visit_id,
					to_char(tm.enter_date,'yyyyMMdd')
	;
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00223'],"[""delete from his_bi.dwd_inp_quantity_d where st_date = c_daylist.day_id and key = 'D00223';\r \r  INSERT into his_bi.dwd_inp_quantity_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                      remark,st_date) \r     \r select distinct 'D00223',\r     1,\r     tm.patient_id,\r     tm.visit_id,\r     max(tm.pai_visit_id),\r     now(),\r     '是否使用血液制品', \r     to_char(tm.enter_date,'yyyyMMdd')\r from his_bi.bms_bill_item tm\r inner join his_bi.dms_pham_basic_info df on tm.item_code = df.pham_std_code\r left join his_bi.dms_inside_code_dict dt on df.pham_code = dt.cate_code\r where dt.cate_name like '%血液%'\r and tm.pai_visit_id is not null\r and tm.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r and tm.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1\r group by \r      tm.patient_id,\r     tm.visit_id,\r     to_char(tm.enter_date,'yyyyMMdd')\r ;\r ""]",['是否使用血液制品\r   ']
215,his_bi,fun_dwd_D00245_d_16727,"
/***
函数名称：住院患者呼吸内镜手术例数-（腔镜手术和微创手术同一套代码)
    作用：统计某天住院患者呼吸内镜手术例数
  开发人：wy 2020-06-03
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00245  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00245';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00245';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
	 select 'D00245',
					count(*),
				  a.bah as patient_id,
					a.zycs as visit_id,
					pt.pai_visit_id,
					now(),
					'住院患者呼吸内镜手术例数',
				  to_char(a.cyrq,'yyyymmdd') as st_date
	   from his_bi.ods_patient_medical_record a
	  inner join his_bi.pts_pai_visit pt on a.bah = pt.patient_id and a.zycs = pt.visit_id
		inner join his_bi.ods_patient_opertion_info t on t.brxh =a.brxh
	  where 1=1
	    and exists(select 1 from his_bi.dim_oper_mini_info mf
									where t.surgerycode = mf.icd9_code and mf.oper_level = '微创' and mf.icd9_type = '呼吸内镜手术')
	    and a.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
	    and a.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 
			and t.surgerytype not in ('2','3') --排除治疗，诊断性手术操作
			group by 
					a.bah,
					a.zycs,
					pt.pai_visit_id,
				  to_char(a.cyrq,'yyyymmdd')
	 ;

	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00245'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00245';\r \r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r  select 'D00245',\r     count(*),\r      a.bah as patient_id,\r     a.zycs as visit_id,\r     pt.pai_visit_id,\r     now(),\r     '住院患者呼吸内镜手术例数',\r      to_char(a.cyrq,'yyyymmdd') as st_date\r    from his_bi.ods_patient_medical_record a\r   inner join his_bi.pts_pai_visit pt on a.bah = pt.patient_id and a.zycs = pt.visit_id\r  inner join his_bi.ods_patient_opertion_info t on t.brxh =a.brxh\r   where 1=1\r     and exists(select 1 from his_bi.dim_oper_mini_info mf\r         where t.surgerycode = mf.icd9_code and mf.oper_level = '微创' and mf.icd9_type = '呼吸内镜手术')\r     and a.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')\r     and a.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 \r   and t.surgerytype not in ('2','3') --排除治疗，诊断性手术操作\r   group by \r     a.bah,\r     a.zycs,\r     pt.pai_visit_id,\r      to_char(a.cyrq,'yyyymmdd')\r  ;\r\r ""]",['住院患者呼吸内镜手术例数-（腔镜手术和微创手术同一套代码)\r   ']
216,his_bi,fun_dwd_D00246_d_16729,"
/***
函数名称：住院患者消化内镜手术例数（腔镜手术和微创手术同一套代码）
    作用：统计某天住院患者消化内镜手术例数
  开发人：wy 2020-06-03
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00246  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00246';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00246';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
	 select 'D00246',
					count(*),
				  a.bah as patient_id,
					a.zycs as visit_id,
					pt.pai_visit_id,
					now(),
					'住院患者消化内镜手术例数',
				  to_char(a.cyrq,'yyyymmdd') as st_date
	   from his_bi.ods_patient_medical_record a
	  inner join his_bi.pts_pai_visit pt on a.bah = pt.patient_id and a.zycs = pt.visit_id
		inner join his_bi.ods_patient_opertion_info t on t.brxh =a.brxh
	  where 1=1
	    and exists(select 1 from his_bi.dim_oper_mini_info mf
									where t.surgerycode = mf.icd9_code and mf.oper_level = '微创' and mf.icd9_type = '消化内镜手术')
	    and a.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
	    and a.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 
			and t.surgerytype not in ('2','3') --排除治疗，诊断性手术操作
			group by 
					a.bah,
					a.zycs,
					pt.pai_visit_id,
				  to_char(a.cyrq,'yyyymmdd') 
	 ;

	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00246'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00246';\r \r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r  select 'D00246',\r     count(*),\r      a.bah as patient_id,\r     a.zycs as visit_id,\r     pt.pai_visit_id,\r     now(),\r     '住院患者消化内镜手术例数',\r      to_char(a.cyrq,'yyyymmdd') as st_date\r    from his_bi.ods_patient_medical_record a\r   inner join his_bi.pts_pai_visit pt on a.bah = pt.patient_id and a.zycs = pt.visit_id\r  inner join his_bi.ods_patient_opertion_info t on t.brxh =a.brxh\r   where 1=1\r     and exists(select 1 from his_bi.dim_oper_mini_info mf\r         where t.surgerycode = mf.icd9_code and mf.oper_level = '微创' and mf.icd9_type = '消化内镜手术')\r     and a.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')\r     and a.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 \r   and t.surgerytype not in ('2','3') --排除治疗，诊断性手术操作\r   group by \r     a.bah,\r     a.zycs,\r     pt.pai_visit_id,\r      to_char(a.cyrq,'yyyymmdd') \r  ;\r\r ""]",['住院患者消化内镜手术例数（腔镜手术和微创手术同一套代码）\r   ']
217,his_bi,fun_dwd_D00224_d_16705,"
/***
函数名称：单病种-子宫肌瘤
    作用：统计某天子宫肌瘤疾病的人
  开发人：leslie 2020-06-17
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00224  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

    
***/
DECLARE
    c_daylist record;
    o_start_date varchar;
    o_end_date varchar;
    i_start_date varchar;
    i_end_date varchar;
    i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
    /*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
      from his_bi.dwd_inp_medical_d
     where key = 'D00224';
     
  if(i_count = 0)
      then 
          i_start_date := '20200101';
            --raise notice '0 i_start_date is: %', i_start_date;
    else if(i_count > 0)
      then
          i_start_date := i_end_date;
            --raise notice '1 i_start_date is: %', i_start_date;
  end if;
    end if;
        
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
    /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
      then 
        o_start_date := i_start_date;
        o_end_date := i_end_date;
            --raise notice '2 o_start_date is: %', o_start_date;
            --raise notice '2 o_end_date is: %', o_end_date;
    else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
    /*PG function 如果参入任何参数，那么以实际入参为准*/
      then 
          o_start_date := v_start_date;
        o_end_date := v_end_date;
            --raise notice '3 o_start_date is: %', o_start_date;
            --raise notice '3 o_end_date is: %', o_end_date;
    end if;
    end if;
    
    for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
    loop 
    
    --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
    
    delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00224';
    
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
                                                                             remark,st_date) 
  select 'D00224',
				 1, 
				 d.bah as patient_id,
				 d.zycs as visit_id,
				 a.pai_visit_id,
				 now(),
				 '子宫肌瘤',
			  to_char(d.cyrq,'yyyymmdd') as st_date
	 from his_bi.ods_patient_medical_record d
	 left join his_bi.pts_pai_visit a
	 on (a.patient_id =d.bah and a.visit_id =d.zycs)
	inner join his_bi.ods_patient_diag_info b 
		 on d.brxh = b.brxh 
		and b.main_diag = '1'   --主诊断
	where  exists(select * from his_bi.dim_oper_other_info t
							  where t.icd_code = b.diagdiseasecode 
									and t.icd_type = '单病种'
									and t.icd_describe = '子宫肌瘤'
									)
        and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
        and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1; 
 
     end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00224'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00224';\r    \r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                                                                             remark,st_date) \r  select 'D00224',\r     1, \r     d.bah as patient_id,\r     d.zycs as visit_id,\r     a.pai_visit_id,\r     now(),\r     '子宫肌瘤',\r     to_char(d.cyrq,'yyyymmdd') as st_date\r  from his_bi.ods_patient_medical_record d\r  left join his_bi.pts_pai_visit a\r  on (a.patient_id =d.bah and a.visit_id =d.zycs)\r inner join his_bi.ods_patient_diag_info b \r   on d.brxh = b.brxh \r  and b.main_diag = '1'   --主诊断\r where  exists(select * from his_bi.dim_oper_other_info t\r         where t.icd_code = b.diagdiseasecode \r         and t.icd_type = '单病种'\r         and t.icd_describe = '子宫肌瘤'\r         )\r        and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')\r        and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1; \r \r    ""]",['单病种-子宫肌瘤\r   ']
218,his_bi,fun_dwd_D00225_d_16706,"
/***
函数名称：儿童哮喘
    作用：统计某天儿童哮喘统计
  开发人：leslie 2020-06-17
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00225  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
    c_daylist record;
    o_start_date varchar;
    o_end_date varchar;
    i_start_date varchar;
    i_end_date varchar;
    i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
      from his_bi.dwd_inp_medical_d
     where key = 'D00225';
     
  if(i_count = 0)
      then 
          i_start_date := '20200101';
            --raise notice '0 i_start_date is: %', i_start_date;
    else if(i_count > 0)
      then
          i_start_date := i_end_date;
            --raise notice '1 i_start_date is: %', i_start_date;
  end if;
    end if;
        

  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
    /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
      then 
        o_start_date := i_start_date;
        o_end_date := i_end_date;
            --raise notice '2 o_start_date is: %', o_start_date;
            --raise notice '2 o_end_date is: %', o_end_date;
    else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
    /*PG function 如果参入任何参数，那么以实际入参为准*/
      then 
          o_start_date := v_start_date;
        o_end_date := v_end_date;
            --raise notice '3 o_start_date is: %', o_start_date;
            --raise notice '3 o_end_date is: %', o_end_date;
    end if;
    end if;
    
    for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
    loop 
    
    --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
    
    delete from his_bi.dwd_inp_medical_d where st_date = c_daylist.day_id and key = 'D00225';
    
  INSERT into his_bi.dwd_inp_medical_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
                                                                                        remark,st_date) 
			select 'D00225',
				 1, 
				 d.bah as patient_id,
				 d.zycs as visit_id,
				 a.pai_visit_id,
				 now(),
				 '儿童哮喘',
			  to_char(d.cyrq,'yyyymmdd') as st_date
	 from his_bi.ods_patient_medical_record d
	 left join his_bi.pts_pai_visit a
	 on (a.patient_id =d.bah and a.visit_id =d.zycs)
	inner join his_bi.ods_patient_diag_info b 
		 on d.brxh = b.brxh 
		and b.main_diag = '1'   --主诊断
	where  exists(select * from his_bi.dim_oper_other_info t
							  where t.icd_code = b.diagdiseasecode 
									and t.icd_type = '单病种'
									and t.icd_describe = '儿童哮喘'
									)
				and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
        and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1; 
     end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00225'],"[""delete from his_bi.dwd_inp_medical_d where st_date = c_daylist.day_id and key = 'D00225';\r    \r  INSERT into his_bi.dwd_inp_medical_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                                                                                        remark,st_date) \r   select 'D00225',\r     1, \r     d.bah as patient_id,\r     d.zycs as visit_id,\r     a.pai_visit_id,\r     now(),\r     '儿童哮喘',\r     to_char(d.cyrq,'yyyymmdd') as st_date\r  from his_bi.ods_patient_medical_record d\r  left join his_bi.pts_pai_visit a\r  on (a.patient_id =d.bah and a.visit_id =d.zycs)\r inner join his_bi.ods_patient_diag_info b \r   on d.brxh = b.brxh \r  and b.main_diag = '1'   --主诊断\r where  exists(select * from his_bi.dim_oper_other_info t\r         where t.icd_code = b.diagdiseasecode \r         and t.icd_type = '单病种'\r         and t.icd_describe = '儿童哮喘'\r         )\r    and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')\r        and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1; \r    ""]",['儿童哮喘\r   ']
219,his_bi,fun_dwd_D00226_d_16707,"
/***
函数名称：并发症---手术后伤口裂开
    作用：统计某天住院患者并发症---手术后伤口裂开
  开发人：wy 2020-05-23
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00226  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00226';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00226';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
  select 
		'D00226' as key,
		1 as value,
		pt.patient_id,
		pt.visit_id,
		pt.pai_visit_id,
		Now () as insert_date,
		'并发症---手术后伤口裂开' remark,
		to_char(md.cyrq,'yyyymmdd') as st_date
	from his_bi.ods_patient_medical_record md
	inner join his_bi.ods_patient_diag_info hf on md.bah = hf.patient_id and md.zycs = hf.visit_id
	inner join his_bi.pts_pai_visit pt on md.bah = pt.patient_id and md.zycs = pt.visit_id
	where exists
	(
			select tf.icd_code
			from his_bi.dim_oper_other_info tf
			where tf.icd_describe like '%伤口裂开%'
			and tf.icd_type = '手术并发症'
			and hf.diagdiseasecode = tf.icd_code
	)
	and md.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
	and md.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1
  ; 
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00226'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00226';\r \r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r  select \r  'D00226' as key,\r  1 as value,\r  pt.patient_id,\r  pt.visit_id,\r  pt.pai_visit_id,\r  Now () as insert_date,\r  '并发症---手术后伤口裂开' remark,\r  to_char(md.cyrq,'yyyymmdd') as st_date\r from his_bi.ods_patient_medical_record md\r inner join his_bi.ods_patient_diag_info hf on md.bah = hf.patient_id and md.zycs = hf.visit_id\r inner join his_bi.pts_pai_visit pt on md.bah = pt.patient_id and md.zycs = pt.visit_id\r where exists\r (\r   select tf.icd_code\r   from his_bi.dim_oper_other_info tf\r   where tf.icd_describe like '%伤口裂开%'\r   and tf.icd_type = '手术并发症'\r   and hf.diagdiseasecode = tf.icd_code\r )\r and md.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')\r and md.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1\r  ; \r \r ""]",['并发症---手术后伤口裂开\r   ']
220,his_bi,fun_dwd_D00227_d_16708,"
/***
函数名称：并发症---手术后出血或血肿
    作用：统计某天住院患者并发症---手术后出血或血肿
  开发人：wy 2020-05-23
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00227  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00227';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00227';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
	select 
		'D00227' as key,
		1 as value,
		pt.patient_id,
		pt.visit_id,
		pt.pai_visit_id,
		Now () as insert_date,
		'并发症---手术后出血或血肿' remark,
		to_char(md.cyrq,'yyyymmdd') as st_date
	from his_bi.ods_patient_medical_record md
	inner join his_bi.ods_patient_diag_info hf on md.bah = hf.patient_id and md.zycs = hf.visit_id
	inner join his_bi.pts_pai_visit pt on md.bah = pt.patient_id and md.zycs = pt.visit_id
	where exists
	(
			select tf.icd_code
			from his_bi.dim_oper_other_info tf
			where tf.icd_describe like '%出血或血肿%'
			and tf.icd_type = '手术并发症'
			and hf.diagdiseasecode = tf.icd_code
	)
	and md.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
	and md.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1
  ; 
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00227'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00227';\r \r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r select \r  'D00227' as key,\r  1 as value,\r  pt.patient_id,\r  pt.visit_id,\r  pt.pai_visit_id,\r  Now () as insert_date,\r  '并发症---手术后出血或血肿' remark,\r  to_char(md.cyrq,'yyyymmdd') as st_date\r from his_bi.ods_patient_medical_record md\r inner join his_bi.ods_patient_diag_info hf on md.bah = hf.patient_id and md.zycs = hf.visit_id\r inner join his_bi.pts_pai_visit pt on md.bah = pt.patient_id and md.zycs = pt.visit_id\r where exists\r (\r   select tf.icd_code\r   from his_bi.dim_oper_other_info tf\r   where tf.icd_describe like '%出血或血肿%'\r   and tf.icd_type = '手术并发症'\r   and hf.diagdiseasecode = tf.icd_code\r )\r and md.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')\r and md.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1\r  ; \r \r ""]",['并发症---手术后出血或血肿\r   ']
221,his_bi,fun_kpi_master_m_16765,"
/***
函数名称：三级公立绩效指标函数
    作用：三级公立绩效指标函数
  开发人：leslie 2020年7月29日
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
  c_monthlist   record;
  o_start_month varchar;
  o_end_month   varchar;
  i_start_month varchar;
  i_end_month   varchar;
  i_count       int4;
BEGIN
    /*
同比计算步入2021年后的模板--影响的指标kpi_code in ('JX037','JX038','JX040')
select
    c_monthlist.month_id,
    '目标编码' as kpi_code ,
    coalesce(round(((sum(case when t1.month_id = c_monthlist.month_id then t1.kpi_value end)-
                     sum(case when t1.month_id = to_char(to_date(left(c_monthlist.month_id,4), 'yyyy') -  interval '1' year,'yyyy')||right(c_monthlist.month_id,2) then t1.kpi_value end))/
                    sum(case when t1.month_id =  to_char(to_date(left(c_monthlist.month_id,4), 'yyyy') -  interval '1' year,'yyyy')||right(c_monthlist.month_id,2) then t1.kpi_value end))*100,5),0) as kpi_value,
    now() as update_time ,
    coalesce(round(((sum(case when t1.month_id = c_monthlist.month_id then t1.kpi_value end)-
                     sum(case when t1.month_id = to_char(to_date(left(c_monthlist.month_id,4), 'yyyy') -  interval '1' year,'yyyy')||right(c_monthlist.month_id,2) then t1.kpi_value end))/
                    sum(case when t1.month_id =  to_char(to_date(left(c_monthlist.month_id,4), 'yyyy') -  interval '1' year,'yyyy')||right(c_monthlist.month_id,2) then t1.kpi_value end))*100,5),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where t1.kpi_code='基于同比的编码' ---例子：基于医疗收入同比  这里填JX03106
  and  to_date(left(t1.month_id,4),'yyyy')>= to_date(left(c_monthlist.month_id,4), 'yyyy') -  interval '1' year
  and to_date(left(t1.month_id,4),'yyyy')< to_date(left(c_monthlist.month_id,4), 'yyyy') +  interval '1' year;
*/
    
  /*如果指标没有历史指标数据，甘肃默认以202001开始计算，结束月份以当前月份往前推1个月*/
  select count(1),to_char((date_trunc('month', now()) + interval '-1 month'),'yyyymm')
           into i_count,i_end_month
    from his_bi.kpi_master_m;
   
  if(i_count = 0)
    then 
      i_start_month := c_monthlist.month_id;
      --raise notice '0 i_start_month is: %', i_start_month;
  else if(i_count > 0)
    then
      i_start_month := i_end_month;
      --raise notice '1 i_start_month is: %', i_start_month;
  end if;
  end if;
    
  if(length(trim(v_start_month)) = 0 and length(trim(v_end_month)) = 0)
  /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前月份前1个月为截止月份 */
    then 
      o_start_month := i_start_month;
      o_end_month := i_end_month;
      --raise notice '2 o_start_month is: %', o_start_month;
      --raise notice '2 o_end_month is: %', o_end_month;
  else if (length(trim(v_start_month)) <> 0 and length(trim(v_end_month)) <> 0)
  /*PG function 如果参入任何参数，那么以实际入参为准*/
    then 
      o_start_month := v_start_month;
      o_end_month := v_end_month;
      --raise notice '3 o_start_month is: %', o_start_month;
      --raise notice '3 o_end_month is: %', o_end_month;
  end if;
  end if;
      for c_monthlist in (select distinct month_id from his_bi.dim_date_info where month_id >= o_start_month and month_id <= o_end_month order by month_id)
    loop
    --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
    
  delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX00101';
    
  insert into his_bi.kpi_master_m
        select
        t1.month_id,
        'JX00101' as kpi_code,
        count(distinct t1.outp_visit_id) as kpi_value,
        now() as update_time,
        count(distinct t1.outp_visit_id) as self_value,
        null as check_flag,
        null as check_comm
        from
        his_bi.dw_outp_patient_info_m t1
        where
        t1.month_id = c_monthlist.month_id
        and t1.is_emergency  is null
        and t1.is_tj is null
        group by 
        t1.month_id;


  delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX00102';
    
  insert into his_bi.kpi_master_m
        select
        t1.month_id,
        'JX00102' as kpi_code,
        COALESCE(count(distinct t1.pai_visit_id),0)  as kpi_value,
        now() as update_time,
        COALESCE(count(distinct t1.pai_visit_id),0)  as self_value,
        null as check_flag,
        null as check_comm
        from
        his_bi.dw_inp_patient_info_m t1
        where
        t1.month_id=c_monthlist.month_id
        group by 
        t1.month_id;
        
    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX001';
    
  insert into his_bi.kpi_master_m
         select
        t1.month_id,
        'JX001' as kpi_code,
        round(max(t1.kpi_value)/max(t2.kpi_value),5) as kpi_value,
        now() as update_time,
        round(max(t1.kpi_value)/max(t2.kpi_value),5) as self_value,
        null as check_flag,
        null as check_comm
        from
        his_bi.kpi_master_m t1
        left join his_bi.kpi_master_m t2 on t1.kpi_code = t2.kpi_code and t1.month_id = t2.month_id 
        and t2.kpi_code='JX00102'
        where
        t1.month_id=c_monthlist.month_id
        and t1.kpi_code in('JX00102','JX00101')
        group by 
        t1.month_id;
                
        ---下转患者
  delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX00202';
    
  insert into his_bi.kpi_master_m

        select
        t1.month_id,
        'JX00202' as kpi_code,
        COALESCE(COALESCE(count(distinct t1.pai_visit_id),0) ,0) as kpi_value,
        now() as update_time,
        COALESCE(COALESCE(count(distinct t1.pai_visit_id),0) ,0) as self_value,
        null as check_flag,
        null as check_comm
        from
        his_bi.dw_inp_patient_info_m t1
        where
        t1.month_id=c_monthlist.month_id
        and t1.is_xzhz='1'
        group by 
        t1.month_id;

-----日间手术台次数（日间手术人数）
  delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX00301';
    
  insert into his_bi.kpi_master_m
         select
        t1.month_id,
        'JX00301' as kpi_code,
        COALESCE(count(distinct t1.pai_visit_id),0) as kpi_value,
        now() as update_time,
        COALESCE(count(distinct t1.pai_visit_id),0) as self_value,
        null as check_flag,
        null as check_comm
        from
        his_bi.dw_inp_patient_info_m t1
        where
        t1.month_id=c_monthlist.month_id
        and t1.rjss_num>0
        group by 
        t1.month_id;

-----同期出院患者择期手术总台次数（同期出院择期手术总人数）
  delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX00302';
    
  insert into his_bi.kpi_master_m
         select
        t1.month_id,
        'JX00302' as kpi_code,
        COALESCE(count(distinct t1.pai_visit_id),0) as kpi_value,
        now() as update_time,
        COALESCE(count(distinct t1.pai_visit_id),0) as self_value,
        null as check_flag,
        null as check_comm
        from
        his_bi.dw_inp_patient_info_m t1
        where
        t1.month_id=c_monthlist.month_id
        and t1.is_zqss>0
        group by 
        t1.month_id;
                
------日间手术占择期手术比例
  delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX003';
    
  insert into his_bi.kpi_master_m
        select
        t1.month_id,
        'JX003' as kpi_code,
        round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as kpi_value,
        now() as update_time,
        round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as self_value,
        null as check_flag,
        null as check_comm
        from
        his_bi.kpi_master_m t1
        left join his_bi.kpi_master_m t2 on t1.kpi_code = t2.kpi_code and t1.month_id = t2.month_id 
        and t2.kpi_code='JX00301'
        where
        t1.month_id=c_monthlist.month_id
        and t1.kpi_code in('JX00301','JX00302')
        group by 
        t1.month_id;
-----出院患者手术台次数（出院手术人数）
  delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX00401';
    
  insert into his_bi.kpi_master_m
         select
        t1.month_id,
        'JX00401' as kpi_code,
        COALESCE(count(distinct t1.pai_visit_id),0) as kpi_value,
        now() as update_time,
        COALESCE(count(distinct t1.pai_visit_id),0) as self_value,
        null as check_flag,
        null as check_comm
        from
        his_bi.dw_inp_patient_info_m t1
        where
        t1.month_id=c_monthlist.month_id
        and t1.is_sshz>0
        group by 
        t1.month_id;

---同期出院患者总人次数（出院人数）
  delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX00402';
    
  insert into his_bi.kpi_master_m
        select
        t1.month_id,
        'JX00402' as kpi_code,
        COALESCE(count(distinct t1.pai_visit_id),0)  as kpi_value,
        now() as update_time,
        COALESCE(count(distinct t1.pai_visit_id),0)  as self_value,
        null as check_flag,
        null as check_comm
        from
        his_bi.dw_inp_patient_info_m t1
        where
        t1.month_id=c_monthlist.month_id
        group by 
        t1.month_id;


------出院患者手术占比
  delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX004';
    
  insert into his_bi.kpi_master_m
        select
        t1.month_id,
        'JX004' as kpi_code,
        round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as kpi_value,
        now() as update_time,
        round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as self_value,
        null as check_flag,
        null as check_comm
        from
        his_bi.kpi_master_m t1
        left join his_bi.kpi_master_m t2 on t1.kpi_code = t2.kpi_code and t1.month_id = t2.month_id 
        and t2.kpi_code='JX00401'
        where
        t1.month_id=c_monthlist.month_id
        and t1.kpi_code in('JX00401','JX00402')
        group by 
        t1.month_id;


---出院患者微创手术台次数（微创手术人数）
  delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX00501';
    
  insert into his_bi.kpi_master_m
        select
        t1.month_id,
        'JX00501' as kpi_code,
        COALESCE(count(distinct t1.pai_visit_id),0) as kpi_value,
        now() as update_time,
        COALESCE(count(distinct t1.pai_visit_id),0) as self_value,
        null as check_flag,
        null as check_comm
        from
        his_bi.dw_inp_patient_info_m t1
        where
        t1.month_id=c_monthlist.month_id
        and t1.wc_num>0
        group by 
        t1.month_id;

delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX00502';
        
      insert into his_bi.kpi_master_m
            select
            t1.month_id,
            'JX00502' as kpi_code,
            COALESCE(count(distinct t1.pai_visit_id),0) as kpi_value,
            now() as update_time,
            COALESCE(count(distinct t1.pai_visit_id),0) as self_value,
            null as check_flag,
            null as check_comm
            from
            his_bi.dw_inp_patient_info_m t1
            where
            t1.month_id=c_monthlist.month_id
            and t1.is_sshz>0
            group by 
            t1.month_id;
    
    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX00601';
        
      insert into his_bi.kpi_master_m
            select
            t1.month_id,
            'JX00601' as kpi_code,
            COALESCE(count(distinct t1.pai_visit_id),0) as kpi_value,
            now() as update_time,
            COALESCE(count(distinct t1.pai_visit_id),0) as self_value,
            null as check_flag,
            null as check_comm
            from
            his_bi.dw_inp_patient_info_m t1
            where
            t1.month_id=c_monthlist.month_id
            and t1.sjss_num>0
            group by 
            t1.month_id;
    
    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX00602';
        
      insert into his_bi.kpi_master_m
            select
            t1.month_id,
            'JX00602' as kpi_code,
            COALESCE(count(distinct t1.pai_visit_id),0) as kpi_value,
            now() as update_time,
            COALESCE(count(distinct t1.pai_visit_id),0) as self_value,
            null as check_flag,
            null as check_comm
            from
            his_bi.dw_inp_patient_info_m t1
            where
            t1.month_id=c_monthlist.month_id
            and t1.is_sshz>0
            group by 
            t1.month_id;
delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX00801';
        
      insert into his_bi.kpi_master_m
            select
            t1.month_id,
            'JX00801' as kpi_code,
            COALESCE(count(distinct t1.pai_visit_id),0) as kpi_value,
            now() as update_time,
            COALESCE(count(distinct t1.pai_visit_id),0) as self_value,
            null as check_flag,
            null as check_comm
            from
            his_bi.dw_inp_patient_info_m t1
            where
            t1.month_id=c_monthlist.month_id
            and t1.ssbf_num>0
            group by 
            t1.month_id;
    
    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX00802';
        
      insert into his_bi.kpi_master_m
            select
            t1.month_id,
            'JX00802' as kpi_code,
            COALESCE(count(distinct t1.pai_visit_id),0) as kpi_value,
            now() as update_time,
            COALESCE(count(distinct t1.pai_visit_id),0) as self_value,
            null as check_flag,
            null as check_comm
            from
            his_bi.dw_inp_patient_info_m t1
            where
            t1.month_id=c_monthlist.month_id
            and t1.is_sshz>0
            group by 
            t1.month_id;
    
    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX00901';
        
      insert into his_bi.kpi_master_m
            select
            t1.month_id,
            'JX00901' as kpi_code,
            COALESCE(count(distinct t1.pai_visit_id),0) as kpi_value,
            now() as update_time,
            COALESCE(count(distinct t1.pai_visit_id),0) as self_value,
            null as check_flag,
            null as check_comm
            from
            his_bi.dw_inp_patient_info_m t1
            where
            t1.month_id=c_monthlist.month_id
            and t1.is_ylqk_gr>0
            group by 
            t1.month_id;
    
    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX00902';
        
      insert into his_bi.kpi_master_m
            select
            t1.month_id,
            'JX00902' as kpi_code,
            COALESCE(count(distinct t1.pai_visit_id),0) as kpi_value,
            now() as update_time,
            COALESCE(count(distinct t1.pai_visit_id),0) as self_value,
            null as check_flag,
            null as check_comm
            from
            his_bi.dw_inp_patient_info_m t1
            where
            t1.month_id=c_monthlist.month_id
            and t1.is_ylqk_sh>0
            group by 
            t1.month_id;
                        
----   10.1剖宫产病种例数
    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX01001';
        
      insert into his_bi.kpi_master_m
            select
            t1.month_id,
            'JX01001' as kpi_code,
            COALESCE(count(distinct t1.pai_visit_id),0) as kpi_value,
            now() as update_time,
            COALESCE(count(distinct t1.pai_visit_id),0) as self_value,
            null as check_flag,
            null as check_comm
            from
            his_bi.dw_inp_drgs_patient_m t1
            where
            t1.month_id=c_monthlist.month_id
            and t1.drgs_name = 'D00183'
            group by 
            t1.month_id;


-----平均住院日
    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100101';
        
      insert into his_bi.kpi_master_m
            select
            t1.month_id,
            'JX0100101' as kpi_code,
            round(avg(t1.in_days),4)as kpi_value,
            now() as update_time,
            round(avg(t1.in_days),4) as self_value,
            null as check_flag,
            null as check_comm
            from
            his_bi.dw_inp_drgs_patient_m t1
            where
            t1.month_id = c_monthlist.month_id
            and t1.drgs_name = 'D00183'
            group by 
            t1.month_id;

---    同期剖宫产总出院人数
    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100103';
        
      insert into his_bi.kpi_master_m
            select
            t1.month_id,
            'JX0100103' as kpi_code,
            COALESCE(count(distinct t1.pai_visit_id),0) as kpi_value,
            now() as update_time,
            COALESCE(count(distinct t1.pai_visit_id),0) as self_value,
            null as check_flag,
            null as check_comm
            from
            his_bi.dw_inp_drgs_patient_m t1
            where
            t1.month_id=c_monthlist.month_id
            and t1.drgs_name = 'D00183'
            group by 
            t1.month_id;

----    剖宫产死亡人数
    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100108';
        
      insert into his_bi.kpi_master_m
            select
            t1.month_id,
            'JX0100108' as kpi_code,
            COALESCE(COALESCE(count(distinct t1.pai_visit_id),0) ,0) as kpi_value,
            now() as update_time,
            COALESCE(COALESCE(count(distinct t1.pai_visit_id),0) ,0) as self_value,
            null as check_flag,
            null as check_comm
            from
            his_bi.dw_inp_drgs_patient_m t1
            where
            t1.month_id=c_monthlist.month_id
            and t1.drgs_name = 'D00183'
            and t1.lyfs = '5'
            group by 
            t1.month_id;

---总费用

    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100105';
        
      insert into his_bi.kpi_master_m
            select
            t1.month_id,
            'JX0100105' as kpi_code,
            round(sum(t1.total_fees),4)as kpi_value,
            now() as update_time,
            round(sum(t1.total_fees),4)as self_value,
            null as check_flag,
            null as check_comm
            from
            his_bi.dw_inp_drgs_patient_m t1
            where
            t1.month_id=c_monthlist.month_id
            and t1.drgs_name = 'D00183'
            group by 
            t1.month_id;


---社区获得性肺炎病例数
    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX01002';
        
      insert into his_bi.kpi_master_m
            select
            t1.month_id,
            'JX01002' as kpi_code,
            COALESCE(count(distinct t1.pai_visit_id),0) as kpi_value,
            now() as update_time,
            COALESCE(count(distinct t1.pai_visit_id),0) as self_value,
            null as check_flag,
            null as check_comm
            from
            his_bi.dw_inp_drgs_patient_m t1
            where
            t1.month_id=c_monthlist.month_id
            and t1.drgs_name = 'D00173'
            group by 
            t1.month_id;

----平均住院日
    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100201';
        
      insert into his_bi.kpi_master_m
            select
            t1.month_id,
            'JX0100201' as kpi_code,
            round(avg(t1.in_days),4)as kpi_value,
            now() as update_time,
            round(avg(t1.in_days),4) as self_value,
            null as check_flag,
            null as check_comm
            from
            his_bi.dw_inp_drgs_patient_m t1
            where
            t1.month_id=c_monthlist.month_id
            and t1.drgs_name = 'D00173'
            group by 
            t1.month_id;
---    同期社区获得性肺炎(住院、儿童)总出院人数
    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100203';
        
      insert into his_bi.kpi_master_m
            select
            t1.month_id,
            'JX0100203' as kpi_code,
            COALESCE(count(distinct t1.pai_visit_id),0) as kpi_value,
            now() as update_time,
            COALESCE(count(distinct t1.pai_visit_id),0) as self_value,
            null as check_flag,
            null as check_comm
            from
            his_bi.dw_inp_drgs_patient_m t1
            where
            t1.month_id=c_monthlist.month_id
            and t1.drgs_name = 'D00173'
            group by 
            t1.month_id;

---    社区获得性肺炎(住院、儿童)死亡人数
    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100208';
        
      insert into his_bi.kpi_master_m
            select
            t1.month_id,
            'JX0100208' as kpi_code,
            COALESCE(COALESCE(count(distinct t1.pai_visit_id),0) ,0)as kpi_value,
            now() as update_time,
            COALESCE(COALESCE(count(distinct t1.pai_visit_id),0) ,0)as self_value,
            null as check_flag,
            null as check_comm
            from
            his_bi.dw_inp_drgs_patient_m t1
            where
            t1.month_id=c_monthlist.month_id
            and t1.drgs_name = 'D00173'
            and t1.lyfs='5'
            group by 
            t1.month_id;


---总费用
    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100205';
        
      insert into his_bi.kpi_master_m
            select
            t1.month_id,
            'JX0100205' as kpi_code,
            round(sum(t1.total_fees),4)as kpi_value,
            now() as update_time,
            round(sum(t1.total_fees),4) as self_value,
            null as check_flag,
            null as check_comm
            from
            his_bi.dw_inp_drgs_patient_m t1
            where
            t1.month_id=c_monthlist.month_id
            and t1.drgs_name = 'D00173'
            group by 
            t1.month_id;
---刨宫产病死率
    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100107';
        
      insert into his_bi.kpi_master_m
             select
            t1.month_id,
            'JX0100107' as kpi_code,
             round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as kpi_value,
            now() as update_time,
             round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as self_value,
            null as check_flag,
            null as check_comm
            from
            his_bi.kpi_master_m t1
            left join his_bi.kpi_master_m t2 on t1.kpi_code = t2.kpi_code and t1.month_id = t2.month_id 
            and t2.kpi_code='JX0100108'
            where
            t1.month_id=c_monthlist.month_id
            and t1.kpi_code in('JX0100108','JX01001')
            group by 
            t1.month_id;


----社区获得性肺炎总天数
    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100202';
        
      insert into his_bi.kpi_master_m
            select
            t1.month_id,
            'JX0100202' as kpi_code,
            round(sum(t1.in_days),3)as kpi_value,
            now() as update_time,
            round(sum(t1.in_days),3) as self_value,
            null as check_flag,
            null as check_comm
            from
            his_bi.dw_inp_drgs_patient_m t1
            where
            t1.month_id=c_monthlist.month_id
            and t1.drgs_name = 'D00173'
            group by 
            t1.month_id;

----同期社区获得性肺炎总天数
    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100206';
        
      insert into his_bi.kpi_master_m
            select
            t1.month_id,
            'JX0100206' as kpi_code,
            round(sum(t1.in_days),3)as kpi_value,
            now() as update_time,
            round(sum(t1.in_days),3) as self_value,
            null as check_flag,
            null as check_comm
            from
            his_bi.dw_inp_drgs_patient_m t1
            where
            t1.month_id=c_monthlist.month_id
            and t1.drgs_name = 'D00173'
            group by 
            t1.month_id;

---社区肺炎均次费用
    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100204';
        
      insert into his_bi.kpi_master_m
             select
            t1.month_id,
            'JX0100204' as kpi_code,
            round(max(t1.kpi_value)/max(t2.kpi_value),5)as kpi_value,
            now() as update_time,
            round(max(t1.kpi_value)/max(t2.kpi_value),5)as self_value,
            null as check_flag,
            null as check_comm
            from
            his_bi.kpi_master_m t1
            left join his_bi.kpi_master_m t2 on t1.kpi_code = t2.kpi_code and t1.month_id = t2.month_id 
            and t2.kpi_code='JX01002'
            where
            t1.month_id=c_monthlist.month_id
            and t1.kpi_code in('JX0100205','JX01002')
            group by 
            t1.month_id;

---刨宫产均次费用
    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100104';
        
      insert into his_bi.kpi_master_m
             select
            t1.month_id,
            'JX0100104' as kpi_code,
            round(max(t1.kpi_value)/max(t2.kpi_value),5)as kpi_value,
            now() as update_time,
            round(max(t1.kpi_value)/max(t2.kpi_value),5)as self_value,
            null as check_flag,
            null as check_comm
            from
            his_bi.kpi_master_m t1
            left join his_bi.kpi_master_m t2 on t1.kpi_code = t2.kpi_code and t1.month_id = t2.month_id 
            and t2.kpi_code='JX01001'
            where
            t1.month_id=c_monthlist.month_id
            and t1.kpi_code in('JX0100105','JX01001')
            group by 
            t1.month_id;


----刨宫产总天数
    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100102';
        
      insert into his_bi.kpi_master_m
            select
            t1.month_id,
            'JX0100102' as kpi_code,
            round(sum(t1.in_days),3)as kpi_value,
            now() as update_time,
            round(sum(t1.in_days),3) as self_value,
            null as check_flag,
            null as check_comm
            from
            his_bi.dw_inp_drgs_patient_m t1
            where
            t1.month_id=c_monthlist.month_id
            and t1.drgs_name = 'D00183'
            group by 
            t1.month_id;

----同期刨宫产总天数
    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100106';
        
      insert into his_bi.kpi_master_m
            select
            t1.month_id,
            'JX0100106' as kpi_code,
            round(sum(t1.in_days),3)as kpi_value,
            now() as update_time,
            round(sum(t1.in_days),3) as self_value,
            null as check_flag,
            null as check_comm
            from
            his_bi.dw_inp_drgs_patient_m t1
            where
            t1.month_id=c_monthlist.month_id
            and t1.drgs_name = 'D00183'
            group by 
            t1.month_id;

---病例总数
    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX01003';
        
      insert into his_bi.kpi_master_m
            select
            t1.month_id,
            'JX01003' as kpi_code,
            COALESCE(count(distinct t1.pai_visit_id),0) as kpi_value,
            now() as update_time,
            COALESCE(count(distinct t1.pai_visit_id),0) as self_value,
            null as check_flag,
            null as check_comm
            from
            his_bi.dw_inp_drgs_patient_m t1
            where
            t1.month_id=c_monthlist.month_id
            and t1.drgs_name = 'D00113'
            group by 
            t1.month_id;
    
---病例总数
    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX01004';
        
      insert into his_bi.kpi_master_m
            select
            t1.month_id,
            'JX01004' as kpi_code,
            COALESCE(count(distinct t1.pai_visit_id),0) as kpi_value,
            now() as update_time,
            COALESCE(count(distinct t1.pai_visit_id),0) as self_value,
            null as check_flag,
            null as check_comm
            from
            his_bi.dw_inp_drgs_patient_m t1
            where
            t1.month_id=c_monthlist.month_id
            and t1.drgs_name = 'D00208'
            group by 
            t1.month_id;
    
---病例总数
    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX01005';
        
      insert into his_bi.kpi_master_m
            select
            t1.month_id,
            'JX01005' as kpi_code,
            COALESCE(count(distinct t1.pai_visit_id),0) as kpi_value,
            now() as update_time,
            COALESCE(count(distinct t1.pai_visit_id),0) as self_value,
            null as check_flag,
            null as check_comm
            from
            his_bi.dw_inp_drgs_patient_m t1
            where
            t1.month_id=c_monthlist.month_id
            and t1.drgs_name = 'D00224'
            group by 
            t1.month_id;
    
---病例总数
    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX01006';
        
      insert into his_bi.kpi_master_m
            select
            t1.month_id,
            'JX01006' as kpi_code,
            COALESCE(count(distinct t1.pai_visit_id),0) as kpi_value,
            now() as update_time,
            COALESCE(count(distinct t1.pai_visit_id),0) as self_value,
            null as check_flag,
            null as check_comm
            from
            his_bi.dw_inp_drgs_patient_m t1
            where
            t1.month_id=c_monthlist.month_id
            and t1.drgs_name = 'D00210'
            group by 
            t1.month_id;


---平均住院日
    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100301';
            
          insert into his_bi.kpi_master_m
                select
                t1.month_id,
                'JX0100301' as kpi_code,
                round(avg(t1.in_days),4)as kpi_value,
                now() as update_time,
                round(avg(t1.in_days),4) as self_value,
                null as check_flag,
                null as check_comm
                from
                his_bi.dw_inp_drgs_patient_m t1
                where
                t1.month_id=c_monthlist.month_id
                and t1.drgs_name = 'D00113'
                group by 
                t1.month_id;
    
---平均住院日
    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100401';
            
          insert into his_bi.kpi_master_m
                select
                t1.month_id,
                'JX0100401' as kpi_code,
                round(avg(t1.in_days),4)as kpi_value,
                now() as update_time,
                round(avg(t1.in_days),4) as self_value,
                null as check_flag,
                null as check_comm
                from
                his_bi.dw_inp_drgs_patient_m t1
                where
                t1.month_id=c_monthlist.month_id
                and t1.drgs_name = 'D00208'
                group by 
                t1.month_id;
    
---平均住院日
    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100501';
            
          insert into his_bi.kpi_master_m
                select
                t1.month_id,
                'JX0100501' as kpi_code,
                round(avg(t1.in_days),4)as kpi_value,
                now() as update_time,
                round(avg(t1.in_days),4) as self_value,
                null as check_flag,
                null as check_comm
                from
                his_bi.dw_inp_drgs_patient_m t1
                where
                t1.month_id=c_monthlist.month_id
                and t1.drgs_name = 'D00224'
                group by 
                t1.month_id;
    
---平均住院日
    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100601';
            
          insert into his_bi.kpi_master_m
                select
                t1.month_id,
                'JX0100601' as kpi_code,
                round(avg(t1.in_days),4)as kpi_value,
                now() as update_time,
                round(avg(t1.in_days),4) as self_value,
                null as check_flag,
                null as check_comm
                from
                his_bi.dw_inp_drgs_patient_m t1
                where
                t1.month_id=c_monthlist.month_id
                and t1.drgs_name = 'D00210'
                group by 
                t1.month_id;


---出院患者占用总床日数
    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100302';
        
      insert into his_bi.kpi_master_m
            select
            t1.month_id,
            'JX0100302' as kpi_code,
            round(sum(t1.in_days),3)as kpi_value,
            now() as update_time,
            round(sum(t1.in_days),3) as self_value,
            null as check_flag,
            null as check_comm
            from
            his_bi.dw_inp_drgs_patient_m t1
            where
            t1.month_id=c_monthlist.month_id
            and t1.drgs_name = 'D00113'
            group by 
            t1.month_id;
    
---出院患者占用总床日数
    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100402';
        
      insert into his_bi.kpi_master_m
            select
            t1.month_id,
            'JX0100402' as kpi_code,
            round(sum(t1.in_days),3)as kpi_value,
            now() as update_time,
            round(sum(t1.in_days),3) as self_value,
            null as check_flag,
            null as check_comm
            from
            his_bi.dw_inp_drgs_patient_m t1
            where
            t1.month_id=c_monthlist.month_id
            and t1.drgs_name = 'D00208'
            group by 
            t1.month_id;
    
---出院患者占用总床日数
    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100502';
        
      insert into his_bi.kpi_master_m
            select
            t1.month_id,
            'JX0100502' as kpi_code,
            round(sum(t1.in_days),3)as kpi_value,
            now() as update_time,
            round(sum(t1.in_days),3) as self_value,
            null as check_flag,
            null as check_comm
            from
            his_bi.dw_inp_drgs_patient_m t1
            where
            t1.month_id=c_monthlist.month_id
            and t1.drgs_name = 'D00224'
            group by 
            t1.month_id;
    
---出院患者占用总床日数
    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100602';
        
      insert into his_bi.kpi_master_m
            select
            t1.month_id,
            'JX0100602' as kpi_code,
            round(sum(t1.in_days),3)as kpi_value,
            now() as update_time,
            round(sum(t1.in_days),3) as self_value,
            null as check_flag,
            null as check_comm
            from
            his_bi.dw_inp_drgs_patient_m t1
            where
            t1.month_id=c_monthlist.month_id
            and t1.drgs_name = 'D00210'
            group by 
            t1.month_id;


---同期总出院人数
    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100303';
        
      insert into his_bi.kpi_master_m
            select
            t1.month_id,
            'JX0100303' as kpi_code,
            COALESCE(count(distinct t1.pai_visit_id),0) as kpi_value,
            now() as update_time,
            COALESCE(count(distinct t1.pai_visit_id),0) as self_value,
            null as check_flag,
            null as check_comm
            from
            his_bi.dw_inp_drgs_patient_m t1
            where
            t1.month_id=c_monthlist.month_id
            and t1.drgs_name = 'D00113'
            group by 
            t1.month_id;
    
---同期总出院人数
    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100403';
        
      insert into his_bi.kpi_master_m
            select
            t1.month_id,
            'JX0100403' as kpi_code,
            COALESCE(count(distinct t1.pai_visit_id),0) as kpi_value,
            now() as update_time,
            COALESCE(count(distinct t1.pai_visit_id),0) as self_value,
            null as check_flag,
            null as check_comm
            from
            his_bi.dw_inp_drgs_patient_m t1
            where
            t1.month_id=c_monthlist.month_id
            and t1.drgs_name = 'D00208'
            group by 
            t1.month_id;
    
---同期总出院人数
    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100503';
        
      insert into his_bi.kpi_master_m
            select
            t1.month_id,
            'JX0100503' as kpi_code,
            COALESCE(count(distinct t1.pai_visit_id),0) as kpi_value,
            now() as update_time,
            COALESCE(count(distinct t1.pai_visit_id),0) as self_value,
            null as check_flag,
            null as check_comm
            from
            his_bi.dw_inp_drgs_patient_m t1
            where
            t1.month_id=c_monthlist.month_id
            and t1.drgs_name = 'D00224'
            group by 
            t1.month_id;
    
---同期总出院人数
    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100603';
        
      insert into his_bi.kpi_master_m
            select
            t1.month_id,
            'JX0100603' as kpi_code,
            COALESCE(count(distinct t1.pai_visit_id),0) as kpi_value,
            now() as update_time,
            COALESCE(count(distinct t1.pai_visit_id),0) as self_value,
            null as check_flag,
            null as check_comm
            from
            his_bi.dw_inp_drgs_patient_m t1
            where
            t1.month_id=c_monthlist.month_id
            and t1.drgs_name = 'D00210'
            group by 
            t1.month_id;

---总出院费用
    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100305';
        
      insert into his_bi.kpi_master_m
            select
            t1.month_id,
            'JX0100305' as kpi_code,
            round(sum(t1.total_fees),4)as kpi_value,
            now() as update_time,
            round(sum(t1.total_fees),4) as self_value,
            null as check_flag,
            null as check_comm
            from
            his_bi.dw_inp_drgs_patient_m t1
            where
            t1.month_id=c_monthlist.month_id
            and t1.drgs_name = 'D00113'
            group by 
            t1.month_id;
    
---总出院费用
    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100405';
        
      insert into his_bi.kpi_master_m
            select
            t1.month_id,
            'JX0100405' as kpi_code,
            round(sum(t1.total_fees),4)as kpi_value,
            now() as update_time,
            round(sum(t1.total_fees),4) as self_value,
            null as check_flag,
            null as check_comm
            from
            his_bi.dw_inp_drgs_patient_m t1
            where
            t1.month_id=c_monthlist.month_id
            and t1.drgs_name = 'D00208'
            group by 
            t1.month_id;
    
---总出院费用
    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100505';
        
      insert into his_bi.kpi_master_m
            select
            t1.month_id,
            'JX0100505' as kpi_code,
            round(sum(t1.total_fees),4)as kpi_value,
            now() as update_time,
            round(sum(t1.total_fees),4) as self_value,
            null as check_flag,
            null as check_comm
            from
            his_bi.dw_inp_drgs_patient_m t1
            where
            t1.month_id=c_monthlist.month_id
            and t1.drgs_name = 'D00224'
            group by 
            t1.month_id;
    
---总出院费用
    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100605';
        
      insert into his_bi.kpi_master_m
            select
            t1.month_id,
            'JX0100605' as kpi_code,
            round(sum(t1.total_fees),4)as kpi_value,
            now() as update_time,
            round(sum(t1.total_fees),4) as self_value,
            null as check_flag,
            null as check_comm
            from
            his_bi.dw_inp_drgs_patient_m t1
            where
            t1.month_id=c_monthlist.month_id
            and t1.drgs_name = 'D00210'
            group by 
            t1.month_id;

---同期实际占用总床日数
    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100306';
        
      insert into his_bi.kpi_master_m
            select
            t1.month_id,
            'JX0100306' as kpi_code,
            round(sum(t1.in_days),3)as kpi_value,
            now() as update_time,
            round(sum(t1.in_days),3) as self_value,
            null as check_flag,
            null as check_comm
            from
            his_bi.dw_inp_drgs_patient_m t1
            where
            t1.month_id=c_monthlist.month_id
            and t1.drgs_name = 'D00113'
            group by 
            t1.month_id;
    
---同期实际占用总床日数
    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100406';
        
      insert into his_bi.kpi_master_m
            select
            t1.month_id,
            'JX0100406' as kpi_code,
            round(sum(t1.in_days),3)as kpi_value,
            now() as update_time,
            round(sum(t1.in_days),3) as self_value,
            null as check_flag,
            null as check_comm
            from
            his_bi.dw_inp_drgs_patient_m t1
            where
            t1.month_id=c_monthlist.month_id
            and t1.drgs_name = 'D00208'
            group by 
            t1.month_id;
    
---同期实际占用总床日数
    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100506';
        
      insert into his_bi.kpi_master_m
            select
            t1.month_id,
            'JX0100506' as kpi_code,
            round(sum(t1.in_days),3)as kpi_value,
            now() as update_time,
            round(sum(t1.in_days),3) as self_value,
            null as check_flag,
            null as check_comm
            from
            his_bi.dw_inp_drgs_patient_m t1
            where
            t1.month_id=c_monthlist.month_id
            and t1.drgs_name = 'D00224'
            group by 
            t1.month_id;
    
---同期实际占用总床日数
    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100606';
        
      insert into his_bi.kpi_master_m
            select
            t1.month_id,
            'JX0100606' as kpi_code,
            round(sum(t1.in_days),3)as kpi_value,
            now() as update_time,
            round(sum(t1.in_days),3) as self_value,
            null as check_flag,
            null as check_comm
            from
            his_bi.dw_inp_drgs_patient_m t1
            where
            t1.month_id=c_monthlist.month_id
            and t1.drgs_name = 'D00210'
            group by 
            t1.month_id;
            

---死亡人数
    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100308';
        
      insert into his_bi.kpi_master_m
            select
            t1.month_id,
            'JX0100308' as kpi_code,
            COALESCE(count(distinct t1.pai_visit_id),0) as kpi_value,
            now() as update_time,
            COALESCE(count(distinct t1.pai_visit_id),0) as self_value,
            null as check_flag,
            null as check_comm
            from
            his_bi.dw_inp_drgs_patient_m t1
            where
            t1.month_id=c_monthlist.month_id
            and t1.drgs_name = 'D00113'
            and t1.lyfs='5'
            group by 
            t1.month_id;
    
---死亡人数
    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100408';
        
      insert into his_bi.kpi_master_m
            select
            t1.month_id,
            'JX0100408' as kpi_code,
            COALESCE(count(distinct t1.pai_visit_id),0) as kpi_value,
            now() as update_time,
            COALESCE(count(distinct t1.pai_visit_id),0) as self_value,
            null as check_flag,
            null as check_comm
            from
            his_bi.dw_inp_drgs_patient_m t1
            where
            t1.month_id=c_monthlist.month_id
            and t1.drgs_name = 'D00208'
            and t1.lyfs='5'
            group by 
            t1.month_id;
    
---死亡人数
    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100508';
        
      insert into his_bi.kpi_master_m
            select
            t1.month_id,
            'JX0100508' as kpi_code,
            COALESCE(count(distinct t1.pai_visit_id),0) as kpi_value,
            now() as update_time,
            COALESCE(count(distinct t1.pai_visit_id),0) as self_value,
            null as check_flag,
            null as check_comm
            from
            his_bi.dw_inp_drgs_patient_m t1
            where
            t1.month_id=c_monthlist.month_id
            and t1.drgs_name = 'D00224'
            and t1.lyfs='5'
            group by 
            t1.month_id;
    
---死亡人数
    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100608';
        
      insert into his_bi.kpi_master_m
            select
            t1.month_id,
            'JX0100608' as kpi_code,
            COALESCE(count(distinct t1.pai_visit_id),0) as kpi_value,
            now() as update_time,
            COALESCE(count(distinct t1.pai_visit_id),0) as self_value,
            null as check_flag,
            null as check_comm
            from
            his_bi.dw_inp_drgs_patient_m t1
            where
            t1.month_id=c_monthlist.month_id
            and t1.drgs_name = 'D00210'
            and t1.lyfs='5'
            group by 
            t1.month_id;
                        
    ---病死率
    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100207';
        
        insert into his_bi.kpi_master_m
             select
            t1.month_id,
            'JX0100207' as kpi_code,
            round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as kpi_value,
            now() as update_time,
            round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as self_value,
            null as check_flag,
            null as check_comm
            from
            his_bi.kpi_master_m t1
            left join his_bi.kpi_master_m t2 on t1.kpi_code = t2.kpi_code and t1.month_id = t2.month_id 
            and t2.kpi_code='JX0100208'
            where
            t1.month_id=c_monthlist.month_id
            and t1.kpi_code in('JX0100208','JX01002')
            group by 
            t1.month_id;                   
                        
  ---病死率
    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100307';
        
        insert into his_bi.kpi_master_m
             select
            t1.month_id,
            'JX0100307' as kpi_code,
            round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as kpi_value,
            now() as update_time,
            round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as self_value,
            null as check_flag,
            null as check_comm
            from
            his_bi.kpi_master_m t1
            left join his_bi.kpi_master_m t2 on t1.kpi_code = t2.kpi_code and t1.month_id = t2.month_id 
            and t2.kpi_code='JX0100308'
            where
            t1.month_id=c_monthlist.month_id
            and t1.kpi_code in('JX0100308','JX01003')
            group by 
            t1.month_id;
    
    ---病死率
    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100407';
        insert into his_bi.kpi_master_m
             select
            t1.month_id,
            'JX0100407' as kpi_code,
            round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as kpi_value,
            now() as update_time,
            round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as self_value,
            null as check_flag,
            null as check_comm
            from
            his_bi.kpi_master_m t1
            left join his_bi.kpi_master_m t2 on t1.kpi_code = t2.kpi_code and t1.month_id = t2.month_id 
            and t2.kpi_code='JX0100408'
            where
            t1.month_id=c_monthlist.month_id
            and t1.kpi_code in('JX0100408','JX01004')
            group by 
            t1.month_id;
    
    ---病死率
    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100507';
        insert into his_bi.kpi_master_m
             select
            t1.month_id,
            'JX0100507' as kpi_code,
            round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as kpi_value,
            now() as update_time,
            round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as self_value,
            null as check_flag,
            null as check_comm
            from
            his_bi.kpi_master_m t1
            left join his_bi.kpi_master_m t2 on t1.kpi_code = t2.kpi_code and t1.month_id = t2.month_id 
            and t2.kpi_code='JX0100508'
            where
            t1.month_id=c_monthlist.month_id
            and t1.kpi_code in('JX0100508','JX01005')
            group by 
            t1.month_id;
    
    ---病死率
    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100607';
        insert into his_bi.kpi_master_m
             select
            t1.month_id,
            'JX0100607' as kpi_code,
            round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as kpi_value,
            now() as update_time,
            round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as self_value,
            null as check_flag,
            null as check_comm
            from
            his_bi.kpi_master_m t1
            left join his_bi.kpi_master_m t2 on t1.kpi_code = t2.kpi_code and t1.month_id = t2.month_id 
            and t2.kpi_code='JX0100608'
            where
            t1.month_id=c_monthlist.month_id
            and t1.kpi_code in('JX0100608','JX01006')
            group by 
            t1.month_id;
    
---次均费用
    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100304';
        
      insert into his_bi.kpi_master_m
             select
            t1.month_id,
            'JX0100304' as kpi_code,
            round(max(t1.kpi_value)/max(t2.kpi_value),5)as kpi_value,
            now() as update_time,
            round(max(t1.kpi_value)/max(t2.kpi_value),5)as self_value,
            null as check_flag,
            null as check_comm
            from
            his_bi.kpi_master_m t1
            left join his_bi.kpi_master_m t2 on t1.kpi_code = t2.kpi_code and t1.month_id = t2.month_id 
            and t2.kpi_code='JX01003'
            where
            t1.month_id=c_monthlist.month_id
            and t1.kpi_code in('JX0100305','JX01003')
            group by 
            t1.month_id;
    
---次均费用
    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100404';
        
      insert into his_bi.kpi_master_m
             select
            t1.month_id,
            'JX0100404' as kpi_code,
            round(max(t1.kpi_value)/max(t2.kpi_value),5)as kpi_value,
            now() as update_time,
            round(max(t1.kpi_value)/max(t2.kpi_value),5)as self_value,
            null as check_flag,
            null as check_comm
            from
            his_bi.kpi_master_m t1
            left join his_bi.kpi_master_m t2 on t1.kpi_code = t2.kpi_code and t1.month_id = t2.month_id 
            and t2.kpi_code='JX01004'
            where
            t1.month_id=c_monthlist.month_id
            and t1.kpi_code in('JX0100405','JX01004')
            group by 
            t1.month_id;
    
---次均费用
    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100504';
        
      insert into his_bi.kpi_master_m
             select
            t1.month_id,
            'JX0100504' as kpi_code,
            round(max(t1.kpi_value)/max(t2.kpi_value),5)as kpi_value,
            now() as update_time,
            round(max(t1.kpi_value)/max(t2.kpi_value),5)as self_value,
            null as check_flag,
            null as check_comm
            from
            his_bi.kpi_master_m t1
            left join his_bi.kpi_master_m t2 on t1.kpi_code = t2.kpi_code and t1.month_id = t2.month_id 
            and t2.kpi_code='JX01005'
            where
            t1.month_id=c_monthlist.month_id
            and t1.kpi_code in('JX0100505','JX01005')
            group by 
            t1.month_id;
    
---次均费用
    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100604';
        
      insert into his_bi.kpi_master_m
             select
            t1.month_id,
            'JX0100604' as kpi_code,
            round(max(t1.kpi_value)/max(t2.kpi_value),5)as kpi_value,
            now() as update_time,
            round(max(t1.kpi_value)/max(t2.kpi_value),5)as self_value,
            null as check_flag,
            null as check_comm
            from
            his_bi.kpi_master_m t1
            left join his_bi.kpi_master_m t2 on t1.kpi_code = t2.kpi_code and t1.month_id = t2.month_id 
            and t2.kpi_code='JX01006'
            where
            t1.month_id=c_monthlist.month_id
            and t1.kpi_code in('JX0100605','JX01006')
            group by 
            t1.month_id;
---9.I类切口手术部位感染率
    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX009';
        insert into his_bi.kpi_master_m
             select
            t1.month_id,
            'JX009' as kpi_code,
            round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as kpi_value,
            now() as update_time,
            round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as self_value,
            null as check_flag,
            null as check_comm
            from
            his_bi.kpi_master_m t1
            left join his_bi.kpi_master_m t2 on t1.kpi_code = t2.kpi_code and t1.month_id = t2.month_id 
            and t2.kpi_code='JX00901'
            where
            t1.month_id=c_monthlist.month_id
            and t1.kpi_code in('JX00901','JX00902')
            group by 
            t1.month_id;

---8.手术患者并发症发生率
    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX008';
        insert into his_bi.kpi_master_m
             select
            t1.month_id,
            'JX008' as kpi_code,
            round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as kpi_value,
            now() as update_time,
            round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as self_value,
            null as check_flag,
            null as check_comm
            from
            his_bi.kpi_master_m t1
            left join his_bi.kpi_master_m t2 on t1.kpi_code = t2.kpi_code and t1.month_id = t2.month_id 
            and t2.kpi_code='JX00801'
            where
            t1.month_id=c_monthlist.month_id
            and t1.kpi_code in('JX00801','JX00802')
            group by 
            t1.month_id;
---6.出院患者四级手术比例
    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX006';
        insert into his_bi.kpi_master_m
             select
            t1.month_id,
            'JX006' as kpi_code,
            round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as kpi_value,
            now() as update_time,
            round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as self_value,
            null as check_flag,
            null as check_comm
            from
            his_bi.kpi_master_m t1
            left join his_bi.kpi_master_m t2 on t1.kpi_code = t2.kpi_code and t1.month_id = t2.month_id 
            and t2.kpi_code='JX00601'
            where
            t1.month_id=c_monthlist.month_id
            and t1.kpi_code in('JX00601','JX00602')
            group by 
            t1.month_id;

---5.出院患者微创手术占比
    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX005';
        insert into his_bi.kpi_master_m
             select
            t1.month_id,
            'JX005' as kpi_code,
            round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as kpi_value,
            now() as update_time,
            round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as self_value,
            null as check_flag,
            null as check_comm
            from
            his_bi.kpi_master_m t1
            left join his_bi.kpi_master_m t2 on t1.kpi_code = t2.kpi_code and t1.month_id = t2.month_id 
            and t2.kpi_code='JX00501'
            where
            t1.month_id=c_monthlist.month_id
            and t1.kpi_code in('JX00501','JX00502')
            group by 
            t1.month_id;
---门诊诊疗工作的总人次数（急诊、健康体检者不计入）
  delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0070201';
    
  insert into his_bi.kpi_master_m
        select
        t1.month_id,
        'JX0070201' as kpi_code,
        count(distinct t1.outp_visit_id) as kpi_value,
        now() as update_time,
        count(distinct t1.outp_visit_id) as self_value,
        null as check_flag,
        null as check_comm
        from
        his_bi.dw_outp_patient_info_m t1
        where
        t1.month_id = c_monthlist.month_id
        and t1.is_emergency  is null
        and t1.is_tj is null
        group by 
        t1.month_id;

---出院人数
  delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0070202';
    
  insert into his_bi.kpi_master_m
        select
        t1.month_id,
        'JX0070202' as kpi_code,
        COALESCE(count(distinct t1.pai_visit_id),0)  as kpi_value,
        now() as update_time,
        COALESCE(count(distinct t1.pai_visit_id),0)  as self_value,
        null as check_flag,
        null as check_comm
        from
        his_bi.dw_inp_patient_info_m t1
        where
        t1.month_id=c_monthlist.month_id
        group by 
        t1.month_id;
---该地该时间内活产数
  delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX06302';

  insert into his_bi.kpi_master_m
        select
         left(st_date,6) as month_id,
        'JX06302' as kpi_code,
        count(1)  as kpi_value,
        now() as update_time,
        count(1)  as self_value,
        null as check_flag,
        null as check_comm
        from
        his_bi.dwd_inp_quantity_d t1
        where
         left(st_date,6)=c_monthlist.month_id
        and t1.key = 'D00157'
        and t1.value not in ('2','3')
        group by
         left(st_date,6);

---该地该时间内活产数
  delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX07101';

  insert into his_bi.kpi_master_m
        select
         left(st_date,6) as month_id,
        'JX07101' as kpi_code,
        count(1)  as kpi_value,
        now() as update_time,
        count(1)  as self_value,
        null as check_flag,
        null as check_comm
        from
        his_bi.dwd_inp_quantity_d t1
        where
         left(st_date,6)=c_monthlist.month_id
        and t1.key = 'D00157'
        and t1.value not in ('2','3')
        group by
         left(st_date,6);

---产科门诊复诊预约诊疗人次数
  delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX07701';

  insert into his_bi.kpi_master_m
        select
        t1.month_id,
        'JX07701' as kpi_code,
        count(1)  as kpi_value,
        now() as update_time,
        count(1)   as self_value,
        null as check_flag,
        null as check_comm
        from
        his_bi.dw_outp_patient_info_m t1
        where
        t1.month_id=c_monthlist.month_id
        and t1.return_visit ='1'
        and t1.is_yygh = '1'
        and t1.dept_code in ('12010503','120121','12020101','12020201','12020402','12020502',
                          '12020602','12020702','12020902','120224','120225','120226','120227',
                          '120228','120229','120230','120215','120216','120217','120218','120219',
                          '120221','120222','120223','120231','120232','120233','120234','120235',
                          '120339','12051002')
        group by
        t1.month_id;

---产科门诊总诊疗人次数
  delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX07702';

  insert into his_bi.kpi_master_m
        select
        t1.month_id,
        'JX07702' as kpi_code,
        count(1)  as kpi_value,
        now() as update_time,
        count(1)   as self_value,
        null as check_flag,
        null as check_comm
        from
        his_bi.dw_outp_patient_info_m t1
        where
        t1.month_id=c_monthlist.month_id
        and t1.dept_code in ('12010503','120121','12020101','12020201','12020402','12020502',
                          '12020602','12020702','12020902','120224','120225','120226','120227',
                          '120228','120229','120230','120215','120216','120217','120218','120219',
                          '120221','120222','120223','120231','120232','120233','120234','120235',
                          '120339','12051002')
        group by
        t1.month_id;

  delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX07901';

  insert into his_bi.kpi_master_m
        select
        t1.month_id,
        'JX07901' as kpi_code,
        count(distinct t1.outp_visit_id) as kpi_value,
        now() as update_time,
        count(distinct t1.outp_visit_id) as self_value,
        null as check_flag,
        null as check_comm
        from
        his_bi.dw_outp_patient_info_m t1
        where
        t1.month_id = c_monthlist.month_id
        and t1.is_tj is null
        group by
        t1.month_id;
--- 实际占用的总床日数
  delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX08001';

  insert into his_bi.kpi_master_m
        select
        replace(left(t1.stat_date::text,7),'-','') as month_id,
        'JX08001' as kpi_code,
        sum(t1.bed_used) as kpi_value,
        now() as update_time,
        sum(t1.bed_used) as self_value,
        null as check_flag,
        null as check_comm
        from
        his_bi.dw_inp_dept_work_d t1
        where
        replace(left(t1.stat_date::text,7),'-','') = c_monthlist.month_id
        group by
        replace(left(stat_date::text,7),'-','');
---实际开放的总床日数
  delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX08002';

  insert into his_bi.kpi_master_m
        select
        replace(left(t1.stat_date::text,7),'-','') as month_id,
        'JX08002' as kpi_code,
        sum(t1.sy_num) as kpi_value,
        now() as update_time,
        sum(t1.sy_num) as self_value,
        null as check_flag,
        null as check_comm
        from
        his_bi.dw_inp_dept_work_d t1
        where
        replace(left(t1.stat_date::text,7),'-','') = c_monthlist.month_id
        group by
        replace(left(stat_date::text,7),'-','');

---床位使用率
    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX080';
        insert into his_bi.kpi_master_m
             select
            t1.month_id,
            'JX080' as kpi_code,
            round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as kpi_value,
            now() as update_time,
            round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as self_value,
            null as check_flag,
            null as check_comm
            from
            his_bi.kpi_master_m t1
            left join his_bi.kpi_master_m t2 on t1.kpi_code = t2.kpi_code and t1.month_id = t2.month_id
            and t2.kpi_code='JX08001'
            where
            t1.month_id=c_monthlist.month_id
            and t1.kpi_code in('JX08001','JX08002')
            group by
            t1.month_id;

---产科复诊预约诊疗率
    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX077';
        insert into his_bi.kpi_master_m
             select
            t1.month_id,
            'JX077' as kpi_code,
            round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as kpi_value,
            now() as update_time,
            round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as self_value,
            null as check_flag,
            null as check_comm
            from
            his_bi.kpi_master_m t1
            left join his_bi.kpi_master_m t2 on t1.kpi_code = t2.kpi_code and t1.month_id = t2.month_id
            and t2.kpi_code='JX07701'
            where
            t1.month_id=c_monthlist.month_id
            and t1.kpi_code in('JX07701','JX07702')
            group by
            t1.month_id;
	---同期住院患者总人数
  delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX07202';

  insert into his_bi.kpi_master_m
        select
        replace(left(t1.stat_date::text,7),'-','') as month_id,
        'JX07202' as kpi_code,
        count(distinct t1.pai_visit_id) as kpi_value,
        now() as update_time,
        count(distinct t1.pai_visit_id) as self_value,
        null as check_flag,
        null as check_comm
        from
        his_bi.report_adt_status t1
        where
        replace(left(t1.stat_date::text,7),'-','') = c_monthlist.month_id
        and t1.status = 0
        group by
        replace(left(stat_date::text,7),'-','');
				
				
	---特需门诊医疗服务收入
  delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0070302';

  insert into his_bi.kpi_master_m
select
    t1.month_id,
    'JX0070302' as kpi_code,
    sum(case when t3.special_clinic_type='2' then t4.total_fees end) as kpi_value,
    now() as update_time ,
    sum(case when t3.special_clinic_type='2' then t4.total_fees end) as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.dw_outp_patient_info_m t1
        left join his_bi.v_system_special_clinic t3 on t1.outp_special_id = t3.special_clinic_id and t3.special_clinic_type='2'
        left join his_bi.dw_outp_patient_amount_m t4 on t1.patient_id = t4.patient_id and t1.visit_id = t4.visit_id
where
        t1.month_id=c_monthlist.month_id
group by t1.month_id;


---同期全部医疗服务收入(医疗收入)
delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0070304';

insert into his_bi.kpi_master_m
select
    month_id,
    'JX0070304' as kpi_code,
    kpi_value,
    now() as update_time ,
    self_value ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m
where
        kpi_code='JX03701'
  and month_id=c_monthlist.month_id;
	
	---特需医疗服务量
delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0070101';

insert into his_bi.kpi_master_m
select
    month_id,
    'JX0070101' as kpi_code,
    special_value as kpi_value,
    now() as update_time ,
    special_value as self_value ,
    null as check_flag  ,
    null as check_comm
from his_bi.special_master_m
where
month_id = c_monthlist.month_id
and special_code='SP001010602';


	---特需门诊患者人次数
delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0070102';

insert into his_bi.kpi_master_m
select
    month_id,
    'JX0070102' as kpi_code,
    special_value as kpi_value,
    now() as update_time ,
    special_value as self_value ,
    null as check_flag  ,
    null as check_comm
from his_bi.special_master_m
where
month_id = c_monthlist.month_id
and special_code='SP001010502';


----以下是王颖开发
--新生儿呼吸窘迫综合征（NRDS）病种例数
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX01007';      
	insert into his_bi.kpi_master_m	
		select
		dg.month_id,
		'JX01007' as kpi_code,
		count(distinct dg.pai_visit_id) as kpi_value,
		now() as update_time,
		count(distinct dg.pai_visit_id) as self_value,
		null as check_flag,
		null as check_comm
		from his_bi.dw_inp_drgs_patient_m dg
		where 1=1
		and dg.drgs_name = 'D00128'
		and dg.month_id = c_monthlist.month_id
		group by dg.month_id;
		
		
	--新生儿呼吸窘迫综合征（NRDS）平均住院日
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100701';      
	insert into his_bi.kpi_master_m	
		select
		dg.month_id,
		'JX0100701' as kpi_code,
		round(sum(dg.in_days)/count(distinct dg.pai_visit_id),2) as kpi_value,
		now() as update_time,
		round(sum(dg.in_days)/count(distinct dg.pai_visit_id),2) as self_value,
		null as check_flag,
		null as check_comm
		from his_bi.dw_inp_drgs_patient_m dg
		where 1=1
		and dg.drgs_name = 'D00128'
		and dg.month_id = c_monthlist.month_id
		group by dg.month_id;


	--新生儿呼吸窘迫综合征（NRDS）出院患者占用总床日数
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100702';      
	insert into his_bi.kpi_master_m	
		select
		dg.month_id,
		'JX0100702' as kpi_code,
		sum(dg.in_days) as kpi_value,
		now() as update_time,
		sum(dg.in_days) as self_value,
		null as check_flag,
		null as check_comm
		from his_bi.dw_inp_drgs_patient_m dg
		where 1=1
		and dg.drgs_name = 'D00128'
		and dg.month_id = c_monthlist.month_id
		group by dg.month_id;

	--新生儿呼吸窘迫综合征（NRDS）总出院人数
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100703';      
	insert into his_bi.kpi_master_m	
		select
		dg.month_id,
		'JX0100703' as kpi_code,
		count(distinct dg.pai_visit_id) as kpi_value,
		now() as update_time,
		count(distinct dg.pai_visit_id) as self_value,
		null as check_flag,
		null as check_comm
		from his_bi.dw_inp_drgs_patient_m dg
		where 1=1
		and dg.drgs_name = 'D00128'
		and dg.month_id = c_monthlist.month_id
		group by dg.month_id;


	--新生儿呼吸窘迫综合征（NRDS）次均费用
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100704';      
	insert into his_bi.kpi_master_m	
		select
		dg.month_id,
		'JX0100704' as kpi_code,
		round(sum(dg.total_fees)/count(distinct dg.pai_visit_id),2) as kpi_value,
		now() as update_time,
		round(sum(dg.total_fees)/count(distinct dg.pai_visit_id),2) as self_value,
		null as check_flag,
		null as check_comm
		from his_bi.dw_inp_drgs_patient_m dg
		where 1=1
		and dg.drgs_name = 'D00128'
		and dg.month_id = c_monthlist.month_id
		group by dg.month_id;


	--新生儿呼吸窘迫综合征（NRDS）总出院费用
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100705';      
	insert into his_bi.kpi_master_m	
		select
		dg.month_id,
		'JX0100705' as kpi_code,
		sum(dg.total_fees) as kpi_value,
		now() as update_time,
		sum(dg.total_fees) as self_value,
		null as check_flag,
		null as check_comm
		from his_bi.dw_inp_drgs_patient_m dg
		where 1=1
		and dg.drgs_name = 'D00128'
		and dg.month_id = c_monthlist.month_id
		group by dg.month_id;


  --新生儿呼吸窘迫综合征（NRDS）实际占用总床日数
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100706';      
	insert into his_bi.kpi_master_m	
		select
		dg.month_id,
		'JX0100706' as kpi_code,
		sum(dg.in_days) as kpi_value,
		now() as update_time,
		sum(dg.in_days) as self_value,
		null as check_flag,
		null as check_comm
		from his_bi.dw_inp_drgs_patient_m dg
		where 1=1
		and dg.drgs_name = 'D00128'
		and dg.month_id = c_monthlist.month_id
		group by dg.month_id;

	--新生儿呼吸窘迫综合征（NRDS）病死率
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100707';      
	insert into his_bi.kpi_master_m	
		select
		dg.month_id,
		'JX0100707' as kpi_code,
		count(distinct(case when dg.lyfs = '5' then dg.pai_visit_id end))/count(distinct dg.pai_visit_id) as kpi_value,
		now() as update_time,
		count(distinct(case when dg.lyfs = '5' then dg.pai_visit_id end))/count(distinct dg.pai_visit_id) as self_value,
		null as check_flag,
		null as check_comm
		from his_bi.dw_inp_drgs_patient_m dg
		where 1=1
		and dg.drgs_name = 'D00128'
		and dg.month_id = c_monthlist.month_id
		group by dg.month_id;



	--新生儿呼吸窘迫综合征（NRDS）死亡人数
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100708';      
	insert into his_bi.kpi_master_m	
		select
		dg.month_id,
		'JX0100708' as kpi_code,
		count(distinct(case when dg.lyfs = '5' then dg.pai_visit_id end)) as kpi_value,
		now() as update_time,
		count(distinct(case when dg.lyfs = '5' then dg.pai_visit_id end)) as self_value,
		null as check_flag,
		null as check_comm
		from his_bi.dw_inp_drgs_patient_m dg
		where 1=1
		and dg.drgs_name = 'D00128'
		and dg.month_id = c_monthlist.month_id
		group by dg.month_id;


	--儿童哮喘病种例数
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX01008';      
	insert into his_bi.kpi_master_m	
		select
		dg.month_id,
		'JX01008' as kpi_code,
		count(distinct dg.pai_visit_id) as kpi_value,
		now() as update_time,
		count(distinct dg.pai_visit_id) as self_value,
		null as check_flag,
		null as check_comm
		from his_bi.dw_inp_drgs_patient_m dg
		where 1=1
		and dg.drgs_name = 'D00225'
		and dg.month_id = c_monthlist.month_id
		group by dg.month_id;
		

	--儿童哮喘平均住院日
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100801';      
	insert into his_bi.kpi_master_m	
		select
		dg.month_id,
		'JX0100801' as kpi_code,
		round(sum(dg.in_days)/count(distinct dg.pai_visit_id),2) as kpi_value,
		now() as update_time,
		round(sum(dg.in_days)/count(distinct dg.pai_visit_id),2) as self_value,
		null as check_flag,
		null as check_comm
		from his_bi.dw_inp_drgs_patient_m dg
		where 1=1
		and dg.drgs_name = 'D00225'
		and dg.month_id = c_monthlist.month_id
		group by dg.month_id;


	--儿童哮喘出院患者占用总床日数
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100802';      
	insert into his_bi.kpi_master_m	
		select
		dg.month_id,
		'JX0100802' as kpi_code,
		sum(dg.in_days) as kpi_value,
		now() as update_time,
		sum(dg.in_days) as self_value,
		null as check_flag,
		null as check_comm
		from his_bi.dw_inp_drgs_patient_m dg
		where 1=1
		and dg.drgs_name = 'D00225'
		and dg.month_id = c_monthlist.month_id
		group by dg.month_id;

  --儿童哮喘总出院人数
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100803';      
	insert into his_bi.kpi_master_m	
		select
		dg.month_id,
		'JX0100803' as kpi_code,
		count(distinct dg.pai_visit_id) as kpi_value,
		now() as update_time,
		count(distinct dg.pai_visit_id) as self_value,
		null as check_flag,
		null as check_comm
		from his_bi.dw_inp_drgs_patient_m dg
		where 1=1
		and dg.drgs_name = 'D00225'
		and dg.month_id = c_monthlist.month_id
		group by dg.month_id;

	--儿童哮喘次均费用
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100804';      
	insert into his_bi.kpi_master_m	
		select
		dg.month_id,
		'JX0100804' as kpi_code,
		round(sum(dg.total_fees)/count(distinct dg.pai_visit_id),2) as kpi_value,
		now() as update_time,
		round(sum(dg.total_fees)/count(distinct dg.pai_visit_id),2) as self_value,
		null as check_flag,
		null as check_comm
		from his_bi.dw_inp_drgs_patient_m dg
		where 1=1
		and dg.drgs_name = 'D00225'
		and dg.month_id = c_monthlist.month_id
		group by dg.month_id;


	--儿童哮喘总出院费用
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100805';      
	insert into his_bi.kpi_master_m	
		select
		dg.month_id,
		'JX0100805' as kpi_code,
		sum(dg.total_fees) as kpi_value,
		now() as update_time,
		sum(dg.total_fees) as self_value,
		null as check_flag,
		null as check_comm
		from his_bi.dw_inp_drgs_patient_m dg
		where 1=1
		and dg.drgs_name = 'D00225'
		and dg.month_id = c_monthlist.month_id
		group by dg.month_id;


--儿童哮喘出院患者占用总床日数
delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100806';      
insert into his_bi.kpi_master_m	
		select
		dg.month_id,
		'JX0100806' as kpi_code,
		sum(dg.in_days) as kpi_value,
		now() as update_time,
		sum(dg.in_days) as self_value,
		null as check_flag,
		null as check_comm
		from his_bi.dw_inp_drgs_patient_m dg
		where 1=1
		and dg.drgs_name = 'D00225'
		and dg.month_id = c_monthlist.month_id
		group by dg.month_id;

	--儿童哮喘病死率
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100807';      
	insert into his_bi.kpi_master_m	
		select
		dg.month_id,
		'JX0100807' as kpi_code,
		count(distinct(case when dg.lyfs = '5' then dg.pai_visit_id end))/count(distinct dg.pai_visit_id) as kpi_value,
		now() as update_time,
		count(distinct(case when dg.lyfs = '5' then dg.pai_visit_id end))/count(distinct dg.pai_visit_id) as self_value,
		null as check_flag,
		null as check_comm
		from his_bi.dw_inp_drgs_patient_m dg
		where 1=1
		and dg.drgs_name = 'D00225'
		and dg.month_id = c_monthlist.month_id
		group by dg.month_id;


	--儿童哮喘死亡人数
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100808';      
	insert into his_bi.kpi_master_m	
		select
		dg.month_id,
		'JX0100808' as kpi_code,
		count(distinct(case when dg.lyfs = '5' then dg.pai_visit_id end)) as kpi_value,
		now() as update_time,
		count(distinct(case when dg.lyfs = '5' then dg.pai_visit_id end)) as self_value,
		null as check_flag,
		null as check_comm
		from his_bi.dw_inp_drgs_patient_m dg
		where 1=1
		and dg.drgs_name = 'D00225'
		and dg.month_id = c_monthlist.month_id
		group by dg.month_id;
		

	--门诊处方数
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX01602';      
	insert into his_bi.kpi_master_m	
		select
		substr(dd.st_date,1,6) as month_id,
		'JX01602' as kpi_code,
		sum(value) as kpi_value,
		now() as update_time,
		sum(value) as self_value,
		null as check_flag,
		null as check_comm
		from his_bi.dwd_outp_quantity_d dd 
		where dd.key = 'D00035'
		and substr(dd.st_date,1,6) = c_monthlist.month_id
		group by substr(dd.st_date,1,6);
		
	--抗菌药物使用强度(DDDs)
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX017';      
	insert into his_bi.kpi_master_m	
		select
		month_id,
		'JX017' as kpi_code,
		round(sum(kjyw_ddd_sum)/sum(in_days) * 100,2) as kpi_value,
		now() as update_time,
		round(sum(kjyw_ddd_sum)/sum(in_days) * 100,2) as self_value,
		null as check_flag,
		null as check_comm
		from his_bi.dw_inp_patient_info_m 
		where 1=1
		and month_id = c_monthlist.month_id
		group by month_id;
		
		
	--住院患者抗菌药物消耗量（累计DDD数）
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX01701';      
	insert into his_bi.kpi_master_m	
		select
		month_id,
		'JX01701' as kpi_code,
		sum(kjyw_ddd_sum) as kpi_value,
		now() as update_time,
		sum(kjyw_ddd_sum) as self_value,
		null as check_flag,
		null as check_comm
		from his_bi.dw_inp_patient_info_m 
		where 1=1
		and month_id = c_monthlist.month_id
		group by month_id;
		
		
	--出院者占用总床日
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX01702'; 
	insert into his_bi.kpi_master_m
		select 
		month_id,
		'JX01702' as kpi_code,
		sum(in_days) as kpi_value,
		now() as update_time,
		sum(in_days) as self_value,
		null as check_flag,
		null as check_comm
		from his_bi.dw_inp_patient_info_m d 
		where 1=1
		and month_id = c_monthlist.month_id
		group by month_id;
		
	--门诊患者使用基本药物人次数
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX01801';      
	insert into his_bi.kpi_master_m	
		select 
		am.month_id,
		'JX01801' as kpi_code,
		count(distinct am.patient_id||am.visit_id) as kpi_value,
		now() as update_time,
		count(distinct am.patient_id||am.visit_id) as self_value,
		null as check_flag,
		null as check_comm
		from his_bi.dw_outp_patient_amount_m am 
		where am.basic_fees > 0
		and am.month_id = c_monthlist.month_id
		group by am.month_id;

  --同期门诊诊疗总人次数（不包括健康体检者及未开具药物处方患者）
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX01802';      
	insert into his_bi.kpi_master_m
		select 
		month_id,
		'JX01802' as kpi_code,
		COALESCE(count(distinct d.outp_visit_id),0) as kpi_value,
		now() as update_time,
		COALESCE(count(distinct d.outp_visit_id),0) as self_value,
		null as check_flag,
		null as check_comm
		from his_bi.dw_outp_patient_info_m d 
		where 1=1
		and exists
		(
			select outp_visit_id from his_bi.dw_outp_patient_amount_m 
			where (pham_fees > 0 or tj_fees < 0)
			and outp_visit_id = d.outp_visit_id
		)
		and month_id = c_monthlist.month_id
		group by month_id;

	--出院患者使用基本药物人次数
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX01901';      
	insert into his_bi.kpi_master_m	
		select 
		am.month_id,
		'JX01901' as kpi_code,
		count(distinct am.pai_visit_id) as kpi_value,
		now() as update_time,
		count(distinct am.pai_visit_id) as self_value,
		null as check_flag,
		null as check_comm
		from his_bi.dw_inp_patient_amount_m am 
		where am.basic_fees > 0
		and am.month_id = c_monthlist.month_id
		group by am.month_id;
		
		
  --同期出院总人次数（不包括未用药患者）
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX01902';      
	insert into his_bi.kpi_master_m
		select 
		month_id,
		'JX01902' as kpi_code,
		COALESCE(count(distinct d.pai_visit_id),0) as kpi_value,
		now() as update_time,
		COALESCE(count(distinct d.pai_visit_id),0) as self_value,
		null as check_flag,
		null as check_comm
		from his_bi.dw_inp_patient_info_m d 
		where 1=1
		and exists
		(
			select pai_visit_id from his_bi.dw_inp_patient_amount_m 
			where pham_fees > 0
			and pai_visit_id = d.pai_visit_id
		)
		and month_id = c_monthlist.month_id
		group by month_id;
		
	--出院人数
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX01605';      
	insert into his_bi.kpi_master_m
		select 
		month_id,
		'JX01605' as kpi_code,
		COALESCE(count(distinct d.pai_visit_id),0) as kpi_value,
		now() as update_time,
		COALESCE(count(distinct d.pai_visit_id),0) as self_value,
		null as check_flag,
		null as check_comm
		from his_bi.dw_inp_patient_info_m d 
		where 1=1
		and month_id = c_monthlist.month_id
		group by month_id;		
		
	--实际占用总床日数
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX02501';      
	insert into his_bi.kpi_master_m	
		select 
		to_char(stat_date,'yyyymm') as month_id,
		'JX02501' as kpi_code,
		sum(bed_used) as kpi_value,
		now() as update_time,
		sum(bed_used) as self_value,
		null as check_flag,
		null as check_comm
		from his_bi.dw_inp_dept_work_d am
		where 1=1
		and to_char(stat_date,'yyyymm') = c_monthlist.month_id
		group by to_char(stat_date,'yyyymm');
	
	
	--医院实际开放床位数
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX02602';      
	insert into his_bi.kpi_master_m	
		select 
		to_char(stat_date,'yyyymm') as month_id,
		'JX02602' as kpi_code,
		sum(sy_num) as kpi_value,
		now() as update_time,
		sum(sy_num) as self_value,
		null as check_flag,
		null as check_comm
		from his_bi.dw_inp_dept_work_d am
		where 1=1
		and to_char(stat_date,'yyyymm') = c_monthlist.month_id
		group by to_char(stat_date,'yyyymm');
	
	
	--门诊收入	
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX02701';      
	insert into his_bi.kpi_master_m	
		select 
		am.month_id as month_id,
		'JX02701' as kpi_code,
		sum(am.total_fees) as kpi_value,
		now() as update_time,
		sum(am.total_fees) as self_value,
		null as check_flag,
		null as check_comm
		from his_bi.dw_outp_patient_amount_m am
		where 1=1
		and am.month_id = c_monthlist.month_id
		group by am.month_id;
		
		
	--医疗收入
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX02702';
	insert into his_bi.kpi_master_m		
		select 
		ff.month_id,
		'JX02702' as kpi_code,
		sum(fees) as kpi_value,
		now() as update_time,
		sum(fees) as self_value,
		null as check_flag,
		null as check_comm
		from
		(
			select 
			am.month_id,
			sum(total_fees) as fees
			from his_bi.dw_outp_patient_amount_m am
			where 1=1
			and am.month_id = c_monthlist.month_id
			group by am.month_id
			union
			select 
			bm.month_id,
			sum(total_fees) as fees
			from his_bi.dw_inp_patient_amount_m bm
			where 1=1
			and bm.month_id = c_monthlist.month_id
			group by bm.month_id
		)ff
		group by ff.month_id;

	--门诊收入	
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX02802';      
	insert into his_bi.kpi_master_m	
		select 
		am.month_id as month_id,
		'JX02802' as kpi_code,
		sum(am.total_fees) as kpi_value,
		now() as update_time,
		sum(am.total_fees) as self_value,
		null as check_flag,
		null as check_comm
		from his_bi.dw_outp_patient_amount_m am
		where 1=1
		and am.month_id = c_monthlist.month_id
		group by am.month_id;


	--住院收入
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX02901';
	insert into his_bi.kpi_master_m
		select 
		am.month_id as month_id,
		'JX02901' as kpi_code,
		sum(am.total_fees) as kpi_value,
		now() as update_time,
		sum(am.total_fees) as self_value,
		null as check_flag,
		null as check_comm
		from his_bi.dw_inp_patient_amount_m am
		where 1=1
		and am.month_id = c_monthlist.month_id
		group by am.month_id;
		
		
		
	--医疗收入
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX02902';
	insert into his_bi.kpi_master_m		
		select 
		ff.month_id,
		'JX02902' as kpi_code,
		sum(fees) as kpi_value,
		now() as update_time,
		sum(fees) as self_value,
		null as check_flag,
		null as check_comm
		from
		(
			select 
			am.month_id,
			sum(total_fees) as fees
			from his_bi.dw_outp_patient_amount_m am
			where 1=1
			and am.month_id = c_monthlist.month_id
			group by am.month_id
			union
			select 
			bm.month_id,
			sum(total_fees) as fees
			from his_bi.dw_inp_patient_amount_m bm
			where 1=1
			and bm.month_id = c_monthlist.month_id
			group by bm.month_id
		)ff
		group by ff.month_id;
		
		
	--医疗服务收入
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX03101';
	insert into his_bi.kpi_master_m		
		select 
		ff.month_id,
		'JX03101' as kpi_code,
		sum(fees) as kpi_value,
		now() as update_time,
		sum(fees) as self_value,
		null as check_flag,
		null as check_comm
		from
		(
			select 
			am.month_id,
			sum(service_fees) as fees
			from his_bi.dw_outp_patient_amount_m am
			where 1=1
			and am.month_id = c_monthlist.month_id
			group by am.month_id
			union
			select 
			bm.month_id,
			sum(service_fees) as fees
			from his_bi.dw_inp_patient_amount_m bm
			where 1=1
			and bm.month_id = c_monthlist.month_id
			group by bm.month_id
		)ff
		group by ff.month_id;


	--药品收入
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX03102';
	insert into his_bi.kpi_master_m		
		select 
		ff.month_id,
		'JX03102' as kpi_code,
		sum(fees) as kpi_value,
		now() as update_time,
		sum(fees) as self_value,
		null as check_flag,
		null as check_comm
		from
		(
			select 
			am.month_id,
			sum(pham_fees) as fees
			from his_bi.dw_outp_patient_amount_m am
			where 1=1
			and am.month_id = c_monthlist.month_id
			group by am.month_id
			union
			select 
			bm.month_id,
			sum(pham_fees) as fees
			from his_bi.dw_inp_patient_amount_m bm
			where 1=1
			and bm.month_id = c_monthlist.month_id
			group by bm.month_id
		)ff
		group by ff.month_id;
		
	--卫生材料收入
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX03103';
	insert into his_bi.kpi_master_m		
		select 
		ff.month_id,
		'JX03103' as kpi_code,
		sum(fees) as kpi_value,
		now() as update_time,
		sum(fees) as self_value,
		null as check_flag,
		null as check_comm
		from
		(
			select 
			am.month_id,
			sum(material_fees) as fees
			from his_bi.dw_outp_patient_amount_m am
			where 1=1
			and am.month_id = c_monthlist.month_id
			group by am.month_id
			union
			select 
			bm.month_id,
			sum(material_fees) as fees
			from his_bi.dw_inp_patient_amount_m bm
			where 1=1
			and bm.month_id = c_monthlist.month_id
			group by bm.month_id
		)ff
		group by ff.month_id;		
		
	--检查收入
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX03104';
	insert into his_bi.kpi_master_m		
		select 
		ff.month_id,
		'JX03104' as kpi_code,
		sum(fees) as kpi_value,
		now() as update_time,
		sum(fees) as self_value,
		null as check_flag,
		null as check_comm
		from
		(
			select 
			am.month_id,
			sum(check_fees) as fees
			from his_bi.dw_outp_patient_amount_m am
			where 1=1
			and am.month_id = c_monthlist.month_id
			group by am.month_id
			union
			select 
			bm.month_id,
			sum(check_fees) as fees
			from his_bi.dw_inp_patient_amount_m bm
			where 1=1
			and bm.month_id = c_monthlist.month_id
			group by bm.month_id
		)ff
		group by ff.month_id;	

	--化验收入
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX03105';
	insert into his_bi.kpi_master_m		
		select 
		ff.month_id,
		'JX03105' as kpi_code,
		sum(fees) as kpi_value,
		now() as update_time,
		sum(fees) as self_value,
		null as check_flag,
		null as check_comm
		from
		(
			select 
			am.month_id,
			sum(inspect_fees) as fees
			from his_bi.dw_outp_patient_amount_m am
			where 1=1
			and am.month_id = c_monthlist.month_id
			group by am.month_id
			union
			select 
			bm.month_id,
			sum(inspect_fees) as fees
			from his_bi.dw_inp_patient_amount_m bm
			where 1=1
			and bm.month_id = c_monthlist.month_id
			group by bm.month_id
		)ff
		group by ff.month_id;	


		
	--医疗收入
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX03106';
	insert into his_bi.kpi_master_m		
		select 
		ff.month_id,
		'JX03106' as kpi_code,
		sum(fees) as kpi_value,
		now() as update_time,
		sum(fees) as self_value,
		null as check_flag,
		null as check_comm
		from
		(
			select 
			am.month_id,
			sum(total_fees) as fees
			from his_bi.dw_outp_patient_amount_m am
			where 1=1
			and am.month_id = c_monthlist.month_id
			group by am.month_id
			union
			select 
			bm.month_id,
			sum(total_fees) as fees
			from his_bi.dw_inp_patient_amount_m bm
			where 1=1
			and bm.month_id = c_monthlist.month_id
			group by bm.month_id
		)ff
		group by ff.month_id;
		
		--辅助用药收入
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX03201';
	insert into his_bi.kpi_master_m		
		select 
		ff.month_id,
		'JX03201' as kpi_code,
		sum(fees) as kpi_value,
		now() as update_time,
		sum(fees) as self_value,
		null as check_flag,
		null as check_comm
		from
		(
			select 
			am.month_id,
			sum(support_fees) as fees
			from his_bi.dw_outp_patient_amount_m am
			where 1=1
			and am.month_id = c_monthlist.month_id
			group by am.month_id
			union
			select 
			bm.month_id,
			sum(support_fees) as fees
			from his_bi.dw_inp_patient_amount_m bm
			where 1=1
			and bm.month_id = c_monthlist.month_id
			group by bm.month_id
		)ff
		group by ff.month_id;
	
	
	--药品总收入
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX03202';
	insert into his_bi.kpi_master_m		
		select 
		ff.month_id,
		'JX03202' as kpi_code,
		sum(fees) as kpi_value,
		now() as update_time,
		sum(fees) as self_value,
		null as check_flag,
		null as check_comm
		from
		(
			select 
			am.month_id,
			sum(pham_fees) as fees
			from his_bi.dw_outp_patient_amount_m am
			where 1=1
			and am.month_id = c_monthlist.month_id
			group by am.month_id
			union
			select 
			bm.month_id,
			sum(pham_fees) as fees
			from his_bi.dw_inp_patient_amount_m bm
			where 1=1
			and bm.month_id = c_monthlist.month_id
			group by bm.month_id
		)ff
		group by ff.month_id;


	--总收入
	/*delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX03402';
	insert into his_bi.kpi_master_m		
		select 
		ff.month_id,
		'JX03402' as kpi_code,
		sum(fees) as kpi_value,
		now() as update_time,
		sum(fees) as self_value,
		null as check_flag,
		null as check_comm
		from
		(
			select 
			am.month_id,
			sum(total_fees) as fees
			from his_bi.dw_outp_patient_amount_m am
			where 1=1
			and am.month_id = c_monthlist.month_id
			group by am.month_id
			union
			select 
			bm.month_id,
			sum(total_fees) as fees
			from his_bi.dw_inp_patient_amount_m bm
			where 1=1
			and bm.month_id = c_monthlist.month_id
			group by bm.month_id
		)ff
		group by ff.month_id;*/


	--医疗收入
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0350101';
	insert into his_bi.kpi_master_m		
		select 
		ff.month_id,
		'JX0350101' as kpi_code,
		sum(fees) as kpi_value,
		now() as update_time,
		sum(fees) as self_value,
		null as check_flag,
		null as check_comm
		from
		(
			select 
			am.month_id,
			sum(total_fees) as fees
			from his_bi.dw_outp_patient_amount_m am
			where 1=1
			and am.month_id = c_monthlist.month_id
			group by am.month_id
			union
			select 
			bm.month_id,
			sum(total_fees) as fees
			from his_bi.dw_inp_patient_amount_m bm
			where 1=1
			and bm.month_id = c_monthlist.month_id
			group by bm.month_id
		)ff
		group by ff.month_id;
	
  
	
	--医疗收入
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX03701';
	insert into his_bi.kpi_master_m		
		select 
		ff.month_id,
		'JX03701' as kpi_code,
		sum(fees) as kpi_value,
		now() as update_time,
		sum(fees) as self_value,
		null as check_flag,
		null as check_comm
		from
		(
			select 
			am.month_id,
			sum(total_fees) as fees
			from his_bi.dw_outp_patient_amount_m am
			where 1=1
			and am.month_id = c_monthlist.month_id
			group by am.month_id
			union
			select 
			bm.month_id,
			sum(total_fees) as fees
			from his_bi.dw_inp_patient_amount_m bm
			where 1=1
			and bm.month_id = c_monthlist.month_id
			group by bm.month_id
		)ff
		group by ff.month_id;


	

	
	--门诊收入	
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX03802';      
	insert into his_bi.kpi_master_m	
		select 
		am.month_id as month_id,
		'JX03802' as kpi_code,
		sum(am.total_fees) as kpi_value,
		now() as update_time,
		sum(am.total_fees) as self_value,
		null as check_flag,
		null as check_comm
		from his_bi.dw_outp_patient_amount_m am
		where 1=1
		and am.month_id = c_monthlist.month_id
		group by am.month_id;
		
		
	--门诊人次	
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX03803';      
	insert into his_bi.kpi_master_m	
		select 
		am.month_id as month_id,
		'JX03803' as kpi_code,
		count(distinct outp_visit_id) as kpi_value,
		now() as update_time,
		count(distinct outp_visit_id) as self_value,
		null as check_flag,
		null as check_comm
		from his_bi.dw_outp_patient_info_m am
		where 1=1
		and am.month_id = c_monthlist.month_id
		group by am.month_id;

	--门诊患者次均药品费用	
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX03901';      
	insert into his_bi.kpi_master_m			
		select
		c_monthlist.month_id,
		'JX03901' as kpi_code,
		case when sum(patient_num)<>0 then round(sum(pham_fees)/sum(patient_num),4) else null end  as kpi_value,
		now() as update_time,
		case when sum(patient_num)<>0 then round(sum(pham_fees)/sum(patient_num),4) else null end as self_value,
		null as check_flag,
		null as check_comm
		from
		(
				select 
				am.month_id as month_id,
				sum(am.pham_fees) as pham_fees,
				0 as patient_num
				from his_bi.dw_outp_patient_amount_m am
				where 1=1
				and am.month_id = c_monthlist.month_id
				group by am.month_id
				union
				select 
				bm.month_id as month_id,
				0 as pham_fees,
				count(distinct bm.outp_visit_id) as patient_num
				from his_bi.dw_outp_patient_info_m bm
				where 1=1
				and bm.month_id = c_monthlist.month_id
				group by bm.month_id
		)ff;
		

	--门诊药品收入	
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX03902';      
	insert into his_bi.kpi_master_m	
		select 
		am.month_id as month_id,
		'JX03902' as kpi_code,
		sum(am.pham_fees) as kpi_value,
		now() as update_time,
		sum(am.pham_fees) as self_value,
		null as check_flag,
		null as check_comm
		from his_bi.dw_outp_patient_amount_m am
		where 1=1
		and am.month_id = c_monthlist.month_id
		group by am.month_id;
		
	--住院收入
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX03002';
	insert into his_bi.kpi_master_m
		select 
		am.month_id as month_id,
		'JX03002' as kpi_code,
		sum(am.total_fees) as kpi_value,
		now() as update_time,
		sum(am.total_fees) as self_value,
		null as check_flag,
		null as check_comm
		from his_bi.dw_inp_patient_amount_m am
		where 1=1
		and am.month_id = c_monthlist.month_id
		group by am.month_id;
	
	
	--门诊人次	
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX03903';      
	insert into his_bi.kpi_master_m	
		select 
		am.month_id as month_id,
		'JX03903' as kpi_code,
		count(distinct outp_visit_id) as kpi_value,
		now() as update_time,
		count(distinct outp_visit_id) as self_value,
		null as check_flag,
		null as check_comm
		from his_bi.dw_outp_patient_info_m am
		where 1=1
		and am.month_id = c_monthlist.month_id
		group by am.month_id;
	
	--出院均次医药费用	
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX04001';      
	insert into his_bi.kpi_master_m	
		select 
		am.month_id as month_id,
		'JX04001' as kpi_code,
		round(sum(am.total_fees)/count(distinct am.pai_visit_id),2) as kpi_value,
		now() as update_time,
		round(sum(am.total_fees)/count(distinct am.pai_visit_id),2) as self_value,
		null as check_flag,
		null as check_comm
		from his_bi.dw_inp_patient_info_m am
		where 1=1
		and am.month_id = c_monthlist.month_id
		group by am.month_id;
		
		
	--住院收入
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX04002';
	insert into his_bi.kpi_master_m
		select 
		am.month_id as month_id,
		'JX04002' as kpi_code,
		sum(am.total_fees) as kpi_value,
		now() as update_time,
		sum(am.total_fees) as self_value,
		null as check_flag,
		null as check_comm
		from his_bi.dw_inp_patient_amount_m am
		where 1=1
		and am.month_id = c_monthlist.month_id
		group by am.month_id;
	
    
	--实际占用总床日数
  delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX04003';
	insert into his_bi.kpi_master_m
		select 
		month_id,
		'JX04003' as kpi_code,
		sum(d.in_days) as kpi_value,
		now() as update_time,
		sum(d.in_days) as self_value,
		null as check_flag,
		null as check_comm
		from his_bi.dw_inp_patient_info_m d 
		where 1=1
		and month_id = c_monthlist.month_id
		group by month_id;
	

	--出院者占用总床日
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX04004'; 
	insert into his_bi.kpi_master_m
		select 
		month_id,
		'JX04004' as kpi_code,
		sum(d.in_days) as kpi_value,
		now() as update_time,
		sum(d.in_days) as self_value,
		null as check_flag,
		null as check_comm
		from his_bi.dw_inp_patient_info_m d 
		where 1=1
		and month_id = c_monthlist.month_id
		group by month_id;
	
	
	--出院人数
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX04005';      
	insert into his_bi.kpi_master_m
		select 
		month_id,
		'JX04005' as kpi_code,
		COALESCE(count(distinct d.pai_visit_id),0) as kpi_value,
		now() as update_time,
		COALESCE(count(distinct d.pai_visit_id),0) as self_value,
		null as check_flag,
		null as check_comm
		from his_bi.dw_inp_patient_info_m d 
		where 1=1
		and month_id = c_monthlist.month_id
		group by month_id;	

	--出院患者次均药品费用
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX04101';      
	insert into his_bi.kpi_master_m			
		select
		c_monthlist.month_id,
		'JX04101' as kpi_code,
		round(sum(pham_fees)/sum(patient_num),2) as kpi_value,
		now() as update_time,
		round(sum(pham_fees)/sum(patient_num),2) as self_value,
		null as check_flag,
		null as check_comm
		from
		(
				select 
				am.month_id as month_id,
				sum(am.pham_fees) as pham_fees,
				0 as patient_num
				from his_bi.dw_inp_patient_amount_m am
				where 1=1
				and am.month_id = c_monthlist.month_id
				group by am.month_id
				union
				select 
				bm.month_id as month_id,
				0 as pham_fees,
				count(distinct bm.pai_visit_id) as patient_num
				from his_bi.dw_inp_patient_info_m bm
				where 1=1
				and bm.month_id = c_monthlist.month_id
				group by bm.month_id
		)ff;



	--出院患者药品费用
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX04102';
	insert into his_bi.kpi_master_m
		select 
		am.month_id as month_id,
		'JX04102' as kpi_code,
		sum(am.pham_fees) as kpi_value,
		now() as update_time,
		sum(am.pham_fees) as self_value,
		null as check_flag,
		null as check_comm
		from his_bi.dw_inp_patient_amount_m am
		where 1=1
		and am.month_id = c_monthlist.month_id
		group by am.month_id;
		
	--实际占用总床日数
  delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX04103';
	insert into his_bi.kpi_master_m
		select 
		month_id,
		'JX04103' as kpi_code,
		sum(d.in_days) as kpi_value,
		now() as update_time,
		sum(d.in_days) as self_value,
		null as check_flag,
		null as check_comm
		from his_bi.dw_inp_patient_info_m d 
		where 1=1
		and month_id = c_monthlist.month_id
		group by month_id;
	

	--出院者占用总床日
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX04104'; 
	insert into his_bi.kpi_master_m
		select 
		month_id,
		'JX04104' as kpi_code,
		sum(d.in_days) as kpi_value,
		now() as update_time,
		sum(d.in_days) as self_value,
		null as check_flag,
		null as check_comm
		from his_bi.dw_inp_patient_info_m d 
		where 1=1
		and month_id = c_monthlist.month_id
		group by month_id;


	--出院人数
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX04105';      
	insert into his_bi.kpi_master_m
		select 
		month_id,
		'JX04105' as kpi_code,
		COALESCE(count(distinct d.pai_visit_id),0) as kpi_value,
		now() as update_time,
		COALESCE(count(distinct d.pai_visit_id),0) as self_value,
		null as check_flag,
		null as check_comm
		from his_bi.dw_inp_patient_info_m d 
		where 1=1
		and month_id = c_monthlist.month_id
		group by month_id;	
		
	---门诊患者基本药物处方占比
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX018';
	insert into his_bi.kpi_master_m
		select
		t1.month_id,
		'JX018' as kpi_code,
		round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as kpi_value,
		now() as update_time,
		round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as self_value,
		null as check_flag,
		null as check_comm
		from
		his_bi.kpi_master_m t1
		left join his_bi.kpi_master_m t2 on t1.kpi_code = t2.kpi_code and t1.month_id = t2.month_id 
		and t2.kpi_code='JX01801'
		where
		t1.month_id=c_monthlist.month_id
		and t1.kpi_code in('JX01801','JX01802')
		group by 
		t1.month_id;

	---19.住院患者基本药物使用率
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX019';
	insert into his_bi.kpi_master_m
		select
		t1.month_id,
		'JX019' as kpi_code,
		round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as kpi_value,
		now() as update_time,
		round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as self_value,
		null as check_flag,
		null as check_comm
		from
		his_bi.kpi_master_m t1
		left join his_bi.kpi_master_m t2 on t1.kpi_code = t2.kpi_code and t1.month_id = t2.month_id 
		and t2.kpi_code='JX01901'
		where
		t1.month_id=c_monthlist.month_id
		and t1.kpi_code in('JX01901','JX01902')
		group by 
		t1.month_id;

	---门诊患者预约后平均等待时间
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX023';
	insert into his_bi.kpi_master_m
		select
		left(t1.jzsj,6) as month_id,
		'JX023' as kpi_code,
		COALESCE(avg(t1.qd_jz),0) as kpi_value,
		now() as update_time,
		COALESCE(avg(t1.qd_jz),0)as self_value,
		null as check_flag,
		null as check_comm
		from
		his_bi.dw_outp_fsjz t1
		where
		left(t1.jzsj,6)=c_monthlist.month_id
		and t1.qd_jz<1460
		group by 
		left(t1.jzsj,6);

	---27.门诊收入占医疗收入比例
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX027';
	insert into his_bi.kpi_master_m
		select
		t1.month_id,
		'JX027' as kpi_code,
		round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as kpi_value,
		now() as update_time,
		round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as self_value,
		null as check_flag,
		null as check_comm
		from
		his_bi.kpi_master_m t1
		left join his_bi.kpi_master_m t2 on t1.kpi_code = t2.kpi_code and t1.month_id = t2.month_id 
		and t2.kpi_code='JX02701'
		where
		t1.month_id=c_monthlist.month_id
		and t1.kpi_code in('JX02701','JX02702')
		group by 
		t1.month_id;

	---29.住院收入占医疗收入比例
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX029';
	insert into his_bi.kpi_master_m
		select
		t1.month_id,
		'JX029' as kpi_code,
		round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as kpi_value,
		now() as update_time,
		round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as self_value,
		null as check_flag,
		null as check_comm
		from
		his_bi.kpi_master_m t1
		left join his_bi.kpi_master_m t2 on t1.kpi_code = t2.kpi_code and t1.month_id = t2.month_id 
		and t2.kpi_code='JX02901'
		where
		t1.month_id=c_monthlist.month_id
		and t1.kpi_code in('JX02901','JX02902')
		group by 
		t1.month_id;

	---31.医疗服务收入（不含药品、耗材、检查检验收入）占医疗收入比例▲
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX031';
	insert into his_bi.kpi_master_m
		select
		t1.month_id,
		'JX031' as kpi_code,
		round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as kpi_value,
		now() as update_time,
		round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as self_value,
		null as check_flag,
		null as check_comm
		from
		his_bi.kpi_master_m t1
		left join his_bi.kpi_master_m t2 on t1.kpi_code = t2.kpi_code and t1.month_id = t2.month_id 
		and t2.kpi_code='JX03101'
		where
		t1.month_id=c_monthlist.month_id
		and t1.kpi_code in('JX03101','JX03106')
		group by 
		t1.month_id;

	---32.辅助用药收入占比
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX032';
	insert into his_bi.kpi_master_m
		select
		t1.month_id,
		'JX032' as kpi_code,
		round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as kpi_value,
		now() as update_time,
		round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as self_value,
		null as check_flag,
		null as check_comm
		from
		his_bi.kpi_master_m t1
		left join his_bi.kpi_master_m t2 on t1.kpi_code = t2.kpi_code and t1.month_id = t2.month_id 
		and t2.kpi_code='JX03201'
		where
		t1.month_id=c_monthlist.month_id
		and t1.kpi_code in('JX03201','JX03202')
		group by 
		t1.month_id;	

	--医疗收入增幅此代码只能跑2020年全年的同比，步入21年后需要更改底表代码
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX037';
	insert into his_bi.kpi_master_m		
		select
c_monthlist.month_id as month_id,
'JX037' as kpi_code,
round((sum(t2.amount_value)-sum(t2.last_amount_value))*1.00/sum(t2.last_amount_value)*100,5) as kpi_value,
now() as update_time,
round((sum(t2.amount_value)-sum(t2.last_amount_value))*1.00/sum(t2.last_amount_value)*100,5) as self_value,
null as check_flag  ,
null as check_comm
from
(select
replace(left(month_id::text,7),'-','') as month_id,
(last_mz_amount+last_zy_amount) as last_amount_value,
0 as amount_value
from 
his_bi.dw_last_zb_m 
where
replace(left(month_id::text,7),'-','') =  to_char(to_date(left(c_monthlist.month_id,4), 'yyyy') -  interval '1' year,'yyyy')||right(c_monthlist.month_id,2)
union all
select
month_id,
0 as last_amount_value,
kpi_value as amount_value
from
his_bi.kpi_master_m
where
month_id = c_monthlist.month_id
and kpi_code='JX03106') t2;

		
  --门诊次均费用增幅
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX038';      
	insert into his_bi.kpi_master_m	
		select
c_monthlist.month_id as month_id,
'JX038' as kpi_code,
round((sum(t2.amount_value)-sum(t2.last_amount_value))*1.00/sum(t2.last_amount_value)*100,5) as kpi_value,
now() as update_time,
round((sum(t2.amount_value)-sum(t2.last_amount_value))*1.00/sum(t2.last_amount_value)*100,5) as self_value,
null as check_flag  ,
null as check_comm
from
(select
replace(left(month_id::text,7),'-','') as month_id,
(last_mzjc_fee) as last_amount_value,
0 as amount_value
from 
his_bi.dw_last_zb_m 
where
replace(left(month_id::text,7),'-','') =  to_char(to_date(left(c_monthlist.month_id,4), 'yyyy') -  interval '1' year,'yyyy')||right(c_monthlist.month_id,2)
union all
select
month_id,
0 as last_amount_value,
special_value as amount_value
from
his_bi.special_master_m
where
month_id = c_monthlist.month_id
and special_code='SP008010102') t2;

	--门诊患者次均医药费用	
	delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX03801';      
	insert into his_bi.kpi_master_m	
		select 
		am.month_id as month_id,
		'JX03801' as kpi_code,
		round(sum(am.total_fees)/count(distinct am.outp_visit_id),2) as kpi_value,
		now() as update_time,
		round(sum(am.total_fees)/count(distinct am.outp_visit_id),2) as self_value,
		null as check_flag,
		null as check_comm
		from his_bi.dw_outp_patient_info_m am
		where 1=1
		and am.month_id = c_monthlist.month_id
		group by am.month_id;
		
	---住院次均药品费用增幅
  delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX041';
	insert into his_bi.kpi_master_m
select
    c_monthlist.month_id,
    'JX041' as kpi_code ,
    coalesce(round(((sum(case when t1.month_id = c_monthlist.month_id then t1.kpi_value end)-
                     sum(case when t1.month_id = to_char(to_date(left(c_monthlist.month_id,4), 'yyyy') -  interval '1' year,'yyyy')||right(c_monthlist.month_id,2) then t1.kpi_value end))/
                    sum(case when t1.month_id =  to_char(to_date(left(c_monthlist.month_id,4), 'yyyy') -  interval '1' year,'yyyy')||right(c_monthlist.month_id,2) then t1.kpi_value end))*100,5),0) as kpi_value,
    now() as update_time ,
    coalesce(round(((sum(case when t1.month_id = c_monthlist.month_id then t1.kpi_value end)-
                     sum(case when t1.month_id = to_char(to_date(left(c_monthlist.month_id,4), 'yyyy') -  interval '1' year,'yyyy')||right(c_monthlist.month_id,2) then t1.kpi_value end))/
                    sum(case when t1.month_id =  to_char(to_date(left(c_monthlist.month_id,4), 'yyyy') -  interval '1' year,'yyyy')||right(c_monthlist.month_id,2) then t1.kpi_value end))*100,5),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where t1.kpi_code='JX04101'
  and  to_date(left(t1.month_id,4),'yyyy')>= to_date(left(c_monthlist.month_id,4), 'yyyy') -  interval '1' year
  and to_date(left(t1.month_id,4),'yyyy')< to_date(left(c_monthlist.month_id,4), 'yyyy') +  interval '1' year;



  ---住院次均费用增幅
  delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX040';  
  insert into his_bi.kpi_master_m	
    select
c_monthlist.month_id as month_id,
'JX040' as kpi_code,
round((sum(t2.amount_value)-sum(t2.last_amount_value))*1.00/sum(t2.last_amount_value)*100,5) as kpi_value,
now() as update_time,
round((sum(t2.amount_value)-sum(t2.last_amount_value))*1.00/sum(t2.last_amount_value)*100,5) as self_value,
null as check_flag  ,
null as check_comm
from
(select
replace(left(month_id::text,7),'-','') as month_id,
(last_zyjc_fee) as last_amount_value,
0 as amount_value
from 
his_bi.dw_last_zb_m 
where
replace(left(month_id::text,7),'-','') =  to_char(to_date(left(c_monthlist.month_id,4), 'yyyy') -  interval '1' year,'yyyy')||right(c_monthlist.month_id,2)
union all
select
month_id,
0 as last_amount_value,
special_value as amount_value
from
his_bi.special_master_m
where
month_id = c_monthlist.month_id
and special_code='SP008030101') t2;


  --门诊次均费用增幅
  delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX039';   
	insert into his_bi.kpi_master_m
select
    c_monthlist.month_id,
    'JX039' as kpi_code ,
    coalesce(round(((sum(case when t1.month_id = c_monthlist.month_id then t1.kpi_value end)-
                     sum(case when t1.month_id = to_char(to_date(left(c_monthlist.month_id,4), 'yyyy') -  interval '1' year,'yyyy')||right(c_monthlist.month_id,2) then t1.kpi_value end))/
                    sum(case when t1.month_id =  to_char(to_date(left(c_monthlist.month_id,4), 'yyyy') -  interval '1' year,'yyyy')||right(c_monthlist.month_id,2) then t1.kpi_value end))*100,5),0) as kpi_value,
    now() as update_time ,
    coalesce(round(((sum(case when t1.month_id = c_monthlist.month_id then t1.kpi_value end)-
                     sum(case when t1.month_id = to_char(to_date(left(c_monthlist.month_id,4), 'yyyy') -  interval '1' year,'yyyy')||right(c_monthlist.month_id,2) then t1.kpi_value end))/
                    sum(case when t1.month_id =  to_char(to_date(left(c_monthlist.month_id,4), 'yyyy') -  interval '1' year,'yyyy')||right(c_monthlist.month_id,2) then t1.kpi_value end))*100,5),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where t1.kpi_code='JX03901'
  and  to_date(left(t1.month_id,4),'yyyy')>= to_date(left(c_monthlist.month_id,4), 'yyyy') -  interval '1' year
  and to_date(left(t1.month_id,4),'yyyy')< to_date(left(c_monthlist.month_id,4), 'yyyy') +  interval '1' year;
   end loop;
   RETURN 'SUCCESS';  
END;
",['D00035'],"[""delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX00101';\r    \r  insert into his_bi.kpi_master_m\r        select\r        t1.month_id,\r        'JX00101' as kpi_code,\r        count(distinct t1.outp_visit_id) as kpi_value,\r        now() as update_time,\r        count(distinct t1.outp_visit_id) as self_value,\r        null as check_flag,\r        null as check_comm\r        from\r        his_bi.dw_outp_patient_info_m t1\r        where\r        t1.month_id = c_monthlist.month_id\r        and t1.is_emergency  is null\r        and t1.is_tj is null\r        group by \r        t1.month_id;\r\r\r  delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX00102';\r    \r  insert into his_bi.kpi_master_m\r        select\r        t1.month_id,\r        'JX00102' as kpi_code,\r        COALESCE(count(distinct t1.pai_visit_id),0)  as kpi_value,\r        now() as update_time,\r        COALESCE(count(distinct t1.pai_visit_id),0)  as self_value,\r        null as check_flag,\r        null as check_comm\r        from\r        his_bi.dw_inp_patient_info_m t1\r        where\r        t1.month_id=c_monthlist.month_id\r        group by \r        t1.month_id;\r        \r    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX001';\r    \r  insert into his_bi.kpi_master_m\r         select\r        t1.month_id,\r        'JX001' as kpi_code,\r        round(max(t1.kpi_value)/max(t2.kpi_value),5) as kpi_value,\r        now() as update_time,\r        round(max(t1.kpi_value)/max(t2.kpi_value),5) as self_value,\r        null as check_flag,\r        null as check_comm\r        from\r        his_bi.kpi_master_m t1\r        left join his_bi.kpi_master_m t2 on t1.kpi_code = t2.kpi_code and t1.month_id = t2.month_id \r        and t2.kpi_code='JX00102'\r        where\r        t1.month_id=c_monthlist.month_id\r        and t1.kpi_code in('JX00102','JX00101')\r        group by \r        t1.month_id;\r                \r        ---下转患者\r  delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX00202';\r    \r  insert into his_bi.kpi_master_m\r\r        select\r        t1.month_id,\r        'JX00202' as kpi_code,\r        COALESCE(COALESCE(count(distinct t1.pai_visit_id),0) ,0) as kpi_value,\r        now() as update_time,\r        COALESCE(COALESCE(count(distinct t1.pai_visit_id),0) ,0) as self_value,\r        null as check_flag,\r        null as check_comm\r        from\r        his_bi.dw_inp_patient_info_m t1\r        where\r        t1.month_id=c_monthlist.month_id\r        and t1.is_xzhz='1'\r        group by \r        t1.month_id;\r\r-----日间手术台次数（日间手术人数）\r  delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX00301';\r    \r  insert into his_bi.kpi_master_m\r         select\r        t1.month_id,\r        'JX00301' as kpi_code,\r        COALESCE(count(distinct t1.pai_visit_id),0) as kpi_value,\r        now() as update_time,\r        COALESCE(count(distinct t1.pai_visit_id),0) as self_value,\r        null as check_flag,\r        null as check_comm\r        from\r        his_bi.dw_inp_patient_info_m t1\r        where\r        t1.month_id=c_monthlist.month_id\r        and t1.rjss_num>0\r        group by \r        t1.month_id;\r\r-----同期出院患者择期手术总台次数（同期出院择期手术总人数）\r  delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX00302';\r    \r  insert into his_bi.kpi_master_m\r         select\r        t1.month_id,\r        'JX00302' as kpi_code,\r        COALESCE(count(distinct t1.pai_visit_id),0) as kpi_value,\r        now() as update_time,\r        COALESCE(count(distinct t1.pai_visit_id),0) as self_value,\r        null as check_flag,\r        null as check_comm\r        from\r        his_bi.dw_inp_patient_info_m t1\r        where\r        t1.month_id=c_monthlist.month_id\r        and t1.is_zqss>0\r        group by \r        t1.month_id;\r                \r------日间手术占择期手术比例\r  delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX003';\r    \r  insert into his_bi.kpi_master_m\r        select\r        t1.month_id,\r        'JX003' as kpi_code,\r        round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as kpi_value,\r        now() as update_time,\r        round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as self_value,\r        null as check_flag,\r        null as check_comm\r        from\r        his_bi.kpi_master_m t1\r        left join his_bi.kpi_master_m t2 on t1.kpi_code = t2.kpi_code and t1.month_id = t2.month_id \r        and t2.kpi_code='JX00301'\r        where\r        t1.month_id=c_monthlist.month_id\r        and t1.kpi_code in('JX00301','JX00302')\r        group by \r        t1.month_id;\r-----出院患者手术台次数（出院手术人数）\r  delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX00401';\r    \r  insert into his_bi.kpi_master_m\r         select\r        t1.month_id,\r        'JX00401' as kpi_code,\r        COALESCE(count(distinct t1.pai_visit_id),0) as kpi_value,\r        now() as update_time,\r        COALESCE(count(distinct t1.pai_visit_id),0) as self_value,\r        null as check_flag,\r        null as check_comm\r        from\r        his_bi.dw_inp_patient_info_m t1\r        where\r        t1.month_id=c_monthlist.month_id\r        and t1.is_sshz>0\r        group by \r        t1.month_id;\r\r---同期出院患者总人次数（出院人数）\r  delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX00402';\r    \r  insert into his_bi.kpi_master_m\r        select\r        t1.month_id,\r        'JX00402' as kpi_code,\r        COALESCE(count(distinct t1.pai_visit_id),0)  as kpi_value,\r        now() as update_time,\r        COALESCE(count(distinct t1.pai_visit_id),0)  as self_value,\r        null as check_flag,\r        null as check_comm\r        from\r        his_bi.dw_inp_patient_info_m t1\r        where\r        t1.month_id=c_monthlist.month_id\r        group by \r        t1.month_id;\r\r\r------出院患者手术占比\r  delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX004';\r    \r  insert into his_bi.kpi_master_m\r        select\r        t1.month_id,\r        'JX004' as kpi_code,\r        round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as kpi_value,\r        now() as update_time,\r        round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as self_value,\r        null as check_flag,\r        null as check_comm\r        from\r        his_bi.kpi_master_m t1\r        left join his_bi.kpi_master_m t2 on t1.kpi_code = t2.kpi_code and t1.month_id = t2.month_id \r        and t2.kpi_code='JX00401'\r        where\r        t1.month_id=c_monthlist.month_id\r        and t1.kpi_code in('JX00401','JX00402')\r        group by \r        t1.month_id;\r\r\r---出院患者微创手术台次数（微创手术人数）\r  delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX00501';\r    \r  insert into his_bi.kpi_master_m\r        select\r        t1.month_id,\r        'JX00501' as kpi_code,\r        COALESCE(count(distinct t1.pai_visit_id),0) as kpi_value,\r        now() as update_time,\r        COALESCE(count(distinct t1.pai_visit_id),0) as self_value,\r        null as check_flag,\r        null as check_comm\r        from\r        his_bi.dw_inp_patient_info_m t1\r        where\r        t1.month_id=c_monthlist.month_id\r        and t1.wc_num>0\r        group by \r        t1.month_id;\r\rdelete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX00502';\r        \r      insert into his_bi.kpi_master_m\r            select\r            t1.month_id,\r            'JX00502' as kpi_code,\r            COALESCE(count(distinct t1.pai_visit_id),0) as kpi_value,\r            now() as update_time,\r            COALESCE(count(distinct t1.pai_visit_id),0) as self_value,\r            null as check_flag,\r            null as check_comm\r            from\r            his_bi.dw_inp_patient_info_m t1\r            where\r            t1.month_id=c_monthlist.month_id\r            and t1.is_sshz>0\r            group by \r            t1.month_id;\r    \r    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX00601';\r        \r      insert into his_bi.kpi_master_m\r            select\r            t1.month_id,\r            'JX00601' as kpi_code,\r            COALESCE(count(distinct t1.pai_visit_id),0) as kpi_value,\r            now() as update_time,\r            COALESCE(count(distinct t1.pai_visit_id),0) as self_value,\r            null as check_flag,\r            null as check_comm\r            from\r            his_bi.dw_inp_patient_info_m t1\r            where\r            t1.month_id=c_monthlist.month_id\r            and t1.sjss_num>0\r            group by \r            t1.month_id;\r    \r    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX00602';\r        \r      insert into his_bi.kpi_master_m\r            select\r            t1.month_id,\r            'JX00602' as kpi_code,\r            COALESCE(count(distinct t1.pai_visit_id),0) as kpi_value,\r            now() as update_time,\r            COALESCE(count(distinct t1.pai_visit_id),0) as self_value,\r            null as check_flag,\r            null as check_comm\r            from\r            his_bi.dw_inp_patient_info_m t1\r            where\r            t1.month_id=c_monthlist.month_id\r            and t1.is_sshz>0\r            group by \r            t1.month_id;\rdelete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX00801';\r        \r      insert into his_bi.kpi_master_m\r            select\r            t1.month_id,\r            'JX00801' as kpi_code,\r            COALESCE(count(distinct t1.pai_visit_id),0) as kpi_value,\r            now() as update_time,\r            COALESCE(count(distinct t1.pai_visit_id),0) as self_value,\r            null as check_flag,\r            null as check_comm\r            from\r            his_bi.dw_inp_patient_info_m t1\r            where\r            t1.month_id=c_monthlist.month_id\r            and t1.ssbf_num>0\r            group by \r            t1.month_id;\r    \r    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX00802';\r        \r      insert into his_bi.kpi_master_m\r            select\r            t1.month_id,\r            'JX00802' as kpi_code,\r            COALESCE(count(distinct t1.pai_visit_id),0) as kpi_value,\r            now() as update_time,\r            COALESCE(count(distinct t1.pai_visit_id),0) as self_value,\r            null as check_flag,\r            null as check_comm\r            from\r            his_bi.dw_inp_patient_info_m t1\r            where\r            t1.month_id=c_monthlist.month_id\r            and t1.is_sshz>0\r            group by \r            t1.month_id;\r    \r    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX00901';\r        \r      insert into his_bi.kpi_master_m\r            select\r            t1.month_id,\r            'JX00901' as kpi_code,\r            COALESCE(count(distinct t1.pai_visit_id),0) as kpi_value,\r            now() as update_time,\r            COALESCE(count(distinct t1.pai_visit_id),0) as self_value,\r            null as check_flag,\r            null as check_comm\r            from\r            his_bi.dw_inp_patient_info_m t1\r            where\r            t1.month_id=c_monthlist.month_id\r            and t1.is_ylqk_gr>0\r            group by \r            t1.month_id;\r    \r    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX00902';\r        \r      insert into his_bi.kpi_master_m\r            select\r            t1.month_id,\r            'JX00902' as kpi_code,\r            COALESCE(count(distinct t1.pai_visit_id),0) as kpi_value,\r            now() as update_time,\r            COALESCE(count(distinct t1.pai_visit_id),0) as self_value,\r            null as check_flag,\r            null as check_comm\r            from\r            his_bi.dw_inp_patient_info_m t1\r            where\r            t1.month_id=c_monthlist.month_id\r            and t1.is_ylqk_sh>0\r            group by \r            t1.month_id;\r                        \r----   10.1剖宫产病种例数\r    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX01001';\r        \r      insert into his_bi.kpi_master_m\r            select\r            t1.month_id,\r            'JX01001' as kpi_code,\r            COALESCE(count(distinct t1.pai_visit_id),0) as kpi_value,\r            now() as update_time,\r            COALESCE(count(distinct t1.pai_visit_id),0) as self_value,\r            null as check_flag,\r            null as check_comm\r            from\r            his_bi.dw_inp_drgs_patient_m t1\r            where\r            t1.month_id=c_monthlist.month_id\r            and t1.drgs_name = 'D00183'\r            group by \r            t1.month_id;\r\r\r-----平均住院日\r    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100101';\r        \r      insert into his_bi.kpi_master_m\r            select\r            t1.month_id,\r            'JX0100101' as kpi_code,\r            round(avg(t1.in_days),4)as kpi_value,\r            now() as update_time,\r            round(avg(t1.in_days),4) as self_value,\r            null as check_flag,\r            null as check_comm\r            from\r            his_bi.dw_inp_drgs_patient_m t1\r            where\r            t1.month_id = c_monthlist.month_id\r            and t1.drgs_name = 'D00183'\r            group by \r            t1.month_id;\r\r---    同期剖宫产总出院人数\r    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100103';\r        \r      insert into his_bi.kpi_master_m\r            select\r            t1.month_id,\r            'JX0100103' as kpi_code,\r            COALESCE(count(distinct t1.pai_visit_id),0) as kpi_value,\r            now() as update_time,\r            COALESCE(count(distinct t1.pai_visit_id),0) as self_value,\r            null as check_flag,\r            null as check_comm\r            from\r            his_bi.dw_inp_drgs_patient_m t1\r            where\r            t1.month_id=c_monthlist.month_id\r            and t1.drgs_name = 'D00183'\r            group by \r            t1.month_id;\r\r----    剖宫产死亡人数\r    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100108';\r        \r      insert into his_bi.kpi_master_m\r            select\r            t1.month_id,\r            'JX0100108' as kpi_code,\r            COALESCE(COALESCE(count(distinct t1.pai_visit_id),0) ,0) as kpi_value,\r            now() as update_time,\r            COALESCE(COALESCE(count(distinct t1.pai_visit_id),0) ,0) as self_value,\r            null as check_flag,\r            null as check_comm\r            from\r            his_bi.dw_inp_drgs_patient_m t1\r            where\r            t1.month_id=c_monthlist.month_id\r            and t1.drgs_name = 'D00183'\r            and t1.lyfs = '5'\r            group by \r            t1.month_id;\r\r---总费用\r\r    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100105';\r        \r      insert into his_bi.kpi_master_m\r            select\r            t1.month_id,\r            'JX0100105' as kpi_code,\r            round(sum(t1.total_fees),4)as kpi_value,\r            now() as update_time,\r            round(sum(t1.total_fees),4)as self_value,\r            null as check_flag,\r            null as check_comm\r            from\r            his_bi.dw_inp_drgs_patient_m t1\r            where\r            t1.month_id=c_monthlist.month_id\r            and t1.drgs_name = 'D00183'\r            group by \r            t1.month_id;\r\r\r---社区获得性肺炎病例数\r    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX01002';\r        \r      insert into his_bi.kpi_master_m\r            select\r            t1.month_id,\r            'JX01002' as kpi_code,\r            COALESCE(count(distinct t1.pai_visit_id),0) as kpi_value,\r            now() as update_time,\r            COALESCE(count(distinct t1.pai_visit_id),0) as self_value,\r            null as check_flag,\r            null as check_comm\r            from\r            his_bi.dw_inp_drgs_patient_m t1\r            where\r            t1.month_id=c_monthlist.month_id\r            and t1.drgs_name = 'D00173'\r            group by \r            t1.month_id;\r\r----平均住院日\r    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100201';\r        \r      insert into his_bi.kpi_master_m\r            select\r            t1.month_id,\r            'JX0100201' as kpi_code,\r            round(avg(t1.in_days),4)as kpi_value,\r            now() as update_time,\r            round(avg(t1.in_days),4) as self_value,\r            null as check_flag,\r            null as check_comm\r            from\r            his_bi.dw_inp_drgs_patient_m t1\r            where\r            t1.month_id=c_monthlist.month_id\r            and t1.drgs_name = 'D00173'\r            group by \r            t1.month_id;\r---    同期社区获得性肺炎(住院、儿童)总出院人数\r    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100203';\r        \r      insert into his_bi.kpi_master_m\r            select\r            t1.month_id,\r            'JX0100203' as kpi_code,\r            COALESCE(count(distinct t1.pai_visit_id),0) as kpi_value,\r            now() as update_time,\r            COALESCE(count(distinct t1.pai_visit_id),0) as self_value,\r            null as check_flag,\r            null as check_comm\r            from\r            his_bi.dw_inp_drgs_patient_m t1\r            where\r            t1.month_id=c_monthlist.month_id\r            and t1.drgs_name = 'D00173'\r            group by \r            t1.month_id;\r\r---    社区获得性肺炎(住院、儿童)死亡人数\r    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100208';\r        \r      insert into his_bi.kpi_master_m\r            select\r            t1.month_id,\r            'JX0100208' as kpi_code,\r            COALESCE(COALESCE(count(distinct t1.pai_visit_id),0) ,0)as kpi_value,\r            now() as update_time,\r            COALESCE(COALESCE(count(distinct t1.pai_visit_id),0) ,0)as self_value,\r            null as check_flag,\r            null as check_comm\r            from\r            his_bi.dw_inp_drgs_patient_m t1\r            where\r            t1.month_id=c_monthlist.month_id\r            and t1.drgs_name = 'D00173'\r            and t1.lyfs='5'\r            group by \r            t1.month_id;\r\r\r---总费用\r    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100205';\r        \r      insert into his_bi.kpi_master_m\r            select\r            t1.month_id,\r            'JX0100205' as kpi_code,\r            round(sum(t1.total_fees),4)as kpi_value,\r            now() as update_time,\r            round(sum(t1.total_fees),4) as self_value,\r            null as check_flag,\r            null as check_comm\r            from\r            his_bi.dw_inp_drgs_patient_m t1\r            where\r            t1.month_id=c_monthlist.month_id\r            and t1.drgs_name = 'D00173'\r            group by \r            t1.month_id;\r---刨宫产病死率\r    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100107';\r        \r      insert into his_bi.kpi_master_m\r             select\r            t1.month_id,\r            'JX0100107' as kpi_code,\r             round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as kpi_value,\r            now() as update_time,\r             round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as self_value,\r            null as check_flag,\r            null as check_comm\r            from\r            his_bi.kpi_master_m t1\r            left join his_bi.kpi_master_m t2 on t1.kpi_code = t2.kpi_code and t1.month_id = t2.month_id \r            and t2.kpi_code='JX0100108'\r            where\r            t1.month_id=c_monthlist.month_id\r            and t1.kpi_code in('JX0100108','JX01001')\r            group by \r            t1.month_id;\r\r\r----社区获得性肺炎总天数\r    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100202';\r        \r      insert into his_bi.kpi_master_m\r            select\r            t1.month_id,\r            'JX0100202' as kpi_code,\r            round(sum(t1.in_days),3)as kpi_value,\r            now() as update_time,\r            round(sum(t1.in_days),3) as self_value,\r            null as check_flag,\r            null as check_comm\r            from\r            his_bi.dw_inp_drgs_patient_m t1\r            where\r            t1.month_id=c_monthlist.month_id\r            and t1.drgs_name = 'D00173'\r            group by \r            t1.month_id;\r\r----同期社区获得性肺炎总天数\r    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100206';\r        \r      insert into his_bi.kpi_master_m\r            select\r            t1.month_id,\r            'JX0100206' as kpi_code,\r            round(sum(t1.in_days),3)as kpi_value,\r            now() as update_time,\r            round(sum(t1.in_days),3) as self_value,\r            null as check_flag,\r            null as check_comm\r            from\r            his_bi.dw_inp_drgs_patient_m t1\r            where\r            t1.month_id=c_monthlist.month_id\r            and t1.drgs_name = 'D00173'\r            group by \r            t1.month_id;\r\r---社区肺炎均次费用\r    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100204';\r        \r      insert into his_bi.kpi_master_m\r             select\r            t1.month_id,\r            'JX0100204' as kpi_code,\r            round(max(t1.kpi_value)/max(t2.kpi_value),5)as kpi_value,\r            now() as update_time,\r            round(max(t1.kpi_value)/max(t2.kpi_value),5)as self_value,\r            null as check_flag,\r            null as check_comm\r            from\r            his_bi.kpi_master_m t1\r            left join his_bi.kpi_master_m t2 on t1.kpi_code = t2.kpi_code and t1.month_id = t2.month_id \r            and t2.kpi_code='JX01002'\r            where\r            t1.month_id=c_monthlist.month_id\r            and t1.kpi_code in('JX0100205','JX01002')\r            group by \r            t1.month_id;\r\r---刨宫产均次费用\r    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100104';\r        \r      insert into his_bi.kpi_master_m\r             select\r            t1.month_id,\r            'JX0100104' as kpi_code,\r            round(max(t1.kpi_value)/max(t2.kpi_value),5)as kpi_value,\r            now() as update_time,\r            round(max(t1.kpi_value)/max(t2.kpi_value),5)as self_value,\r            null as check_flag,\r            null as check_comm\r            from\r            his_bi.kpi_master_m t1\r            left join his_bi.kpi_master_m t2 on t1.kpi_code = t2.kpi_code and t1.month_id = t2.month_id \r            and t2.kpi_code='JX01001'\r            where\r            t1.month_id=c_monthlist.month_id\r            and t1.kpi_code in('JX0100105','JX01001')\r            group by \r            t1.month_id;\r\r\r----刨宫产总天数\r    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100102';\r        \r      insert into his_bi.kpi_master_m\r            select\r            t1.month_id,\r            'JX0100102' as kpi_code,\r            round(sum(t1.in_days),3)as kpi_value,\r            now() as update_time,\r            round(sum(t1.in_days),3) as self_value,\r            null as check_flag,\r            null as check_comm\r            from\r            his_bi.dw_inp_drgs_patient_m t1\r            where\r            t1.month_id=c_monthlist.month_id\r            and t1.drgs_name = 'D00183'\r            group by \r            t1.month_id;\r\r----同期刨宫产总天数\r    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100106';\r        \r      insert into his_bi.kpi_master_m\r            select\r            t1.month_id,\r            'JX0100106' as kpi_code,\r            round(sum(t1.in_days),3)as kpi_value,\r            now() as update_time,\r            round(sum(t1.in_days),3) as self_value,\r            null as check_flag,\r            null as check_comm\r            from\r            his_bi.dw_inp_drgs_patient_m t1\r            where\r            t1.month_id=c_monthlist.month_id\r            and t1.drgs_name = 'D00183'\r            group by \r            t1.month_id;\r\r---病例总数\r    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX01003';\r        \r      insert into his_bi.kpi_master_m\r            select\r            t1.month_id,\r            'JX01003' as kpi_code,\r            COALESCE(count(distinct t1.pai_visit_id),0) as kpi_value,\r            now() as update_time,\r            COALESCE(count(distinct t1.pai_visit_id),0) as self_value,\r            null as check_flag,\r            null as check_comm\r            from\r            his_bi.dw_inp_drgs_patient_m t1\r            where\r            t1.month_id=c_monthlist.month_id\r            and t1.drgs_name = 'D00113'\r            group by \r            t1.month_id;\r    \r---病例总数\r    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX01004';\r        \r      insert into his_bi.kpi_master_m\r            select\r            t1.month_id,\r            'JX01004' as kpi_code,\r            COALESCE(count(distinct t1.pai_visit_id),0) as kpi_value,\r            now() as update_time,\r            COALESCE(count(distinct t1.pai_visit_id),0) as self_value,\r            null as check_flag,\r            null as check_comm\r            from\r            his_bi.dw_inp_drgs_patient_m t1\r            where\r            t1.month_id=c_monthlist.month_id\r            and t1.drgs_name = 'D00208'\r            group by \r            t1.month_id;\r    \r---病例总数\r    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX01005';\r        \r      insert into his_bi.kpi_master_m\r            select\r            t1.month_id,\r            'JX01005' as kpi_code,\r            COALESCE(count(distinct t1.pai_visit_id),0) as kpi_value,\r            now() as update_time,\r            COALESCE(count(distinct t1.pai_visit_id),0) as self_value,\r            null as check_flag,\r            null as check_comm\r            from\r            his_bi.dw_inp_drgs_patient_m t1\r            where\r            t1.month_id=c_monthlist.month_id\r            and t1.drgs_name = 'D00224'\r            group by \r            t1.month_id;\r    \r---病例总数\r    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX01006';\r        \r      insert into his_bi.kpi_master_m\r            select\r            t1.month_id,\r            'JX01006' as kpi_code,\r            COALESCE(count(distinct t1.pai_visit_id),0) as kpi_value,\r            now() as update_time,\r            COALESCE(count(distinct t1.pai_visit_id),0) as self_value,\r            null as check_flag,\r            null as check_comm\r            from\r            his_bi.dw_inp_drgs_patient_m t1\r            where\r            t1.month_id=c_monthlist.month_id\r            and t1.drgs_name = 'D00210'\r            group by \r            t1.month_id;\r\r\r---平均住院日\r    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100301';\r            \r          insert into his_bi.kpi_master_m\r                select\r                t1.month_id,\r                'JX0100301' as kpi_code,\r                round(avg(t1.in_days),4)as kpi_value,\r                now() as update_time,\r                round(avg(t1.in_days),4) as self_value,\r                null as check_flag,\r                null as check_comm\r                from\r                his_bi.dw_inp_drgs_patient_m t1\r                where\r                t1.month_id=c_monthlist.month_id\r                and t1.drgs_name = 'D00113'\r                group by \r                t1.month_id;\r    \r---平均住院日\r    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100401';\r            \r          insert into his_bi.kpi_master_m\r                select\r                t1.month_id,\r                'JX0100401' as kpi_code,\r                round(avg(t1.in_days),4)as kpi_value,\r                now() as update_time,\r                round(avg(t1.in_days),4) as self_value,\r                null as check_flag,\r                null as check_comm\r                from\r                his_bi.dw_inp_drgs_patient_m t1\r                where\r                t1.month_id=c_monthlist.month_id\r                and t1.drgs_name = 'D00208'\r                group by \r                t1.month_id;\r    \r---平均住院日\r    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100501';\r            \r          insert into his_bi.kpi_master_m\r                select\r                t1.month_id,\r                'JX0100501' as kpi_code,\r                round(avg(t1.in_days),4)as kpi_value,\r                now() as update_time,\r                round(avg(t1.in_days),4) as self_value,\r                null as check_flag,\r                null as check_comm\r                from\r                his_bi.dw_inp_drgs_patient_m t1\r                where\r                t1.month_id=c_monthlist.month_id\r                and t1.drgs_name = 'D00224'\r                group by \r                t1.month_id;\r    \r---平均住院日\r    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100601';\r            \r          insert into his_bi.kpi_master_m\r                select\r                t1.month_id,\r                'JX0100601' as kpi_code,\r                round(avg(t1.in_days),4)as kpi_value,\r                now() as update_time,\r                round(avg(t1.in_days),4) as self_value,\r                null as check_flag,\r                null as check_comm\r                from\r                his_bi.dw_inp_drgs_patient_m t1\r                where\r                t1.month_id=c_monthlist.month_id\r                and t1.drgs_name = 'D00210'\r                group by \r                t1.month_id;\r\r\r---出院患者占用总床日数\r    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100302';\r        \r      insert into his_bi.kpi_master_m\r            select\r            t1.month_id,\r            'JX0100302' as kpi_code,\r            round(sum(t1.in_days),3)as kpi_value,\r            now() as update_time,\r            round(sum(t1.in_days),3) as self_value,\r            null as check_flag,\r            null as check_comm\r            from\r            his_bi.dw_inp_drgs_patient_m t1\r            where\r            t1.month_id=c_monthlist.month_id\r            and t1.drgs_name = 'D00113'\r            group by \r            t1.month_id;\r    \r---出院患者占用总床日数\r    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100402';\r        \r      insert into his_bi.kpi_master_m\r            select\r            t1.month_id,\r            'JX0100402' as kpi_code,\r            round(sum(t1.in_days),3)as kpi_value,\r            now() as update_time,\r            round(sum(t1.in_days),3) as self_value,\r            null as check_flag,\r            null as check_comm\r            from\r            his_bi.dw_inp_drgs_patient_m t1\r            where\r            t1.month_id=c_monthlist.month_id\r            and t1.drgs_name = 'D00208'\r            group by \r            t1.month_id;\r    \r---出院患者占用总床日数\r    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100502';\r        \r      insert into his_bi.kpi_master_m\r            select\r            t1.month_id,\r            'JX0100502' as kpi_code,\r            round(sum(t1.in_days),3)as kpi_value,\r            now() as update_time,\r            round(sum(t1.in_days),3) as self_value,\r            null as check_flag,\r            null as check_comm\r            from\r            his_bi.dw_inp_drgs_patient_m t1\r            where\r            t1.month_id=c_monthlist.month_id\r            and t1.drgs_name = 'D00224'\r            group by \r            t1.month_id;\r    \r---出院患者占用总床日数\r    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100602';\r        \r      insert into his_bi.kpi_master_m\r            select\r            t1.month_id,\r            'JX0100602' as kpi_code,\r            round(sum(t1.in_days),3)as kpi_value,\r            now() as update_time,\r            round(sum(t1.in_days),3) as self_value,\r            null as check_flag,\r            null as check_comm\r            from\r            his_bi.dw_inp_drgs_patient_m t1\r            where\r            t1.month_id=c_monthlist.month_id\r            and t1.drgs_name = 'D00210'\r            group by \r            t1.month_id;\r\r\r---同期总出院人数\r    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100303';\r        \r      insert into his_bi.kpi_master_m\r            select\r            t1.month_id,\r            'JX0100303' as kpi_code,\r            COALESCE(count(distinct t1.pai_visit_id),0) as kpi_value,\r            now() as update_time,\r            COALESCE(count(distinct t1.pai_visit_id),0) as self_value,\r            null as check_flag,\r            null as check_comm\r            from\r            his_bi.dw_inp_drgs_patient_m t1\r            where\r            t1.month_id=c_monthlist.month_id\r            and t1.drgs_name = 'D00113'\r            group by \r            t1.month_id;\r    \r---同期总出院人数\r    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100403';\r        \r      insert into his_bi.kpi_master_m\r            select\r            t1.month_id,\r            'JX0100403' as kpi_code,\r            COALESCE(count(distinct t1.pai_visit_id),0) as kpi_value,\r            now() as update_time,\r            COALESCE(count(distinct t1.pai_visit_id),0) as self_value,\r            null as check_flag,\r            null as check_comm\r            from\r            his_bi.dw_inp_drgs_patient_m t1\r            where\r            t1.month_id=c_monthlist.month_id\r            and t1.drgs_name = 'D00208'\r            group by \r            t1.month_id;\r    \r---同期总出院人数\r    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100503';\r        \r      insert into his_bi.kpi_master_m\r            select\r            t1.month_id,\r            'JX0100503' as kpi_code,\r            COALESCE(count(distinct t1.pai_visit_id),0) as kpi_value,\r            now() as update_time,\r            COALESCE(count(distinct t1.pai_visit_id),0) as self_value,\r            null as check_flag,\r            null as check_comm\r            from\r            his_bi.dw_inp_drgs_patient_m t1\r            where\r            t1.month_id=c_monthlist.month_id\r            and t1.drgs_name = 'D00224'\r            group by \r            t1.month_id;\r    \r---同期总出院人数\r    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100603';\r        \r      insert into his_bi.kpi_master_m\r            select\r            t1.month_id,\r            'JX0100603' as kpi_code,\r            COALESCE(count(distinct t1.pai_visit_id),0) as kpi_value,\r            now() as update_time,\r            COALESCE(count(distinct t1.pai_visit_id),0) as self_value,\r            null as check_flag,\r            null as check_comm\r            from\r            his_bi.dw_inp_drgs_patient_m t1\r            where\r            t1.month_id=c_monthlist.month_id\r            and t1.drgs_name = 'D00210'\r            group by \r            t1.month_id;\r\r---总出院费用\r    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100305';\r        \r      insert into his_bi.kpi_master_m\r            select\r            t1.month_id,\r            'JX0100305' as kpi_code,\r            round(sum(t1.total_fees),4)as kpi_value,\r            now() as update_time,\r            round(sum(t1.total_fees),4) as self_value,\r            null as check_flag,\r            null as check_comm\r            from\r            his_bi.dw_inp_drgs_patient_m t1\r            where\r            t1.month_id=c_monthlist.month_id\r            and t1.drgs_name = 'D00113'\r            group by \r            t1.month_id;\r    \r---总出院费用\r    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100405';\r        \r      insert into his_bi.kpi_master_m\r            select\r            t1.month_id,\r            'JX0100405' as kpi_code,\r            round(sum(t1.total_fees),4)as kpi_value,\r            now() as update_time,\r            round(sum(t1.total_fees),4) as self_value,\r            null as check_flag,\r            null as check_comm\r            from\r            his_bi.dw_inp_drgs_patient_m t1\r            where\r            t1.month_id=c_monthlist.month_id\r            and t1.drgs_name = 'D00208'\r            group by \r            t1.month_id;\r    \r---总出院费用\r    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100505';\r        \r      insert into his_bi.kpi_master_m\r            select\r            t1.month_id,\r            'JX0100505' as kpi_code,\r            round(sum(t1.total_fees),4)as kpi_value,\r            now() as update_time,\r            round(sum(t1.total_fees),4) as self_value,\r            null as check_flag,\r            null as check_comm\r            from\r            his_bi.dw_inp_drgs_patient_m t1\r            where\r            t1.month_id=c_monthlist.month_id\r            and t1.drgs_name = 'D00224'\r            group by \r            t1.month_id;\r    \r---总出院费用\r    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100605';\r        \r      insert into his_bi.kpi_master_m\r            select\r            t1.month_id,\r            'JX0100605' as kpi_code,\r            round(sum(t1.total_fees),4)as kpi_value,\r            now() as update_time,\r            round(sum(t1.total_fees),4) as self_value,\r            null as check_flag,\r            null as check_comm\r            from\r            his_bi.dw_inp_drgs_patient_m t1\r            where\r            t1.month_id=c_monthlist.month_id\r            and t1.drgs_name = 'D00210'\r            group by \r            t1.month_id;\r\r---同期实际占用总床日数\r    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100306';\r        \r      insert into his_bi.kpi_master_m\r            select\r            t1.month_id,\r            'JX0100306' as kpi_code,\r            round(sum(t1.in_days),3)as kpi_value,\r            now() as update_time,\r            round(sum(t1.in_days),3) as self_value,\r            null as check_flag,\r            null as check_comm\r            from\r            his_bi.dw_inp_drgs_patient_m t1\r            where\r            t1.month_id=c_monthlist.month_id\r            and t1.drgs_name = 'D00113'\r            group by \r            t1.month_id;\r    \r---同期实际占用总床日数\r    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100406';\r        \r      insert into his_bi.kpi_master_m\r            select\r            t1.month_id,\r            'JX0100406' as kpi_code,\r            round(sum(t1.in_days),3)as kpi_value,\r            now() as update_time,\r            round(sum(t1.in_days),3) as self_value,\r            null as check_flag,\r            null as check_comm\r            from\r            his_bi.dw_inp_drgs_patient_m t1\r            where\r            t1.month_id=c_monthlist.month_id\r            and t1.drgs_name = 'D00208'\r            group by \r            t1.month_id;\r    \r---同期实际占用总床日数\r    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100506';\r        \r      insert into his_bi.kpi_master_m\r            select\r            t1.month_id,\r            'JX0100506' as kpi_code,\r            round(sum(t1.in_days),3)as kpi_value,\r            now() as update_time,\r            round(sum(t1.in_days),3) as self_value,\r            null as check_flag,\r            null as check_comm\r            from\r            his_bi.dw_inp_drgs_patient_m t1\r            where\r            t1.month_id=c_monthlist.month_id\r            and t1.drgs_name = 'D00224'\r            group by \r            t1.month_id;\r    \r---同期实际占用总床日数\r    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100606';\r        \r      insert into his_bi.kpi_master_m\r            select\r            t1.month_id,\r            'JX0100606' as kpi_code,\r            round(sum(t1.in_days),3)as kpi_value,\r            now() as update_time,\r            round(sum(t1.in_days),3) as self_value,\r            null as check_flag,\r            null as check_comm\r            from\r            his_bi.dw_inp_drgs_patient_m t1\r            where\r            t1.month_id=c_monthlist.month_id\r            and t1.drgs_name = 'D00210'\r            group by \r            t1.month_id;\r            \r\r---死亡人数\r    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100308';\r        \r      insert into his_bi.kpi_master_m\r            select\r            t1.month_id,\r            'JX0100308' as kpi_code,\r            COALESCE(count(distinct t1.pai_visit_id),0) as kpi_value,\r            now() as update_time,\r            COALESCE(count(distinct t1.pai_visit_id),0) as self_value,\r            null as check_flag,\r            null as check_comm\r            from\r            his_bi.dw_inp_drgs_patient_m t1\r            where\r            t1.month_id=c_monthlist.month_id\r            and t1.drgs_name = 'D00113'\r            and t1.lyfs='5'\r            group by \r            t1.month_id;\r    \r---死亡人数\r    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100408';\r        \r      insert into his_bi.kpi_master_m\r            select\r            t1.month_id,\r            'JX0100408' as kpi_code,\r            COALESCE(count(distinct t1.pai_visit_id),0) as kpi_value,\r            now() as update_time,\r            COALESCE(count(distinct t1.pai_visit_id),0) as self_value,\r            null as check_flag,\r            null as check_comm\r            from\r            his_bi.dw_inp_drgs_patient_m t1\r            where\r            t1.month_id=c_monthlist.month_id\r            and t1.drgs_name = 'D00208'\r            and t1.lyfs='5'\r            group by \r            t1.month_id;\r    \r---死亡人数\r    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100508';\r        \r      insert into his_bi.kpi_master_m\r            select\r            t1.month_id,\r            'JX0100508' as kpi_code,\r            COALESCE(count(distinct t1.pai_visit_id),0) as kpi_value,\r            now() as update_time,\r            COALESCE(count(distinct t1.pai_visit_id),0) as self_value,\r            null as check_flag,\r            null as check_comm\r            from\r            his_bi.dw_inp_drgs_patient_m t1\r            where\r            t1.month_id=c_monthlist.month_id\r            and t1.drgs_name = 'D00224'\r            and t1.lyfs='5'\r            group by \r            t1.month_id;\r    \r---死亡人数\r    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100608';\r        \r      insert into his_bi.kpi_master_m\r            select\r            t1.month_id,\r            'JX0100608' as kpi_code,\r            COALESCE(count(distinct t1.pai_visit_id),0) as kpi_value,\r            now() as update_time,\r            COALESCE(count(distinct t1.pai_visit_id),0) as self_value,\r            null as check_flag,\r            null as check_comm\r            from\r            his_bi.dw_inp_drgs_patient_m t1\r            where\r            t1.month_id=c_monthlist.month_id\r            and t1.drgs_name = 'D00210'\r            and t1.lyfs='5'\r            group by \r            t1.month_id;\r                        \r    ---病死率\r    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100207';\r        \r        insert into his_bi.kpi_master_m\r             select\r            t1.month_id,\r            'JX0100207' as kpi_code,\r            round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as kpi_value,\r            now() as update_time,\r            round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as self_value,\r            null as check_flag,\r            null as check_comm\r            from\r            his_bi.kpi_master_m t1\r            left join his_bi.kpi_master_m t2 on t1.kpi_code = t2.kpi_code and t1.month_id = t2.month_id \r            and t2.kpi_code='JX0100208'\r            where\r            t1.month_id=c_monthlist.month_id\r            and t1.kpi_code in('JX0100208','JX01002')\r            group by \r            t1.month_id;                   \r                        \r  ---病死率\r    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100307';\r        \r        insert into his_bi.kpi_master_m\r             select\r            t1.month_id,\r            'JX0100307' as kpi_code,\r            round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as kpi_value,\r            now() as update_time,\r            round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as self_value,\r            null as check_flag,\r            null as check_comm\r            from\r            his_bi.kpi_master_m t1\r            left join his_bi.kpi_master_m t2 on t1.kpi_code = t2.kpi_code and t1.month_id = t2.month_id \r            and t2.kpi_code='JX0100308'\r            where\r            t1.month_id=c_monthlist.month_id\r            and t1.kpi_code in('JX0100308','JX01003')\r            group by \r            t1.month_id;\r    \r    ---病死率\r    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100407';\r        insert into his_bi.kpi_master_m\r             select\r            t1.month_id,\r            'JX0100407' as kpi_code,\r            round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as kpi_value,\r            now() as update_time,\r            round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as self_value,\r            null as check_flag,\r            null as check_comm\r            from\r            his_bi.kpi_master_m t1\r            left join his_bi.kpi_master_m t2 on t1.kpi_code = t2.kpi_code and t1.month_id = t2.month_id \r            and t2.kpi_code='JX0100408'\r            where\r            t1.month_id=c_monthlist.month_id\r            and t1.kpi_code in('JX0100408','JX01004')\r            group by \r            t1.month_id;\r    \r    ---病死率\r    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100507';\r        insert into his_bi.kpi_master_m\r             select\r            t1.month_id,\r            'JX0100507' as kpi_code,\r            round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as kpi_value,\r            now() as update_time,\r            round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as self_value,\r            null as check_flag,\r            null as check_comm\r            from\r            his_bi.kpi_master_m t1\r            left join his_bi.kpi_master_m t2 on t1.kpi_code = t2.kpi_code and t1.month_id = t2.month_id \r            and t2.kpi_code='JX0100508'\r            where\r            t1.month_id=c_monthlist.month_id\r            and t1.kpi_code in('JX0100508','JX01005')\r            group by \r            t1.month_id;\r    \r    ---病死率\r    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100607';\r        insert into his_bi.kpi_master_m\r             select\r            t1.month_id,\r            'JX0100607' as kpi_code,\r            round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as kpi_value,\r            now() as update_time,\r            round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as self_value,\r            null as check_flag,\r            null as check_comm\r            from\r            his_bi.kpi_master_m t1\r            left join his_bi.kpi_master_m t2 on t1.kpi_code = t2.kpi_code and t1.month_id = t2.month_id \r            and t2.kpi_code='JX0100608'\r            where\r            t1.month_id=c_monthlist.month_id\r            and t1.kpi_code in('JX0100608','JX01006')\r            group by \r            t1.month_id;\r    \r---次均费用\r    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100304';\r        \r      insert into his_bi.kpi_master_m\r             select\r            t1.month_id,\r            'JX0100304' as kpi_code,\r            round(max(t1.kpi_value)/max(t2.kpi_value),5)as kpi_value,\r            now() as update_time,\r            round(max(t1.kpi_value)/max(t2.kpi_value),5)as self_value,\r            null as check_flag,\r            null as check_comm\r            from\r            his_bi.kpi_master_m t1\r            left join his_bi.kpi_master_m t2 on t1.kpi_code = t2.kpi_code and t1.month_id = t2.month_id \r            and t2.kpi_code='JX01003'\r            where\r            t1.month_id=c_monthlist.month_id\r            and t1.kpi_code in('JX0100305','JX01003')\r            group by \r            t1.month_id;\r    \r---次均费用\r    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100404';\r        \r      insert into his_bi.kpi_master_m\r             select\r            t1.month_id,\r            'JX0100404' as kpi_code,\r            round(max(t1.kpi_value)/max(t2.kpi_value),5)as kpi_value,\r            now() as update_time,\r            round(max(t1.kpi_value)/max(t2.kpi_value),5)as self_value,\r            null as check_flag,\r            null as check_comm\r            from\r            his_bi.kpi_master_m t1\r            left join his_bi.kpi_master_m t2 on t1.kpi_code = t2.kpi_code and t1.month_id = t2.month_id \r            and t2.kpi_code='JX01004'\r            where\r            t1.month_id=c_monthlist.month_id\r            and t1.kpi_code in('JX0100405','JX01004')\r            group by \r            t1.month_id;\r    \r---次均费用\r    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100504';\r        \r      insert into his_bi.kpi_master_m\r             select\r            t1.month_id,\r            'JX0100504' as kpi_code,\r            round(max(t1.kpi_value)/max(t2.kpi_value),5)as kpi_value,\r            now() as update_time,\r            round(max(t1.kpi_value)/max(t2.kpi_value),5)as self_value,\r            null as check_flag,\r            null as check_comm\r            from\r            his_bi.kpi_master_m t1\r            left join his_bi.kpi_master_m t2 on t1.kpi_code = t2.kpi_code and t1.month_id = t2.month_id \r            and t2.kpi_code='JX01005'\r            where\r            t1.month_id=c_monthlist.month_id\r            and t1.kpi_code in('JX0100505','JX01005')\r            group by \r            t1.month_id;\r    \r---次均费用\r    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100604';\r        \r      insert into his_bi.kpi_master_m\r             select\r            t1.month_id,\r            'JX0100604' as kpi_code,\r            round(max(t1.kpi_value)/max(t2.kpi_value),5)as kpi_value,\r            now() as update_time,\r            round(max(t1.kpi_value)/max(t2.kpi_value),5)as self_value,\r            null as check_flag,\r            null as check_comm\r            from\r            his_bi.kpi_master_m t1\r            left join his_bi.kpi_master_m t2 on t1.kpi_code = t2.kpi_code and t1.month_id = t2.month_id \r            and t2.kpi_code='JX01006'\r            where\r            t1.month_id=c_monthlist.month_id\r            and t1.kpi_code in('JX0100605','JX01006')\r            group by \r            t1.month_id;\r---9.I类切口手术部位感染率\r    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX009';\r        insert into his_bi.kpi_master_m\r             select\r            t1.month_id,\r            'JX009' as kpi_code,\r            round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as kpi_value,\r            now() as update_time,\r            round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as self_value,\r            null as check_flag,\r            null as check_comm\r            from\r            his_bi.kpi_master_m t1\r            left join his_bi.kpi_master_m t2 on t1.kpi_code = t2.kpi_code and t1.month_id = t2.month_id \r            and t2.kpi_code='JX00901'\r            where\r            t1.month_id=c_monthlist.month_id\r            and t1.kpi_code in('JX00901','JX00902')\r            group by \r            t1.month_id;\r\r---8.手术患者并发症发生率\r    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX008';\r        insert into his_bi.kpi_master_m\r             select\r            t1.month_id,\r            'JX008' as kpi_code,\r            round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as kpi_value,\r            now() as update_time,\r            round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as self_value,\r            null as check_flag,\r            null as check_comm\r            from\r            his_bi.kpi_master_m t1\r            left join his_bi.kpi_master_m t2 on t1.kpi_code = t2.kpi_code and t1.month_id = t2.month_id \r            and t2.kpi_code='JX00801'\r            where\r            t1.month_id=c_monthlist.month_id\r            and t1.kpi_code in('JX00801','JX00802')\r            group by \r            t1.month_id;\r---6.出院患者四级手术比例\r    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX006';\r        insert into his_bi.kpi_master_m\r             select\r            t1.month_id,\r            'JX006' as kpi_code,\r            round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as kpi_value,\r            now() as update_time,\r            round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as self_value,\r            null as check_flag,\r            null as check_comm\r            from\r            his_bi.kpi_master_m t1\r            left join his_bi.kpi_master_m t2 on t1.kpi_code = t2.kpi_code and t1.month_id = t2.month_id \r            and t2.kpi_code='JX00601'\r            where\r            t1.month_id=c_monthlist.month_id\r            and t1.kpi_code in('JX00601','JX00602')\r            group by \r            t1.month_id;\r\r---5.出院患者微创手术占比\r    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX005';\r        insert into his_bi.kpi_master_m\r             select\r            t1.month_id,\r            'JX005' as kpi_code,\r            round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as kpi_value,\r            now() as update_time,\r            round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as self_value,\r            null as check_flag,\r            null as check_comm\r            from\r            his_bi.kpi_master_m t1\r            left join his_bi.kpi_master_m t2 on t1.kpi_code = t2.kpi_code and t1.month_id = t2.month_id \r            and t2.kpi_code='JX00501'\r            where\r            t1.month_id=c_monthlist.month_id\r            and t1.kpi_code in('JX00501','JX00502')\r            group by \r            t1.month_id;\r---门诊诊疗工作的总人次数（急诊、健康体检者不计入）\r  delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0070201';\r    \r  insert into his_bi.kpi_master_m\r        select\r        t1.month_id,\r        'JX0070201' as kpi_code,\r        count(distinct t1.outp_visit_id) as kpi_value,\r        now() as update_time,\r        count(distinct t1.outp_visit_id) as self_value,\r        null as check_flag,\r        null as check_comm\r        from\r        his_bi.dw_outp_patient_info_m t1\r        where\r        t1.month_id = c_monthlist.month_id\r        and t1.is_emergency  is null\r        and t1.is_tj is null\r        group by \r        t1.month_id;\r\r---出院人数\r  delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0070202';\r    \r  insert into his_bi.kpi_master_m\r        select\r        t1.month_id,\r        'JX0070202' as kpi_code,\r        COALESCE(count(distinct t1.pai_visit_id),0)  as kpi_value,\r        now() as update_time,\r        COALESCE(count(distinct t1.pai_visit_id),0)  as self_value,\r        null as check_flag,\r        null as check_comm\r        from\r        his_bi.dw_inp_patient_info_m t1\r        where\r        t1.month_id=c_monthlist.month_id\r        group by \r        t1.month_id;\r---该地该时间内活产数\r  delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX06302';\r\r  insert into his_bi.kpi_master_m\r        select\r         left(st_date,6) as month_id,\r        'JX06302' as kpi_code,\r        count(1)  as kpi_value,\r        now() as update_time,\r        count(1)  as self_value,\r        null as check_flag,\r        null as check_comm\r        from\r        his_bi.dwd_inp_quantity_d t1\r        where\r         left(st_date,6)=c_monthlist.month_id\r        and t1.key = 'D00157'\r        and t1.value not in ('2','3')\r        group by\r         left(st_date,6);\r\r---该地该时间内活产数\r  delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX07101';\r\r  insert into his_bi.kpi_master_m\r        select\r         left(st_date,6) as month_id,\r        'JX07101' as kpi_code,\r        count(1)  as kpi_value,\r        now() as update_time,\r        count(1)  as self_value,\r        null as check_flag,\r        null as check_comm\r        from\r        his_bi.dwd_inp_quantity_d t1\r        where\r         left(st_date,6)=c_monthlist.month_id\r        and t1.key = 'D00157'\r        and t1.value not in ('2','3')\r        group by\r         left(st_date,6);\r\r---产科门诊复诊预约诊疗人次数\r  delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX07701';\r\r  insert into his_bi.kpi_master_m\r        select\r        t1.month_id,\r        'JX07701' as kpi_code,\r        count(1)  as kpi_value,\r        now() as update_time,\r        count(1)   as self_value,\r        null as check_flag,\r        null as check_comm\r        from\r        his_bi.dw_outp_patient_info_m t1\r        where\r        t1.month_id=c_monthlist.month_id\r        and t1.return_visit ='1'\r        and t1.is_yygh = '1'\r        and t1.dept_code in ('12010503','120121','12020101','12020201','12020402','12020502',\r                          '12020602','12020702','12020902','120224','120225','120226','120227',\r                          '120228','120229','120230','120215','120216','120217','120218','120219',\r                          '120221','120222','120223','120231','120232','120233','120234','120235',\r                          '120339','12051002')\r        group by\r        t1.month_id;\r\r---产科门诊总诊疗人次数\r  delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX07702';\r\r  insert into his_bi.kpi_master_m\r        select\r        t1.month_id,\r        'JX07702' as kpi_code,\r        count(1)  as kpi_value,\r        now() as update_time,\r        count(1)   as self_value,\r        null as check_flag,\r        null as check_comm\r        from\r        his_bi.dw_outp_patient_info_m t1\r        where\r        t1.month_id=c_monthlist.month_id\r        and t1.dept_code in ('12010503','120121','12020101','12020201','12020402','12020502',\r                          '12020602','12020702','12020902','120224','120225','120226','120227',\r                          '120228','120229','120230','120215','120216','120217','120218','120219',\r                          '120221','120222','120223','120231','120232','120233','120234','120235',\r                          '120339','12051002')\r        group by\r        t1.month_id;\r\r  delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX07901';\r\r  insert into his_bi.kpi_master_m\r        select\r        t1.month_id,\r        'JX07901' as kpi_code,\r        count(distinct t1.outp_visit_id) as kpi_value,\r        now() as update_time,\r        count(distinct t1.outp_visit_id) as self_value,\r        null as check_flag,\r        null as check_comm\r        from\r        his_bi.dw_outp_patient_info_m t1\r        where\r        t1.month_id = c_monthlist.month_id\r        and t1.is_tj is null\r        group by\r        t1.month_id;\r--- 实际占用的总床日数\r  delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX08001';\r\r  insert into his_bi.kpi_master_m\r        select\r        replace(left(t1.stat_date::text,7),'-','') as month_id,\r        'JX08001' as kpi_code,\r        sum(t1.bed_used) as kpi_value,\r        now() as update_time,\r        sum(t1.bed_used) as self_value,\r        null as check_flag,\r        null as check_comm\r        from\r        his_bi.dw_inp_dept_work_d t1\r        where\r        replace(left(t1.stat_date::text,7),'-','') = c_monthlist.month_id\r        group by\r        replace(left(stat_date::text,7),'-','');\r---实际开放的总床日数\r  delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX08002';\r\r  insert into his_bi.kpi_master_m\r        select\r        replace(left(t1.stat_date::text,7),'-','') as month_id,\r        'JX08002' as kpi_code,\r        sum(t1.sy_num) as kpi_value,\r        now() as update_time,\r        sum(t1.sy_num) as self_value,\r        null as check_flag,\r        null as check_comm\r        from\r        his_bi.dw_inp_dept_work_d t1\r        where\r        replace(left(t1.stat_date::text,7),'-','') = c_monthlist.month_id\r        group by\r        replace(left(stat_date::text,7),'-','');\r\r---床位使用率\r    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX080';\r        insert into his_bi.kpi_master_m\r             select\r            t1.month_id,\r            'JX080' as kpi_code,\r            round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as kpi_value,\r            now() as update_time,\r            round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as self_value,\r            null as check_flag,\r            null as check_comm\r            from\r            his_bi.kpi_master_m t1\r            left join his_bi.kpi_master_m t2 on t1.kpi_code = t2.kpi_code and t1.month_id = t2.month_id\r            and t2.kpi_code='JX08001'\r            where\r            t1.month_id=c_monthlist.month_id\r            and t1.kpi_code in('JX08001','JX08002')\r            group by\r            t1.month_id;\r\r---产科复诊预约诊疗率\r    delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX077';\r        insert into his_bi.kpi_master_m\r             select\r            t1.month_id,\r            'JX077' as kpi_code,\r            round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as kpi_value,\r            now() as update_time,\r            round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as self_value,\r            null as check_flag,\r            null as check_comm\r            from\r            his_bi.kpi_master_m t1\r            left join his_bi.kpi_master_m t2 on t1.kpi_code = t2.kpi_code and t1.month_id = t2.month_id\r            and t2.kpi_code='JX07701'\r            where\r            t1.month_id=c_monthlist.month_id\r            and t1.kpi_code in('JX07701','JX07702')\r            group by\r            t1.month_id;\r ---同期住院患者总人数\r  delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX07202';\r\r  insert into his_bi.kpi_master_m\r        select\r        replace(left(t1.stat_date::text,7),'-','') as month_id,\r        'JX07202' as kpi_code,\r        count(distinct t1.pai_visit_id) as kpi_value,\r        now() as update_time,\r        count(distinct t1.pai_visit_id) as self_value,\r        null as check_flag,\r        null as check_comm\r        from\r        his_bi.report_adt_status t1\r        where\r        replace(left(t1.stat_date::text,7),'-','') = c_monthlist.month_id\r        and t1.status = 0\r        group by\r        replace(left(stat_date::text,7),'-','');\r    \r    \r ---特需门诊医疗服务收入\r  delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0070302';\r\r  insert into his_bi.kpi_master_m\rselect\r    t1.month_id,\r    'JX0070302' as kpi_code,\r    sum(case when t3.special_clinic_type='2' then t4.total_fees end) as kpi_value,\r    now() as update_time ,\r    sum(case when t3.special_clinic_type='2' then t4.total_fees end) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.dw_outp_patient_info_m t1\r        left join his_bi.v_system_special_clinic t3 on t1.outp_special_id = t3.special_clinic_id and t3.special_clinic_type='2'\r        left join his_bi.dw_outp_patient_amount_m t4 on t1.patient_id = t4.patient_id and t1.visit_id = t4.visit_id\rwhere\r        t1.month_id=c_monthlist.month_id\rgroup by t1.month_id;\r\r\r---同期全部医疗服务收入(医疗收入)\rdelete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0070304';\r\rinsert into his_bi.kpi_master_m\rselect\r    month_id,\r    'JX0070304' as kpi_code,\r    kpi_value,\r    now() as update_time ,\r    self_value ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m\rwhere\r        kpi_code='JX03701'\r  and month_id=c_monthlist.month_id;\r \r ---特需医疗服务量\rdelete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0070101';\r\rinsert into his_bi.kpi_master_m\rselect\r    month_id,\r    'JX0070101' as kpi_code,\r    special_value as kpi_value,\r    now() as update_time ,\r    special_value as self_value ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.special_master_m\rwhere\rmonth_id = c_monthlist.month_id\rand special_code='SP001010602';\r\r\r ---特需门诊患者人次数\rdelete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0070102';\r\rinsert into his_bi.kpi_master_m\rselect\r    month_id,\r    'JX0070102' as kpi_code,\r    special_value as kpi_value,\r    now() as update_time ,\r    special_value as self_value ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.special_master_m\rwhere\rmonth_id = c_monthlist.month_id\rand special_code='SP001010502';\r\r\r----以下是王颖开发\r--新生儿呼吸窘迫综合征（NRDS）病种例数\r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX01007';      \r insert into his_bi.kpi_master_m \r  select\r  dg.month_id,\r  'JX01007' as kpi_code,\r  count(distinct dg.pai_visit_id) as kpi_value,\r  now() as update_time,\r  count(distinct dg.pai_visit_id) as self_value,\r  null as check_flag,\r  null as check_comm\r  from his_bi.dw_inp_drgs_patient_m dg\r  where 1=1\r  and dg.drgs_name = 'D00128'\r  and dg.month_id = c_monthlist.month_id\r  group by dg.month_id;\r  \r  \r --新生儿呼吸窘迫综合征（NRDS）平均住院日\r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100701';      \r insert into his_bi.kpi_master_m \r  select\r  dg.month_id,\r  'JX0100701' as kpi_code,\r  round(sum(dg.in_days)/count(distinct dg.pai_visit_id),2) as kpi_value,\r  now() as update_time,\r  round(sum(dg.in_days)/count(distinct dg.pai_visit_id),2) as self_value,\r  null as check_flag,\r  null as check_comm\r  from his_bi.dw_inp_drgs_patient_m dg\r  where 1=1\r  and dg.drgs_name = 'D00128'\r  and dg.month_id = c_monthlist.month_id\r  group by dg.month_id;\r\r\r --新生儿呼吸窘迫综合征（NRDS）出院患者占用总床日数\r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100702';      \r insert into his_bi.kpi_master_m \r  select\r  dg.month_id,\r  'JX0100702' as kpi_code,\r  sum(dg.in_days) as kpi_value,\r  now() as update_time,\r  sum(dg.in_days) as self_value,\r  null as check_flag,\r  null as check_comm\r  from his_bi.dw_inp_drgs_patient_m dg\r  where 1=1\r  and dg.drgs_name = 'D00128'\r  and dg.month_id = c_monthlist.month_id\r  group by dg.month_id;\r\r --新生儿呼吸窘迫综合征（NRDS）总出院人数\r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100703';      \r insert into his_bi.kpi_master_m \r  select\r  dg.month_id,\r  'JX0100703' as kpi_code,\r  count(distinct dg.pai_visit_id) as kpi_value,\r  now() as update_time,\r  count(distinct dg.pai_visit_id) as self_value,\r  null as check_flag,\r  null as check_comm\r  from his_bi.dw_inp_drgs_patient_m dg\r  where 1=1\r  and dg.drgs_name = 'D00128'\r  and dg.month_id = c_monthlist.month_id\r  group by dg.month_id;\r\r\r --新生儿呼吸窘迫综合征（NRDS）次均费用\r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100704';      \r insert into his_bi.kpi_master_m \r  select\r  dg.month_id,\r  'JX0100704' as kpi_code,\r  round(sum(dg.total_fees)/count(distinct dg.pai_visit_id),2) as kpi_value,\r  now() as update_time,\r  round(sum(dg.total_fees)/count(distinct dg.pai_visit_id),2) as self_value,\r  null as check_flag,\r  null as check_comm\r  from his_bi.dw_inp_drgs_patient_m dg\r  where 1=1\r  and dg.drgs_name = 'D00128'\r  and dg.month_id = c_monthlist.month_id\r  group by dg.month_id;\r\r\r --新生儿呼吸窘迫综合征（NRDS）总出院费用\r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100705';      \r insert into his_bi.kpi_master_m \r  select\r  dg.month_id,\r  'JX0100705' as kpi_code,\r  sum(dg.total_fees) as kpi_value,\r  now() as update_time,\r  sum(dg.total_fees) as self_value,\r  null as check_flag,\r  null as check_comm\r  from his_bi.dw_inp_drgs_patient_m dg\r  where 1=1\r  and dg.drgs_name = 'D00128'\r  and dg.month_id = c_monthlist.month_id\r  group by dg.month_id;\r\r\r  --新生儿呼吸窘迫综合征（NRDS）实际占用总床日数\r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100706';      \r insert into his_bi.kpi_master_m \r  select\r  dg.month_id,\r  'JX0100706' as kpi_code,\r  sum(dg.in_days) as kpi_value,\r  now() as update_time,\r  sum(dg.in_days) as self_value,\r  null as check_flag,\r  null as check_comm\r  from his_bi.dw_inp_drgs_patient_m dg\r  where 1=1\r  and dg.drgs_name = 'D00128'\r  and dg.month_id = c_monthlist.month_id\r  group by dg.month_id;\r\r --新生儿呼吸窘迫综合征（NRDS）病死率\r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100707';      \r insert into his_bi.kpi_master_m \r  select\r  dg.month_id,\r  'JX0100707' as kpi_code,\r  count(distinct(case when dg.lyfs = '5' then dg.pai_visit_id end))/count(distinct dg.pai_visit_id) as kpi_value,\r  now() as update_time,\r  count(distinct(case when dg.lyfs = '5' then dg.pai_visit_id end))/count(distinct dg.pai_visit_id) as self_value,\r  null as check_flag,\r  null as check_comm\r  from his_bi.dw_inp_drgs_patient_m dg\r  where 1=1\r  and dg.drgs_name = 'D00128'\r  and dg.month_id = c_monthlist.month_id\r  group by dg.month_id;\r\r\r\r --新生儿呼吸窘迫综合征（NRDS）死亡人数\r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100708';      \r insert into his_bi.kpi_master_m \r  select\r  dg.month_id,\r  'JX0100708' as kpi_code,\r  count(distinct(case when dg.lyfs = '5' then dg.pai_visit_id end)) as kpi_value,\r  now() as update_time,\r  count(distinct(case when dg.lyfs = '5' then dg.pai_visit_id end)) as self_value,\r  null as check_flag,\r  null as check_comm\r  from his_bi.dw_inp_drgs_patient_m dg\r  where 1=1\r  and dg.drgs_name = 'D00128'\r  and dg.month_id = c_monthlist.month_id\r  group by dg.month_id;\r\r\r --儿童哮喘病种例数\r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX01008';      \r insert into his_bi.kpi_master_m \r  select\r  dg.month_id,\r  'JX01008' as kpi_code,\r  count(distinct dg.pai_visit_id) as kpi_value,\r  now() as update_time,\r  count(distinct dg.pai_visit_id) as self_value,\r  null as check_flag,\r  null as check_comm\r  from his_bi.dw_inp_drgs_patient_m dg\r  where 1=1\r  and dg.drgs_name = 'D00225'\r  and dg.month_id = c_monthlist.month_id\r  group by dg.month_id;\r  \r\r --儿童哮喘平均住院日\r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100801';      \r insert into his_bi.kpi_master_m \r  select\r  dg.month_id,\r  'JX0100801' as kpi_code,\r  round(sum(dg.in_days)/count(distinct dg.pai_visit_id),2) as kpi_value,\r  now() as update_time,\r  round(sum(dg.in_days)/count(distinct dg.pai_visit_id),2) as self_value,\r  null as check_flag,\r  null as check_comm\r  from his_bi.dw_inp_drgs_patient_m dg\r  where 1=1\r  and dg.drgs_name = 'D00225'\r  and dg.month_id = c_monthlist.month_id\r  group by dg.month_id;\r\r\r --儿童哮喘出院患者占用总床日数\r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100802';      \r insert into his_bi.kpi_master_m \r  select\r  dg.month_id,\r  'JX0100802' as kpi_code,\r  sum(dg.in_days) as kpi_value,\r  now() as update_time,\r  sum(dg.in_days) as self_value,\r  null as check_flag,\r  null as check_comm\r  from his_bi.dw_inp_drgs_patient_m dg\r  where 1=1\r  and dg.drgs_name = 'D00225'\r  and dg.month_id = c_monthlist.month_id\r  group by dg.month_id;\r\r  --儿童哮喘总出院人数\r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100803';      \r insert into his_bi.kpi_master_m \r  select\r  dg.month_id,\r  'JX0100803' as kpi_code,\r  count(distinct dg.pai_visit_id) as kpi_value,\r  now() as update_time,\r  count(distinct dg.pai_visit_id) as self_value,\r  null as check_flag,\r  null as check_comm\r  from his_bi.dw_inp_drgs_patient_m dg\r  where 1=1\r  and dg.drgs_name = 'D00225'\r  and dg.month_id = c_monthlist.month_id\r  group by dg.month_id;\r\r --儿童哮喘次均费用\r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100804';      \r insert into his_bi.kpi_master_m \r  select\r  dg.month_id,\r  'JX0100804' as kpi_code,\r  round(sum(dg.total_fees)/count(distinct dg.pai_visit_id),2) as kpi_value,\r  now() as update_time,\r  round(sum(dg.total_fees)/count(distinct dg.pai_visit_id),2) as self_value,\r  null as check_flag,\r  null as check_comm\r  from his_bi.dw_inp_drgs_patient_m dg\r  where 1=1\r  and dg.drgs_name = 'D00225'\r  and dg.month_id = c_monthlist.month_id\r  group by dg.month_id;\r\r\r --儿童哮喘总出院费用\r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100805';      \r insert into his_bi.kpi_master_m \r  select\r  dg.month_id,\r  'JX0100805' as kpi_code,\r  sum(dg.total_fees) as kpi_value,\r  now() as update_time,\r  sum(dg.total_fees) as self_value,\r  null as check_flag,\r  null as check_comm\r  from his_bi.dw_inp_drgs_patient_m dg\r  where 1=1\r  and dg.drgs_name = 'D00225'\r  and dg.month_id = c_monthlist.month_id\r  group by dg.month_id;\r\r\r--儿童哮喘出院患者占用总床日数\rdelete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100806';      \rinsert into his_bi.kpi_master_m \r  select\r  dg.month_id,\r  'JX0100806' as kpi_code,\r  sum(dg.in_days) as kpi_value,\r  now() as update_time,\r  sum(dg.in_days) as self_value,\r  null as check_flag,\r  null as check_comm\r  from his_bi.dw_inp_drgs_patient_m dg\r  where 1=1\r  and dg.drgs_name = 'D00225'\r  and dg.month_id = c_monthlist.month_id\r  group by dg.month_id;\r\r --儿童哮喘病死率\r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100807';      \r insert into his_bi.kpi_master_m \r  select\r  dg.month_id,\r  'JX0100807' as kpi_code,\r  count(distinct(case when dg.lyfs = '5' then dg.pai_visit_id end))/count(distinct dg.pai_visit_id) as kpi_value,\r  now() as update_time,\r  count(distinct(case when dg.lyfs = '5' then dg.pai_visit_id end))/count(distinct dg.pai_visit_id) as self_value,\r  null as check_flag,\r  null as check_comm\r  from his_bi.dw_inp_drgs_patient_m dg\r  where 1=1\r  and dg.drgs_name = 'D00225'\r  and dg.month_id = c_monthlist.month_id\r  group by dg.month_id;\r\r\r --儿童哮喘死亡人数\r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0100808';      \r insert into his_bi.kpi_master_m \r  select\r  dg.month_id,\r  'JX0100808' as kpi_code,\r  count(distinct(case when dg.lyfs = '5' then dg.pai_visit_id end)) as kpi_value,\r  now() as update_time,\r  count(distinct(case when dg.lyfs = '5' then dg.pai_visit_id end)) as self_value,\r  null as check_flag,\r  null as check_comm\r  from his_bi.dw_inp_drgs_patient_m dg\r  where 1=1\r  and dg.drgs_name = 'D00225'\r  and dg.month_id = c_monthlist.month_id\r  group by dg.month_id;\r  \r\r --门诊处方数\r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX01602';      \r insert into his_bi.kpi_master_m \r  select\r  substr(dd.st_date,1,6) as month_id,\r  'JX01602' as kpi_code,\r  sum(value) as kpi_value,\r  now() as update_time,\r  sum(value) as self_value,\r  null as check_flag,\r  null as check_comm\r  from his_bi.dwd_outp_quantity_d dd \r  where dd.key = 'D00035'\r  and substr(dd.st_date,1,6) = c_monthlist.month_id\r  group by substr(dd.st_date,1,6);\r  \r --抗菌药物使用强度(DDDs)\r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX017';      \r insert into his_bi.kpi_master_m \r  select\r  month_id,\r  'JX017' as kpi_code,\r  round(sum(kjyw_ddd_sum)/sum(in_days) * 100,2) as kpi_value,\r  now() as update_time,\r  round(sum(kjyw_ddd_sum)/sum(in_days) * 100,2) as self_value,\r  null as check_flag,\r  null as check_comm\r  from his_bi.dw_inp_patient_info_m \r  where 1=1\r  and month_id = c_monthlist.month_id\r  group by month_id;\r  \r  \r --住院患者抗菌药物消耗量（累计DDD数）\r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX01701';      \r insert into his_bi.kpi_master_m \r  select\r  month_id,\r  'JX01701' as kpi_code,\r  sum(kjyw_ddd_sum) as kpi_value,\r  now() as update_time,\r  sum(kjyw_ddd_sum) as self_value,\r  null as check_flag,\r  null as check_comm\r  from his_bi.dw_inp_patient_info_m \r  where 1=1\r  and month_id = c_monthlist.month_id\r  group by month_id;\r  \r  \r --出院者占用总床日\r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX01702'; \r insert into his_bi.kpi_master_m\r  select \r  month_id,\r  'JX01702' as kpi_code,\r  sum(in_days) as kpi_value,\r  now() as update_time,\r  sum(in_days) as self_value,\r  null as check_flag,\r  null as check_comm\r  from his_bi.dw_inp_patient_info_m d \r  where 1=1\r  and month_id = c_monthlist.month_id\r  group by month_id;\r  \r --门诊患者使用基本药物人次数\r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX01801';      \r insert into his_bi.kpi_master_m \r  select \r  am.month_id,\r  'JX01801' as kpi_code,\r  count(distinct am.patient_id||am.visit_id) as kpi_value,\r  now() as update_time,\r  count(distinct am.patient_id||am.visit_id) as self_value,\r  null as check_flag,\r  null as check_comm\r  from his_bi.dw_outp_patient_amount_m am \r  where am.basic_fees > 0\r  and am.month_id = c_monthlist.month_id\r  group by am.month_id;\r\r  --同期门诊诊疗总人次数（不包括健康体检者及未开具药物处方患者）\r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX01802';      \r insert into his_bi.kpi_master_m\r  select \r  month_id,\r  'JX01802' as kpi_code,\r  COALESCE(count(distinct d.outp_visit_id),0) as kpi_value,\r  now() as update_time,\r  COALESCE(count(distinct d.outp_visit_id),0) as self_value,\r  null as check_flag,\r  null as check_comm\r  from his_bi.dw_outp_patient_info_m d \r  where 1=1\r  and exists\r  (\r   select outp_visit_id from his_bi.dw_outp_patient_amount_m \r   where (pham_fees > 0 or tj_fees < 0)\r   and outp_visit_id = d.outp_visit_id\r  )\r  and month_id = c_monthlist.month_id\r  group by month_id;\r\r --出院患者使用基本药物人次数\r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX01901';      \r insert into his_bi.kpi_master_m \r  select \r  am.month_id,\r  'JX01901' as kpi_code,\r  count(distinct am.pai_visit_id) as kpi_value,\r  now() as update_time,\r  count(distinct am.pai_visit_id) as self_value,\r  null as check_flag,\r  null as check_comm\r  from his_bi.dw_inp_patient_amount_m am \r  where am.basic_fees > 0\r  and am.month_id = c_monthlist.month_id\r  group by am.month_id;\r  \r  \r  --同期出院总人次数（不包括未用药患者）\r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX01902';      \r insert into his_bi.kpi_master_m\r  select \r  month_id,\r  'JX01902' as kpi_code,\r  COALESCE(count(distinct d.pai_visit_id),0) as kpi_value,\r  now() as update_time,\r  COALESCE(count(distinct d.pai_visit_id),0) as self_value,\r  null as check_flag,\r  null as check_comm\r  from his_bi.dw_inp_patient_info_m d \r  where 1=1\r  and exists\r  (\r   select pai_visit_id from his_bi.dw_inp_patient_amount_m \r   where pham_fees > 0\r   and pai_visit_id = d.pai_visit_id\r  )\r  and month_id = c_monthlist.month_id\r  group by month_id;\r  \r --出院人数\r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX01605';      \r insert into his_bi.kpi_master_m\r  select \r  month_id,\r  'JX01605' as kpi_code,\r  COALESCE(count(distinct d.pai_visit_id),0) as kpi_value,\r  now() as update_time,\r  COALESCE(count(distinct d.pai_visit_id),0) as self_value,\r  null as check_flag,\r  null as check_comm\r  from his_bi.dw_inp_patient_info_m d \r  where 1=1\r  and month_id = c_monthlist.month_id\r  group by month_id;  \r  \r --实际占用总床日数\r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX02501';      \r insert into his_bi.kpi_master_m \r  select \r  to_char(stat_date,'yyyymm') as month_id,\r  'JX02501' as kpi_code,\r  sum(bed_used) as kpi_value,\r  now() as update_time,\r  sum(bed_used) as self_value,\r  null as check_flag,\r  null as check_comm\r  from his_bi.dw_inp_dept_work_d am\r  where 1=1\r  and to_char(stat_date,'yyyymm') = c_monthlist.month_id\r  group by to_char(stat_date,'yyyymm');\r \r \r --医院实际开放床位数\r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX02602';      \r insert into his_bi.kpi_master_m \r  select \r  to_char(stat_date,'yyyymm') as month_id,\r  'JX02602' as kpi_code,\r  sum(sy_num) as kpi_value,\r  now() as update_time,\r  sum(sy_num) as self_value,\r  null as check_flag,\r  null as check_comm\r  from his_bi.dw_inp_dept_work_d am\r  where 1=1\r  and to_char(stat_date,'yyyymm') = c_monthlist.month_id\r  group by to_char(stat_date,'yyyymm');\r \r \r --门诊收入 \r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX02701';      \r insert into his_bi.kpi_master_m \r  select \r  am.month_id as month_id,\r  'JX02701' as kpi_code,\r  sum(am.total_fees) as kpi_value,\r  now() as update_time,\r  sum(am.total_fees) as self_value,\r  null as check_flag,\r  null as check_comm\r  from his_bi.dw_outp_patient_amount_m am\r  where 1=1\r  and am.month_id = c_monthlist.month_id\r  group by am.month_id;\r  \r  \r --医疗收入\r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX02702';\r insert into his_bi.kpi_master_m  \r  select \r  ff.month_id,\r  'JX02702' as kpi_code,\r  sum(fees) as kpi_value,\r  now() as update_time,\r  sum(fees) as self_value,\r  null as check_flag,\r  null as check_comm\r  from\r  (\r   select \r   am.month_id,\r   sum(total_fees) as fees\r   from his_bi.dw_outp_patient_amount_m am\r   where 1=1\r   and am.month_id = c_monthlist.month_id\r   group by am.month_id\r   union\r   select \r   bm.month_id,\r   sum(total_fees) as fees\r   from his_bi.dw_inp_patient_amount_m bm\r   where 1=1\r   and bm.month_id = c_monthlist.month_id\r   group by bm.month_id\r  )ff\r  group by ff.month_id;\r\r --门诊收入 \r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX02802';      \r insert into his_bi.kpi_master_m \r  select \r  am.month_id as month_id,\r  'JX02802' as kpi_code,\r  sum(am.total_fees) as kpi_value,\r  now() as update_time,\r  sum(am.total_fees) as self_value,\r  null as check_flag,\r  null as check_comm\r  from his_bi.dw_outp_patient_amount_m am\r  where 1=1\r  and am.month_id = c_monthlist.month_id\r  group by am.month_id;\r\r\r --住院收入\r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX02901';\r insert into his_bi.kpi_master_m\r  select \r  am.month_id as month_id,\r  'JX02901' as kpi_code,\r  sum(am.total_fees) as kpi_value,\r  now() as update_time,\r  sum(am.total_fees) as self_value,\r  null as check_flag,\r  null as check_comm\r  from his_bi.dw_inp_patient_amount_m am\r  where 1=1\r  and am.month_id = c_monthlist.month_id\r  group by am.month_id;\r  \r  \r  \r --医疗收入\r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX02902';\r insert into his_bi.kpi_master_m  \r  select \r  ff.month_id,\r  'JX02902' as kpi_code,\r  sum(fees) as kpi_value,\r  now() as update_time,\r  sum(fees) as self_value,\r  null as check_flag,\r  null as check_comm\r  from\r  (\r   select \r   am.month_id,\r   sum(total_fees) as fees\r   from his_bi.dw_outp_patient_amount_m am\r   where 1=1\r   and am.month_id = c_monthlist.month_id\r   group by am.month_id\r   union\r   select \r   bm.month_id,\r   sum(total_fees) as fees\r   from his_bi.dw_inp_patient_amount_m bm\r   where 1=1\r   and bm.month_id = c_monthlist.month_id\r   group by bm.month_id\r  )ff\r  group by ff.month_id;\r  \r  \r --医疗服务收入\r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX03101';\r insert into his_bi.kpi_master_m  \r  select \r  ff.month_id,\r  'JX03101' as kpi_code,\r  sum(fees) as kpi_value,\r  now() as update_time,\r  sum(fees) as self_value,\r  null as check_flag,\r  null as check_comm\r  from\r  (\r   select \r   am.month_id,\r   sum(service_fees) as fees\r   from his_bi.dw_outp_patient_amount_m am\r   where 1=1\r   and am.month_id = c_monthlist.month_id\r   group by am.month_id\r   union\r   select \r   bm.month_id,\r   sum(service_fees) as fees\r   from his_bi.dw_inp_patient_amount_m bm\r   where 1=1\r   and bm.month_id = c_monthlist.month_id\r   group by bm.month_id\r  )ff\r  group by ff.month_id;\r\r\r --药品收入\r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX03102';\r insert into his_bi.kpi_master_m  \r  select \r  ff.month_id,\r  'JX03102' as kpi_code,\r  sum(fees) as kpi_value,\r  now() as update_time,\r  sum(fees) as self_value,\r  null as check_flag,\r  null as check_comm\r  from\r  (\r   select \r   am.month_id,\r   sum(pham_fees) as fees\r   from his_bi.dw_outp_patient_amount_m am\r   where 1=1\r   and am.month_id = c_monthlist.month_id\r   group by am.month_id\r   union\r   select \r   bm.month_id,\r   sum(pham_fees) as fees\r   from his_bi.dw_inp_patient_amount_m bm\r   where 1=1\r   and bm.month_id = c_monthlist.month_id\r   group by bm.month_id\r  )ff\r  group by ff.month_id;\r  \r --卫生材料收入\r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX03103';\r insert into his_bi.kpi_master_m  \r  select \r  ff.month_id,\r  'JX03103' as kpi_code,\r  sum(fees) as kpi_value,\r  now() as update_time,\r  sum(fees) as self_value,\r  null as check_flag,\r  null as check_comm\r  from\r  (\r   select \r   am.month_id,\r   sum(material_fees) as fees\r   from his_bi.dw_outp_patient_amount_m am\r   where 1=1\r   and am.month_id = c_monthlist.month_id\r   group by am.month_id\r   union\r   select \r   bm.month_id,\r   sum(material_fees) as fees\r   from his_bi.dw_inp_patient_amount_m bm\r   where 1=1\r   and bm.month_id = c_monthlist.month_id\r   group by bm.month_id\r  )ff\r  group by ff.month_id;  \r  \r --检查收入\r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX03104';\r insert into his_bi.kpi_master_m  \r  select \r  ff.month_id,\r  'JX03104' as kpi_code,\r  sum(fees) as kpi_value,\r  now() as update_time,\r  sum(fees) as self_value,\r  null as check_flag,\r  null as check_comm\r  from\r  (\r   select \r   am.month_id,\r   sum(check_fees) as fees\r   from his_bi.dw_outp_patient_amount_m am\r   where 1=1\r   and am.month_id = c_monthlist.month_id\r   group by am.month_id\r   union\r   select \r   bm.month_id,\r   sum(check_fees) as fees\r   from his_bi.dw_inp_patient_amount_m bm\r   where 1=1\r   and bm.month_id = c_monthlist.month_id\r   group by bm.month_id\r  )ff\r  group by ff.month_id; \r\r --化验收入\r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX03105';\r insert into his_bi.kpi_master_m  \r  select \r  ff.month_id,\r  'JX03105' as kpi_code,\r  sum(fees) as kpi_value,\r  now() as update_time,\r  sum(fees) as self_value,\r  null as check_flag,\r  null as check_comm\r  from\r  (\r   select \r   am.month_id,\r   sum(inspect_fees) as fees\r   from his_bi.dw_outp_patient_amount_m am\r   where 1=1\r   and am.month_id = c_monthlist.month_id\r   group by am.month_id\r   union\r   select \r   bm.month_id,\r   sum(inspect_fees) as fees\r   from his_bi.dw_inp_patient_amount_m bm\r   where 1=1\r   and bm.month_id = c_monthlist.month_id\r   group by bm.month_id\r  )ff\r  group by ff.month_id; \r\r\r  \r --医疗收入\r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX03106';\r insert into his_bi.kpi_master_m  \r  select \r  ff.month_id,\r  'JX03106' as kpi_code,\r  sum(fees) as kpi_value,\r  now() as update_time,\r  sum(fees) as self_value,\r  null as check_flag,\r  null as check_comm\r  from\r  (\r   select \r   am.month_id,\r   sum(total_fees) as fees\r   from his_bi.dw_outp_patient_amount_m am\r   where 1=1\r   and am.month_id = c_monthlist.month_id\r   group by am.month_id\r   union\r   select \r   bm.month_id,\r   sum(total_fees) as fees\r   from his_bi.dw_inp_patient_amount_m bm\r   where 1=1\r   and bm.month_id = c_monthlist.month_id\r   group by bm.month_id\r  )ff\r  group by ff.month_id;\r  \r  --辅助用药收入\r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX03201';\r insert into his_bi.kpi_master_m  \r  select \r  ff.month_id,\r  'JX03201' as kpi_code,\r  sum(fees) as kpi_value,\r  now() as update_time,\r  sum(fees) as self_value,\r  null as check_flag,\r  null as check_comm\r  from\r  (\r   select \r   am.month_id,\r   sum(support_fees) as fees\r   from his_bi.dw_outp_patient_amount_m am\r   where 1=1\r   and am.month_id = c_monthlist.month_id\r   group by am.month_id\r   union\r   select \r   bm.month_id,\r   sum(support_fees) as fees\r   from his_bi.dw_inp_patient_amount_m bm\r   where 1=1\r   and bm.month_id = c_monthlist.month_id\r   group by bm.month_id\r  )ff\r  group by ff.month_id;\r \r \r --药品总收入\r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX03202';\r insert into his_bi.kpi_master_m  \r  select \r  ff.month_id,\r  'JX03202' as kpi_code,\r  sum(fees) as kpi_value,\r  now() as update_time,\r  sum(fees) as self_value,\r  null as check_flag,\r  null as check_comm\r  from\r  (\r   select \r   am.month_id,\r   sum(pham_fees) as fees\r   from his_bi.dw_outp_patient_amount_m am\r   where 1=1\r   and am.month_id = c_monthlist.month_id\r   group by am.month_id\r   union\r   select \r   bm.month_id,\r   sum(pham_fees) as fees\r   from his_bi.dw_inp_patient_amount_m bm\r   where 1=1\r   and bm.month_id = c_monthlist.month_id\r   group by bm.month_id\r  )ff\r  group by ff.month_id;\r\r\r --总收入\r /*delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX03402';\r insert into his_bi.kpi_master_m  \r  select \r  ff.month_id,\r  'JX03402' as kpi_code,\r  sum(fees) as kpi_value,\r  now() as update_time,\r  sum(fees) as self_value,\r  null as check_flag,\r  null as check_comm\r  from\r  (\r   select \r   am.month_id,\r   sum(total_fees) as fees\r   from his_bi.dw_outp_patient_amount_m am\r   where 1=1\r   and am.month_id = c_monthlist.month_id\r   group by am.month_id\r   union\r   select \r   bm.month_id,\r   sum(total_fees) as fees\r   from his_bi.dw_inp_patient_amount_m bm\r   where 1=1\r   and bm.month_id = c_monthlist.month_id\r   group by bm.month_id\r  )ff\r  group by ff.month_id;*/\r\r\r --医疗收入\r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX0350101';\r insert into his_bi.kpi_master_m  \r  select \r  ff.month_id,\r  'JX0350101' as kpi_code,\r  sum(fees) as kpi_value,\r  now() as update_time,\r  sum(fees) as self_value,\r  null as check_flag,\r  null as check_comm\r  from\r  (\r   select \r   am.month_id,\r   sum(total_fees) as fees\r   from his_bi.dw_outp_patient_amount_m am\r   where 1=1\r   and am.month_id = c_monthlist.month_id\r   group by am.month_id\r   union\r   select \r   bm.month_id,\r   sum(total_fees) as fees\r   from his_bi.dw_inp_patient_amount_m bm\r   where 1=1\r   and bm.month_id = c_monthlist.month_id\r   group by bm.month_id\r  )ff\r  group by ff.month_id;\r \r  \r \r --医疗收入\r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX03701';\r insert into his_bi.kpi_master_m  \r  select \r  ff.month_id,\r  'JX03701' as kpi_code,\r  sum(fees) as kpi_value,\r  now() as update_time,\r  sum(fees) as self_value,\r  null as check_flag,\r  null as check_comm\r  from\r  (\r   select \r   am.month_id,\r   sum(total_fees) as fees\r   from his_bi.dw_outp_patient_amount_m am\r   where 1=1\r   and am.month_id = c_monthlist.month_id\r   group by am.month_id\r   union\r   select \r   bm.month_id,\r   sum(total_fees) as fees\r   from his_bi.dw_inp_patient_amount_m bm\r   where 1=1\r   and bm.month_id = c_monthlist.month_id\r   group by bm.month_id\r  )ff\r  group by ff.month_id;\r\r\r \r\r \r --门诊收入 \r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX03802';      \r insert into his_bi.kpi_master_m \r  select \r  am.month_id as month_id,\r  'JX03802' as kpi_code,\r  sum(am.total_fees) as kpi_value,\r  now() as update_time,\r  sum(am.total_fees) as self_value,\r  null as check_flag,\r  null as check_comm\r  from his_bi.dw_outp_patient_amount_m am\r  where 1=1\r  and am.month_id = c_monthlist.month_id\r  group by am.month_id;\r  \r  \r --门诊人次 \r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX03803';      \r insert into his_bi.kpi_master_m \r  select \r  am.month_id as month_id,\r  'JX03803' as kpi_code,\r  count(distinct outp_visit_id) as kpi_value,\r  now() as update_time,\r  count(distinct outp_visit_id) as self_value,\r  null as check_flag,\r  null as check_comm\r  from his_bi.dw_outp_patient_info_m am\r  where 1=1\r  and am.month_id = c_monthlist.month_id\r  group by am.month_id;\r\r --门诊患者次均药品费用 \r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX03901';      \r insert into his_bi.kpi_master_m   \r  select\r  c_monthlist.month_id,\r  'JX03901' as kpi_code,\r  case when sum(patient_num)<>0 then round(sum(pham_fees)/sum(patient_num),4) else null end  as kpi_value,\r  now() as update_time,\r  case when sum(patient_num)<>0 then round(sum(pham_fees)/sum(patient_num),4) else null end as self_value,\r  null as check_flag,\r  null as check_comm\r  from\r  (\r    select \r    am.month_id as month_id,\r    sum(am.pham_fees) as pham_fees,\r    0 as patient_num\r    from his_bi.dw_outp_patient_amount_m am\r    where 1=1\r    and am.month_id = c_monthlist.month_id\r    group by am.month_id\r    union\r    select \r    bm.month_id as month_id,\r    0 as pham_fees,\r    count(distinct bm.outp_visit_id) as patient_num\r    from his_bi.dw_outp_patient_info_m bm\r    where 1=1\r    and bm.month_id = c_monthlist.month_id\r    group by bm.month_id\r  )ff;\r  \r\r --门诊药品收入 \r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX03902';      \r insert into his_bi.kpi_master_m \r  select \r  am.month_id as month_id,\r  'JX03902' as kpi_code,\r  sum(am.pham_fees) as kpi_value,\r  now() as update_time,\r  sum(am.pham_fees) as self_value,\r  null as check_flag,\r  null as check_comm\r  from his_bi.dw_outp_patient_amount_m am\r  where 1=1\r  and am.month_id = c_monthlist.month_id\r  group by am.month_id;\r  \r --住院收入\r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX03002';\r insert into his_bi.kpi_master_m\r  select \r  am.month_id as month_id,\r  'JX03002' as kpi_code,\r  sum(am.total_fees) as kpi_value,\r  now() as update_time,\r  sum(am.total_fees) as self_value,\r  null as check_flag,\r  null as check_comm\r  from his_bi.dw_inp_patient_amount_m am\r  where 1=1\r  and am.month_id = c_monthlist.month_id\r  group by am.month_id;\r \r \r --门诊人次 \r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX03903';      \r insert into his_bi.kpi_master_m \r  select \r  am.month_id as month_id,\r  'JX03903' as kpi_code,\r  count(distinct outp_visit_id) as kpi_value,\r  now() as update_time,\r  count(distinct outp_visit_id) as self_value,\r  null as check_flag,\r  null as check_comm\r  from his_bi.dw_outp_patient_info_m am\r  where 1=1\r  and am.month_id = c_monthlist.month_id\r  group by am.month_id;\r \r --出院均次医药费用 \r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX04001';      \r insert into his_bi.kpi_master_m \r  select \r  am.month_id as month_id,\r  'JX04001' as kpi_code,\r  round(sum(am.total_fees)/count(distinct am.pai_visit_id),2) as kpi_value,\r  now() as update_time,\r  round(sum(am.total_fees)/count(distinct am.pai_visit_id),2) as self_value,\r  null as check_flag,\r  null as check_comm\r  from his_bi.dw_inp_patient_info_m am\r  where 1=1\r  and am.month_id = c_monthlist.month_id\r  group by am.month_id;\r  \r  \r --住院收入\r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX04002';\r insert into his_bi.kpi_master_m\r  select \r  am.month_id as month_id,\r  'JX04002' as kpi_code,\r  sum(am.total_fees) as kpi_value,\r  now() as update_time,\r  sum(am.total_fees) as self_value,\r  null as check_flag,\r  null as check_comm\r  from his_bi.dw_inp_patient_amount_m am\r  where 1=1\r  and am.month_id = c_monthlist.month_id\r  group by am.month_id;\r \r    \r --实际占用总床日数\r  delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX04003';\r insert into his_bi.kpi_master_m\r  select \r  month_id,\r  'JX04003' as kpi_code,\r  sum(d.in_days) as kpi_value,\r  now() as update_time,\r  sum(d.in_days) as self_value,\r  null as check_flag,\r  null as check_comm\r  from his_bi.dw_inp_patient_info_m d \r  where 1=1\r  and month_id = c_monthlist.month_id\r  group by month_id;\r \r\r --出院者占用总床日\r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX04004'; \r insert into his_bi.kpi_master_m\r  select \r  month_id,\r  'JX04004' as kpi_code,\r  sum(d.in_days) as kpi_value,\r  now() as update_time,\r  sum(d.in_days) as self_value,\r  null as check_flag,\r  null as check_comm\r  from his_bi.dw_inp_patient_info_m d \r  where 1=1\r  and month_id = c_monthlist.month_id\r  group by month_id;\r \r \r --出院人数\r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX04005';      \r insert into his_bi.kpi_master_m\r  select \r  month_id,\r  'JX04005' as kpi_code,\r  COALESCE(count(distinct d.pai_visit_id),0) as kpi_value,\r  now() as update_time,\r  COALESCE(count(distinct d.pai_visit_id),0) as self_value,\r  null as check_flag,\r  null as check_comm\r  from his_bi.dw_inp_patient_info_m d \r  where 1=1\r  and month_id = c_monthlist.month_id\r  group by month_id; \r\r --出院患者次均药品费用\r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX04101';      \r insert into his_bi.kpi_master_m   \r  select\r  c_monthlist.month_id,\r  'JX04101' as kpi_code,\r  round(sum(pham_fees)/sum(patient_num),2) as kpi_value,\r  now() as update_time,\r  round(sum(pham_fees)/sum(patient_num),2) as self_value,\r  null as check_flag,\r  null as check_comm\r  from\r  (\r    select \r    am.month_id as month_id,\r    sum(am.pham_fees) as pham_fees,\r    0 as patient_num\r    from his_bi.dw_inp_patient_amount_m am\r    where 1=1\r    and am.month_id = c_monthlist.month_id\r    group by am.month_id\r    union\r    select \r    bm.month_id as month_id,\r    0 as pham_fees,\r    count(distinct bm.pai_visit_id) as patient_num\r    from his_bi.dw_inp_patient_info_m bm\r    where 1=1\r    and bm.month_id = c_monthlist.month_id\r    group by bm.month_id\r  )ff;\r\r\r\r --出院患者药品费用\r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX04102';\r insert into his_bi.kpi_master_m\r  select \r  am.month_id as month_id,\r  'JX04102' as kpi_code,\r  sum(am.pham_fees) as kpi_value,\r  now() as update_time,\r  sum(am.pham_fees) as self_value,\r  null as check_flag,\r  null as check_comm\r  from his_bi.dw_inp_patient_amount_m am\r  where 1=1\r  and am.month_id = c_monthlist.month_id\r  group by am.month_id;\r  \r --实际占用总床日数\r  delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX04103';\r insert into his_bi.kpi_master_m\r  select \r  month_id,\r  'JX04103' as kpi_code,\r  sum(d.in_days) as kpi_value,\r  now() as update_time,\r  sum(d.in_days) as self_value,\r  null as check_flag,\r  null as check_comm\r  from his_bi.dw_inp_patient_info_m d \r  where 1=1\r  and month_id = c_monthlist.month_id\r  group by month_id;\r \r\r --出院者占用总床日\r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX04104'; \r insert into his_bi.kpi_master_m\r  select \r  month_id,\r  'JX04104' as kpi_code,\r  sum(d.in_days) as kpi_value,\r  now() as update_time,\r  sum(d.in_days) as self_value,\r  null as check_flag,\r  null as check_comm\r  from his_bi.dw_inp_patient_info_m d \r  where 1=1\r  and month_id = c_monthlist.month_id\r  group by month_id;\r\r\r --出院人数\r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX04105';      \r insert into his_bi.kpi_master_m\r  select \r  month_id,\r  'JX04105' as kpi_code,\r  COALESCE(count(distinct d.pai_visit_id),0) as kpi_value,\r  now() as update_time,\r  COALESCE(count(distinct d.pai_visit_id),0) as self_value,\r  null as check_flag,\r  null as check_comm\r  from his_bi.dw_inp_patient_info_m d \r  where 1=1\r  and month_id = c_monthlist.month_id\r  group by month_id; \r  \r ---门诊患者基本药物处方占比\r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX018';\r insert into his_bi.kpi_master_m\r  select\r  t1.month_id,\r  'JX018' as kpi_code,\r  round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as kpi_value,\r  now() as update_time,\r  round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as self_value,\r  null as check_flag,\r  null as check_comm\r  from\r  his_bi.kpi_master_m t1\r  left join his_bi.kpi_master_m t2 on t1.kpi_code = t2.kpi_code and t1.month_id = t2.month_id \r  and t2.kpi_code='JX01801'\r  where\r  t1.month_id=c_monthlist.month_id\r  and t1.kpi_code in('JX01801','JX01802')\r  group by \r  t1.month_id;\r\r ---19.住院患者基本药物使用率\r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX019';\r insert into his_bi.kpi_master_m\r  select\r  t1.month_id,\r  'JX019' as kpi_code,\r  round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as kpi_value,\r  now() as update_time,\r  round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as self_value,\r  null as check_flag,\r  null as check_comm\r  from\r  his_bi.kpi_master_m t1\r  left join his_bi.kpi_master_m t2 on t1.kpi_code = t2.kpi_code and t1.month_id = t2.month_id \r  and t2.kpi_code='JX01901'\r  where\r  t1.month_id=c_monthlist.month_id\r  and t1.kpi_code in('JX01901','JX01902')\r  group by \r  t1.month_id;\r\r ---门诊患者预约后平均等待时间\r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX023';\r insert into his_bi.kpi_master_m\r  select\r  left(t1.jzsj,6) as month_id,\r  'JX023' as kpi_code,\r  COALESCE(avg(t1.qd_jz),0) as kpi_value,\r  now() as update_time,\r  COALESCE(avg(t1.qd_jz),0)as self_value,\r  null as check_flag,\r  null as check_comm\r  from\r  his_bi.dw_outp_fsjz t1\r  where\r  left(t1.jzsj,6)=c_monthlist.month_id\r  and t1.qd_jz<1460\r  group by \r  left(t1.jzsj,6);\r\r ---27.门诊收入占医疗收入比例\r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX027';\r insert into his_bi.kpi_master_m\r  select\r  t1.month_id,\r  'JX027' as kpi_code,\r  round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as kpi_value,\r  now() as update_time,\r  round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as self_value,\r  null as check_flag,\r  null as check_comm\r  from\r  his_bi.kpi_master_m t1\r  left join his_bi.kpi_master_m t2 on t1.kpi_code = t2.kpi_code and t1.month_id = t2.month_id \r  and t2.kpi_code='JX02701'\r  where\r  t1.month_id=c_monthlist.month_id\r  and t1.kpi_code in('JX02701','JX02702')\r  group by \r  t1.month_id;\r\r ---29.住院收入占医疗收入比例\r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX029';\r insert into his_bi.kpi_master_m\r  select\r  t1.month_id,\r  'JX029' as kpi_code,\r  round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as kpi_value,\r  now() as update_time,\r  round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as self_value,\r  null as check_flag,\r  null as check_comm\r  from\r  his_bi.kpi_master_m t1\r  left join his_bi.kpi_master_m t2 on t1.kpi_code = t2.kpi_code and t1.month_id = t2.month_id \r  and t2.kpi_code='JX02901'\r  where\r  t1.month_id=c_monthlist.month_id\r  and t1.kpi_code in('JX02901','JX02902')\r  group by \r  t1.month_id;\r\r ---31.医疗服务收入（不含药品、耗材、检查检验收入）占医疗收入比例▲\r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX031';\r insert into his_bi.kpi_master_m\r  select\r  t1.month_id,\r  'JX031' as kpi_code,\r  round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as kpi_value,\r  now() as update_time,\r  round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as self_value,\r  null as check_flag,\r  null as check_comm\r  from\r  his_bi.kpi_master_m t1\r  left join his_bi.kpi_master_m t2 on t1.kpi_code = t2.kpi_code and t1.month_id = t2.month_id \r  and t2.kpi_code='JX03101'\r  where\r  t1.month_id=c_monthlist.month_id\r  and t1.kpi_code in('JX03101','JX03106')\r  group by \r  t1.month_id;\r\r ---32.辅助用药收入占比\r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX032';\r insert into his_bi.kpi_master_m\r  select\r  t1.month_id,\r  'JX032' as kpi_code,\r  round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as kpi_value,\r  now() as update_time,\r  round(COALESCE(max(t2.kpi_value),0)/max(t1.kpi_value),5)*100 as self_value,\r  null as check_flag,\r  null as check_comm\r  from\r  his_bi.kpi_master_m t1\r  left join his_bi.kpi_master_m t2 on t1.kpi_code = t2.kpi_code and t1.month_id = t2.month_id \r  and t2.kpi_code='JX03201'\r  where\r  t1.month_id=c_monthlist.month_id\r  and t1.kpi_code in('JX03201','JX03202')\r  group by \r  t1.month_id; \r\r --医疗收入增幅此代码只能跑2020年全年的同比，步入21年后需要更改底表代码\r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX037';\r insert into his_bi.kpi_master_m  \r  select\rc_monthlist.month_id as month_id,\r'JX037' as kpi_code,\rround((sum(t2.amount_value)-sum(t2.last_amount_value))*1.00/sum(t2.last_amount_value)*100,5) as kpi_value,\rnow() as update_time,\rround((sum(t2.amount_value)-sum(t2.last_amount_value))*1.00/sum(t2.last_amount_value)*100,5) as self_value,\rnull as check_flag  ,\rnull as check_comm\rfrom\r(select\rreplace(left(month_id::text,7),'-','') as month_id,\r(last_mz_amount+last_zy_amount) as last_amount_value,\r0 as amount_value\rfrom \rhis_bi.dw_last_zb_m \rwhere\rreplace(left(month_id::text,7),'-','') =  to_char(to_date(left(c_monthlist.month_id,4), 'yyyy') -  interval '1' year,'yyyy')||right(c_monthlist.month_id,2)\runion all\rselect\rmonth_id,\r0 as last_amount_value,\rkpi_value as amount_value\rfrom\rhis_bi.kpi_master_m\rwhere\rmonth_id = c_monthlist.month_id\rand kpi_code='JX03106') t2;\r\r  \r  --门诊次均费用增幅\r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX038';      \r insert into his_bi.kpi_master_m \r  select\rc_monthlist.month_id as month_id,\r'JX038' as kpi_code,\rround((sum(t2.amount_value)-sum(t2.last_amount_value))*1.00/sum(t2.last_amount_value)*100,5) as kpi_value,\rnow() as update_time,\rround((sum(t2.amount_value)-sum(t2.last_amount_value))*1.00/sum(t2.last_amount_value)*100,5) as self_value,\rnull as check_flag  ,\rnull as check_comm\rfrom\r(select\rreplace(left(month_id::text,7),'-','') as month_id,\r(last_mzjc_fee) as last_amount_value,\r0 as amount_value\rfrom \rhis_bi.dw_last_zb_m \rwhere\rreplace(left(month_id::text,7),'-','') =  to_char(to_date(left(c_monthlist.month_id,4), 'yyyy') -  interval '1' year,'yyyy')||right(c_monthlist.month_id,2)\runion all\rselect\rmonth_id,\r0 as last_amount_value,\rspecial_value as amount_value\rfrom\rhis_bi.special_master_m\rwhere\rmonth_id = c_monthlist.month_id\rand special_code='SP008010102') t2;\r\r --门诊患者次均医药费用 \r delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX03801';      \r insert into his_bi.kpi_master_m \r  select \r  am.month_id as month_id,\r  'JX03801' as kpi_code,\r  round(sum(am.total_fees)/count(distinct am.outp_visit_id),2) as kpi_value,\r  now() as update_time,\r  round(sum(am.total_fees)/count(distinct am.outp_visit_id),2) as self_value,\r  null as check_flag,\r  null as check_comm\r  from his_bi.dw_outp_patient_info_m am\r  where 1=1\r  and am.month_id = c_monthlist.month_id\r  group by am.month_id;\r  \r ---住院次均药品费用增幅\r  delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX041';\r insert into his_bi.kpi_master_m\rselect\r    c_monthlist.month_id,\r    'JX041' as kpi_code ,\r    coalesce(round(((sum(case when t1.month_id = c_monthlist.month_id then t1.kpi_value end)-\r                     sum(case when t1.month_id = to_char(to_date(left(c_monthlist.month_id,4), 'yyyy') -  interval '1' year,'yyyy')||right(c_monthlist.month_id,2) then t1.kpi_value end))/\r                    sum(case when t1.month_id =  to_char(to_date(left(c_monthlist.month_id,4), 'yyyy') -  interval '1' year,'yyyy')||right(c_monthlist.month_id,2) then t1.kpi_value end))*100,5),0) as kpi_value,\r    now() as update_time ,\r    coalesce(round(((sum(case when t1.month_id = c_monthlist.month_id then t1.kpi_value end)-\r                     sum(case when t1.month_id = to_char(to_date(left(c_monthlist.month_id,4), 'yyyy') -  interval '1' year,'yyyy')||right(c_monthlist.month_id,2) then t1.kpi_value end))/\r                    sum(case when t1.month_id =  to_char(to_date(left(c_monthlist.month_id,4), 'yyyy') -  interval '1' year,'yyyy')||right(c_monthlist.month_id,2) then t1.kpi_value end))*100,5),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere t1.kpi_code='JX04101'\r  and  to_date(left(t1.month_id,4),'yyyy')>= to_date(left(c_monthlist.month_id,4), 'yyyy') -  interval '1' year\r  and to_date(left(t1.month_id,4),'yyyy')< to_date(left(c_monthlist.month_id,4), 'yyyy') +  interval '1' year;\r\r\r\r  ---住院次均费用增幅\r  delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX040';  \r  insert into his_bi.kpi_master_m \r    select\rc_monthlist.month_id as month_id,\r'JX040' as kpi_code,\rround((sum(t2.amount_value)-sum(t2.last_amount_value))*1.00/sum(t2.last_amount_value)*100,5) as kpi_value,\rnow() as update_time,\rround((sum(t2.amount_value)-sum(t2.last_amount_value))*1.00/sum(t2.last_amount_value)*100,5) as self_value,\rnull as check_flag  ,\rnull as check_comm\rfrom\r(select\rreplace(left(month_id::text,7),'-','') as month_id,\r(last_zyjc_fee) as last_amount_value,\r0 as amount_value\rfrom \rhis_bi.dw_last_zb_m \rwhere\rreplace(left(month_id::text,7),'-','') =  to_char(to_date(left(c_monthlist.month_id,4), 'yyyy') -  interval '1' year,'yyyy')||right(c_monthlist.month_id,2)\runion all\rselect\rmonth_id,\r0 as last_amount_value,\rspecial_value as amount_value\rfrom\rhis_bi.special_master_m\rwhere\rmonth_id = c_monthlist.month_id\rand special_code='SP008030101') t2;\r\r\r  --门诊次均费用增幅\r  delete from his_bi.kpi_master_m where month_id = c_monthlist.month_id and kpi_code = 'JX039';   \r insert into his_bi.kpi_master_m\rselect\r    c_monthlist.month_id,\r    'JX039' as kpi_code ,\r    coalesce(round(((sum(case when t1.month_id = c_monthlist.month_id then t1.kpi_value end)-\r                     sum(case when t1.month_id = to_char(to_date(left(c_monthlist.month_id,4), 'yyyy') -  interval '1' year,'yyyy')||right(c_monthlist.month_id,2) then t1.kpi_value end))/\r                    sum(case when t1.month_id =  to_char(to_date(left(c_monthlist.month_id,4), 'yyyy') -  interval '1' year,'yyyy')||right(c_monthlist.month_id,2) then t1.kpi_value end))*100,5),0) as kpi_value,\r    now() as update_time ,\r    coalesce(round(((sum(case when t1.month_id = c_monthlist.month_id then t1.kpi_value end)-\r                     sum(case when t1.month_id = to_char(to_date(left(c_monthlist.month_id,4), 'yyyy') -  interval '1' year,'yyyy')||right(c_monthlist.month_id,2) then t1.kpi_value end))/\r                    sum(case when t1.month_id =  to_char(to_date(left(c_monthlist.month_id,4), 'yyyy') -  interval '1' year,'yyyy')||right(c_monthlist.month_id,2) then t1.kpi_value end))*100,5),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere t1.kpi_code='JX03901'\r  and  to_date(left(t1.month_id,4),'yyyy')>= to_date(left(c_monthlist.month_id,4), 'yyyy') -  interval '1' year\r  and to_date(left(t1.month_id,4),'yyyy')< to_date(left(c_monthlist.month_id,4), 'yyyy') +  interval '1' year;\r  ""]",['三级公立绩效指标函数\r   ']
222,his_bi,fun_dwd_D00228_d_16709,"
/***
函数名称：并发症---手术后生理代谢紊乱
    作用：统计某天住院患者并发症---手术后生理代谢紊乱
  开发人：wy 2020-05-23
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00228  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00228';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00228';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
	select 
		'D00228' as key,
		1 as value,
		pt.patient_id,
		pt.visit_id,
		pt.pai_visit_id,
		Now () as insert_date,
		'并发症---手术后生理代谢紊乱' remark,
		to_char(md.cyrq,'yyyymmdd') as st_date
	from his_bi.ods_patient_medical_record md
	inner join his_bi.ods_patient_diag_info hf on md.bah = hf.patient_id and md.zycs = hf.visit_id
	inner join his_bi.pts_pai_visit pt on md.bah = pt.patient_id and md.zycs = pt.visit_id
	where exists
	(
			select tf.icd_code
			from his_bi.dim_oper_other_info tf
			where tf.icd_describe like '%代谢紊乱%'
			and tf.icd_type = '手术并发症'
			and hf.diagdiseasecode = tf.icd_code
	)
	and md.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
	and md.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1
  ; 
	
	
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00228'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00228';\r \r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r select \r  'D00228' as key,\r  1 as value,\r  pt.patient_id,\r  pt.visit_id,\r  pt.pai_visit_id,\r  Now () as insert_date,\r  '并发症---手术后生理代谢紊乱' remark,\r  to_char(md.cyrq,'yyyymmdd') as st_date\r from his_bi.ods_patient_medical_record md\r inner join his_bi.ods_patient_diag_info hf on md.bah = hf.patient_id and md.zycs = hf.visit_id\r inner join his_bi.pts_pai_visit pt on md.bah = pt.patient_id and md.zycs = pt.visit_id\r where exists\r (\r   select tf.icd_code\r   from his_bi.dim_oper_other_info tf\r   where tf.icd_describe like '%代谢紊乱%'\r   and tf.icd_type = '手术并发症'\r   and hf.diagdiseasecode = tf.icd_code\r )\r and md.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')\r and md.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1\r  ; \r \r \r ""]",['并发症---手术后生理代谢紊乱\r   ']
223,his_bi,fun_dwd_D00229_d_16710,"
/***
函数名称：并发症---手术后呼吸衰竭
    作用：统计某天住院患者并发症---手术后呼吸衰竭
  开发人：wy 2020-05-23
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00229  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00229';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00229';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
	select 
		'D00229' as key,
		1 as value,
		pt.patient_id,
		pt.visit_id,
		pt.pai_visit_id,
		Now () as insert_date,
		'并发症---手术后呼吸衰竭' remark,
		to_char(md.cyrq,'yyyymmdd') as st_date
	from his_bi.ods_patient_medical_record md
	inner join his_bi.ods_patient_diag_info hf on md.bah = hf.patient_id and md.zycs = hf.visit_id
	inner join his_bi.pts_pai_visit pt on md.bah = pt.patient_id and md.zycs = pt.visit_id
	where exists
	(
			select tf.icd_code
			from his_bi.dim_oper_other_info tf
			where tf.icd_describe like '%呼吸衰竭%'
			and tf.icd_type = '手术并发症'
			and hf.diagdiseasecode = tf.icd_code
	)
	and md.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
	and md.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1
  ; 
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00229'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00229';\r \r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r select \r  'D00229' as key,\r  1 as value,\r  pt.patient_id,\r  pt.visit_id,\r  pt.pai_visit_id,\r  Now () as insert_date,\r  '并发症---手术后呼吸衰竭' remark,\r  to_char(md.cyrq,'yyyymmdd') as st_date\r from his_bi.ods_patient_medical_record md\r inner join his_bi.ods_patient_diag_info hf on md.bah = hf.patient_id and md.zycs = hf.visit_id\r inner join his_bi.pts_pai_visit pt on md.bah = pt.patient_id and md.zycs = pt.visit_id\r where exists\r (\r   select tf.icd_code\r   from his_bi.dim_oper_other_info tf\r   where tf.icd_describe like '%呼吸衰竭%'\r   and tf.icd_type = '手术并发症'\r   and hf.diagdiseasecode = tf.icd_code\r )\r and md.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')\r and md.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1\r  ; \r \r ""]",['并发症---手术后呼吸衰竭\r   ']
224,his_bi,fun_dwd_D00230_d_16711,"
/***
函数名称：新生儿窒息人数
    作用：统计某天住院患者新生儿窒息人数
  开发人：wrsong 2020-05-23
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00230  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

***/
DECLARE
    c_daylist record;
    o_start_date varchar;
    o_end_date varchar;
    i_start_date varchar;
    i_end_date varchar;
    i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
    /*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
      from his_bi.dwd_inp_medical_d 
     where key = 'D00230';
     
  if(i_count = 0)
      then 
          i_start_date := '20200101';
            --raise notice '0 i_start_date is: %', i_start_date;
    else if(i_count > 0)
      then
          i_start_date := i_end_date;
            --raise notice '1 i_start_date is: %', i_start_date;
  end if;
    end if;
        
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
    /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
      then 
        o_start_date := i_start_date;
        o_end_date := i_end_date;
            --raise notice '2 o_start_date is: %', o_start_date;
            --raise notice '2 o_end_date is: %', o_end_date;
    else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
    /*PG function 如果参入任何参数，那么以实际入参为准*/
      then 
          o_start_date := v_start_date;
        o_end_date := v_end_date;
            --raise notice '3 o_start_date is: %', o_start_date;
            --raise notice '3 o_end_date is: %', o_end_date;
    end if;
    end if;
    
    for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
    loop 
    
    --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
    
    delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00230';
    
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
                                                                             remark,st_date) 
  select 'D00230' as key,
          1 as value,
          hf.patient_id,
          hf.visit_id,
          t1.pai_visit_id,
          Now () as insert_date,
          '新生儿窒息' remark ,
          to_char(ha.cyrq,'yyyymmdd') as st_date
    from his_bi.ODS_PATIENT_MEDICAL_RECORD ha
		left join  his_bi.ods_patient_diag_info hf on ha.bah = hf.patient_id and ha.zycs = hf.visit_id
		left join his_bi.pts_pai_visit t1 on ha.bah = t1.patient_id and ha.zycs = t1.visit_id
   where exists
          (
              select tf.icd_code
              from his_bi.dim_oper_other_info tf
              where tf.icd_describe like '%新生儿窒息%'
              and tf.icd_type = '新生儿窒息'
              and hf.diagdiseasecode = tf.icd_code
          )
     and ha.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
     and ha.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 ; 
     end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00230'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00230';\r    \r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                                                                             remark,st_date) \r  select 'D00230' as key,\r          1 as value,\r          hf.patient_id,\r          hf.visit_id,\r          t1.pai_visit_id,\r          Now () as insert_date,\r          '新生儿窒息' remark ,\r          to_char(ha.cyrq,'yyyymmdd') as st_date\r    from his_bi.ODS_PATIENT_MEDICAL_RECORD ha\r  left join  his_bi.ods_patient_diag_info hf on ha.bah = hf.patient_id and ha.zycs = hf.visit_id\r  left join his_bi.pts_pai_visit t1 on ha.bah = t1.patient_id and ha.zycs = t1.visit_id\r   where exists\r          (\r              select tf.icd_code\r              from his_bi.dim_oper_other_info tf\r              where tf.icd_describe like '%新生儿窒息%'\r              and tf.icd_type = '新生儿窒息'\r              and hf.diagdiseasecode = tf.icd_code\r          )\r     and ha.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')\r     and ha.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 ; \r    ""]",['新生儿窒息人数\r   ']
225,his_bi,fun_dwd_D00231_d_16712,"
/***
函数名称：产伤——新生儿
    作用：统计某天住院患者产伤——新生儿
  开发人：wy 2020-05-23
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00231  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00231';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00231';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
  select 
		'D00231' as key,
		1 as value,
		pt.patient_id,
		pt.visit_id,
		pt.pai_visit_id,
		Now () as insert_date,
		'产伤——新生儿' remark,
		to_char(md.cyrq,'yyyymmdd') as st_date
	from his_bi.ods_patient_medical_record md
	inner join his_bi.ods_patient_diag_info hf on md.bah = hf.patient_id and md.zycs = hf.visit_id
	inner join his_bi.pts_pai_visit pt on md.bah = pt.patient_id and md.zycs = pt.visit_id
	where exists
	(
			select tf.icd_code
			from his_bi.dim_oper_other_info tf
			where tf.icd_describe like '%新生儿产伤%'
			and tf.icd_type = '产伤'
			and hf.diagdiseasecode = tf.icd_code
	)
	and md.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
	and md.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1
  ; 
 
	 end loop;
   RETURN 'SUCCESS';
END;
  ",['D00231'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00231';\r \r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r  select \r  'D00231' as key,\r  1 as value,\r  pt.patient_id,\r  pt.visit_id,\r  pt.pai_visit_id,\r  Now () as insert_date,\r  '产伤——新生儿' remark,\r  to_char(md.cyrq,'yyyymmdd') as st_date\r from his_bi.ods_patient_medical_record md\r inner join his_bi.ods_patient_diag_info hf on md.bah = hf.patient_id and md.zycs = hf.visit_id\r inner join his_bi.pts_pai_visit pt on md.bah = pt.patient_id and md.zycs = pt.visit_id\r where exists\r (\r   select tf.icd_code\r   from his_bi.dim_oper_other_info tf\r   where tf.icd_describe like '%新生儿产伤%'\r   and tf.icd_type = '产伤'\r   and hf.diagdiseasecode = tf.icd_code\r )\r and md.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')\r and md.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1\r  ; \r \r ""]",['产伤——新生儿\r   ']
226,his_bi,fun_dwd_D00232_d_16713,"
/***
函数名称：新生儿特大婴儿人数
    作用：统计某天住院患者新生儿特大婴儿人数
  开发人：wrsong 2020-05-23
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00232  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

***/
DECLARE
    c_daylist record;
    o_start_date varchar;
    o_end_date varchar;
    i_start_date varchar;
    i_end_date varchar;
    i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
    /*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
      from his_bi.dwd_inp_medical_d 
     where key = 'D00232';
     
  if(i_count = 0)
      then 
          i_start_date := '20200101';
            --raise notice '0 i_start_date is: %', i_start_date;
    else if(i_count > 0)
      then
          i_start_date := i_end_date;
            --raise notice '1 i_start_date is: %', i_start_date;
  end if;
    end if;
        
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
    /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
      then 
        o_start_date := i_start_date;
        o_end_date := i_end_date;
            --raise notice '2 o_start_date is: %', o_start_date;
            --raise notice '2 o_end_date is: %', o_end_date;
    else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
    /*PG function 如果参入任何参数，那么以实际入参为准*/
      then 
          o_start_date := v_start_date;
        o_end_date := v_end_date;
            --raise notice '3 o_start_date is: %', o_start_date;
            --raise notice '3 o_end_date is: %', o_end_date;
    end if;
    end if;
    
    for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
    loop 
    
    --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
    
    delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00232';
    
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
                                                                             remark,st_date) 
   select distinct 'D00232' as key,
          1 as value,
          hf.patient_id,
          hf.visit_id,
          t1.pai_visit_id,
          Now () as insert_date,
          '巨大儿及低出生体重儿' remark ,
          to_char(ha.cyrq,'yyyymmdd') as st_date
     from his_bi.ODS_PATIENT_MEDICAL_RECORD ha
		left join  his_bi.ods_patient_diag_info hf on ha.bah = hf.patient_id and ha.zycs = hf.visit_id
left join his_bi.pts_pai_visit t1 on ha.bah = t1.patient_id and ha.zycs = t1.visit_id
    where exists(
            select tf.icd_code
            from his_bi.dim_oper_other_info tf
            where tf.icd_describe like '%巨大儿及低出生体重儿%'
            and tf.icd_type = '巨大儿及低出生体重儿'
            and hf.diagdiseasecode = tf.icd_code)
      and ha.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd') ----出院日期
      and ha.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 
        ; 
     end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00232'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00232';\r    \r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                                                                             remark,st_date) \r   select distinct 'D00232' as key,\r          1 as value,\r          hf.patient_id,\r          hf.visit_id,\r          t1.pai_visit_id,\r          Now () as insert_date,\r          '巨大儿及低出生体重儿' remark ,\r          to_char(ha.cyrq,'yyyymmdd') as st_date\r     from his_bi.ODS_PATIENT_MEDICAL_RECORD ha\r  left join  his_bi.ods_patient_diag_info hf on ha.bah = hf.patient_id and ha.zycs = hf.visit_id\rleft join his_bi.pts_pai_visit t1 on ha.bah = t1.patient_id and ha.zycs = t1.visit_id\r    where exists(\r            select tf.icd_code\r            from his_bi.dim_oper_other_info tf\r            where tf.icd_describe like '%巨大儿及低出生体重儿%'\r            and tf.icd_type = '巨大儿及低出生体重儿'\r            and hf.diagdiseasecode = tf.icd_code)\r      and ha.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd') ----出院日期\r      and ha.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 \r        ; \r    ""]",['新生儿特大婴儿人数\r   ']
227,his_bi,fun_dwd_D00233_d_16714,"
/***
函数名称：产伤——器械辅助阴道分娩
    作用：统计某天住院患者产伤——器械辅助阴道分娩
  开发人：wrsong 2020-05-24
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00233  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
  c_daylist record;
  o_start_date varchar;
  o_end_date varchar;
  i_start_date varchar;
  i_end_date varchar;
  i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  /*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
    from his_bi.dwd_inp_medical_d 
   where key = 'D00233';
   
  if(i_count = 0)
    then 
      i_start_date := '20200101';
      --raise notice '0 i_start_date is: %', i_start_date;
  else if(i_count > 0)
    then
      i_start_date := i_end_date;
      --raise notice '1 i_start_date is: %', i_start_date;
  end if;
  end if;
    
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
  /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
    then 
      o_start_date := i_start_date;
      o_end_date := i_end_date;
      --raise notice '2 o_start_date is: %', o_start_date;
      --raise notice '2 o_end_date is: %', o_end_date;
  else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
  /*PG function 如果参入任何参数，那么以实际入参为准*/
    then 
      o_start_date := v_start_date;
      o_end_date := v_end_date;
      --raise notice '3 o_start_date is: %', o_start_date;
      --raise notice '3 o_end_date is: %', o_end_date;
  end if;
  end if;
  
  for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
  loop 
  
  --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
  
  delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00233';
  
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
                                       remark,st_date) 
   select 'D00233' as key,
          1 as value,
          hf.patient_id,
          hf.visit_id,
          t1.pai_visit_id,
          Now () as insert_date,
          '器械分娩' remark ,
          to_char(ha.cyrq,'yyyymmdd') as st_date
    from his_bi.ODS_PATIENT_MEDICAL_RECORD ha
    left join  his_bi.ods_patient_diag_info hf on ha.bah = hf.patient_id and ha.zycs = hf.visit_id
    left join his_bi.pts_pai_visit t1 on ha.bah = t1.patient_id and ha.zycs = t1.visit_id
   where 1=1/*exists
          (
              select tf.icd_code
              from his_bi.dim_oper_other_info tf
              where tf.icd_describe like '%新生儿窒息%'
              and tf.icd_type = '新生儿窒息'
              and hf.diagdiseasecode = tf.icd_code
          )*/
     and (hf.diagdiseasecode like 'O81%' or hf.diagdiseasecode like 'O84.1%')---器械分娩
     and ha.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
     and ha.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 ; 
 
   end loop;
   RETURN 'SUCCESS';
END;
  ",['D00233'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00233';\r  \r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                                       remark,st_date) \r   select 'D00233' as key,\r          1 as value,\r          hf.patient_id,\r          hf.visit_id,\r          t1.pai_visit_id,\r          Now () as insert_date,\r          '器械分娩' remark ,\r          to_char(ha.cyrq,'yyyymmdd') as st_date\r    from his_bi.ODS_PATIENT_MEDICAL_RECORD ha\r    left join  his_bi.ods_patient_diag_info hf on ha.bah = hf.patient_id and ha.zycs = hf.visit_id\r    left join his_bi.pts_pai_visit t1 on ha.bah = t1.patient_id and ha.zycs = t1.visit_id\r   where 1=1/*exists\r          (\r              select tf.icd_code\r              from his_bi.dim_oper_other_info tf\r              where tf.icd_describe like '%新生儿窒息%'\r              and tf.icd_type = '新生儿窒息'\r              and hf.diagdiseasecode = tf.icd_code\r          )*/\r     and (hf.diagdiseasecode like 'O81%' or hf.diagdiseasecode like 'O84.1%')---器械分娩\r     and ha.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')\r     and ha.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 ; \r \r  ""]",['产伤——器械辅助阴道分娩\r   ']
228,his_bi,fun_dwd_D00234_d_16715,"
/***
函数名称：预约途径
    作用：统计：预约途径
  开发人：hamter.lize 日期2020-05-07
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00234 根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
    c_daylist record;
    o_start_date varchar;
    o_end_date varchar;
    i_start_date varchar;
    i_end_date varchar;
    i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
      from his_bi.dwd_outp_work_d
     where key = 'D00234';
     
  if(i_count = 0)
      then 
          i_start_date := '20200101';
            --raise notice '0 i_start_date is: %', i_start_date;
    else if(i_count > 0)
      then
          i_start_date := i_end_date;
            --raise notice '1 i_start_date is: %', i_start_date;
  end if;
    end if;
        
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
    /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
      then 
        o_start_date := i_start_date;
        o_end_date := i_end_date;
            --raise notice '2 o_start_date is: %', o_start_date;
            --raise notice '2 o_end_date is: %', o_end_date;
    else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
    /*PG function 如果参入任何参数，那么以实际入参为准*/
      then 
          o_start_date := v_start_date;
        o_end_date := v_end_date;
            --raise notice '3 o_start_date is: %', o_start_date;
            --raise notice '3 o_end_date is: %', o_end_date;
    end if;
    end if;
    
    for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
    loop 
    
    --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
    
    delete from his_bi.dwd_outp_work_d where st_date = c_daylist.day_id and key = 'D00234';
    
  INSERT into his_bi.dwd_outp_work_d(key,value,dept_code,insert_date,remark,st_date,outp_visit_id,patient_id,visit_id) 
  select 
         'D00234',
          case b.""operator"" 
           when '手机APP' then 3
           when '微信公众号' then 9
           when 'WAPP' then 1
             else
                0
              end  ,
				 a.dept_code,
				 now(),
				 '预约途径',
				 to_char(a.outp_date,'yyyymmdd') AS st_date,
				 a.outp_visit_id,
				 a.patient_id,
				 a.visit_id
	from his_bi.pts_outp_patient_visit a
	inner join his_bi.pts_outp_patient_reserve b on a.outp_visit_id=b.outp_visit_id
	where  a.registry_flag in (0,1) and b.business_type in ('3','5') and b.reserve_status !='0'
	and a.outp_date >= to_date(c_daylist.day_id,'yyyyMMdd')
	AND a.outp_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1;
   end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00234'],"['delete from his_bi.dwd_outp_work_d where st_date = c_daylist.day_id and key = \'D00234\';\r    \r  INSERT into his_bi.dwd_outp_work_d(key,value,dept_code,insert_date,remark,st_date,outp_visit_id,patient_id,visit_id) \r  select \r         \'D00234\',\r          case b.""operator"" \r           when \'手机APP\' then 3\r           when \'微信公众号\' then 9\r           when \'WAPP\' then 1\r             else\r                0\r              end  ,\r     a.dept_code,\r     now(),\r     \'预约途径\',\r     to_char(a.outp_date,\'yyyymmdd\') AS st_date,\r     a.outp_visit_id,\r     a.patient_id,\r     a.visit_id\r from his_bi.pts_outp_patient_visit a\r inner join his_bi.pts_outp_patient_reserve b on a.outp_visit_id=b.outp_visit_id\r where  a.registry_flag in (0,1) and b.business_type in (\'3\',\'5\') and b.reserve_status !=\'0\'\r and a.outp_date >= to_date(c_daylist.day_id,\'yyyyMMdd\')\r AND a.outp_date <  to_date(c_daylist.day_id,\'yyyyMMdd\')+1;\r  ']",['预约途径\r   ']
229,his_bi,fun_dwd_D00235_d_16716,"
/***
函数名称：已退号人次
    作用：统计已退号人次
  开发人：hamter.lize 2020年5月24日
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00235根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
    c_daylist record;
    o_start_date varchar;
    o_end_date varchar;
    i_start_date varchar;
    i_end_date varchar;
    i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
      from his_bi.dwd_outp_work_d
     where key = 'D00235';
     
  if(i_count = 0)
      then 
          i_start_date := '20200101';
            --raise notice '0 i_start_date is: %', i_start_date;
    else if(i_count > 0)
      then
          i_start_date := i_end_date;
            --raise notice '1 i_start_date is: %', i_start_date;
  end if;
    end if;
        
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
    /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
      then 
        o_start_date := i_start_date;
        o_end_date := i_end_date;
            --raise notice '2 o_start_date is: %', o_start_date;
            --raise notice '2 o_end_date is: %', o_end_date;
    else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
    /*PG function 如果参入任何参数，那么以实际入参为准*/
      then 
          o_start_date := v_start_date;
        o_end_date := v_end_date;
            --raise notice '3 o_start_date is: %', o_start_date;
            --raise notice '3 o_end_date is: %', o_end_date;
    end if;
    end if;
    
    for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
    loop 
    
    --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
    
    delete from his_bi.dwd_outp_work_d where st_date = c_daylist.day_id and key = 'D00235';
    
  INSERT into his_bi.dwd_outp_work_d(st_date,dept_code,key,value,insert_date,remark,outp_visit_id,patient_id,visit_id) 
  select to_char(p.ghsj,'yyyymmdd') AS st_date,
         p.dept_code,
				 'D00235',
         1,
         now(),
         '已退号',
         p.outp_visit_id,
         p.patient_id,
         p.visit_id
   from his_bi.pts_outp_patient_visit p
  where p.ghsj >= to_date(c_daylist.day_id,'yyyyMMdd')
    and p.ghsj <  to_date(c_daylist.day_id,'yyyyMMdd')+1
    and p.registry_flag = '2'; --已退号
     end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00235'],"[""delete from his_bi.dwd_outp_work_d where st_date = c_daylist.day_id and key = 'D00235';\r    \r  INSERT into his_bi.dwd_outp_work_d(st_date,dept_code,key,value,insert_date,remark,outp_visit_id,patient_id,visit_id) \r  select to_char(p.ghsj,'yyyymmdd') AS st_date,\r         p.dept_code,\r     'D00235',\r         1,\r         now(),\r         '已退号',\r         p.outp_visit_id,\r         p.patient_id,\r         p.visit_id\r   from his_bi.pts_outp_patient_visit p\r  where p.ghsj >= to_date(c_daylist.day_id,'yyyyMMdd')\r    and p.ghsj <  to_date(c_daylist.day_id,'yyyyMMdd')+1\r    and p.registry_flag = '2'; --已退号\r    ""]",['已退号人次\r   ']
230,his_bi,fun_dwd_D00236_d_16717,"
/***
函数名称：已退号原因
    作用：统计已退号原因
  开发人：hamter.lize 2020年5月24日
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00236根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
    c_daylist record;
    o_start_date varchar;
    o_end_date varchar;
    i_start_date varchar;
    i_end_date varchar;
    i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
      from his_bi.dwd_outp_work_d
     where key = 'D00236';
     
  if(i_count = 0)
      then 
          i_start_date := '20200101';
            --raise notice '0 i_start_date is: %', i_start_date;
    else if(i_count > 0)
      then
          i_start_date := i_end_date;
            --raise notice '1 i_start_date is: %', i_start_date;
  end if;
    end if;
        
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
    /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
      then 
        o_start_date := i_start_date;
        o_end_date := i_end_date;
            --raise notice '2 o_start_date is: %', o_start_date;
            --raise notice '2 o_end_date is: %', o_end_date;
    else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
    /*PG function 如果参入任何参数，那么以实际入参为准*/
      then 
          o_start_date := v_start_date;
        o_end_date := v_end_date;
            --raise notice '3 o_start_date is: %', o_start_date;
            --raise notice '3 o_end_date is: %', o_end_date;
    end if;
    end if;
    
    for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
    loop 
    
    --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
    
    delete from his_bi.dwd_outp_work_d where st_date = c_daylist.day_id and key = 'D00236';
    
  INSERT into his_bi.dwd_outp_work_d(st_date,dept_code,key,value,insert_date,remark,outp_visit_id,patient_id,visit_id) 
  select to_char(p.ghsj,'yyyymmdd') AS st_date,
         p.dept_code,
				 'D00236',
         coalesce(cast(d.item_value as int),99),
         now(),
         '已退号原因',
         p.outp_visit_id,
         p.patient_id,
         p.visit_id
   from his_bi.pts_outp_patient_visit p
   left join (
   select t.item_name,t.item_value from his_bi.bds_bds_code_table_item t where t.t_id in (select id from his_bi.bds_bds_code_table a where a.standard_code  = 'THQX0001' )
   ) d
   on p.cancel_reason =d.item_name
  where
     p.registry_flag = '2' --已退号
     and p.ghsj >= to_date(c_daylist.day_id,'yyyyMMdd')
    and p.ghsj <  to_date(c_daylist.day_id,'yyyyMMdd')+1;
     end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00236'],"[""delete from his_bi.dwd_outp_work_d where st_date = c_daylist.day_id and key = 'D00236';\r    \r  INSERT into his_bi.dwd_outp_work_d(st_date,dept_code,key,value,insert_date,remark,outp_visit_id,patient_id,visit_id) \r  select to_char(p.ghsj,'yyyymmdd') AS st_date,\r         p.dept_code,\r     'D00236',\r         coalesce(cast(d.item_value as int),99),\r         now(),\r         '已退号原因',\r         p.outp_visit_id,\r         p.patient_id,\r         p.visit_id\r   from his_bi.pts_outp_patient_visit p\r   left join (\r   select t.item_name,t.item_value from his_bi.bds_bds_code_table_item t where t.t_id in (select id from his_bi.bds_bds_code_table a where a.standard_code  = 'THQX0001' )\r   ) d\r   on p.cancel_reason =d.item_name\r  where\r     p.registry_flag = '2' --已退号\r     and p.ghsj >= to_date(c_daylist.day_id,'yyyyMMdd')\r    and p.ghsj <  to_date(c_daylist.day_id,'yyyyMMdd')+1;\r    ""]",['已退号原因\r   ']
231,his_bi,fun_dwd_D00237_d_16718,"
/***
函数名称：已就诊人总就诊时间
    作用：统计已就诊人总就诊时间
  开发人：hamter.lize 2020-5-24
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00237根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
    c_daylist record;
    o_start_date varchar;
    o_end_date varchar;
    i_start_date varchar;
    i_end_date varchar;
    i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
      from his_bi.dwd_outp_work_d
     where key = 'D00237';
     
  if(i_count = 0)
      then 
          i_start_date := '20200101';
            --raise notice '0 i_start_date is: %', i_start_date;
    else if(i_count > 0)
      then
          i_start_date := i_end_date;
            --raise notice '1 i_start_date is: %', i_start_date;
  end if;
    end if;
        
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
    /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
      then 
        o_start_date := i_start_date;
        o_end_date := i_end_date;
            --raise notice '2 o_start_date is: %', o_start_date;
            --raise notice '2 o_end_date is: %', o_end_date;
    else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
    /*PG function 如果参入任何参数，那么以实际入参为准*/
      then 
          o_start_date := v_start_date;
        o_end_date := v_end_date;
            --raise notice '3 o_start_date is: %', o_start_date;
            --raise notice '3 o_end_date is: %', o_end_date;
    end if;
    end if;
    
    for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
    loop 
    
    --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
    
    delete from his_bi.dwd_outp_work_d where st_date = c_daylist.day_id and key = 'D00237';
    
  INSERT into his_bi.dwd_outp_work_d(st_date,dept_code,key,value,insert_date,remark,outp_visit_id,patient_id,visit_id) 
  select to_char(p.ghsj,'yyyymmdd') AS st_date,
         p.dept_code,
				 'D00237',
         date_part('minute',p.visit_finish_date -p.visit_begin_date ),
         now(),
         '已就诊人总就诊时间',
         p.outp_visit_id,
         p.patient_id,
         p.visit_id
   from his_bi.pts_outp_patient_visit p
  where 
     p.registry_flag = '1' --已就诊
	and p.ghsj >= to_date(c_daylist.day_id,'yyyyMMdd')
    and p.ghsj <  to_date(c_daylist.day_id,'yyyyMMdd')+1;
     end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00237'],"[""delete from his_bi.dwd_outp_work_d where st_date = c_daylist.day_id and key = 'D00237';\r    \r  INSERT into his_bi.dwd_outp_work_d(st_date,dept_code,key,value,insert_date,remark,outp_visit_id,patient_id,visit_id) \r  select to_char(p.ghsj,'yyyymmdd') AS st_date,\r         p.dept_code,\r     'D00237',\r         date_part('minute',p.visit_finish_date -p.visit_begin_date ),\r         now(),\r         '已就诊人总就诊时间',\r         p.outp_visit_id,\r         p.patient_id,\r         p.visit_id\r   from his_bi.pts_outp_patient_visit p\r  where \r     p.registry_flag = '1' --已就诊\r and p.ghsj >= to_date(c_daylist.day_id,'yyyyMMdd')\r    and p.ghsj <  to_date(c_daylist.day_id,'yyyyMMdd')+1;\r    ""]",['已就诊人总就诊时间\r   ']
232,his_bi,fun_dwd_D00238_d_16719,"
/***
函数名称：住院患者是否腔镜手术患者(0 否 1是)（国家标准）腔镜手术和微创手术同一套代码
    作用：统计某天住院患者是否腔镜手术患者(0 否 1是)（以病案首页归档数据中的费用数据为准）
  开发人：wy 2020-04-29
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00238  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00238';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00238';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
	 select distinct 'D00238',
					1,
				  a.bah as patient_id,
					a.zycs as visit_id,
					pt.pai_visit_id,
					now(),
					'是否腔镜手术患者(0 否 1是)',
				  to_char(a.cyrq,'yyyymmdd') as st_date
	   from his_bi.ods_patient_medical_record a
	  inner join his_bi.pts_pai_visit pt on a.bah = pt.patient_id and a.zycs = pt.visit_id
		inner join his_bi.ods_patient_opertion_info t on t.brxh =a.brxh
	  where 1=1
	    and exists(select 1 from his_bi.dim_oper_mini_info mf
									where t.surgerycode = mf.icd9_code and mf.oper_level = '微创')
	    and a.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
	    and a.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 
	 ;

	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00238'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00238';\r \r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r  select distinct 'D00238',\r     1,\r      a.bah as patient_id,\r     a.zycs as visit_id,\r     pt.pai_visit_id,\r     now(),\r     '是否腔镜手术患者(0 否 1是)',\r      to_char(a.cyrq,'yyyymmdd') as st_date\r    from his_bi.ods_patient_medical_record a\r   inner join his_bi.pts_pai_visit pt on a.bah = pt.patient_id and a.zycs = pt.visit_id\r  inner join his_bi.ods_patient_opertion_info t on t.brxh =a.brxh\r   where 1=1\r     and exists(select 1 from his_bi.dim_oper_mini_info mf\r         where t.surgerycode = mf.icd9_code and mf.oper_level = '微创')\r     and a.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')\r     and a.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 \r  ;\r\r ""]",['住院患者是否腔镜手术患者(0 否 1是)（国家标准）腔镜手术和微创手术同一套代码\r   ']
233,his_bi,fun_dwd_D00239_d_16720,"
/***
函数名称：住院患者是否呼吸内镜手术患者(0 否 1是)（国家标准）腔镜手术和微创手术同一套代码
    作用：统计某天住院患者是否呼吸内镜手术患者(0 否 1是)（以病案首页归档数据中的费用数据为准）
  开发人：wy 2020-05-25
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00239  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00239';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00239';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
	 select distinct 'D00239',
					1,
				  a.bah as patient_id,
					a.zycs as visit_id,
					pt.pai_visit_id,
					now(),
					'是否呼吸内镜手术患者(0 否 1是)',
				  to_char(a.cyrq,'yyyymmdd') as st_date
	   from his_bi.ods_patient_medical_record a
	  inner join his_bi.pts_pai_visit pt on a.bah = pt.patient_id and a.zycs = pt.visit_id
		inner join his_bi.ods_patient_opertion_info t on t.brxh =a.brxh
	  where 1=1
	    and exists(select 1 from his_bi.dim_oper_mini_info mf
									where t.surgerycode = mf.icd9_code and mf.oper_level = '微创' and mf.icd9_type = '呼吸内镜手术')
	    and a.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
	    and a.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 
	 ;

	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00239'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00239';\r \r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r  select distinct 'D00239',\r     1,\r      a.bah as patient_id,\r     a.zycs as visit_id,\r     pt.pai_visit_id,\r     now(),\r     '是否呼吸内镜手术患者(0 否 1是)',\r      to_char(a.cyrq,'yyyymmdd') as st_date\r    from his_bi.ods_patient_medical_record a\r   inner join his_bi.pts_pai_visit pt on a.bah = pt.patient_id and a.zycs = pt.visit_id\r  inner join his_bi.ods_patient_opertion_info t on t.brxh =a.brxh\r   where 1=1\r     and exists(select 1 from his_bi.dim_oper_mini_info mf\r         where t.surgerycode = mf.icd9_code and mf.oper_level = '微创' and mf.icd9_type = '呼吸内镜手术')\r     and a.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')\r     and a.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 \r  ;\r\r ""]",['住院患者是否呼吸内镜手术患者(0 否 1是)（国家标准）腔镜手术和微创手术同一套代码\r   ']
234,his_bi,fun_dwd_D00240_d_16721,"
/***
函数名称：住院患者是否消化内镜手术患者(0 否 1是)（国家标准）腔镜手术和微创手术同一套代码
    作用：统计某天住院患者是否消化内镜手术患者(0 否 1是)（以病案首页归档数据中的费用数据为准）
  开发人：wy 2020-05-25
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00240  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00240';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00240';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
	 select distinct 'D00240',
					1,
				  a.bah as patient_id,
					a.zycs as visit_id,
					pt.pai_visit_id,
					now(),
					'是否消化内镜手术患者(0 否 1是)',
				  to_char(a.cyrq,'yyyymmdd') as st_date
	   from his_bi.ods_patient_medical_record a
	  inner join his_bi.pts_pai_visit pt on a.bah = pt.patient_id and a.zycs = pt.visit_id
		inner join his_bi.ods_patient_opertion_info t on t.brxh =a.brxh
	  where 1=1
	    and exists(select 1 from his_bi.dim_oper_mini_info mf
									where t.surgerycode = mf.icd9_code and mf.oper_level = '微创' and mf.icd9_type = '消化内镜手术')
	    and a.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
	    and a.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 
	 ;

	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00240'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00240';\r \r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r  select distinct 'D00240',\r     1,\r      a.bah as patient_id,\r     a.zycs as visit_id,\r     pt.pai_visit_id,\r     now(),\r     '是否消化内镜手术患者(0 否 1是)',\r      to_char(a.cyrq,'yyyymmdd') as st_date\r    from his_bi.ods_patient_medical_record a\r   inner join his_bi.pts_pai_visit pt on a.bah = pt.patient_id and a.zycs = pt.visit_id\r  inner join his_bi.ods_patient_opertion_info t on t.brxh =a.brxh\r   where 1=1\r     and exists(select 1 from his_bi.dim_oper_mini_info mf\r         where t.surgerycode = mf.icd9_code and mf.oper_level = '微创' and mf.icd9_type = '消化内镜手术')\r     and a.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')\r     and a.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 \r  ;\r\r ""]",['住院患者是否消化内镜手术患者(0 否 1是)（国家标准）腔镜手术和微创手术同一套代码\r   ']
235,his_bi,fun_dwd_D00241_d_16722,"
/***
函数名称：门诊处方金额统计
    作用：统计某天门诊患者处方金额
  开发人：wy 2020-05-25
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00241  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_outp_quantity_d
	 where key = 'D00241';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_outp_quantity_d where st_date = c_daylist.day_id and key = 'D00241';
	
  INSERT into his_bi.dwd_outp_quantity_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,
																						remark,st_date) 
  SELECT 
		     'D00241',
				 sum(d.costs),
	       s.patient_id,
				 s.visit_id,
				 s.outp_visit_id,
				 now(),
				 '门诊处方金额', 
				 to_char(s.create_date,'yyyymmdd') st_date
	 FROM  his_bi.dms_pds_supply  s
	 LEFT JOIN his_bi.dms_pds_supply_detail d ON s.supply_id = d.supply_id
	 LEFT JOIN his_bi.pts_outp_patient_visit t ON s.outp_visit_id=t.outp_visit_id
	 WHERE s.create_date >= to_date(c_daylist.day_id,'yyyyMMdd')
		 AND s.create_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
		 AND s.is_invalid = '1' 
		 AND s.presc_source='1' --表示来源于门诊
	 group by to_char(s.create_date,'yyyymmdd'),
						s.outp_visit_id,
						s.patient_id,
						s.visit_id;
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00241'],"[""delete from his_bi.dwd_outp_quantity_d where st_date = c_daylist.day_id and key = 'D00241';\r \r  INSERT into his_bi.dwd_outp_quantity_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,\r                      remark,st_date) \r  SELECT \r       'D00241',\r     sum(d.costs),\r        s.patient_id,\r     s.visit_id,\r     s.outp_visit_id,\r     now(),\r     '门诊处方金额', \r     to_char(s.create_date,'yyyymmdd') st_date\r  FROM  his_bi.dms_pds_supply  s\r  LEFT JOIN his_bi.dms_pds_supply_detail d ON s.supply_id = d.supply_id\r  LEFT JOIN his_bi.pts_outp_patient_visit t ON s.outp_visit_id=t.outp_visit_id\r  WHERE s.create_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r   AND s.create_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1\r   AND s.is_invalid = '1' \r   AND s.presc_source='1' --表示来源于门诊\r  group by to_char(s.create_date,'yyyymmdd'),\r      s.outp_visit_id,\r      s.patient_id,\r      s.visit_id;\r ""]",['门诊处方金额统计\r   ']
236,his_bi,fun_dwd_D00242_d_16723,"
/***
函数名称：住院患者微创手术例数
    作用：统计某天住院患者微创手术例数
  开发人：wy 2020-06-03
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00242  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00242';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00242';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
	 select 'D00242',
					count(*),
				  a.bah as patient_id,
					a.zycs as visit_id,
					pt.pai_visit_id,
					now(),
					'住院患者微创手术例数',
				  to_char(a.cyrq,'yyyymmdd') as st_date
	   from his_bi.ods_patient_medical_record a
	  inner join his_bi.pts_pai_visit pt on a.bah = pt.patient_id and a.zycs = pt.visit_id
		inner join his_bi.ods_patient_opertion_info t on t.brxh =a.brxh
	  where 1=1
	    and exists(select 1 from his_bi.dim_oper_mini_info mf
									where t.surgerycode = mf.icd9_code)
	    and a.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
	    and a.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 
			group by 
				a.bah,
				a.zycs,
				pt.pai_visit_id,
				to_char(a.cyrq,'yyyymmdd')
	 ;

	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00242'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00242';\r \r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r  select 'D00242',\r     count(*),\r      a.bah as patient_id,\r     a.zycs as visit_id,\r     pt.pai_visit_id,\r     now(),\r     '住院患者微创手术例数',\r      to_char(a.cyrq,'yyyymmdd') as st_date\r    from his_bi.ods_patient_medical_record a\r   inner join his_bi.pts_pai_visit pt on a.bah = pt.patient_id and a.zycs = pt.visit_id\r  inner join his_bi.ods_patient_opertion_info t on t.brxh =a.brxh\r   where 1=1\r     and exists(select 1 from his_bi.dim_oper_mini_info mf\r         where t.surgerycode = mf.icd9_code)\r     and a.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')\r     and a.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 \r   group by \r    a.bah,\r    a.zycs,\r    pt.pai_visit_id,\r    to_char(a.cyrq,'yyyymmdd')\r  ;\r\r ""]",['住院患者微创手术例数\r   ']
237,his_bi,fun_dwd_D00243_d_16724,"
/***
函数名称：住院患者四级手术例数
    作用：统计某天住院患者四级手术例数
  开发人：wy 2020-06-03
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00243  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00243';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00243';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 

	 select
				  'D00243',
				  count(*),
					a.bah as patient_id,
					a.zycs as visit_id,
					pt.pai_visit_id,
					now(),
					'住院患者四级手术例数',
					to_char(a.cyrq,'yyyymmdd') as st_date
	  from his_bi.ods_patient_medical_record a
	 inner join his_bi.pts_pai_visit pt on a.bah = pt.patient_id and a.zycs = pt.visit_id
	 inner join his_bi.ods_patient_opertion_info t on t.brxh =a.brxh 
	 where 1=1
		 and exists(select 1 from his_bi.dim_3_4_oper_info m
								 where t.surgerycode = m.icd9_code)
	   and a.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
	   and a.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 
		 and t.surgerytype not in ('2','3') --排除治疗，诊断性手术操作
	 group by 
					a.bah,
					a.zycs,
					pt.pai_visit_id,
					to_char(a.cyrq,'yyyymmdd')
	;

	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00243'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00243';\r \r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r\r  select\r      'D00243',\r      count(*),\r     a.bah as patient_id,\r     a.zycs as visit_id,\r     pt.pai_visit_id,\r     now(),\r     '住院患者四级手术例数',\r     to_char(a.cyrq,'yyyymmdd') as st_date\r   from his_bi.ods_patient_medical_record a\r  inner join his_bi.pts_pai_visit pt on a.bah = pt.patient_id and a.zycs = pt.visit_id\r  inner join his_bi.ods_patient_opertion_info t on t.brxh =a.brxh \r  where 1=1\r   and exists(select 1 from his_bi.dim_3_4_oper_info m\r         where t.surgerycode = m.icd9_code)\r    and a.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')\r    and a.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 \r   and t.surgerytype not in ('2','3') --排除治疗，诊断性手术操作\r  group by \r     a.bah,\r     a.zycs,\r     pt.pai_visit_id,\r     to_char(a.cyrq,'yyyymmdd')\r ;\r\r ""]",['住院患者四级手术例数\r   ']
238,his_bi,fun_dwd_D00244_d_16725,"
/***
函数名称：住院患者腔镜手术例数-（腔镜手术和微创手术同一套代码）
    作用：统计某天住院患者腔镜手术例数
  开发人：wy 2020-06-03
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00244  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据

***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D00244';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00244';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
	 select 'D00244',
					count(*),
				  a.bah as patient_id,
					a.zycs as visit_id,
					pt.pai_visit_id,
					now(),
					'住院患者腔镜手术例数',
				  to_char(a.cyrq,'yyyymmdd') as st_date
	   from his_bi.ods_patient_medical_record a
	  inner join his_bi.pts_pai_visit pt on a.bah = pt.patient_id and a.zycs = pt.visit_id
		inner join his_bi.ods_patient_opertion_info t on t.brxh =a.brxh
	  where 1=1
	    and exists(select 1 from his_bi.dim_oper_mini_info mf
									where t.surgerycode = mf.icd9_code and mf.oper_level = '微创')
	    and a.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
	    and a.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 
			--and t.surgerytype not in ('2','3') --排除治疗，诊断性手术操作
		group by 
					a.bah,
					a.zycs,
					pt.pai_visit_id,
				  to_char(a.cyrq,'yyyymmdd')
	 ;

	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00244'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D00244';\r \r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r  select 'D00244',\r     count(*),\r      a.bah as patient_id,\r     a.zycs as visit_id,\r     pt.pai_visit_id,\r     now(),\r     '住院患者腔镜手术例数',\r      to_char(a.cyrq,'yyyymmdd') as st_date\r    from his_bi.ods_patient_medical_record a\r   inner join his_bi.pts_pai_visit pt on a.bah = pt.patient_id and a.zycs = pt.visit_id\r  inner join his_bi.ods_patient_opertion_info t on t.brxh =a.brxh\r   where 1=1\r     and exists(select 1 from his_bi.dim_oper_mini_info mf\r         where t.surgerycode = mf.icd9_code and mf.oper_level = '微创')\r     and a.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')\r     and a.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 \r   --and t.surgerytype not in ('2','3') --排除治疗，诊断性手术操作\r  group by \r     a.bah,\r     a.zycs,\r     pt.pai_visit_id,\r      to_char(a.cyrq,'yyyymmdd')\r  ;\r\r ""]",['住院患者腔镜手术例数-（腔镜手术和微创手术同一套代码）\r   ']
239,his_bi,fun_dwd_D00248_d_16731,"
/***
函数名称：门诊主诊断编码（含门诊主诊断编码全称和门诊主诊断编码前5位）
    作用：患者门诊主诊断编码
  开发人：wy 2020-06-09
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00248 根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
    c_daylist record;
    o_start_date varchar;
    o_end_date varchar;
    i_start_date varchar;
    i_end_date varchar;
    i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
      from his_bi.dwd_outp_work_d
     where key in ('D00248','D00249');
     
  if(i_count = 0)
      then 
          i_start_date := '20200101';
            --raise notice '0 i_start_date is: %', i_start_date;
    else if(i_count > 0)
      then
          i_start_date := i_end_date;
            --raise notice '1 i_start_date is: %', i_start_date;
  end if;
    end if;
        
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
    /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
      then 
        o_start_date := i_start_date;
        o_end_date := i_end_date;
            --raise notice '2 o_start_date is: %', o_start_date;
            --raise notice '2 o_end_date is: %', o_end_date;
    else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
    /*PG function 如果参入任何参数，那么以实际入参为准*/
      then 
          o_start_date := v_start_date;
        o_end_date := v_end_date;
            --raise notice '3 o_start_date is: %', o_start_date;
            --raise notice '3 o_end_date is: %', o_end_date;
    end if;
    end if;
    
    for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
    loop 
    
    --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
    
    delete from his_bi.dwd_outp_diag_d where st_date = c_daylist.day_id and key in ('D00248','D00249');
    
    INSERT into his_bi.dwd_outp_diag_d(st_date,dept_code,key,value,insert_date,remark,outp_visit_id,patient_id,visit_id) 
		--key=1,门诊主诊断编码全称，key=2,门诊主诊断编码前5位
		select
		to_char(pt.outp_date,'yyyymmdd') as st_date,
		eg.org_id_input,
		'D00248',
		max(eg.diag_icd) diag_icd,
		now(),
		'门诊主诊断编码',
		eg.patient_visit_id,
		pt.patient_id,
		pt.visit_id
		from his_bi.emr_fc_pati_diag eg
	 inner join his_bi.pts_outp_patient_visit pt on eg.patient_visit_id = pt.outp_visit_id
	 where eg.diag_type_code = '1'  --表示门诊诊断
		 and eg.main_diag = '1' --表示主诊断
		 and pt.outp_date >= to_date(c_daylist.day_id,'yyyyMMdd')
	   and pt.outp_date <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 
   group by to_char(pt.outp_date,'yyyymmdd'),
						eg.org_id_input,eg.patient_visit_id,pt.patient_id,pt.visit_id
		union all

		select
		to_char(pt.outp_date,'yyyymmdd') as st_date,
		eg.org_id_input,
		'D00249',
		max(eg.sub_diag_icd)||'00' as sub_diag_icd,
		now(),
		'门诊主诊断编码前五位',
	  eg.patient_visit_id,
		pt.patient_id,
		pt.visit_id
		from his_bi.emr_fc_pati_diag eg
	 inner join his_bi.pts_outp_patient_visit pt on eg.patient_visit_id = pt.outp_visit_id
	 where eg.diag_type_code = '1'  --表示门诊诊断
		 and eg.main_diag = '1' --表示主诊断
		 and pt.outp_date >= to_date(c_daylist.day_id,'yyyyMMdd')
	   and pt.outp_date <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 
	 group by to_char(pt.outp_date,'yyyymmdd'),
						eg.org_id_input,eg.patient_visit_id,pt.patient_id,pt.visit_id
		;
	
	  end loop;
	  RETURN 'SUCCESS';  
END;
  ",[],"[""delete from his_bi.dwd_outp_diag_d where st_date = c_daylist.day_id and key in ('D00248','D00249');\r    \r    INSERT into his_bi.dwd_outp_diag_d(st_date,dept_code,key,value,insert_date,remark,outp_visit_id,patient_id,visit_id) \r  --key=1,门诊主诊断编码全称，key=2,门诊主诊断编码前5位\r  select\r  to_char(pt.outp_date,'yyyymmdd') as st_date,\r  eg.org_id_input,\r  'D00248',\r  max(eg.diag_icd) diag_icd,\r  now(),\r  '门诊主诊断编码',\r  eg.patient_visit_id,\r  pt.patient_id,\r  pt.visit_id\r  from his_bi.emr_fc_pati_diag eg\r  inner join his_bi.pts_outp_patient_visit pt on eg.patient_visit_id = pt.outp_visit_id\r  where eg.diag_type_code = '1'  --表示门诊诊断\r   and eg.main_diag = '1' --表示主诊断\r   and pt.outp_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r    and pt.outp_date <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 \r   group by to_char(pt.outp_date,'yyyymmdd'),\r      eg.org_id_input,eg.patient_visit_id,pt.patient_id,pt.visit_id\r  union all\r\r  select\r  to_char(pt.outp_date,'yyyymmdd') as st_date,\r  eg.org_id_input,\r  'D00249',\r  max(eg.sub_diag_icd)||'00' as sub_diag_icd,\r  now(),\r  '门诊主诊断编码前五位',\r   eg.patient_visit_id,\r  pt.patient_id,\r  pt.visit_id\r  from his_bi.emr_fc_pati_diag eg\r  inner join his_bi.pts_outp_patient_visit pt on eg.patient_visit_id = pt.outp_visit_id\r  where eg.diag_type_code = '1'  --表示门诊诊断\r   and eg.main_diag = '1' --表示主诊断\r   and pt.outp_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r    and pt.outp_date <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 \r  group by to_char(pt.outp_date,'yyyymmdd'),\r      eg.org_id_input,eg.patient_visit_id,pt.patient_id,pt.visit_id\r  ;\r \r  ""]",['门诊主诊断编码（含门诊主诊断编码全称和门诊主诊断编码前5位）\r   ']
240,his_bi,fun_dwd_D00250_d_16732,"
/***
函数名称：门诊主诊断名称
    作用：患者门诊主诊断名称
  开发人：wy 2020-06-09
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00249 根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
    c_daylist record;
    o_start_date varchar;
    o_end_date varchar;
    i_start_date varchar;
    i_end_date varchar;
    i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
      from his_bi.dwd_outp_work_d
     where key in ('D00250','D00251');
     
  if(i_count = 0)
      then 
          i_start_date := '20200101';
            --raise notice '0 i_start_date is: %', i_start_date;
    else if(i_count > 0)
      then
          i_start_date := i_end_date;
            --raise notice '1 i_start_date is: %', i_start_date;
  end if;
    end if;
        
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
    /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
      then 
        o_start_date := i_start_date;
        o_end_date := i_end_date;
            --raise notice '2 o_start_date is: %', o_start_date;
            --raise notice '2 o_end_date is: %', o_end_date;
    else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
    /*PG function 如果参入任何参数，那么以实际入参为准*/
      then 
          o_start_date := v_start_date;
        o_end_date := v_end_date;
            --raise notice '3 o_start_date is: %', o_start_date;
            --raise notice '3 o_end_date is: %', o_end_date;
    end if;
    end if;
    
    for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
    loop 
    
    --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
    
    delete from his_bi.dwd_outp_diag_d where st_date = c_daylist.day_id and key in ('D00250','D00251');
    
    INSERT into his_bi.dwd_outp_diag_d(st_date,dept_code,key,value,insert_date,remark,outp_visit_id,patient_id,visit_id) 
		--key=1,门诊主诊断编码全称，key=2,门诊主诊断编码前5位
		select
		to_char(pt.outp_date,'yyyymmdd') as st_date,
		eg.org_id_input,
		'D00250',
		COALESCE(max(bd.fdesc),max(eg.diag_name)) as fdesc,
		now(),
		'门诊主诊断名称',
		eg.patient_visit_id,
		pt.patient_id,
		pt.visit_id
		from his_bi.emr_fc_pati_diag eg
	 inner join his_bi.pts_outp_patient_visit pt on eg.patient_visit_id = pt.outp_visit_id
	  left join his_bi.bds_bds_icd10 bd on eg.diag_icd = bd.ficd10
	 where eg.diag_type_code = '1' 
		 and eg.main_diag = '1'--门诊主诊断
		 and pt.outp_date >= to_date(c_daylist.day_id,'yyyyMMdd')
	   and pt.outp_date <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 
	 group by to_char(pt.outp_date,'yyyymmdd'),
						eg.org_id_input,eg.patient_visit_id,pt.patient_id,pt.visit_id
		union all
		
		select
		to_char(pt.outp_date,'yyyymmdd') as st_date,
		eg.org_id_input,
		'D00251',
		COALESCE(max(bd.fdesc),max(eg.diag_name)) as fdesc,
		now(),
		'门诊主诊断前五位名称',
		eg.patient_visit_id,
		pt.patient_id,
		pt.visit_id
		from his_bi.emr_fc_pati_diag eg
	 inner join his_bi.pts_outp_patient_visit pt on eg.patient_visit_id = pt.outp_visit_id
		left join his_bi.bds_bds_icd10 bd on eg.sub_diag_icd||'00' = bd.ficd10
		where eg.diag_type_code = '1'
		and eg.main_diag = '1'--门诊主诊断
		and pt.outp_date >= to_date(c_daylist.day_id,'yyyyMMdd')
	  and pt.outp_date <  to_date(c_daylist.day_id,'yyyyMMdd') + 1
	group by to_char(pt.outp_date,'yyyymmdd'),
					 eg.org_id_input,eg.patient_visit_id,pt.patient_id,pt.visit_id
		;
	
	  end loop;
	  RETURN 'SUCCESS';  
END;
  ",[],"[""delete from his_bi.dwd_outp_diag_d where st_date = c_daylist.day_id and key in ('D00250','D00251');\r    \r    INSERT into his_bi.dwd_outp_diag_d(st_date,dept_code,key,value,insert_date,remark,outp_visit_id,patient_id,visit_id) \r  --key=1,门诊主诊断编码全称，key=2,门诊主诊断编码前5位\r  select\r  to_char(pt.outp_date,'yyyymmdd') as st_date,\r  eg.org_id_input,\r  'D00250',\r  COALESCE(max(bd.fdesc),max(eg.diag_name)) as fdesc,\r  now(),\r  '门诊主诊断名称',\r  eg.patient_visit_id,\r  pt.patient_id,\r  pt.visit_id\r  from his_bi.emr_fc_pati_diag eg\r  inner join his_bi.pts_outp_patient_visit pt on eg.patient_visit_id = pt.outp_visit_id\r   left join his_bi.bds_bds_icd10 bd on eg.diag_icd = bd.ficd10\r  where eg.diag_type_code = '1' \r   and eg.main_diag = '1'--门诊主诊断\r   and pt.outp_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r    and pt.outp_date <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 \r  group by to_char(pt.outp_date,'yyyymmdd'),\r      eg.org_id_input,eg.patient_visit_id,pt.patient_id,pt.visit_id\r  union all\r  \r  select\r  to_char(pt.outp_date,'yyyymmdd') as st_date,\r  eg.org_id_input,\r  'D00251',\r  COALESCE(max(bd.fdesc),max(eg.diag_name)) as fdesc,\r  now(),\r  '门诊主诊断前五位名称',\r  eg.patient_visit_id,\r  pt.patient_id,\r  pt.visit_id\r  from his_bi.emr_fc_pati_diag eg\r  inner join his_bi.pts_outp_patient_visit pt on eg.patient_visit_id = pt.outp_visit_id\r  left join his_bi.bds_bds_icd10 bd on eg.sub_diag_icd||'00' = bd.ficd10\r  where eg.diag_type_code = '1'\r  and eg.main_diag = '1'--门诊主诊断\r  and pt.outp_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r   and pt.outp_date <  to_date(c_daylist.day_id,'yyyyMMdd') + 1\r group by to_char(pt.outp_date,'yyyymmdd'),\r      eg.org_id_input,eg.patient_visit_id,pt.patient_id,pt.visit_id\r  ;\r \r  ""]",['门诊主诊断名称\r   ']
241,his_bi,fun_dwd_D01001_d_16733,"
/***
函数名称：门诊其他费
    作用：统计某天门诊其他费（费用以会计科目进行统计）
  开发人：wy 2020-06-10
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D01001  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_outp_income_d
	 where key = 'D01001';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_outp_income_d where st_date = c_daylist.day_id and key = 'D01001';
	
  INSERT into his_bi.dwd_outp_income_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,
																			 remark,st_date) 
  select 
				 'D01001',
				 coalesce(sum(t.charges),0),
				 t.patient_id,
				 t.visit_id,
				 pt.outp_visit_id,
         now(),
			  '门诊其他费',
			  to_char(t.enter_date,'yyyymmdd') AS st_date
   from his_bi.bms_bill_item t
   left join his_bi.pts_outp_patient_visit pt on t.patient_id = pt.patient_id and t.visit_id = pt.visit_id
  where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')
    and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
    and t.in_out_flag = 'O' --只统计门诊患者
	and t.subj_code not in ('I01','E01','D01','F01','B01','J01','J02','J03','H01','G01','P','O','T01') 
	and t.charges<>0
  group by to_char(t.enter_date,'yyyymmdd'),
					 t.patient_id,
					 t.visit_id,
				   pt.outp_visit_id;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D01001'],"[""delete from his_bi.dwd_outp_income_d where st_date = c_daylist.day_id and key = 'D01001';\r \r  INSERT into his_bi.dwd_outp_income_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,\r                    remark,st_date) \r  select \r     'D01001',\r     coalesce(sum(t.charges),0),\r     t.patient_id,\r     t.visit_id,\r     pt.outp_visit_id,\r         now(),\r     '门诊其他费',\r     to_char(t.enter_date,'yyyymmdd') AS st_date\r   from his_bi.bms_bill_item t\r   left join his_bi.pts_outp_patient_visit pt on t.patient_id = pt.patient_id and t.visit_id = pt.visit_id\r  where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r    and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1\r    and t.in_out_flag = 'O' --只统计门诊患者\r and t.subj_code not in ('I01','E01','D01','F01','B01','J01','J02','J03','H01','G01','P','O','T01') \r and t.charges<>0\r  group by to_char(t.enter_date,'yyyymmdd'),\r      t.patient_id,\r      t.visit_id,\r       pt.outp_visit_id;\r \r ""]",['门诊其他费\r   ']
242,his_bi,fun_dwd_D01002_d_16734,"
/***
函数名称：开具麻醉药品和第一类精神药品处方数
    作用：统计某天开具麻醉药品和第一类精神药品处方数
  开发人：leslie 2020-07-31
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00040  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_outp_quantity_d
	 where key = 'D01002';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_outp_quantity_d where st_date = c_daylist.day_id and key = 'D01002';
	
  INSERT into his_bi.dwd_outp_quantity_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,
																						remark,st_date) 
  SELECT 
		     'D01002',
				 count(distinct s.presc_no),
	       s.patient_id,
				 s.visit_id,
				 s.outp_visit_id,
				 now(),
				 '开具麻醉药品和第一类精神药品处方数', 
				 to_char(s.create_date,'yyyymmdd') st_date
	 FROM  his_bi.dms_pds_supply  s
	 LEFT JOIN his_bi.dms_pds_supply_detail d ON s.supply_id = d.supply_id
	 LEFT JOIN his_bi.dms_pham_attribute_info t ON d.pham_std_code=t.pham_std_code
	 WHERE s.create_date >= to_date(c_daylist.day_id,'yyyyMMdd')
		 AND s.create_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
		 AND s.is_invalid = '1' 
		 AND s.presc_source='1' --表示来源于门诊
		 and exists(select 1 from his_bi.bds_bds_code_table_item m
		             where m.item_value=t.toxicology_property 
								   and m.t_id = '17'
									 and m.item_value in ('1','2'))
	 group by to_char(s.create_date,'yyyymmdd'),
						s.outp_visit_id,
						s.patient_id,
						s.visit_id;
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D01002'],"[""delete from his_bi.dwd_outp_quantity_d where st_date = c_daylist.day_id and key = 'D01002';\r \r  INSERT into his_bi.dwd_outp_quantity_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,\r                      remark,st_date) \r  SELECT \r       'D01002',\r     count(distinct s.presc_no),\r        s.patient_id,\r     s.visit_id,\r     s.outp_visit_id,\r     now(),\r     '开具麻醉药品和第一类精神药品处方数', \r     to_char(s.create_date,'yyyymmdd') st_date\r  FROM  his_bi.dms_pds_supply  s\r  LEFT JOIN his_bi.dms_pds_supply_detail d ON s.supply_id = d.supply_id\r  LEFT JOIN his_bi.dms_pham_attribute_info t ON d.pham_std_code=t.pham_std_code\r  WHERE s.create_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r   AND s.create_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1\r   AND s.is_invalid = '1' \r   AND s.presc_source='1' --表示来源于门诊\r   and exists(select 1 from his_bi.bds_bds_code_table_item m\r               where m.item_value=t.toxicology_property \r           and m.t_id = '17'\r          and m.item_value in ('1','2'))\r  group by to_char(s.create_date,'yyyymmdd'),\r      s.outp_visit_id,\r      s.patient_id,\r      s.visit_id;\r ""]",['开具麻醉药品和第一类精神药品处方数\r   ']
243,his_bi,fun_dwd_D05000_d_16735,"
/***
函数名称：住院患者总费用
    作用：统计某天患者总费用
  开发人：wy 2020-04-07
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D05000  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_income_d
	 where key = 'D05000';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D05000';
	
  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
	select 
			 'D05000',
			 coalesce(sum(t.charges),0),
			 t.patient_id,
			 t.visit_id,
			 t.pai_visit_id,
			 now(),
			'住院患者总费用',
			to_char(t.enter_date,'yyyymmdd') AS st_date
	from his_bi.bms_bill_item t
	left join his_bi.pts_pai_visit t1 on t.pai_visit_id = t1.pai_visit_id
	where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')
	  and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
	  and t.in_out_flag = 'I' --只统计住院患者
	  and t.charges<>0 
	group by to_char(t.enter_date,'yyyymmdd'),
				 t.patient_id,
				 t.visit_id,
				 t.pai_visit_id
				 having coalesce(sum(t.charges),0)<>0 ;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D05000'],"[""delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D05000';\r \r  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r select \r    'D05000',\r    coalesce(sum(t.charges),0),\r    t.patient_id,\r    t.visit_id,\r    t.pai_visit_id,\r    now(),\r   '住院患者总费用',\r   to_char(t.enter_date,'yyyymmdd') AS st_date\r from his_bi.bms_bill_item t\r left join his_bi.pts_pai_visit t1 on t.pai_visit_id = t1.pai_visit_id\r where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r   and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1\r   and t.in_out_flag = 'I' --只统计住院患者\r   and t.charges<>0 \r group by to_char(t.enter_date,'yyyymmdd'),\r     t.patient_id,\r     t.visit_id,\r     t.pai_visit_id\r     having coalesce(sum(t.charges),0)<>0 ;\r \r ""]",['住院患者总费用\r   ']
244,his_bi,fun_dwd_D05001_d_16736,"
/***
函数名称：住院患者医疗服务费
    作用：统计某天患者医疗服务费
  开发人：wy 2020-06-10
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D05001  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_income_d
	 where key = 'D05001';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D05001';
	
  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
	select 
			 'D05001',
			 coalesce(sum(t.charges),0),
			 t.patient_id,
			 t.visit_id,
			 t.pai_visit_id,
			 now(),
			'住院医疗服务费',
			to_char(t.enter_date,'yyyymmdd') AS st_date
	from his_bi.bms_bill_item t
	left join his_bi.pts_pai_visit t1 on t.pai_visit_id = t1.pai_visit_id
	where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')
	and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
	and t.in_out_flag = 'I' --只统计住院患者
	and t.item_class not in('A','B','N','I','C','D','L')
		--排除中、西、草药、材料、检查、检验、膳食费用
	and t.charges<>0
	group by to_char(t.enter_date,'yyyymmdd'),
				 t.patient_id,
				 t.visit_id,
				 t.pai_visit_id
				 having coalesce(sum(t.charges),0)<>0;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D05001'],"[""delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D05001';\r \r  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r select \r    'D05001',\r    coalesce(sum(t.charges),0),\r    t.patient_id,\r    t.visit_id,\r    t.pai_visit_id,\r    now(),\r   '住院医疗服务费',\r   to_char(t.enter_date,'yyyymmdd') AS st_date\r from his_bi.bms_bill_item t\r left join his_bi.pts_pai_visit t1 on t.pai_visit_id = t1.pai_visit_id\r where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1\r and t.in_out_flag = 'I' --只统计住院患者\r and t.item_class not in('A','B','N','I','C','D','L')\r  --排除中、西、草药、材料、检查、检验、膳食费用\r and t.charges<>0\r group by to_char(t.enter_date,'yyyymmdd'),\r     t.patient_id,\r     t.visit_id,\r     t.pai_visit_id\r     having coalesce(sum(t.charges),0)<>0;\r \r ""]",['住院患者医疗服务费\r   ']
245,his_bi,fun_dwd_D05002_d_16737,"
/***
函数名称：住院患者材料费
    作用：统计某天患者材料费
  开发人：wy 2020-06-10
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D05002  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_income_d
	 where key = 'D05002';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D05002';
	
  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
	select 
			 'D05002',
			 coalesce(sum(t.charges),0),
			 t.patient_id,
			 t.visit_id,
			 t.pai_visit_id,
			 now(),
			'住院患者材料费',
			to_char(t.enter_date,'yyyymmdd') AS st_date
	from his_bi.bms_bill_item t
	left join his_bi.pts_pai_visit t1 on t.pai_visit_id = t1.pai_visit_id
	where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')
	and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
	and t.in_out_flag = 'I' --只统计住院患者
	and t.subj_code = 'I01'
	and t.charges<>0
	group by to_char(t.enter_date,'yyyymmdd'),
				 t.patient_id,
				 t.visit_id,
				 t.pai_visit_id
				 having coalesce(sum(t.charges),0)<>0;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D05002'],"[""delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D05002';\r \r  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r select \r    'D05002',\r    coalesce(sum(t.charges),0),\r    t.patient_id,\r    t.visit_id,\r    t.pai_visit_id,\r    now(),\r   '住院患者材料费',\r   to_char(t.enter_date,'yyyymmdd') AS st_date\r from his_bi.bms_bill_item t\r left join his_bi.pts_pai_visit t1 on t.pai_visit_id = t1.pai_visit_id\r where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1\r and t.in_out_flag = 'I' --只统计住院患者\r and t.subj_code = 'I01'\r and t.charges<>0\r group by to_char(t.enter_date,'yyyymmdd'),\r     t.patient_id,\r     t.visit_id,\r     t.pai_visit_id\r     having coalesce(sum(t.charges),0)<>0;\r \r ""]",['住院患者材料费\r   ']
246,his_bi,fun_dwd_D05003_d_16738,"
/***
函数名称：住院患者药品费
    作用：统计某天患者药品费
  开发人：wy 2020-06-10
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D05003  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_income_d
	 where key = 'D05003';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D05003';
	
  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
	select 
			 'D05003',
			 coalesce(sum(t.charges),0),
			 t.patient_id,
			 t.visit_id,
			 t.pai_visit_id,
			 now(),
			'住院患者药品费',
			to_char(t.enter_date,'yyyymmdd') AS st_date
	from his_bi.bms_bill_item t
	left join his_bi.pts_pai_visit t1 on t.pai_visit_id = t1.pai_visit_id
	where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')
	and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
	and t.in_out_flag = 'I' --只统计住院患者
	and t.subj_code in('J01','J02','J03','J04')
	and t.charges<>0
	group by to_char(t.enter_date,'yyyymmdd'),
				 t.patient_id,
				 t.visit_id,
				 t.pai_visit_id
				 having coalesce(sum(t.charges),0)<>0;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D05003'],"[""delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D05003';\r \r  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r select \r    'D05003',\r    coalesce(sum(t.charges),0),\r    t.patient_id,\r    t.visit_id,\r    t.pai_visit_id,\r    now(),\r   '住院患者药品费',\r   to_char(t.enter_date,'yyyymmdd') AS st_date\r from his_bi.bms_bill_item t\r left join his_bi.pts_pai_visit t1 on t.pai_visit_id = t1.pai_visit_id\r where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1\r and t.in_out_flag = 'I' --只统计住院患者\r and t.subj_code in('J01','J02','J03','J04')\r and t.charges<>0\r group by to_char(t.enter_date,'yyyymmdd'),\r     t.patient_id,\r     t.visit_id,\r     t.pai_visit_id\r     having coalesce(sum(t.charges),0)<>0;\r \r ""]",['住院患者药品费\r   ']
247,his_bi,has_matched_icd9_rule_16771,"
	DECLARE
	matched_rule_count   int;
	BEGIN
	-- Routine body goes here...
	
	select count(1) into matched_rule_count from his_bi.dim_icd_biz_rules r where r.type_code=biz_type and icd_9=icd9_code and operation_name_alias=operation_alias;
	IF(matched_rule_count>0)
		then
		RETURN TRUE;
	END if;

	RETURN FALSE;
END
",[],[],[]
248,his_bi,fun_dwd_D05004_d_16739,"
/***
函数名称：住院患者检验费
    作用：统计某天患者检验费
  开发人：wy 2020-06-10
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D05004  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_income_d
	 where key = 'D05004';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D05004';
	
  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
	select 
			 'D05004',
			 coalesce(sum(t.charges),0),
			 t.patient_id,
			 t.visit_id,
			 t.pai_visit_id,
			 now(),
			'住院患者检验费',
			to_char(t.enter_date,'yyyymmdd') AS st_date
	from his_bi.bms_bill_item t
	left join his_bi.pts_pai_visit t1 on t.pai_visit_id = t1.pai_visit_id
	where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')
	and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
	and t.in_out_flag = 'I' --只统计住院患者
	and t.subj_code  = 'E01'
	and t.charges<>0
	group by to_char(t.enter_date,'yyyymmdd'),
				 t.patient_id,
				 t.visit_id,
				 t.pai_visit_id
				 having coalesce(sum(t.charges),0)<>0;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D05004'],"[""delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D05004';\r \r  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r select \r    'D05004',\r    coalesce(sum(t.charges),0),\r    t.patient_id,\r    t.visit_id,\r    t.pai_visit_id,\r    now(),\r   '住院患者检验费',\r   to_char(t.enter_date,'yyyymmdd') AS st_date\r from his_bi.bms_bill_item t\r left join his_bi.pts_pai_visit t1 on t.pai_visit_id = t1.pai_visit_id\r where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1\r and t.in_out_flag = 'I' --只统计住院患者\r and t.subj_code  = 'E01'\r and t.charges<>0\r group by to_char(t.enter_date,'yyyymmdd'),\r     t.patient_id,\r     t.visit_id,\r     t.pai_visit_id\r     having coalesce(sum(t.charges),0)<>0;\r \r ""]",['住院患者检验费\r   ']
249,his_bi,fun_dwd_D05005_d_16740,"
/***
函数名称：住院患者检查费
    作用：统计某天患者检查费
  开发人：wy 2020-06-10
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D05005  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_income_d
	 where key = 'D05005';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D05005';
	
  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
	select 
			 'D05005',
			 coalesce(sum(t.charges),0),
			 t.patient_id,
			 t.visit_id,
			 t.pai_visit_id,
			 now(),
			'住院患者检查费',
			to_char(t.enter_date,'yyyymmdd') AS st_date
	from his_bi.bms_bill_item t
	left join his_bi.pts_pai_visit t1 on t.pai_visit_id = t1.pai_visit_id
	where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')
	and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
	and t.in_out_flag = 'I' --只统计住院患者
	and t.subj_code  = 'D01'
	and t.charges<>0
	group by to_char(t.enter_date,'yyyymmdd'),
				 t.patient_id,
				 t.visit_id,
				 t.pai_visit_id
				 having coalesce(sum(t.charges),0)<>0;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D05005'],"[""delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D05005';\r \r  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r select \r    'D05005',\r    coalesce(sum(t.charges),0),\r    t.patient_id,\r    t.visit_id,\r    t.pai_visit_id,\r    now(),\r   '住院患者检查费',\r   to_char(t.enter_date,'yyyymmdd') AS st_date\r from his_bi.bms_bill_item t\r left join his_bi.pts_pai_visit t1 on t.pai_visit_id = t1.pai_visit_id\r where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1\r and t.in_out_flag = 'I' --只统计住院患者\r and t.subj_code  = 'D01'\r and t.charges<>0\r group by to_char(t.enter_date,'yyyymmdd'),\r     t.patient_id,\r     t.visit_id,\r     t.pai_visit_id\r     having coalesce(sum(t.charges),0)<>0;\r \r ""]",['住院患者检查费\r   ']
250,his_bi,fun_dwd_D05006_d_16741,"
/***
函数名称：住院患者治疗费
    作用：统计某天患者治疗费
  开发人：wy 2020-06-10
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D05006  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_income_d
	 where key = 'D05006';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D05006';
	
  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
	select 
			 'D05006',
			 coalesce(sum(t.charges),0),
			 t.patient_id,
			 t.visit_id,
			 t.pai_visit_id,
			 now(),
			'住院患者治疗费',
			to_char(t.enter_date,'yyyymmdd') AS st_date
	from his_bi.bms_bill_item t
	left join his_bi.pts_pai_visit t1 on t.pai_visit_id = t1.pai_visit_id
	where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')
	and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
	and t.in_out_flag = 'I' --只统计住院患者
	and t.subj_code  = 'F01'
	and t.charges<>0
	group by to_char(t.enter_date,'yyyymmdd'),
				 t.patient_id,
				 t.visit_id,
				 t.pai_visit_id
				 having coalesce(sum(t.charges),0)<>0;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D05006'],"[""delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D05006';\r \r  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r select \r    'D05006',\r    coalesce(sum(t.charges),0),\r    t.patient_id,\r    t.visit_id,\r    t.pai_visit_id,\r    now(),\r   '住院患者治疗费',\r   to_char(t.enter_date,'yyyymmdd') AS st_date\r from his_bi.bms_bill_item t\r left join his_bi.pts_pai_visit t1 on t.pai_visit_id = t1.pai_visit_id\r where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1\r and t.in_out_flag = 'I' --只统计住院患者\r and t.subj_code  = 'F01'\r and t.charges<>0\r group by to_char(t.enter_date,'yyyymmdd'),\r     t.patient_id,\r     t.visit_id,\r     t.pai_visit_id\r     having coalesce(sum(t.charges),0)<>0;\r \r ""]",['住院患者治疗费\r   ']
251,his_bi,fun_dwd_D05007_d_16742,"
/***
函数名称：住院患者诊察费
    作用：统计某天患者诊察费
  开发人：wy 2020-06-10
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D05007  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_income_d
	 where key = 'D05007';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D05007';
	
  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
	select 
			 'D05007',
			 coalesce(sum(t.charges),0),
			 t.patient_id,
			 t.visit_id,
			 t.pai_visit_id,
			 now(),
			'住院患者诊察费',
			to_char(t.enter_date,'yyyymmdd') AS st_date
	from his_bi.bms_bill_item t
	left join his_bi.pts_pai_visit t1 on t.pai_visit_id = t1.pai_visit_id
	where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')
	and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
	and t.in_out_flag = 'I' --只统计住院患者
	and t.subj_code  = 'B01'
	and t.charges<>0
	group by to_char(t.enter_date,'yyyymmdd'),
				 t.patient_id,
				 t.visit_id,
				 t.pai_visit_id
				 having coalesce(sum(t.charges),0)<>0;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D05007'],"[""delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D05007';\r \r  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r select \r    'D05007',\r    coalesce(sum(t.charges),0),\r    t.patient_id,\r    t.visit_id,\r    t.pai_visit_id,\r    now(),\r   '住院患者诊察费',\r   to_char(t.enter_date,'yyyymmdd') AS st_date\r from his_bi.bms_bill_item t\r left join his_bi.pts_pai_visit t1 on t.pai_visit_id = t1.pai_visit_id\r where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1\r and t.in_out_flag = 'I' --只统计住院患者\r and t.subj_code  = 'B01'\r and t.charges<>0\r group by to_char(t.enter_date,'yyyymmdd'),\r     t.patient_id,\r     t.visit_id,\r     t.pai_visit_id\r     having coalesce(sum(t.charges),0)<>0;\r \r ""]",['住院患者诊察费\r   ']
252,his_bi,fun_special_master_m_16769,"
/***
函数名称：上报指标函数
    作用：上报指标函数
  开发人：leslie 2020年7月21日
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
  c_monthlist   record;
  o_start_month varchar;
  o_end_month   varchar;
  i_start_month varchar;
  i_end_month   varchar;
  i_count       int4;
BEGIN
   
    
  /*如果指标没有历史指标数据，甘肃默认以202001开始计算，结束月份以当前月份往前推1个月*/
  select count(1),to_char((date_trunc('month', now()) + interval '-1 month'),'yyyymm')
           into i_count,i_end_month
    from his_bi.special_master_m;
   
  if(i_count = 0)
    then 
      i_start_month := c_monthlist.month_id;
      --raise notice '0 i_start_month is: %', i_start_month;
  else if(i_count > 0)
    then
      i_start_month := i_end_month;
      --raise notice '1 i_start_month is: %', i_start_month;
  end if;
  end if;
    
  if(length(trim(v_start_month)) = 0 and length(trim(v_end_month)) = 0)
  /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前月份前1个月为截止月份 */
    then 
      o_start_month := i_start_month;
      o_end_month := i_end_month;
      --raise notice '2 o_start_month is: %', o_start_month;
      --raise notice '2 o_end_month is: %', o_end_month;
  else if (length(trim(v_start_month)) <> 0 and length(trim(v_end_month)) <> 0)
  /*PG function 如果参入任何参数，那么以实际入参为准*/
    then 
      o_start_month := v_start_month;
      o_end_month := v_end_month;
      --raise notice '3 o_start_month is: %', o_start_month;
      --raise notice '3 o_end_month is: %', o_end_month;
  end if;
  end if;
      for c_monthlist in (select distinct month_id from his_bi.dim_date_info where month_id >= o_start_month and month_id <= o_end_month order by month_id)
    loop
    --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	

---开具麻醉药品和第一类精神药品处方数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001010703';
insert into his_bi.special_master_m
select
    left(st_date,6) as month_id,
    'SP001010703' as special_code,
    sum(value) as special_value,
    now() as update_time ,
    sum(value) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_outp_quantity_d
where
        key = 'D01002'
  and left(st_date,6)=c_monthlist.month_id
GROUP BY
    left(st_date,6);

---一类切口甲级愈合数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002040301';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002040301' as special_code ,
    value as special_value,
    now() as update_time ,
    value as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.v_operate_level
where
        month_id=c_monthlist.month_id
  and healgrade='1';

---一类切口愈合数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002040302';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002040302' as special_code ,
    sum(value) as special_value,
    now() as update_time ,
    sum(value) as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.v_operate_level
where
        month_id=c_monthlist.month_id;



---一类切口丙愈合数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002040304';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002040304' as special_code ,
    COALESCE(sum(value),0) as special_value,
    now() as update_time ,
    COALESCE(sum(value),0) as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.v_operate_level
where
        month_id=c_monthlist.month_id
  and healgrade='3';




---I 类切口甲级率
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002040303';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP002040303' as special_code ,
    COALESCE(round((sum(case when special_code='SP002040301' then special_value end)/
                    sum(case when special_code='SP002040302' then special_value end))*100,5),0) as special_value,
    now() as update_time,
    COALESCE(round((sum(case when special_code='SP002040301' then special_value end)/
                    sum(case when special_code='SP002040302' then special_value end))*100,5),0) as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.special_master_m
where
        month_id=c_monthlist.month_id;


---I 类切口感染率
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002040305';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP002040305' as special_code ,
    COALESCE(round((sum(case when special_code='SP002040304' then special_value end)/
                    sum(case when special_code='SP002040302' then special_value end))*100,5),0) as special_value,
    now() as update_time,
    COALESCE(round((sum(case when special_code='SP002040304' then special_value end)/
                    sum(case when special_code='SP002040302' then special_value end))*100,5),0) as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.special_master_m
where
        month_id=c_monthlist.month_id;

---剖宫产出院患者术前平均住院日
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080104';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP002080104' as special_code ,
    coalesce(sum(t2.sub_days)/max(t3.value),0) as special_value,
    now() as update_time ,
    coalesce(sum(t2.sub_days)/max(t3.value),0) as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.DWD_INP_MEDICAL_D t1
        inner join his_bi.v_cpoe_operate_first t2 on t1.patient_id = t2.bah and t1.visit_id
        = t2.zycs and t1.key='D00183'  and t2.tag='1' left join
    (
        select
            left(st_date,6) as month_id,
            count(1) as value
        from his_bi.DWD_INP_MEDICAL_D
        where
                key='D00183'
        GROUP BY left(st_date,6)
    )t3 on left(t1.st_date,6) = t3.month_id
where
        left(t1.st_date,6) = c_monthlist.month_id;

---异位妊娠出院患者术前平均住院日
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080304';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP002080304' as special_code ,
    coalesce(sum(t2.sub_days)/max(t3.value),0) as special_value,
    now() as update_time ,
    coalesce(sum(t2.sub_days)/max(t3.value),0) as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.DWD_INP_MEDICAL_D t1
        inner join his_bi.v_cpoe_operate_first t2 on t1.patient_id = t2.bah and t1.visit_id
        = t2.zycs and t1.key='D00113' and t2.tag='1' left join
    (
        select
            left(st_date,6) as month_id,
            count(1) as value
        from his_bi.DWD_INP_MEDICAL_D
        where
                key='D00113'
        GROUP BY left(st_date,6)
    )t3 on left(t1.st_date,6) = t3.month_id
where
        left(t1.st_date,6) = c_monthlist.month_id;

---宫颈癌出院患者术前平均住院日
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080404';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP002080404' as special_code ,
    coalesce(sum(t2.sub_days)/max(t3.value),0) as special_value,
    now() as update_time ,
    coalesce(sum(t2.sub_days)/max(t3.value),0) as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.DWD_INP_MEDICAL_D t1
        inner join his_bi.v_cpoe_operate_first t2 on t1.patient_id = t2.bah and t1.visit_id
        = t2.zycs and t1.key='D00208'  and t2.tag='1' left join
    (
        select
            left(st_date,6) as month_id,
            count(1) as value
        from his_bi.DWD_INP_MEDICAL_D
        where
                key='D00208'
        GROUP BY left(st_date,6)
    )t3 on left(t1.st_date,6) = t3.month_id
where
        left(t1.st_date,6) = c_monthlist.month_id;

---新生儿呼吸窘迫综合征（NRDS）出院患者术前平均住院日
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080704';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP002080704' as special_code ,
    coalesce(sum(t2.sub_days)/max(t3.value),0) as special_value,
    now() as update_time ,
    coalesce(sum(t2.sub_days)/max(t3.value),0) as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.DWD_INP_MEDICAL_D t1
        inner join his_bi.v_cpoe_operate_first t2 on t1.patient_id = t2.bah and t1.visit_id
        = t2.zycs and t1.key='D00128'  and t2.tag='1' left join
    (
        select
            left(st_date,6) as month_id,
            count(1) as value
        from his_bi.DWD_INP_MEDICAL_D
        where
                key='D00128'
        GROUP BY left(st_date,6)
    )t3 on left(t1.st_date,6) = t3.month_id
where
        left(t1.st_date,6) = c_monthlist.month_id;

---社区获得性肺炎(住院、儿童)出院患者术前平均住院日
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080204';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP002080204' as special_code ,
    coalesce(sum(t2.sub_days)/max(t3.value),0) as special_value,
    now() as update_time ,
    coalesce(sum(t2.sub_days)/max(t3.value),0) as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.DWD_INP_MEDICAL_D t1
        inner join his_bi.v_cpoe_operate_first t2 on t1.patient_id = t2.bah and t1.visit_id
        = t2.zycs and t1.key='D00173'  and t2.tag='1' left join
    (
        select
            left(st_date,6) as month_id,
            count(1) as value
        from his_bi.DWD_INP_MEDICAL_D
        where
                key='D00173'
        GROUP BY left(st_date,6)
    )t3 on left(t1.st_date,6) = t3.month_id
where
        left(t1.st_date,6) = c_monthlist.month_id;

---子宫肌瘤出院患者术前平均住院日
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080504';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP002080504' as special_code ,
    coalesce(sum(t2.sub_days)/max(t3.value),0) as special_value,
    now() as update_time ,
    coalesce(sum(t2.sub_days)/max(t3.value),0) as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.DWD_INP_MEDICAL_D t1
        inner join his_bi.v_cpoe_operate_first t2 on t1.patient_id = t2.bah and t1.visit_id
        = t2.zycs and t1.key='D00224'  and t2.tag='1' left join
    (
        select
            left(st_date,6) as month_id,
            count(1) as value
        from his_bi.DWD_INP_MEDICAL_D
        where
                key='D00224'
        GROUP BY left(st_date,6)
    )t3 on left(t1.st_date,6) = t3.month_id
where
        left(t1.st_date,6) = c_monthlist.month_id;

---艾滋病、梅毒和乙肝母婴传播疾病出院患者术前平均住院日
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080604';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP002080604' as special_code ,
    coalesce(sum(t2.sub_days)/max(t3.value),0) as special_value,
    now() as update_time ,
    coalesce(sum(t2.sub_days)/max(t3.value),0) as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.DWD_INP_MEDICAL_D t1
        inner join his_bi.v_cpoe_operate_first t2 on t1.patient_id = t2.bah and t1.visit_id
        = t2.zycs and t1.key='D00210'  and t2.tag='1' left join
    (
        select
            left(st_date,6) as month_id,
            count(1) as value
        from his_bi.DWD_INP_MEDICAL_D
        where
                key='D00210'
        GROUP BY left(st_date,6)
    )t3 on left(t1.st_date,6) = t3.month_id
where
        left(t1.st_date,6) = c_monthlist.month_id;

---儿童哮喘出院患者术前平均住院日
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080804';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP002080804' as special_code ,
    coalesce(sum(t2.sub_days)/max(t3.value),0) as special_value,
    now() as update_time ,
    coalesce(sum(t2.sub_days)/max(t3.value),0) as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.DWD_INP_MEDICAL_D t1
        inner join his_bi.v_cpoe_operate_first t2 on t1.patient_id = t2.bah and t1.visit_id
        = t2.zycs and t1.key='D00225'  and t2.tag='1' left join
    (
        select
            left(st_date,6) as month_id,
            count(1) as value
        from his_bi.DWD_INP_MEDICAL_D
        where
                key='D00225'
        GROUP BY left(st_date,6)
    )t3 on left(t1.st_date,6) = t3.month_id
where
        left(t1.st_date,6) = c_monthlist.month_id;


---社区获得性肺炎(住院、儿童)药品费用
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080207';
insert into his_bi.special_master_m
select
    left(t1.st_date,6) as month_id,
    'SP002080207' as special_code ,
    sum(t2.pham_fees) as special_value,
    now() as update_time ,
    sum(t2.pham_fees) as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_amount_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00173'
  and left(t1.st_date,6) = c_monthlist.month_id
group by left(t1.st_date,6);

---子宫肌瘤药品费用
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080507';
insert into his_bi.special_master_m
select
    left(t1.st_date,6) as month_id,
    'SP002080507' as special_code ,
    sum(t2.pham_fees) as special_value,
    now() as update_time ,
    sum(t2.pham_fees) as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_amount_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00224'
  and left(t1.st_date,6) = c_monthlist.month_id
group by left(t1.st_date,6);

---艾滋病、梅毒和乙肝母婴传播疾病药品费用
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080607';
insert into his_bi.special_master_m
select
    left(t1.st_date,6) as month_id,
    'SP002080607' as special_code ,
    sum(t2.pham_fees) as special_value,
    now() as update_time ,
    sum(t2.pham_fees) as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_amount_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00210'
  and left(t1.st_date,6) = c_monthlist.month_id
group by left(t1.st_date,6);



---社区获得性肺炎(住院、儿童)材料费用
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080209';
insert into his_bi.special_master_m
select
    left(t1.st_date,6) as month_id,
    'SP002080209' as special_code ,
    sum(t2.pham_fees) as special_value,
    now() as update_time ,
    sum(t2.pham_fees) as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_amount_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00173'
  and left(t1.st_date,6) = c_monthlist.month_id
group by left(t1.st_date,6);

---子宫肌瘤材料费用
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080509';
insert into his_bi.special_master_m
select
    left(t1.st_date,6) as month_id,
    'SP002080509' as special_code ,
    sum(t2.pham_fees) as special_value,
    now() as update_time ,
    sum(t2.pham_fees) as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_amount_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00224'
  and left(t1.st_date,6) = c_monthlist.month_id
group by left(t1.st_date,6);

---艾滋病、梅毒和乙肝母婴传播疾病材料费用
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080609';
insert into his_bi.special_master_m
select
    left(t1.st_date,6) as month_id,
    'SP002080609' as special_code ,
    sum(t2.pham_fees) as special_value,
    now() as update_time ,
    sum(t2.pham_fees) as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_amount_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00210'
  and left(t1.st_date,6) = c_monthlist.month_id
group by left(t1.st_date,6);


---剖宫产药品费用
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080107';
insert into his_bi.special_master_m
select
    left(t1.st_date,6) as month_id,
    'SP002080107' as special_code ,
    sum(t2.pham_fees) as special_value,
    now() as update_time ,
    sum(t2.pham_fees) as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.DWD_INP_MEDICAL_D t1
         inner join his_bi.dw_inp_patient_amount_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00183'
  and left(t1.st_date,6) = c_monthlist.month_id
group by left(t1.st_date,6);

---异位妊娠药品费用
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080307';
insert into his_bi.special_master_m
select
    left(t1.st_date,6) as month_id,
    'SP002080307' as special_code ,
    sum(t2.pham_fees) as special_value,
    now() as update_time ,
    sum(t2.pham_fees) as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.DWD_INP_MEDICAL_D t1
         inner join his_bi.dw_inp_patient_amount_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00113'
  and left(t1.st_date,6) = c_monthlist.month_id
group by left(t1.st_date,6);

---宫颈癌药品费用
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080407';
insert into his_bi.special_master_m
select
    left(t1.st_date,6) as month_id,
    'SP002080407' as special_code ,
    sum(t2.pham_fees) as special_value,
    now() as update_time ,
    sum(t2.pham_fees) as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.DWD_INP_MEDICAL_D t1
         inner join his_bi.dw_inp_patient_amount_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00208'
  and left(t1.st_date,6) = c_monthlist.month_id
group by left(t1.st_date,6);


---剖宫产材料费用
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080109';
insert into his_bi.special_master_m
select
    left(t1.st_date,6) as month_id,
    'SP002080109' as special_code ,
    sum(t2.pham_fees) as special_value,
    now() as update_time ,
    sum(t2.pham_fees) as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.DWD_INP_MEDICAL_D t1
         inner join his_bi.dw_inp_patient_amount_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00183'
  and left(t1.st_date,6) = c_monthlist.month_id
group by left(t1.st_date,6);

---异位妊娠材料费用
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080309';
insert into his_bi.special_master_m
select
    left(t1.st_date,6) as month_id,
    'SP002080309' as special_code ,
    sum(t2.pham_fees) as special_value,
    now() as update_time ,
    sum(t2.pham_fees) as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.DWD_INP_MEDICAL_D t1
         inner join his_bi.dw_inp_patient_amount_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00113'
  and left(t1.st_date,6) = c_monthlist.month_id
group by left(t1.st_date,6);

---宫颈癌材料费用
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080409';
insert into his_bi.special_master_m
select
    left(t1.st_date,6) as month_id,
    'SP002080409' as special_code ,
    sum(t2.pham_fees) as special_value,
    now() as update_time ,
    sum(t2.pham_fees) as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.DWD_INP_MEDICAL_D t1
         inner join his_bi.dw_inp_patient_amount_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00208'
  and left(t1.st_date,6) = c_monthlist.month_id
group by left(t1.st_date,6);




---总诊疗人次数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001010101';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP001010101' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX03803';

---1.产后出血死亡率
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070103';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP002070103' as special_code ,
    case when  sum(case when special_code='SP002070101' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002070102' then special_value end)/
                                                                                                          sum(case when special_code='SP002070101' then special_value end)),5),0) else 0 end as special_value,
    now() as update_time ,
    case when  sum(case when special_code='SP002070101' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002070102' then special_value end)/
                                                                                                          sum(case when special_code='SP002070101' then special_value end)),5),0) else 0 end as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.special_master_m
where
        month_id=c_monthlist.month_id;

---2.妊娠合并糖尿病死亡率
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070203';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP002070203' as special_code ,
    case when  sum(case when special_code='SP002070201' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002070202' then special_value end)/
                                                                                                          sum(case when special_code='SP002070201' then special_value end)),5),0) else 0 end as special_value,
    now() as update_time ,
    case when  sum(case when special_code='SP002070201' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002070202' then special_value end)/
                                                                                                          sum(case when special_code='SP002070201' then special_value end)),5),0) else 0 end as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.special_master_m
where
        month_id=c_monthlist.month_id;

---3.盆腔炎性疾病死亡率
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070303';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP002070303' as special_code ,
    case when  sum(case when special_code='SP002070301' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002070302' then special_value end)/
                                                                                                          sum(case when special_code='SP002070301' then special_value end)),5),0) else 0 end as special_value,
    now() as update_time ,
    case when  sum(case when special_code='SP002070301' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002070302' then special_value end)/
                                                                                                          sum(case when special_code='SP002070301' then special_value end)),5),0) else 0 end as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.special_master_m
where
        month_id=c_monthlist.month_id;

---4.异位妊娠死亡率
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070403';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP002070403' as special_code ,
    case when  sum(case when special_code='SP002070401' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002070402' then special_value end)/
                                                                                                          sum(case when special_code='SP002070401' then special_value end)),5),0) else 0 end as special_value,
    now() as update_time ,
    case when  sum(case when special_code='SP002070401' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002070402' then special_value end)/
                                                                                                          sum(case when special_code='SP002070401' then special_value end)),5),0) else 0 end as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.special_master_m
where
        month_id=c_monthlist.month_id;

---5.女性生殖器脱垂死亡率
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070503';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP002070503' as special_code ,
    case when  sum(case when special_code='SP002070501' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002070502' then special_value end)/
                                                                                                          sum(case when special_code='SP002070501' then special_value end)),5),0) else 0 end as special_value,
    now() as update_time ,
    case when  sum(case when special_code='SP002070501' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002070502' then special_value end)/
                                                                                                          sum(case when special_code='SP002070501' then special_value end)),5),0) else 0 end as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.special_master_m
where
        month_id=c_monthlist.month_id;

---6.直肠阴道隔子宫内膜异位症死亡率
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070603';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP002070603' as special_code ,
    case when  sum(case when special_code='SP002070601' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002070602' then special_value end)/
                                                                                                          sum(case when special_code='SP002070601' then special_value end)),5),0) else 0 end as special_value,
    now() as update_time ,
    case when  sum(case when special_code='SP002070601' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002070602' then special_value end)/
                                                                                                          sum(case when special_code='SP002070601' then special_value end)),5),0) else 0 end as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.special_master_m
where
        month_id=c_monthlist.month_id;

---7.妊娠滋养细胞疾病死亡率
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070703';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP002070703' as special_code ,
    case when  sum(case when special_code='SP002070701' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002070702' then special_value end)/
                                                                                                          sum(case when special_code='SP002070701' then special_value end)),5),0) else 0 end as special_value,
    now() as update_time ,
    case when  sum(case when special_code='SP002070701' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002070702' then special_value end)/
                                                                                                          sum(case when special_code='SP002070701' then special_value end)),5),0) else 0 end as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.special_master_m
where
        month_id=c_monthlist.month_id;

---8.重度卵巢过度刺激综合征死亡率
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070803';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP002070803' as special_code ,
    case when  sum(case when special_code='SP002070801' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002070802' then special_value end)/
                                                                                                          sum(case when special_code='SP002070801' then special_value end)),5),0) else 0 end as special_value,
    now() as update_time ,
    case when  sum(case when special_code='SP002070801' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002070802' then special_value end)/
                                                                                                          sum(case when special_code='SP002070801' then special_value end)),5),0) else 0 end as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.special_master_m
where
        month_id=c_monthlist.month_id;

---9.重度子痫前期死亡率
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070903';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP002070903' as special_code ,
    case when  sum(case when special_code='SP002070901' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002070902' then special_value end)/
                                                                                                          sum(case when special_code='SP002070901' then special_value end)),5),0) else 0 end as special_value,
    now() as update_time ,
    case when  sum(case when special_code='SP002070901' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002070902' then special_value end)/
                                                                                                          sum(case when special_code='SP002070901' then special_value end)),5),0) else 0 end as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.special_master_m
where
        month_id=c_monthlist.month_id;

---10.早产死亡率
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071003';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP002071003' as special_code ,
    case when  sum(case when special_code='SP002071001' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002071002' then special_value end)/
                                                                                                          sum(case when special_code='SP002071001' then special_value end)),5),0) else 0 end as special_value,
    now() as update_time ,
    case when  sum(case when special_code='SP002071001' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002071002' then special_value end)/
                                                                                                          sum(case when special_code='SP002071001' then special_value end)),5),0) else 0 end as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.special_master_m
where
        month_id=c_monthlist.month_id;

---11.多胎妊娠死亡率
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071103';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP002071103' as special_code ,
    case when  sum(case when special_code='SP002071101' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002071102' then special_value end)/
                                                                                                          sum(case when special_code='SP002071101' then special_value end)),5),0) else 0 end as special_value,
    now() as update_time ,
    case when  sum(case when special_code='SP002071101' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002071102' then special_value end)/
                                                                                                          sum(case when special_code='SP002071101' then special_value end)),5),0) else 0 end as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.special_master_m
where
        month_id=c_monthlist.month_id;

---12.胎膜早破死亡率
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071203';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP002071203' as special_code ,
    case when  sum(case when special_code='SP002071201' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002071202' then special_value end)/
                                                                                                          sum(case when special_code='SP002071201' then special_value end)),5),0) else 0 end as special_value,
    now() as update_time ,
    case when  sum(case when special_code='SP002071201' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002071202' then special_value end)/
                                                                                                          sum(case when special_code='SP002071201' then special_value end)),5),0) else 0 end as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.special_master_m
where
        month_id=c_monthlist.month_id;

---13.前置胎盘死亡率
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071303';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP002071303' as special_code ,
    case when  sum(case when special_code='SP002071301' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002071302' then special_value end)/
                                                                                                          sum(case when special_code='SP002071301' then special_value end)),5),0) else 0 end as special_value,
    now() as update_time ,
    case when  sum(case when special_code='SP002071301' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002071302' then special_value end)/
                                                                                                          sum(case when special_code='SP002071301' then special_value end)),5),0) else 0 end as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.special_master_m
where
        month_id=c_monthlist.month_id;

---14.胎盘早剥死亡率
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071403';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP002071403' as special_code ,
    case when  sum(case when special_code='SP002071401' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002071402' then special_value end)/
                                                                                                          sum(case when special_code='SP002071401' then special_value end)),5),0) else 0 end as special_value,
    now() as update_time ,
    case when  sum(case when special_code='SP002071401' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002071402' then special_value end)/
                                                                                                          sum(case when special_code='SP002071401' then special_value end)),5),0) else 0 end as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.special_master_m
where
        month_id=c_monthlist.month_id;

---15.新生儿窒息死亡率
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071503';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP002071503' as special_code ,
    case when  sum(case when special_code='SP002071501' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002071502' then special_value end)/
                                                                                                          sum(case when special_code='SP002071501' then special_value end)),5),0) else 0 end as special_value,
    now() as update_time ,
    case when  sum(case when special_code='SP002071501' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002071502' then special_value end)/
                                                                                                          sum(case when special_code='SP002071501' then special_value end)),5),0) else 0 end as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.special_master_m
where
        month_id=c_monthlist.month_id;

---16.新生儿呼吸窘迫死亡率
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071603';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP002071603' as special_code ,
    case when  sum(case when special_code='SP002071601' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002071602' then special_value end)/
                                                                                                          sum(case when special_code='SP002071601' then special_value end)),5),0) else 0 end as special_value,
    now() as update_time ,
    case when  sum(case when special_code='SP002071601' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002071602' then special_value end)/
                                                                                                          sum(case when special_code='SP002071601' then special_value end)),5),0) else 0 end as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.special_master_m
where
        month_id=c_monthlist.month_id;

---17.支气管肺炎死亡率
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071703';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP002071703' as special_code ,
    case when  sum(case when special_code='SP002071701' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002071702' then special_value end)/
                                                                                                          sum(case when special_code='SP002071701' then special_value end)),5),0) else 0 end as special_value,
    now() as update_time ,
    case when  sum(case when special_code='SP002071701' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002071702' then special_value end)/
                                                                                                          sum(case when special_code='SP002071701' then special_value end)),5),0) else 0 end as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.special_master_m
where
        month_id=c_monthlist.month_id;

---18.小儿腹泻病死亡率
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071803';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP002071803' as special_code ,
    case when  sum(case when special_code='SP002071801' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002071802' then special_value end)/
                                                                                                          sum(case when special_code='SP002071801' then special_value end)),5),0) else 0 end as special_value,
    now() as update_time ,
    case when  sum(case when special_code='SP002071801' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002071802' then special_value end)/
                                                                                                          sum(case when special_code='SP002071801' then special_value end)),5),0) else 0 end as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.special_master_m
where
        month_id=c_monthlist.month_id;

---19.低出生体重儿死亡率
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071903';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP002071903' as special_code ,
    case when  sum(case when special_code='SP002071901' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002071902' then special_value end)/
                                                                                                          sum(case when special_code='SP002071901' then special_value end)),5),0) else 0 end as special_value,
    now() as update_time ,
    case when  sum(case when special_code='SP002071901' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002071902' then special_value end)/
                                                                                                          sum(case when special_code='SP002071901' then special_value end)),5),0) else 0 end as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.special_master_m
where
        month_id=c_monthlist.month_id;

---20.新生儿高胆红素血症死亡率
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002072003';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP002072003' as special_code ,
    case when  sum(case when special_code='SP002072001' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002072002' then special_value end)/
                                                                                                          sum(case when special_code='SP002072001' then special_value end)),5),0) else 0 end as special_value,
    now() as update_time ,
    case when  sum(case when special_code='SP002072001' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002072002' then special_value end)/
                                                                                                          sum(case when special_code='SP002072001' then special_value end)),5),0) else 0 end as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.special_master_m
where
        month_id=c_monthlist.month_id;


---门急诊人次
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001010102';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP001010102' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV007010201';


---急诊人次
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001010105';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP001010105' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV007010202';



---预约诊疗人次
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001010201';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP001010201' as special_code ,
    sum(yyrs) as special_value,
    now() as update_time ,
    sum(yyrs)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.dw_outp_special_clinic_type t1
where
        t1.month_id=c_monthlist.month_id;


---门诊患者平均预约诊疗率
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001010202';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP001010202' as special_code ,
    COALESCE(round((sum(case when special_code='SP001010201' then special_value end)/
                    sum(case when special_code='SP001010101' then special_value end))*100,5),0) as special_value,
    now() as update_time ,
    COALESCE(round((sum(case when special_code='SP001010201' then special_value end)/
                    sum(case when special_code='SP001010101' then special_value end))*100,5),0) as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.special_master_m
where month_id=c_monthlist.month_id;





---普通门诊预约人次
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001010204';
insert into his_bi.special_master_m
select
    t1.month_id,
    'SP001010204' as special_code ,
    t1.yyrs as special_value,
    now() as update_time ,
    t1.yyrs  as self_value  ,
    null as check_flag  ,
    null as check_comm
from
    his_bi.dw_outp_special_clinic_type t1
where
        t1.month_id=c_monthlist.month_id
  and t1.special_clinic_type='1';


---特需门诊预约人次
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001010205';
insert into his_bi.special_master_m
select
    t1.month_id,
    'SP001010205' as special_code ,
    t1.yyrs as special_value,
    now() as update_time ,
    t1.yyrs  as self_value  ,
    null as check_flag  ,
    null as check_comm
from
    his_bi.dw_outp_special_clinic_type t1
where
        t1.month_id=c_monthlist.month_id
  and t1.special_clinic_type='2';


---专科门诊预约人次
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001010206';
insert into his_bi.special_master_m
select
    t1.month_id,
    'SP001010206' as special_code ,
    t1.yyrs as special_value,
    now() as update_time ,
    t1.yyrs  as self_value  ,
    null as check_flag  ,
    null as check_comm
from
    his_bi.dw_outp_special_clinic_type t1
where
        t1.month_id=c_monthlist.month_id
  and t1.special_clinic_type='3';


---专病门诊预约人次
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001010207';
insert into his_bi.special_master_m
select
    t1.month_id,
    'SP001010207' as special_code ,
    t1.yyrs as special_value,
    now() as update_time ,
    t1.yyrs  as self_value  ,
    null as check_flag  ,
    null as check_comm
from
    his_bi.dw_outp_special_clinic_type t1
where
        t1.month_id=c_monthlist.month_id
  and t1.special_clinic_type='4';

---妊娠合并糖尿病7天重返
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070206';
insert into his_bi.special_master_m
select
    c_monthlist.month_id ,
    'SP002070206' as special_code ,
    coalesce(count(1),0) as special_value,
    now() as update_time,
    coalesce(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.DWD_INP_MEDICAL_D t1
         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id=t2.pai_visit_id and t2.key='D00114'
where
        t1.key = 'D05026'
  and left(t1.st_date,6)=c_monthlist.month_id;

---盆腔炎性疾病7天重返
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070306';
insert into his_bi.special_master_m
select
    c_monthlist.month_id ,
    'SP002070306' as special_code ,
    coalesce(count(1),0) as special_value,
    now() as update_time,
    coalesce(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.DWD_INP_MEDICAL_D t1
         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id=t2.pai_visit_id and t2.key='D00116'
where
        t1.key = 'D05026'
  and left(t1.st_date,6)=c_monthlist.month_id;

---异位妊娠7天重返
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070406';
insert into his_bi.special_master_m
select
    c_monthlist.month_id ,
    'SP002070406' as special_code ,
    coalesce(count(1),0) as special_value,
    now() as update_time,
    coalesce(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.DWD_INP_MEDICAL_D t1
         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id=t2.pai_visit_id and t2.key='D00113'
where
        t1.key = 'D05026'
  and left(t1.st_date,6)=c_monthlist.month_id;

---女性生殖器脱垂7天重返
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070506';
insert into his_bi.special_master_m
select
    c_monthlist.month_id ,
    'SP002070506' as special_code ,
    coalesce(count(1),0) as special_value,
    now() as update_time,
    coalesce(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.DWD_INP_MEDICAL_D t1
         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id=t2.pai_visit_id and t2.key='D00117'
where
        t1.key = 'D05026'
  and left(t1.st_date,6)=c_monthlist.month_id;

---重度卵巢过度刺激综合征7天重返
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070806';
insert into his_bi.special_master_m
select
    c_monthlist.month_id ,
    'SP002070806' as special_code ,
    coalesce(count(1),0) as special_value,
    now() as update_time,
    coalesce(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.DWD_INP_MEDICAL_D t1
         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id=t2.pai_visit_id and t2.key='D00121'
where
        t1.key = 'D05026'
  and left(t1.st_date,6)=c_monthlist.month_id;

---重度子痫前期7天重返
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070906';
insert into his_bi.special_master_m
select
    c_monthlist.month_id ,
    'SP002070906' as special_code ,
    coalesce(count(1),0) as special_value,
    now() as update_time,
    coalesce(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.DWD_INP_MEDICAL_D t1
         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id=t2.pai_visit_id and t2.key='D00111'
where
        t1.key = 'D05026'
  and left(t1.st_date,6)=c_monthlist.month_id;

---早产7天重返
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071006';
insert into his_bi.special_master_m
select
    c_monthlist.month_id ,
    'SP002071006' as special_code ,
    coalesce(count(1),0) as special_value,
    now() as update_time,
    coalesce(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.DWD_INP_MEDICAL_D t1
         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id=t2.pai_visit_id and t2.key='D00106'
where
        t1.key = 'D05026'
  and left(t1.st_date,6)=c_monthlist.month_id;

---多胎妊娠7天重返
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071106';
insert into his_bi.special_master_m
select
    c_monthlist.month_id ,
    'SP002071106' as special_code ,
    coalesce(count(1),0) as special_value,
    now() as update_time,
    coalesce(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.DWD_INP_MEDICAL_D t1
         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id=t2.pai_visit_id and t2.key='D00107'
where
        t1.key = 'D05026'
  and left(t1.st_date,6)=c_monthlist.month_id;

---胎膜早破7天重返
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071206';
insert into his_bi.special_master_m
select
    c_monthlist.month_id ,
    'SP002071206' as special_code ,
    coalesce(count(1),0) as special_value,
    now() as update_time,
    coalesce(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.DWD_INP_MEDICAL_D t1
         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id=t2.pai_visit_id and t2.key='D00108'
where
        t1.key = 'D05026'
  and left(t1.st_date,6)=c_monthlist.month_id;

---前置胎盘7天重返
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071306';
insert into his_bi.special_master_m
select
    c_monthlist.month_id ,
    'SP002071306' as special_code ,
    coalesce(count(1),0) as special_value,
    now() as update_time,
    coalesce(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.DWD_INP_MEDICAL_D t1
         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id=t2.pai_visit_id and t2.key='D00109'
where
        t1.key = 'D05026'
  and left(t1.st_date,6)=c_monthlist.month_id;

---胎盘早剥7天重返
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071406';
insert into his_bi.special_master_m
select
    c_monthlist.month_id ,
    'SP002071406' as special_code ,
    coalesce(count(1),0) as special_value,
    now() as update_time,
    coalesce(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.DWD_INP_MEDICAL_D t1
         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id=t2.pai_visit_id and t2.key='D00110'
where
        t1.key = 'D05026'
  and left(t1.st_date,6)=c_monthlist.month_id;

---新生儿窒息7天重返
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071506';
insert into his_bi.special_master_m
select
    c_monthlist.month_id ,
    'SP002071506' as special_code ,
    coalesce(count(1),0) as special_value,
    now() as update_time,
    coalesce(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.DWD_INP_MEDICAL_D t1
         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id=t2.pai_visit_id and t2.key='D00127'
where
        t1.key = 'D05026'
  and left(t1.st_date,6)=c_monthlist.month_id;

---新生儿呼吸窘迫7天重返
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071606';
insert into his_bi.special_master_m
select
    c_monthlist.month_id ,
    'SP002071606' as special_code ,
    coalesce(count(1),0) as special_value,
    now() as update_time,
    coalesce(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.DWD_INP_MEDICAL_D t1
         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id=t2.pai_visit_id and t2.key='D00128'
where
        t1.key = 'D05026'
  and left(t1.st_date,6)=c_monthlist.month_id;

---支气管肺炎7天重返
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071706';
insert into his_bi.special_master_m
select
    c_monthlist.month_id ,
    'SP002071706' as special_code ,
    coalesce(count(1),0) as special_value,
    now() as update_time,
    coalesce(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.DWD_INP_MEDICAL_D t1
         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id=t2.pai_visit_id and t2.key='D00123'
where
        t1.key = 'D05026'
  and left(t1.st_date,6)=c_monthlist.month_id;

---小儿腹泻病7天重返
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071806';
insert into his_bi.special_master_m
select
    c_monthlist.month_id ,
    'SP002071806' as special_code ,
    coalesce(count(1),0) as special_value,
    now() as update_time,
    coalesce(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.DWD_INP_MEDICAL_D t1
         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id=t2.pai_visit_id and t2.key='D00124'
where
        t1.key = 'D05026'
  and left(t1.st_date,6)=c_monthlist.month_id;

---低出生体重儿7天重返
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071906';
insert into his_bi.special_master_m
select
    c_monthlist.month_id ,
    'SP002071906' as special_code ,
    coalesce(count(1),0) as special_value,
    now() as update_time,
    coalesce(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.DWD_INP_MEDICAL_D t1
         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id=t2.pai_visit_id and t2.key='D00125'
where
        t1.key = 'D05026'
  and left(t1.st_date,6)=c_monthlist.month_id;


---普通门诊预约率
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001010208';
insert into his_bi.special_master_m
select
    t1.month_id,
    'SP001010208' as special_code ,
    round((t1.yyrs*1.00/t1.ghrs)*100,5) as special_value,
    now() as update_time ,
    round((t1.yyrs*1.00/t1.ghrs)*100,5) as self_value  ,
    null as check_flag  ,
    null as check_comm
from
    his_bi.dw_outp_special_clinic_type t1
where
        t1.month_id=c_monthlist.month_id
  and t1.special_clinic_type='1';


---普通门诊预约率
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001010209';
insert into his_bi.special_master_m
select
    t1.month_id,
    'SP001010209' as special_code ,
    round((t1.yyrs*1.00/t1.ghrs)*100,5) as special_value,
    now() as update_time ,
    round((t1.yyrs*1.00/t1.ghrs)*100,5) as self_value  ,
    null as check_flag  ,
    null as check_comm
from
    his_bi.dw_outp_special_clinic_type t1
where
        t1.month_id=c_monthlist.month_id
  and t1.special_clinic_type='2';


---专科门诊预约率
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001010210';
insert into his_bi.special_master_m
select
    t1.month_id,
    'SP001010210' as special_code ,
    round((t1.yyrs*1.00/t1.ghrs)*100,5) as special_value,
    now() as update_time ,
    round((t1.yyrs*1.00/t1.ghrs)*100,5) as self_value  ,
    null as check_flag  ,
    null as check_comm
from
    his_bi.dw_outp_special_clinic_type t1
where
        t1.month_id=c_monthlist.month_id
  and t1.special_clinic_type='3';



---专病门诊预约率
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001010211';
insert into his_bi.special_master_m
select
    t1.month_id,
    'SP001010211' as special_code ,
    round((t1.yyrs*1.00/t1.ghrs)*100,5) as special_value,
    now() as update_time ,
    round((t1.yyrs*1.00/t1.ghrs)*100,5) as self_value  ,
    null as check_flag  ,
    null as check_comm
from
    his_bi.dw_outp_special_clinic_type t1
where
        t1.month_id=c_monthlist.month_id
  and t1.special_clinic_type='4';



---门诊患者预约后平均等待时间
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001010212';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP001010212' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX023';



---复诊率
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001010401';
insert into his_bi.special_master_m
select
    t1.month_id,
    'SP001010401' as special_code ,
    round((count(case when t1.return_visit=1 then 1 end )*1.0/count(1))*100,5) as special_value,
    now() as update_time ,
    round((count(case when t1.return_visit=1 then 1 end )*1.0/count(1))*100,5) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dw_outp_patient_info_m t1
where
        t1.month_id=c_monthlist.month_id
group by t1.month_id;



---复诊预约率
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001010401';
insert into his_bi.special_master_m
select
    t1.month_id,
    'SP001010401' as special_code ,
    round((count(case when t1.return_visit=1 then 1 end )*1.0/count(1))*100,5) as special_value,
    now() as update_time ,
    round((count(case when t1.return_visit=1 then 1 end )*1.0/count(1))*100,5) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dw_outp_patient_info_m t1
where
        t1.month_id=c_monthlist.month_id
group by t1.month_id;



---复诊预约率
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001010402';
insert into his_bi.special_master_m
select
    t1.month_id,
    'SP001010402' as special_code ,
    round((count(case when t1.return_visit=1 and is_yygh=1 then 1 end )*1.0/(count(case when t1.return_visit=1 then 1 end)))*100,5) as special_value,
    now() as update_time ,
    round((count(case when t1.return_visit=1 and is_yygh=1 then 1 end )*1.0/(count(case when t1.return_visit=1 then 1 end)))*100,5) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dw_outp_patient_info_m t1
where
        t1.month_id=c_monthlist.month_id
group by t1.month_id;



---门诊人头人次比
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001010108';
insert into his_bi.special_master_m
select
    t1.month_id,
    'SP001010108' as special_code ,
    count(distinct t1.outp_visit_id)*1.00/count(distinct t1.patient_id) as special_value,
    now() as update_time ,
    count(distinct t1.outp_visit_id)*1.00/count(distinct t1.patient_id) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dw_outp_patient_info_m t1
where
        t1.month_id=c_monthlist.month_id
group by t1.month_id;


---门诊人头
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001010107';
insert into his_bi.special_master_m
select
    t1.month_id,
    'SP001010107' as special_code ,
    count(distinct t1.patient_id) as special_value,
    now() as update_time ,
    count(distinct t1.patient_id) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dw_outp_patient_info_m t1
where
        t1.month_id=c_monthlist.month_id
group by t1.month_id;



---急诊入院人次
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001020201';
insert into his_bi.special_master_m
select
    to_char(t1.cyrq,'yyyymm') as month_id,
    'SP001020201' as special_code ,
    count(1) as special_value,
    now() as update_time ,
    count(1) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.ods_patient_medical_record t1
where
        t1.rytj = '1'
  and to_char(t1.cyrq,'yyyymm') = c_monthlist.month_id
group by  to_char(t1.cyrq,'yyyymm');



---门诊入院人次
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001020202';
insert into his_bi.special_master_m
select
    to_char(t1.cyrq,'yyyymm') as month_id,
    'SP001020202' as special_code ,
    count(1) as special_value,
    now() as update_time ,
    count(1) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.ods_patient_medical_record t1
where
        t1.rytj = '2'
  and to_char(t1.cyrq,'yyyymm') = c_monthlist.month_id
group by  to_char(t1.cyrq,'yyyymm');


---其他医疗机构转入人次
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001020203';
insert into his_bi.special_master_m
select
    to_char(t1.cyrq,'yyyymm') as month_id,
    'SP001020203' as special_code ,
    count(1) as special_value,
    now() as update_time ,
    count(1) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.ods_patient_medical_record t1
where
        t1.rytj = '3'
  and to_char(t1.cyrq,'yyyymm') = c_monthlist.month_id
group by  to_char(t1.cyrq,'yyyymm');




---入院人次
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001020101';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP001020101' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV007010204';



---出院人次
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001020102';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP001020102' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX00102';



---出院人头
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001020103';
insert into his_bi.special_master_m
select
    t1.month_id,
    'SP001020103' as special_code ,
    count(distinct t1.patient_id) as special_value,
    now() as update_time ,
    count(distinct t1.patient_id) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dw_inp_patient_info_m t1
where
        t1.month_id=c_monthlist.month_id
group by t1.month_id;




---住院人头人次比
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001020104';
insert into his_bi.special_master_m
select
    t1.month_id,
    'SP001020104' as special_code ,
    round((count(distinct pai_visit_id)*1.00/count(distinct patient_id))*100,5) as special_value,
    now() as update_time ,
    round((count(distinct pai_visit_id)*1.00/count(distinct patient_id))*100,5) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dw_inp_patient_info_m t1
where
        t1.month_id=c_monthlist.month_id
group by t1.month_id;



----出院患者实际占用总床日数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001020105';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP001020105' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX04003';

---年住院患者入院、出院人次
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001020106';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP001020106' as special_code ,
    COALESCE(round((sum(case when special_code='SP001020101' then special_value end)+
                    sum(case when special_code='SP001020102' then special_value end)),5),0) as special_value,
    now() as update_time,
    COALESCE(round((sum(case when special_code='SP001020101' then special_value end)+
                    sum(case when special_code='SP001020102' then special_value end)),5),0) as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.special_master_m
where
        month_id=c_monthlist.month_id;


---门诊人次数与出院人次数比
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001020107';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP001020107' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX001';



---每百门急诊入院人数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001020301';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP001020301' as special_code ,
    round((max(t2.value)/( COALESCE(max(t1.level_value) ,0)))*100,5) as special_value,
    now() as update_time ,
    round((max(t2.value)/( COALESCE(max(t1.level_value) ,0)))*100,5)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
         left join (
    select
        to_char(t1.cyrq,'yyyymm') as month_id,
        count(1) as value
    from his_bi.ods_patient_medical_record t1
    where
            t1.rytj in('1','2')
    group by  to_char(t1.cyrq,'yyyymm')
)t2 on t1.month_id = t2.month_id
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV007010201';


---体检人次
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001040101';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP001040101' as special_code ,
    case when count(1)=0 then 0 else count(1) end as special_value,
    now() as update_time ,
    count(1)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_outp_work_d
where
        key = 'D00131'
  and left(st_date,6) = c_monthlist.month_id;



---健康检查总费用
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001040102';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP001040102' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX03104';

---健康检查次均费用
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001040103';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP001040103' as special_code ,
    COALESCE(round((sum(case when special_code='SP001040102' then special_value end)/
                    sum(case when special_code='SP001040101' then special_value end)),5),0) as special_value,
    now() as update_time,
    COALESCE(round((sum(case when special_code='SP001040102' then special_value end)/
                    sum(case when special_code='SP001040101' then special_value end)),5),0) as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.special_master_m
where
        month_id=c_monthlist.month_id;

---年分娩产妇数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001050101';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP001050101' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV007010210';


---活产数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001050102';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP001050102' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV007010211';



----出入院主要诊断符合率
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002020201';
insert into his_bi.special_master_m
select
    to_char(t1.cyrq,'yyyymm') as month_id,
    'SP002020201' as special_code ,
    round((sum(case when t1.rcfhbz= '1' then 1 end)*1.00/count(1))*100,5) as special_value,
    now() as update_time ,
    round((sum(case when t1.rcfhbz= '1' then 1 end)*1.00/count(1))*100,5) as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.ods_patient_medical_record t1
where
        to_char(t1.cyrq,'yyyymm')=c_monthlist.month_id
group by to_char(t1.cyrq,'yyyymm');


---门诊人次
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001010103';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP001010103' as special_code ,
    (sum((case when t1.special_code='SP001010102' then t1.special_value end)))
        -sum((case when t1.special_code='SP001010105' then t1.special_value end)) as special_value,
    now() as update_time ,
    (sum((case when t1.special_code='SP001010102' then t1.special_value end)))
        -sum((case when t1.special_code='SP001010105' then t1.special_value end)) as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.special_master_m t1
where
        t1.month_id=c_monthlist.month_id;




---特需门诊服务人次
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001010502';
insert into his_bi.special_master_m
select
    month_id,
    'SP001010502' as special_code ,
    ghrs as special_value,
    now() as update_time ,
    ghrs as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.dw_outp_special_clinic_type
where
        month_id=c_monthlist.month_id
  and special_clinic_type='2';


---门诊人次(特需计算需要)
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001010503';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP001010503' as special_code ,
    sum((case when t1.special_code='SP001010102' then t1.special_value end))
        -sum((case when t1.special_code='SP001010105' then t1.special_value end)) as special_value,
    now() as update_time ,
    sum((case when t1.special_code='SP001010102' then t1.special_value end))
        -sum((case when t1.special_code='SP001010105' then t1.special_value end)) as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.special_master_m t1
where
        t1.month_id=c_monthlist.month_id;



---特需门诊服务人次数比例
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001010501';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP001010501' as special_code ,
    COALESCE((sum(case when special_code='SP001010502' then special_value end)/
              sum(case when special_code='SP001010503' then special_value end))*100,0) as special_value,
    now() as update_time ,
    COALESCE((sum(case when special_code='SP001010502' then special_value end)/
              sum(case when special_code='SP001010503' then special_value end))*100,0) as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.special_master_m
where
        special_code in ('SP001010502','SP001010503')
  and month_id=c_monthlist.month_id
group by month_id;


---一级手术
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002040201';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP002040201' as special_code ,
    operation_count as special_value,
    now() as update_time ,
    operation_count as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.dw_inp_operation_level_m
where
        operation_level='一级手术'
  and month_id=c_monthlist.month_id;



---二级手术
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002040202';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP002040202' as special_code ,
    operation_count as special_value,
    now() as update_time ,
    operation_count as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.dw_inp_operation_level_m
where
        operation_level='二级手术'
  and month_id=c_monthlist.month_id;



---三级手术
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002040203';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP002040203' as special_code ,
    operation_count as special_value,
    now() as update_time ,
    operation_count as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.dw_inp_operation_level_m
where
        operation_level='三级手术'
  and month_id=c_monthlist.month_id;



---四级手术
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002040204';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP002040204' as special_code ,
    operation_count as special_value,
    now() as update_time ,
    operation_count as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.dw_inp_operation_level_m
where
        operation_level='四级手术'
  and month_id=c_monthlist.month_id;


---三四级手术出院占比
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002040205';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP002040205' as special_code ,
    round((sum(case when operation_level in ('四级手术' ,'三级手术') then operation_count end)/
           sum(operation_count))*100,5) as special_value,
    now() as update_time ,
    round((sum(case when operation_level in ('四级手术' ,'三级手术') then operation_count end)/
           sum(operation_count))*100,5) as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.dw_inp_operation_level_m
where
        month_id=c_monthlist.month_id;



---四级手术出院占比
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002040206';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP002040206' as special_code ,
    round((sum(case when operation_level='四级手术' then operation_count end)/
           sum(operation_count))*100,5) as special_value,
    now() as update_time ,
    round((sum(case when operation_level='四级手术' then operation_count end)/
           sum(operation_count))*100,5) as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.dw_inp_operation_level_m
where
        month_id=c_monthlist.month_id;

---开具处方数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001010701';
insert into his_bi.special_master_m
select
    c_monthlist.month_id ,
    'SP001010701' as special_code ,
    sum(cf_num) as special_value,
    now() as update_time,
    sum(cf_num)  as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.dw_outp_patient_info_m
where
        month_id=c_monthlist.month_id
GROUP BY month_id;



---开具限制和特殊抗菌药物处方数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001010702';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP001010702' as special_code ,
    sum(kjyw_cf_num) as special_value,
    now() as update_time,
    sum(kjyw_cf_num)  as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.dw_outp_patient_info_m
where
        month_id=c_monthlist.month_id
GROUP BY month_id;



---转入人次
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001030101';
insert into his_bi.special_master_m
select
    to_char(cyrq,'yyyymm'),
    'SP001030101' as special_code ,
    sum(case when rytj = '3' then 1 end) as special_value,
    now() as update_time,
    sum(case when rytj = '3' then 1 end) as self_value,
    null as check_flag,
    null as check_comm
from
    his_bi.ods_patient_medical_record
where
        to_char(cyrq,'yyyymm')=c_monthlist.month_id
GROUP BY to_char(cyrq,'yyyymm');



---转出人次
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001030103';
insert into his_bi.special_master_m
select
    to_char(cyrq,'yyyymm'),
    'SP001030103' as special_code ,
    sum(case when lyfs in ('3','2') then 1 end) as special_value,
    now() as update_time,
    sum(case when lyfs in ('3','2') then 1 end) as self_value,
    null as check_flag,
    null as check_comm
from
    his_bi.ods_patient_medical_record
where
        to_char(cyrq,'yyyymm')=c_monthlist.month_id
GROUP BY to_char(cyrq,'yyyymm');



---向下级医院（基层医疗机构）转出人次
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001030108';
insert into his_bi.special_master_m
select
    c_monthlist.month_id ,
    'SP001030108' as special_code ,
    COALESCE(sum(case when lyfs in ('3') then 1 end),0) as special_value,
    now() as update_time,
    COALESCE(sum(case when lyfs in ('3') then 1 end),0) as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.ods_patient_medical_record
where
        to_char(cyrq,'yyyymm') = c_monthlist.month_id;




---转入人次占入院人次比
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001030102';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP001030102' as special_code ,
    COALESCE(round((sum(case when special_code='SP001030101' then special_value end)*1.00/
                    sum(case when special_code='SP001020101' then special_value end))*100,5),0) as special_value,
    now() as update_time,
    COALESCE(round((sum(case when special_code='SP001030101' then special_value end)*1.00/
                    sum(case when special_code='SP001020101' then special_value end))*100,5),0) as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.special_master_m
where
        month_id=c_monthlist.month_id;


---转出人次占出院人次比
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001030104';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP001030104' as special_code ,
    COALESCE(round((sum(case when special_code='SP001030103' then special_value end)*1.00/
                    sum(case when special_code='SP001020102' then special_value end))*100,5),0) as special_value,
    now() as update_time,
    COALESCE(round((sum(case when special_code='SP001030103' then special_value end)*1.00/
                    sum(case when special_code='SP001020102' then special_value end))*100,5),0) as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.special_master_m
where
        month_id=c_monthlist.month_id;



---特需医疗服务量
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001010602';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP001010602' as special_code ,
    sum(case when special_code='SP001010502' then special_value end) as special_value,
    now() as update_time,
    sum(case when special_code='SP001010502' then special_value end) as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.special_master_m
where
        month_id=c_monthlist.month_id;



---特需医疗服务量
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001010603';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP001010603' as special_code ,
    sum(case when special_code='SP001010503' then special_value end) as special_value,
    now() as update_time,
    sum(case when special_code='SP001010503' then special_value end) as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.special_master_m
where
        month_id=c_monthlist.month_id;


---特需医疗服务占比
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001010601';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP001010601' as special_code ,
    COALESCE(max(case when special_code='SP001010501' then special_value end) ,0) as special_value,
    now() as update_time,
    COALESCE(max(case when special_code='SP001010501' then special_value end) ,0) as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.special_master_m
where
        month_id=c_monthlist.month_id;



---检查人次
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002030101';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP002030101' as special_code ,
    sum(t1.value) as special_value,
    now() as update_time,
    sum(t1.value) as self_value,
    null as check_flag  ,
    null as check_comm
from
    (
        select
            month_id,
            count(1) as value
        from
            his_bi.dw_inp_patient_amount_m
        where
                month_id=c_monthlist.month_id
          and check_fees<>0
        group by
            month_id
        union all
        select
            month_id,
            count(1) as value
        from
            his_bi.dw_outp_patient_amount_m
        where
                month_id=c_monthlist.month_id
          and check_fees<>0
        group by
            month_id)t1
group by t1.month_id;



---急诊死亡人数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002110102';
insert into his_bi.special_master_m
select  c_monthlist.month_id,
        'SP002110102' as special_code ,
        coalesce(count(1),0) as special_value,
        now() as update_time,
        coalesce(count(1),0)  as self_value,
        null as check_flag  ,
        null as check_comm

from his_bi.dw_outp_patient_info_m t1
         inner join his_bi.ods_patient_medical_record t2 on t1.patient_id = t2.bah and t1.visit_id = t2.zycs
where t1.month_id =  c_monthlist.month_id
  and coalesce(t1.is_emergency, 0) <> 0
  and t2.lyfs = '5';


---急诊人次数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002110103';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP002110103' as special_code ,
    special_value ,
    now() as update_time,
    special_value as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.special_master_m
where
        month_id=c_monthlist.month_id
  and special_code='SP001010105';



---急诊病死率
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002110101';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP002110101' as special_code ,
    COALESCE(round((sum(case when special_code='SP002110102' then special_value end)*1.00/
                    sum(case when special_code='SP002110103' then special_value end))*100,5),0) as special_value,
    now() as update_time,
    COALESCE(round((sum(case when special_code='SP002110102' then special_value end)*1.00/
                    sum(case when special_code='SP001020103' then special_value end))*100,5),0) as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.special_master_m
where
        month_id=c_monthlist.month_id;


---住院患者病死人数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002110201';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002110201' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV007010303';

---新生儿患者病死率
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002110301';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002110301' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV007010311';

---手术患者病死人数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002110402';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002110402' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV007010307';

---手术患者出院人次
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002110403';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002110403' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV007010306';



---住院患者总死亡率
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002110202';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP002110202' as special_code ,
    COALESCE(round((sum(case when special_code='SP002110201' then special_value end)*1.00/
                    sum(case when special_code='SP001020102' then special_value end))*100,5),0) as special_value,
    now() as update_time,
    COALESCE(round((sum(case when special_code='SP002110201' then special_value end)*1.00/
                    sum(case when special_code='SP001020102' then special_value end))*100,5),0) as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.special_master_m
where
        month_id=c_monthlist.month_id;



---手术患者病死率
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002110401';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP002110401' as special_code ,
    COALESCE(round((sum(case when special_code='SP002110402' then special_value end)*1.00/
                    sum(case when special_code='SP002110403' then special_value end))*100,5),0) as special_value,
    now() as update_time,
    COALESCE(round((sum(case when special_code='SP002110402' then special_value end)*1.00/
                    sum(case when special_code='SP002110403' then special_value end))*100,5),0) as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.special_master_m
where
        month_id=c_monthlist.month_id;




---新生儿死亡人数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002110302';
insert into his_bi.special_master_m
select
    left(t1.st_date,6),
    'SP002110302' as level_code ,
    count(case when t1.value = '2' or t1.value = '3' then 1 end) as level_value,
    now() as update_time ,
    count(case when t1.value = '2' or t1.value = '3' then 1 end) as self_value  ,
    null as check_flag  ,
    null as check_comm
from
    his_bi.dwd_inp_quantity_d t1
where
        t1.key = 'D00157'
  and left(t1.st_date,6) = c_monthlist.month_id
group by left(t1.st_date,6);




---新生儿患者出院人数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002110303';
insert into his_bi.special_master_m
select
    left(t1.st_date,6),
    'SP002110303' as level_code ,
    count(1) as level_value,
    now() as update_time ,
    count(1) as self_value  ,
    null as check_flag  ,
    null as check_comm
from
    his_bi.dwd_inp_quantity_d t1
where
        t1.key = 'D00157'
  and left(t1.st_date,6) = c_monthlist.month_id
group by left(t1.st_date,6);



---平均住院日
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP003010101';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP003010101' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV007010401';

---病床使用率
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP003010102';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP003010102' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV007010403';

---病床周转次数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP003010103';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP003010103' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV007010404';




---急诊费用
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP006010103';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP006010103' as special_code,
    sum(t1.total_fees) as special_value,
    now() as update_time ,
    sum(t1.total_fees) as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.dw_outp_patient_amount_m t1 
where
exists(
select 1 from his_bi.dwd_outp_work_d t2
where left(t2.st_date,6) = c_monthlist.month_id
and t1.patient_id = t2.patient_id
and t1.visit_id = t2.visit_id
and t2.key = 'D00129'
) and t1.month_id=c_monthlist.month_id;


---全院药占比
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP004010101';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP004010101'  as special_code,
    round(((sum((case when t1.kpi_code='JX03902' then t1.kpi_value end ))+
            sum((case when t1.kpi_code='JX04102' then t1.kpi_value end )))*1.00/
           sum((case when t1.kpi_code='JX03701' then t1.kpi_value end )))*100,5) as special_value,
    now() as update_time ,
    round(((sum((case when t1.kpi_code='JX03902' then t1.kpi_value end ))+
            sum((case when t1.kpi_code='JX04102' then t1.kpi_value end )))*1.00/
           sum((case when t1.kpi_code='JX03701' then t1.kpi_value end )))*100,5) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id = c_monthlist.month_id
group by t1.month_id;


---抗菌药物药占比
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP004010201';
insert into his_bi.special_master_m
select
    t1.month_id,
    'SP004010201' as special_code ,
    round((sum(t1.value+t2.value)/sum(t3.kpi_value))*100,5) as special_value,
    now() as update_time ,
    round((sum(t1.value+t2.value)/sum(t3.kpi_value))*100,5) as self_value  ,
    null as check_flag  ,
    null as check_comm
from
    (select
         left(st_date,6) as month_id,
         sum(value) as value
     from his_bi.DWD_OUTP_INCOME_D
     where key = 'D00025'---门诊
     group by left(st_date,6))t1 left join
    (select
         left(st_date,6) as month_id,
         sum(value) as value
     from his_bi.dwd_inp_income_d
     where key = 'D05011'---住院
     group by left(st_date,6)) t2 on t1.month_id = t2.month_id
                                 left join his_bi.kpi_master_m t3 on t1.month_id=t3.month_id and t3.kpi_code = 'JX03102'
where
        t1.month_id=c_monthlist.month_id
group by t1.month_id;



---门诊抗菌药物药占比
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP004010202';
insert into his_bi.special_master_m
select
    t1.month_id,
    'SP004010202' as special_code ,
    round((sum(t1.value)/sum(t3.kpi_value))*100,5) as special_value,
    now() as update_time ,
    round((sum(t1.value)/sum(t3.kpi_value))*100,5) as self_value  ,
    null as check_flag  ,
    null as check_comm
from
    (select
         left(st_date,6) as month_id,
         sum(value) as value
     from his_bi.DWD_OUTP_INCOME_D
     where key = 'D00025'---门诊
     group by left(st_date,6))t1
        left join his_bi.kpi_master_m t3 on t1.month_id=t3.month_id and t3.kpi_code = 'JX03902'
where
        t1.month_id=c_monthlist.month_id
group by t1.month_id;



---住院抗菌药物药占比
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP004010203';
insert into his_bi.special_master_m
select
    t2.month_id,
    'SP004010203' as special_code ,
    round((sum(t2.value)/sum(t3.kpi_value))*100,5) as special_value,
    now() as update_time ,
    round((sum(t2.value)/sum(t3.kpi_value))*100,5) as self_value  ,
    null as check_flag  ,
    null as check_comm
from
    (select
         left(st_date,6) as month_id,
         sum(value) as value
     from his_bi.dwd_inp_income_d
     where key = 'D05011'---住院
     group by left(st_date,6)) t2
        left join his_bi.kpi_master_m t3 on t2.month_id=t3.month_id and t3.kpi_code = 'JX04102'
where
        t2.month_id=c_monthlist.month_id
group by t2.month_id;



---门诊药占比
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP004010102';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP004010102'  as special_code,
    round(((sum((case when t1.kpi_code='JX03902' then t1.kpi_value end )))*1.00/
           sum((case when t1.kpi_code='JX03802' then t1.kpi_value end )))*100,5) as special_value,
    now() as update_time ,
    round(((sum((case when t1.kpi_code='JX03902' then t1.kpi_value end )))*1.00/
           sum((case when t1.kpi_code='JX03802' then t1.kpi_value end )))*100,5) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id = c_monthlist.month_id
group by t1.month_id;



---住院药占比
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP004010103';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP004010103'  as special_code,
    round(((sum((case when t1.kpi_code='JX04102' then t1.kpi_value end )))*1.00/
           sum((case when t1.kpi_code='JX04002' then t1.kpi_value end )))*100,5) as special_value,
    now() as update_time ,
    round(((sum((case when t1.kpi_code='JX04102' then t1.kpi_value end )))*1.00/
           sum((case when t1.kpi_code='JX04002' then t1.kpi_value end )))*100,5) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id = c_monthlist.month_id
group by t1.month_id;


---抗菌药物使用强度（DDDs）
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP004010501';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP004010501' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV0070514';



---出院人数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP004010406';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP004010406' as special_code ,
    COALESCE(max(case when special_code='SP001020102' then special_value end),0) as special_value,
    now() as update_time,
    COALESCE(max(case when special_code='SP001020102' then special_value end),0)as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.special_master_m
where
        month_id=c_monthlist.month_id;




---刨宫产药品费用占比
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080108';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP002080108' as special_code ,
    COALESCE(round((sum(case when special_code='SP002080107' then special_value end)/
                    sum(case when special_code='SP002080106' then special_value end))*100,5),0) as special_value,
    now() as update_time,
    COALESCE(round((sum(case when special_code='SP002080107' then special_value end)/
                    sum(case when special_code='SP002080106' then special_value end))*100,5),0)as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.special_master_m
where
        month_id=c_monthlist.month_id;



---刨宫产材料费用占比
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080110';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP002080110' as special_code ,
    COALESCE(round((sum(case when special_code='SP002080109' then special_value end)/
                    sum(case when special_code='SP002080106' then special_value end))*100,5),0) as special_value,
    now() as update_time,
    COALESCE(round((sum(case when special_code='SP002080109' then special_value end)/
                    sum(case when special_code='SP002080106' then special_value end))*100,5),0) as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.special_master_m
where
        month_id=c_monthlist.month_id;



---社区获得性肺炎药品费用占比
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080208';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP002080208' as special_code ,
    COALESCE(round((sum(case when special_code='SP002080207' then special_value end)/
                    sum(case when special_code='SP002080206' then special_value end))*100,5),0) as special_value,
    now() as update_time,
    COALESCE(round((sum(case when special_code='SP002080207' then special_value end)/
                    sum(case when special_code='SP002080206' then special_value end))*100,5),0) as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.special_master_m
where
        month_id=c_monthlist.month_id;



---社区获得性肺炎材料费用占比
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080210';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP002080210' as special_code ,
    COALESCE(round((sum(case when special_code='SP002080209' then special_value end)/
                    sum(case when special_code='SP002080206' then special_value end))*100,5),0) as special_value,
    now() as update_time,
    COALESCE(round((sum(case when special_code='SP002080209' then special_value end)/
                    sum(case when special_code='SP002080206' then special_value end))*100,5),0) as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.special_master_m
where
        month_id=c_monthlist.month_id;




---异位妊娠药品费用占比
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080308';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP002080308' as special_code ,
    COALESCE(round((sum(case when special_code='SP002080307' then special_value end)/
                    sum(case when special_code='SP002080306' then special_value end))*100,5),0) as special_value,
    now() as update_time,
    COALESCE(round((sum(case when special_code='SP002080307' then special_value end)/
                    sum(case when special_code='SP002080306' then special_value end))*100,5),0) as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.special_master_m
where
        month_id=c_monthlist.month_id;



---异位妊娠材料费用占比
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080310';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP002080310' as special_code ,
    COALESCE(round((sum(case when special_code='SP002080309' then special_value end)/
                    sum(case when special_code='SP002080306' then special_value end))*100,5),0) as special_value,
    now() as update_time,
    COALESCE(round((sum(case when special_code='SP002080309' then special_value end)/
                    sum(case when special_code='SP002080306' then special_value end))*100,5),0) as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.special_master_m
where
        month_id=c_monthlist.month_id;



---宫颈癌药品费用占比
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080408';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP002080408' as special_code ,
    COALESCE(round((sum(case when special_code='SP002080407' then special_value end)/
                    sum(case when special_code='SP002080406' then special_value end))*100,5),0) as special_value,
    now() as update_time,
    COALESCE(round((sum(case when special_code='SP002080407' then special_value end)/
                    sum(case when special_code='SP002080406' then special_value end))*100,5),0) as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.special_master_m
where
        month_id=c_monthlist.month_id;



---宫颈癌材料费用占比
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080410';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP002080410' as special_code ,
    COALESCE(round((sum(case when special_code='SP002080409' then special_value end)/
                    sum(case when special_code='SP002080406' then special_value end))*100,5),0) as special_value,
    now() as update_time,
    COALESCE(round((sum(case when special_code='SP002080409' then special_value end)/
                    sum(case when special_code='SP002080406' then special_value end))*100,5),0) as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.special_master_m
where
        month_id=c_monthlist.month_id;



---子宫肌瘤药品费用占比
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080508';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP002080508' as special_code ,
    COALESCE(round((sum(case when special_code='SP002080507' then special_value end)/
                    sum(case when special_code='SP002080506' then special_value end))*100,5),0) as special_value,
    now() as update_time,
    COALESCE(round((sum(case when special_code='SP002080507' then special_value end)/
                    sum(case when special_code='SP002080506' then special_value end))*100,5),0) as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.special_master_m
where
        month_id=c_monthlist.month_id;



---子宫肌瘤材料费用占比
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080510';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP002080510' as special_code ,
    COALESCE(round((sum(case when special_code='SP002080509' then special_value end)/
                    sum(case when special_code='SP002080506' then special_value end))*100,5),0) as special_value,
    now() as update_time,
    COALESCE(round((sum(case when special_code='SP002080509' then special_value end)/
                    sum(case when special_code='SP002080506' then special_value end))*100,5),0) as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.special_master_m
where
        month_id=c_monthlist.month_id;




---艾滋病、梅毒和乙肝母婴传播疾病药品费用占比
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080608';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP002080608' as special_code ,
    COALESCE(round((sum(case when special_code='SP002080607' then special_value end)/
                    sum(case when special_code='SP002080606' then special_value end))*100,5),0) as special_value,
    now() as update_time,
    COALESCE(round((sum(case when special_code='SP002080607' then special_value end)/
                    sum(case when special_code='SP002080606' then special_value end))*100,5),0) as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.special_master_m
where
        month_id=c_monthlist.month_id;



---艾滋病、梅毒和乙肝母婴传播疾病材料费用占比
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080610';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP002080610' as special_code ,
    COALESCE(round((sum(case when special_code='SP002080609' then special_value end)/
                    sum(case when special_code='SP002080606' then special_value end))*100,5),0) as special_value,
    now() as update_time,
    COALESCE(round((sum(case when special_code='SP002080609' then special_value end)/
                    sum(case when special_code='SP002080606' then special_value end))*100,5),0) as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.special_master_m
where
        month_id=c_monthlist.month_id;





---新生儿呼吸窘迫综合征（NRDS）药品费用占比
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080708';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP002080708' as special_code ,
    round((sum(case when special_code='SP002080707' then special_value end)/
           sum(case when special_code='SP002080706' then special_value end))*100,5) as special_value,
    now() as update_time,
    round((sum(case when special_code='SP002080707' then special_value end)/
           sum(case when special_code='SP002080706' then special_value end))*100,5) as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.special_master_m
where
        month_id=c_monthlist.month_id;



---新生儿呼吸窘迫综合征（NRDS）材料费用占比
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080710';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP002080710' as special_code ,
    round((sum(case when special_code='SP002080709' then special_value end)/
           sum(case when special_code='SP002080706' then special_value end))*100,5) as special_value,
    now() as update_time,
    round((sum(case when special_code='SP002080709' then special_value end)/
           sum(case when special_code='SP002080706' then special_value end))*100,5) as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.special_master_m
where
        month_id=c_monthlist.month_id;




---儿童哮喘药品费用占比
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080808';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP002080808' as special_code ,
    COALESCE(round((sum(case when special_code='SP002080807' then special_value end)/
                    sum(case when special_code='SP002080806' then special_value end))*100,5),0) as special_value,
    now() as update_time,
    COALESCE(round((sum(case when special_code='SP002080807' then special_value end)/
                    sum(case when special_code='SP002080806' then special_value end))*100,5),0) as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.special_master_m
where
        month_id=c_monthlist.month_id;



---儿童哮喘材料费用占比
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080810';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP002080810' as special_code ,
    COALESCE(round((sum(case when special_code='SP002080809' then special_value end)/
                    sum(case when special_code='SP002080806' then special_value end))*100,5),0) as special_value,
    now() as update_time,
    COALESCE(round((sum(case when special_code='SP002080809' then special_value end)/
                    sum(case when special_code='SP002080806' then special_value end))*100,5),0) as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.special_master_m
where
        month_id=c_monthlist.month_id;


---产后出血出院后7天重返例数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070106';
insert into his_bi.special_master_m
select
    c_monthlist.month_id ,
    'SP002070106' as special_code ,
    coalesce(count(1),0) as special_value,
    now() as update_time,
    coalesce(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.DWD_INP_MEDICAL_D t1
         inner join his_bi.DWD_INP_QUANTITY_D t2 on t1.pai_visit_id=t2.pai_visit_id and t2.key='D00169'
where
        t1.key = 'D05026'
  and left(t1.st_date,6)=c_monthlist.month_id;





---门急诊收入
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP006010101';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP006010101' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX03802';

---门诊药品收入
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP006010104';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP006010104' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX03902';

---门诊收入占医疗收入比例
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP006010201';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP006010201' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX027';

---住院收入
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP006020101';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP006020101' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX04002';




---门诊收入
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP006010102';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP006010102' as special_code ,
    round(sum(case when special_code='SP006010101' then special_value end)-
          sum(case when special_code='SP006010103' then special_value end),5) as special_value,
    now() as update_time,
    round(sum(case when special_code='SP006010101' then special_value end)-
          sum(case when special_code='SP006010103' then special_value end),5) as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.special_master_m
where
        month_id=c_monthlist.month_id;

---门急诊材料费用占门急诊收入的比重
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP006010205';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP006010205' as special_code,
    round((sum(t1.material_fees)/sum(t1.total_fees))*100,5) as special_value,
    now() as update_time ,
    round((sum(t1.material_fees)/sum(t1.total_fees))*100,5) as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.dw_outp_patient_amount_m t1
where t1.month_id = c_monthlist.month_id;




---门诊医疗服务收入占比
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP006010206';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP006010206' as special_code,
    round((sum(t1.service_fees)/sum(t1.total_fees))*100,5) as special_value,
    now() as update_time ,
    round((sum(t1.service_fees)/sum(t1.total_fees))*100,5) as self_value  ,
    null as check_flag  ,
    null as check_comm
from
    his_bi.dw_outp_patient_amount_m t1
where t1.month_id = c_monthlist.month_id;



---百元门急诊收入消耗卫生材料（不含药品收入）
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP006010209';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP006010209' as special_code,
    round((sum(t1.material_fees)/(sum(t1.total_fees)-sum(t1.pham_fees)))*100,5) as special_value,
    now() as update_time ,
    round((sum(t1.material_fees)/(sum(t1.total_fees)-sum(t1.pham_fees)))*100,5) as self_value  ,
    null as check_flag  ,
    null as check_comm
from
    his_bi.dw_outp_patient_amount_m t1
where t1.month_id = c_monthlist.month_id;



---个人体检收入
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP006040101';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP006040101' as special_code,
    sum(t1.tj_fees) as special_value,
    now() as update_time ,
    sum(t1.tj_fees) as self_value  ,
    null as check_flag  ,
    null as check_comm
from
    his_bi.dw_outp_patient_amount_m t1
where t1.month_id = c_monthlist.month_id;




---均次体检费用
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP006040102';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP006040102' as special_code,
    round(sum(t2.tj_fees)/max(t1.value),5) as special_value,
    now() as update_time ,
    round(sum(t2.tj_fees)/max(t1.value),5) as self_value  ,
    null as check_flag  ,
    null as check_comm
from
    (select
         left(t1.st_date,6) as month_id,
         count(1) as value
     from his_bi.dwd_outp_work_d t1 where t1.key = 'D00131'
		 and left(t1.st_date,6) = c_monthlist.month_id
     group by left(t1.st_date,6))t1
        left join 
				(
				select
				month_id,
				sum(tj_fees) as tj_fees
				from his_bi.dw_outp_patient_amount_m
				where month_id = c_monthlist.month_id
				group by month_id
			)t2 on t1.month_id = t2.month_id;





---体检收入占门急诊收入的比重
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP006040103';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP006040103' as special_code ,
    COALESCE(round((sum(case when special_code='SP006040101' then special_value end)/
                    sum(case when special_code='SP006010101' then special_value end))*100,5),0) as special_value,
    now() as update_time ,
    COALESCE(round((sum(case when special_code='SP006040101' then special_value end)/
                    sum(case when special_code='SP006010101' then special_value end))*100,5),0) as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.special_master_m
where
        special_code in ('SP006040101','SP006010101')
  and month_id=c_monthlist.month_id;



---体检收入环比增长率
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP006040104';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP006040104' as special_code ,
    coalesce(round(((sum(case when t1.month_id = c_monthlist.month_id then t1.special_value end)-
                     sum(case when t1.month_id = to_char(to_date(c_monthlist.month_id, 'yyyymm') -  interval '1' month,'yyyymm') then t1.special_value end))/
                    sum(case when t1.month_id = to_char(to_date(c_monthlist.month_id, 'yyyymm') -  interval '1' month,'yyyymm') then t1.special_value end))*100,5),0) as special_value,
    now() as update_time ,
    coalesce(round(((sum(case when t1.month_id = c_monthlist.month_id then t1.special_value end)-
                     sum(case when t1.month_id = to_char(to_date(c_monthlist.month_id, 'yyyymm') -  interval '1' month,'yyyymm') then t1.special_value end))/
                    sum(case when t1.month_id = to_char(to_date(c_monthlist.month_id, 'yyyymm') -  interval '1' month,'yyyymm') then t1.special_value end))*100,5),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.special_master_m t1
where t1.special_code='SP006040101'
  and  to_date(t1.month_id,'yyyymm')>= to_date(c_monthlist.month_id, 'yyyymm') -  interval '1' month
  and to_date(t1.month_id,'yyyymm')< to_date(c_monthlist.month_id, 'yyyymm') + interval '1' month;




---辅助用药收入
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP006050101';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP006050101'  as special_code,
    COALESCE(round(max(case when t1.kpi_code='JX03201' then t1.kpi_value end) ,5),0) as special_value,
    now() as update_time ,
    COALESCE(round(max(case when t1.kpi_code='JX03201' then t1.kpi_value end) ,5),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id = c_monthlist.month_id;


---辅助用药收入占比
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP006050102';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP006050102'  as special_code,
    COALESCE(round(max(case when t1.kpi_code='JX032' then t1.kpi_value end) ,5),0) as special_value,
    now() as update_time ,
    COALESCE(round(max(case when t1.kpi_code='JX032' then t1.kpi_value end) ,5),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id = c_monthlist.month_id;


---医疗收入增幅
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP006080101';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP006080101' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as special_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX037';

---门诊次均费用增幅
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP006080102';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP006080102' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as special_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX038';

---门诊次均药品费用增幅
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP006080103';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP006080103' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as special_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX039';

---住院次均费用增幅
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP006080104';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP006080104' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as special_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX040';

---住院次均药品费用增幅
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP006080105';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP006080105' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as special_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX041';





---门急诊次均费用
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP008010101';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP008010101' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as special_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX03801';





---门诊患者次均费用
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP008010102';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP008010102' as special_code ,
    COALESCE(round((sum(case when special_code='SP006010102' then special_value end)/
                    sum(case when special_code='SP001010103' then special_value end)),5),0) as special_value,
    now() as update_time ,
    COALESCE(round((sum(case when special_code='SP006010102' then special_value end)/
                    sum(case when special_code='SP001010103' then special_value end)),5),0) as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.special_master_m
where
        special_code in ('SP006010102','SP001010103')
  and month_id=c_monthlist.month_id;





---急诊患者次均费用
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP008010103';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP008010103' as special_code ,
    COALESCE(round((sum(case when special_code='SP006010103' then special_value end)/
                    sum(case when special_code='SP001010105' then special_value end)),5),0) as special_value,
    now() as update_time ,
    COALESCE(round((sum(case when special_code='SP006010103' then special_value end)/
                    sum(case when special_code='SP001010105' then special_value end)),5),0) as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.special_master_m
where
        special_code in ('SP006010103','SP001010105')
  and month_id=c_monthlist.month_id;





---门急诊次均费用变动率
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP008010205';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP008010205' as special_code,
    case when max(ff.last_jc_fees) <>0 then round((max(ff.jc_fees)-max(ff.last_jc_fees))/max(ff.last_jc_fees),4)*100 else null end as special_value,
    now() as update_time,
    case when max(ff.last_jc_fees) <>0 then round((max(ff.jc_fees)-max(ff.last_jc_fees))/max(ff.last_jc_fees),4)*100 else null end as self_value,
    null as check_flag,
    null as check_comm
from
    (
        select
            am.month_id as month_id,
            round(sum(am.total_fees)/count(distinct am.outp_visit_id),2) as jc_fees,
            0 as last_jc_fees
        from his_bi.dw_outp_patient_info_m am
        where 1=1
          and am.month_id = c_monthlist.month_id
        group by am.month_id
        union
        select
            am.month_id as month_id,
            0 as jc_fees,
            round(sum(am.total_fees)/count(distinct am.outp_visit_id),2) as last_jc_fees
        from his_bi.dw_outp_patient_info_m am
        where 1=1
          and am.month_id = TO_CHAR(to_date(c_monthlist.month_id,'yyyymm') + INTERVAL '-1 MONTH','yyyymm')
        group by am.month_id
    )ff;






---门急诊次均费用药品费占比
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP008010206';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP008010206' as special_code ,
    COALESCE(round((sum(case when kpi_code='JX03901' then kpi_value end)/
                    sum(case when kpi_code='JX03801' then kpi_value end))*100,5),0) as special_value,
    now() as update_time ,
    COALESCE(round((sum(case when kpi_code='JX03901' then kpi_value end)/
                    sum(case when kpi_code='JX03801' then kpi_value end))*100,5),0) as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.kpi_master_m
where
        kpi_code in ('JX03801','JX03901')
  and month_id=c_monthlist.month_id;



---门急诊次均药费
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP008020101';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP008020101' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as special_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX03901';



---门诊次均药费变动率
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP008020202';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP008020202' as special_code,
    case when max(ff.last_jc_fees) <>0 then round((max(ff.jc_fees)-max(ff.last_jc_fees))/max(ff.last_jc_fees),4)*100 else null end as special_value,
    now() as update_time,
    case when max(ff.last_jc_fees) <>0 then round((max(ff.jc_fees)-max(ff.last_jc_fees))/max(ff.last_jc_fees),4)*100 else null end as self_value,
    null as check_flag,
    null as check_comm
from
    (
        select
            am.month_id as month_id,
            am.kpi_value as jc_fees,
            0 as last_jc_fees
        from his_bi.kpi_master_m am
        where 1=1
          and am.month_id = c_monthlist.month_id
          and am.kpi_code='JX03901'
        group by am.month_id,am.kpi_value
        union
        select
            am.month_id as month_id,
            0 as jc_fees,
            am.kpi_value as last_jc_fees
        from his_bi.kpi_master_m am
        where 1=1
          and am.kpi_code='JX03901'
          and am.month_id = TO_CHAR(to_date(c_monthlist.month_id,'yyyymm') + INTERVAL '-1 MONTH','yyyymm')
        group by am.month_id, am.kpi_value
    )ff;



---门诊次均西药费
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP008020203';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP008020203' as special_code,
    round((sum(t1.western_fees)/count(1)),5) as special_value,
    now() as update_time ,
    round((sum(t1.western_fees)/count(1)),5) as self_value  ,
    null as check_flag  ,
    null as check_comm
from  his_bi.dw_outp_patient_amount_m t1
where t1.month_id = c_monthlist.month_id;




---门诊次均中药费
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP008020204';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP008020204' as special_code,
    round((sum(t1.herb_fees)/count(1)),5) as special_value,
    now() as update_time ,
    round((sum(t1.herb_fees)/count(1)),5) as self_value  ,
    null as check_flag  ,
    null as check_comm
from  his_bi.dw_outp_patient_amount_m t1
where t1.month_id = c_monthlist.month_id;




---门诊次均中成药费
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP008020205';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP008020205' as special_code,
    round((sum(t1.chinese_patent_fees)/count(1)),5) as special_value,
    now() as update_time ,
    round((sum(t1.chinese_patent_fees)/count(1)),5) as self_value  ,
    null as check_flag  ,
    null as check_comm
from  his_bi.dw_outp_patient_amount_m t1
where t1.month_id = c_monthlist.month_id;




---急诊次均西药费
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP008020206';
insert into his_bi.special_master_m
select
    t1.month_id,
    'SP008020206' as special_code,
    round(sum(t2.western_fees)/count(1),5) as special_value,
    now() as update_time ,
    round(sum(t2.western_fees)/count(1),5) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dw_outp_patient_info_m t1
         inner join his_bi.dw_outp_patient_amount_m t2 on t1.patient_id = t2.patient_id and t1.visit_id =t2.visit_id
where coalesce(is_emergency,0) = 1
  and t1.month_id = c_monthlist.month_id
group by t1.month_id;





---急诊次均中药费用
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP008020207';
insert into his_bi.special_master_m
select
    t1.month_id,
    'SP008020207' as special_code,
    round(sum(t2.herb_fees)/count(1),5) as special_value,
    now() as update_time ,
    round(sum(t2.herb_fees)/count(1),5) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dw_outp_patient_info_m t1
         inner join his_bi.dw_outp_patient_amount_m t2 on t1.patient_id = t2.patient_id and t1.visit_id =t2.visit_id
where coalesce(is_emergency,0) = 1
  and t1.month_id = c_monthlist.month_id
group by t1.month_id;





---急诊次均中成药费用
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP008020208';
insert into his_bi.special_master_m
select
    t1.month_id,
    'SP008020208' as special_code,
    round(sum(t2.chinese_patent_fees)/count(1),5) as special_value,
    now() as update_time ,
    round(sum(t2.chinese_patent_fees)/count(1),5) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dw_outp_patient_info_m t1
         inner join his_bi.dw_outp_patient_amount_m t2 on t1.patient_id = t2.patient_id and t1.visit_id =t2.visit_id
where coalesce(is_emergency,0) = 1
  and t1.month_id = c_monthlist.month_id
group by t1.month_id;




---门急诊次均西药占比
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP008020209';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP008020209' as special_code ,
    case when  sum(case when special_code='SP008020101' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP008020203' then special_value end)/
                    sum(case when special_code='SP008020101' then special_value end))*100,5),0) else 0 end as special_value,
    now() as update_time ,
    case when  sum(case when special_code='SP008020101' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP008020203' then special_value end)/
                    sum(case when special_code='SP008020101' then special_value end))*100,5),0) else 0 end as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.special_master_m
where
        special_code in ('SP008020203','SP008020101')
  and month_id=c_monthlist.month_id;




---门急诊次均中药费占比
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP008020210';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP008020210' as special_code ,
    COALESCE(round((sum(case when special_code='SP008020204' then special_value end)/
                    sum(case when special_code='SP008020101' then special_value end))*100,5),0) as special_value,
    now() as update_time ,
    COALESCE(round((sum(case when special_code='SP008020204' then special_value end)/
                    sum(case when special_code='SP008020101' then special_value end))*100,5),0) as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.special_master_m
where
        special_code in ('SP008020204','SP008020101')
  and month_id=c_monthlist.month_id;




---门急诊次均中成药费占比
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP008020211';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP008020211' as special_code ,
    COALESCE(round((sum(case when special_code='SP008020205' then special_value end)/
                    sum(case when special_code='SP008020101' then special_value end))*100,5),0) as special_value,
    now() as update_time ,
    COALESCE(round((sum(case when special_code='SP008020205' then special_value end)/
                    sum(case when special_code='SP008020101' then special_value end))*100,5),0) as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.special_master_m
where
        special_code in ('SP008020205','SP008020101')
  and month_id=c_monthlist.month_id;




---住院患者次均医药费用
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP008030101';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP008030101' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as special_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX04001';




---住院患者次均药费
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP008030102';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP008030102' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as special_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX04101';






---住院患者日均医药费用
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP008030103';
insert into his_bi.special_master_m
select
    month_id,
    'SP008030103' as special_code,
    round(sum(total_fees)/sum(in_days),5) as special_value,
    now() as update_time ,
    round(sum(total_fees)/sum(in_days),5) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dw_inp_patient_info_m
where
        month_id=c_monthlist.month_id
group by month_id;



---住院收入增长率
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP006020102';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP006020102' as special_code ,
    coalesce(round(((sum(case when t1.month_id = c_monthlist.month_id then t1.kpi_value end)-
                     sum(case when t1.month_id = to_char(to_date(c_monthlist.month_id, 'yyyymm') -  interval '1' month,'yyyymm') then t1.kpi_value end))/
                    sum(case when t1.month_id = to_char(to_date(c_monthlist.month_id, 'yyyymm') -  interval '1' month,'yyyymm') then t1.kpi_value end))*100,5),0) as special_value,
    now() as update_time ,
    coalesce(round(((sum(case when t1.month_id = c_monthlist.month_id then t1.kpi_value end)-
                     sum(case when t1.month_id = to_char(to_date(c_monthlist.month_id, 'yyyymm') -  interval '1' month,'yyyymm') then t1.kpi_value end))/
                    sum(case when t1.month_id = to_char(to_date(c_monthlist.month_id, 'yyyymm') -  interval '1' month,'yyyymm') then t1.kpi_value end))*100,5),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where t1.kpi_code='JX04002'
  and  to_date(t1.month_id,'yyyymm')>= to_date(c_monthlist.month_id, 'yyyymm') -  interval '1' month
  and to_date(t1.month_id,'yyyymm')< to_date(c_monthlist.month_id, 'yyyymm') + interval '1' month;




---医疗服务收入（不含药品、耗材、检查检验收入）占医疗收入比例
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP006030101';
insert into his_bi.special_master_m
select
    t2.month_id,
    'SP006030101' as special_code ,
    round((sum(t1.value)/max(t2.kpi_value)*100),5) as special_value,
    now() as update_time,
    round((sum(t1.value)/max(t2.kpi_value)*100),5) as self_value,
    null as check_flag  ,
    null as check_comm
from
    (select
         t1.month_id,
         sum(t1.service_fees) as value
     from his_bi.dw_outp_patient_amount_m t1
     group by t1.month_id
     union all
     select
         t1.month_id,
         sum(t1.service_fees) as value
     from his_bi.dw_inp_patient_amount_m t1
     group by t1.month_id) t1
        left join his_bi.kpi_master_m t2 on t1.month_id = t2.month_id and t2.kpi_code='JX03701'
where
        t2.month_id=c_monthlist.month_id
group by t2.month_id;


---产后出血总例数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070101';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002070101' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702010101';

---产后出血死亡例数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070102';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002070102' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702010102';

---产后出血平均住院日
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070104';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002070104' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702010103';

---产后出血平均住院费用
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070105';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002070105' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702010104';

---产后出血15天再住院率（包括计划内及非计划重返）
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070107';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002070107' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702010106';

---产后出血31天再住院率（包括计划内及非计划重返）
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070108';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002070108' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702010107';

---妊娠合并糖尿病总例数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070201';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002070201' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702010201';

---妊娠合并糖尿病死亡例数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070202';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002070202' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702010202';

---妊娠合并糖尿病平均住院日
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070204';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002070204' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702010203';

---妊娠合并糖尿病平均住院费用
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070205';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002070205' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702010204';

---妊娠合并糖尿病15天再住院率（包括计划内及非计划重返）
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070207';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002070207' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702010206';

---妊娠合并糖尿病31天再住院率（包括计划内及非计划重返）
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070208';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002070208' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702010207';

---盆腔炎性疾病总例数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070301';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002070301' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702010301';

---盆腔炎性疾病死亡例数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070302';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002070302' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702010302';

---盆腔炎性疾病平均住院日
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070304';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002070304' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702010303';

---盆腔炎性疾病平均住院费用
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070305';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002070305' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702010304';

---盆腔炎性疾病15天再住院率（包括计划内及非计划重返）
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070307';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002070307' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702010306';

---盆腔炎性疾病31天再住院率（包括计划内及非计划重返）
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070308';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002070308' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702010307';

---异位妊娠总例数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070401';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002070401' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702010401';

---异位妊娠死亡例数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070402';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002070402' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702010402';

---异位妊娠平均住院日
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070404';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002070404' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702010403';

---异位妊娠平均住院费用
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070405';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002070405' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702010404';

---异位妊娠15天再住院率（包括计划内及非计划重返）
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070407';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002070407' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702010406';

---异位妊娠31天再住院率（包括计划内及非计划重返）
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070408';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002070408' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702010407';

---女性生殖器脱垂总例数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070501';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002070501' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702010501';

---女性生殖器脱垂死亡例数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070502';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002070502' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
    COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702010502';

---女性生殖器脱垂平均住院日
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070504';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002070504' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702010503';

---女性生殖器脱垂平均住院费用
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070505';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002070505' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702010504';

---女性生殖器脱垂15天再住院率（包括计划内及非计划重返）
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070507';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002070507' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702010506';

---女性生殖器脱垂31天再住院率（包括计划内及非计划重返）
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070508';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002070508' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702010507';

---直肠阴道隔子宫内膜异位症总例数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070601';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002070601' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702010601';

---直肠阴道隔子宫内膜异位症死亡例数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070602';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002070602' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702010602';

---直肠阴道隔子宫内膜异位症平均住院日
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070604';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002070604' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702010603';

---直肠阴道隔子宫内膜异位症平均住院费用
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070605';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002070605' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702010604';

---直肠阴道隔子宫内膜异位症15天再住院率（包括计划内及非计划重返）
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070607';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002070607' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702010606';

---直肠阴道隔子宫内膜异位症31天再住院率（包括计划内及非计划重返）
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070608';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002070608' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702010607';

---妊娠滋养细胞疾病总例数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070701';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002070701' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702010701';

---妊娠滋养细胞疾病死亡例数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070702';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002070702' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702010702';

---妊娠滋养细胞疾病平均住院日
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070704';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002070704' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702010703';

---妊娠滋养细胞疾病平均住院费用
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070705';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002070705' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702010704';

---妊娠滋养细胞疾病15天再住院率（包括计划内及非计划重返）
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070707';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002070707' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702010706';

---妊娠滋养细胞疾病31天再住院率（包括计划内及非计划重返）
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070708';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002070708' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702010707';

---重度卵巢过度刺激综合征总例数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070801';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002070801' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702010801';

---重度卵巢过度刺激综合征死亡例数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070802';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002070802' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702010802';

---重度卵巢过度刺激综合征平均住院日
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070804';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002070804' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702010803';

---重度卵巢过度刺激综合征平均住院费用
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070805';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002070805' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702010804';

---重度卵巢过度刺激综合征15天再住院率（包括计划内及非计划重返）
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070807';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002070807' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702010806';

---重度卵巢过度刺激综合征31天再住院率（包括计划内及非计划重返）
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070808';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002070808' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702010807';

---重度子痫前期总例数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070901';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002070901' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702010901';

---重度子痫前期死亡例数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070902';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002070902' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702010902';

---重度子痫前期平均住院日
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070904';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002070904' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702010903';

---重度子痫前期平均住院费用
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070905';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002070905' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702010904';

---重度子痫前期15天再住院率（包括计划内及非计划重返）
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070907';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002070907' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702010906';

---重度子痫前期31天再住院率（包括计划内及非计划重返）
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070908';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002070908' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702010907';

---早产总例数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071001';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002071001' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702011001';

---早产死亡例数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071002';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002071002' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702011002';

---早产平均住院日
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071004';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002071004' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702011003';

---早产平均住院费用
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071005';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002071005' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702011004';

---早产15天再住院率（包括计划内及非计划重返）
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071007';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002071007' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702011006';

---早产31天再住院率（包括计划内及非计划重返）
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071008';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002071008' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702011007';

---多胎妊娠总例数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071101';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002071101' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702011101';

---多胎妊娠死亡例数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071102';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002071102' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702011102';

---多胎妊娠平均住院日
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071104';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002071104' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702011103';

---多胎妊娠平均住院费用
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071105';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002071105' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702011104';

---多胎妊娠15天再住院率（包括计划内及非计划重返）
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071107';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002071107' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702011106';

---多胎妊娠31天再住院率（包括计划内及非计划重返）
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071108';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002071108' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702011107';

---胎膜早破总例数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071201';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002071201' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702011201';

---胎膜早破死亡例数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071202';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002071202' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702011202';

---胎膜早破平均住院日
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071204';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002071204' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702011203';

---胎膜早破平均住院费用
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071205';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002071205' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702011204';

---胎膜早破15天再住院率（包括计划内及非计划重返）
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071207';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002071207' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702011206';

---胎膜早破31天再住院率（包括计划内及非计划重返）
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071208';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002071208' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702011207';

---前置胎盘总例数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071301';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002071301' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702011301';

---前置胎盘死亡例数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071302';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002071302' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702011302';

---前置胎盘平均住院日
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071304';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002071304' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702011303';

---前置胎盘平均住院费用
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071305';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002071305' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702011304';

---前置胎盘15天再住院率（包括计划内及非计划重返）
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071307';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002071307' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702011306';

---前置胎盘31天再住院率（包括计划内及非计划重返）
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071308';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002071308' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702011307';

---胎盘早剥总例数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071401';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002071401' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702011401';

---胎盘早剥死亡例数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071402';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002071402' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702011402';

---胎盘早剥平均住院日
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071404';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002071404' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702011403';

---胎盘早剥平均住院费用
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071405';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002071405' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702011404';

---胎盘早剥15天再住院率（包括计划内及非计划重返）
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071407';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002071407' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702011406';

---胎盘早剥31天再住院率（包括计划内及非计划重返）
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071408';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002071408' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702011407';

---新生儿窒息总例数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071501';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002071501' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702011501';

---新生儿窒息死亡例数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071502';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002071502' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702011502';

---新生儿窒息平均住院日
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071504';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002071504' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702011503';

---新生儿窒息平均住院费用
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071505';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002071505' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702011504';

---新生儿窒息15天再住院率（包括计划内及非计划重返）
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071507';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002071507' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702011506';

---新生儿窒息31天再住院率（包括计划内及非计划重返）
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071508';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002071508' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702011507';

---新生儿呼吸窘迫总例数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071601';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002071601' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702011601';

---新生儿呼吸窘迫死亡例数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071602';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002071602' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702011602';

---新生儿呼吸窘迫平均住院日
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071604';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002071604' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702011603';

---新生儿呼吸窘迫平均住院费用
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071605';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002071605' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702011604';

---新生儿呼吸窘迫15天再住院率（包括计划内及非计划重返）
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071607';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002071607' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702011606';

---新生儿呼吸窘迫31天再住院率（包括计划内及非计划重返）
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071608';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002071608' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702011607';

---支气管肺炎总例数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071701';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002071701' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702011701';

---支气管肺炎死亡例数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071702';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002071702' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702011702';

---支气管肺炎平均住院日
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071704';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002071704' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702011703';

---支气管肺炎平均住院费用
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071705';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002071705' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702011704';

---支气管肺炎15天再住院率（包括计划内及非计划重返）
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071707';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002071707' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702011706';

---支气管肺炎31天再住院率（包括计划内及非计划重返）
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071708';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002071708' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702011707';

---小儿腹泻病总例数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071801';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002071801' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702011801';

---小儿腹泻病死亡例数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071802';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002071802' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702011802';

---小儿腹泻病平均住院日
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071804';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002071804' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702011803';

---小儿腹泻病平均住院费用
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071805';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002071805' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702011804';

---小儿腹泻病15天再住院率（包括计划内及非计划重返）
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071807';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002071807' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702011806';

---小儿腹泻病31天再住院率（包括计划内及非计划重返）
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071808';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002071808' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702011807';

---低出生体重儿总例数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071901';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002071901' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702011901';

---低出生体重儿死亡例数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071902';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002071902' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702011902';

---低出生体重儿平均住院日
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071904';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002071904' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702011903';

---低出生体重儿平均住院费用
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071905';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002071905' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702011904';

---低出生体重儿15天再住院率（包括计划内及非计划重返）
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071907';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002071907' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702011906';

---低出生体重儿31天再住院率（包括计划内及非计划重返）
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071908';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002071908' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702011907';

---新生儿高胆红素血症总例数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002072001';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002072001' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702012021';

---新生儿高胆红素血症死亡例数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002072002';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002072002' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702012022';

---新生儿高胆红素血症平均住院日
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002072004';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002072004' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702012023';

---新生儿高胆红素血症平均住院费用
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002072005';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002072005' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702012024';

---新生儿高胆红素血症15天再住院率（包括计划内及非计划重返）
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002072007';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002072007' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702012026';

---新生儿高胆红素血症31天再住院率（包括计划内及非计划重返）
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002072008';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002072008' as special_code ,
     COALESCE(max(t1.level_value) ,0) as special_value,
    now() as update_time ,
     COALESCE(max(t1.level_value) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.level_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code='LV00702012027';
---剖宫产病种例数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080101';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002080101' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX01001';

---剖宫产平均住院日
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080102';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002080102' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX0100101';

---剖宫产出院患者占用总床日数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080103';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002080103' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX0100102';

---剖宫产次均费用
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080105';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002080105' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX0100104';

---剖宫产总出院费用
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080106';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002080106' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX0100105';

---剖宫产死亡人数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080111';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002080111' as special_code ,
    COALESCE(case when t1.kpi_code='JX0100108' then t1.kpi_value end,0) as special_value,
    now() as update_time ,
    COALESCE(case when t1.kpi_code='JX0100108' then t1.kpi_value end,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id;

---剖宫产病死率
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080112';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002080112' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX0100107';

---社区获得性肺炎(住院、儿童)病种例数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080201';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002080201' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX01002';

---社区获得性肺炎(住院、儿童)平均住院日
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080202';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002080202' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX0100201';

---社区获得性肺炎(住院、儿童)出院患者占用总床日数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080203';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002080203' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX0100202';

---社区获得性肺炎(住院、儿童)次均费用
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080205';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002080205' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX0100204';

---社区获得性肺炎(住院、儿童)总出院费用
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080206';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002080206' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX0100205';

---社区获得性肺炎(住院、儿童)死亡人数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080211';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002080211' as special_code ,
    COALESCE(max(case when t1.kpi_code='JX0100208' then t1.kpi_value end) ,0) as special_value,
    now() as update_time ,
    COALESCE(max(case when t1.kpi_code='JX0100208' then t1.kpi_value end) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id;

---社区获得性肺炎(住院、儿童)病死率
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080212';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002080212' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX0100207';

---异位妊娠病种例数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080301';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002080301' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX01003';

---异位妊娠平均住院日
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080302';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002080302' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX0100301';

---异位妊娠出院患者占用总床日数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080303';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002080303' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX0100302';

---异位妊娠次均费用
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080305';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002080305' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX0100304';

---异位妊娠总出院费用
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080306';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002080306' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX0100305';

---异位妊娠死亡人数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080311';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002080311' as special_code ,
    COALESCE(max(case when t1.kpi_code='JX0100308' then t1.kpi_value end) ,0) as special_value,
    now() as update_time ,
    COALESCE(max(case when t1.kpi_code='JX0100308' then t1.kpi_value end) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id;

---异位妊娠病死率
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080312';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002080312' as special_code ,
    COALESCE(max(case when t1.kpi_code='JX0100307' then t1.kpi_value end) ,0) as special_value,
    now() as update_time ,
    COALESCE(max(case when t1.kpi_code='JX0100307' then t1.kpi_value end) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id;

---宫颈癌病种例数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080401';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002080401' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX01004';

---宫颈癌平均住院日
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080402';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002080402' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX0100401';

---宫颈癌出院患者占用总床日数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080403';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002080403' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX0100402';

---宫颈癌次均费用
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080405';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002080405' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX0100404';

---宫颈癌总出院费用
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080406';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002080406' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX0100405';

---宫颈癌死亡人数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080411';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002080411' as special_code ,
    COALESCE(max(case when t1.kpi_code='JX0100408' then t1.kpi_value end) ,0) as special_value,
    now() as update_time ,
    COALESCE(max(case when t1.kpi_code='JX0100408' then t1.kpi_value end) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id;

---宫颈癌病死率
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080412';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002080412' as special_code ,
    COALESCE(max(case when t1.kpi_code='JX0100407' then t1.kpi_value end) ,0) as special_value,
    now() as update_time ,
    COALESCE(max(case when t1.kpi_code='JX0100407' then t1.kpi_value end) ,0) as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id;

---子宫肌瘤病种例数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080501';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002080501' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX01005';

---子宫肌瘤平均住院日
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080502';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002080502' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX0100501';

---子宫肌瘤出院患者占用总床日数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080503';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002080503' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX0100502';

---子宫肌瘤次均费用
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080505';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002080505' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX0100504';

---子宫肌瘤总出院费用
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080506';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002080506' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX0100505';

---子宫肌瘤死亡人数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080511';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002080511' as special_code ,
    COALESCE(max(case when t1.kpi_code='JX0100508' then t1.kpi_value end) ,0) as special_value,
    now() as update_time ,
    COALESCE(max(case when t1.kpi_code='JX0100508' then t1.kpi_value end) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id;

---子宫肌瘤病死率
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080512';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002080512' as special_code ,
    COALESCE(max(case when t1.kpi_code='JX0100507' then t1.kpi_value end) ,0) as special_value,
    now() as update_time ,
    COALESCE(max(case when t1.kpi_code='JX0100507' then t1.kpi_value end) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id;

---艾滋病、梅毒和乙肝母婴传播疾病病种例数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080601';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002080601' as special_code ,
    COALESCE(max(case when t1.kpi_code='JX01006' then t1.kpi_value end) ,0) as special_value,
    now() as update_time ,
    COALESCE(max(case when t1.kpi_code='JX01006' then t1.kpi_value end) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id;

---艾滋病、梅毒和乙肝母婴传播疾病平均住院日
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080602';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002080602' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX0100601';

---艾滋病、梅毒和乙肝母婴传播疾病出院患者占用总床日数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080603';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002080603' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX0100602';

---艾滋病、梅毒和乙肝母婴传播疾病次均费用
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080605';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002080605' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX0100604';

---艾滋病、梅毒和乙肝母婴传播疾病总出院费用
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080606';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002080606' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX0100605';

---艾滋病、梅毒和乙肝母婴传播疾病死亡人数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080611';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002080611' as special_code ,
    COALESCE(max(case when t1.kpi_code='JX0100608' then t1.kpi_value end) ,0) as special_value,
    now() as update_time ,
    COALESCE(max(case when t1.kpi_code='JX0100608' then t1.kpi_value end) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id;

---艾滋病、梅毒和乙肝母婴传播疾病病死率
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080612';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002080612' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX0100607';

---新生儿呼吸窘迫综合征（NRDS）病种例数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080701';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002080701' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX01007';

---新生儿呼吸窘迫综合征（NRDS）平均住院日
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080702';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002080702' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX0100701';

---新生儿呼吸窘迫综合征（NRDS）出院患者占用总床日数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080703';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002080703' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX0100702';

---新生儿呼吸窘迫综合征（NRDS）次均费用
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080705';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002080705' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX0100704';

---新生儿呼吸窘迫综合征（NRDS）总出院费用
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080706';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002080706' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX0100705';

---新生儿呼吸窘迫综合征（NRDS）死亡人数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080711';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002080711' as special_code ,
    COALESCE(max(case when t1.kpi_code='JX0100708' then t1.kpi_value end) ,0) as special_value,
    now() as update_time ,
    COALESCE(max(case when t1.kpi_code='JX0100708' then t1.kpi_value end) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id;

---新生儿呼吸窘迫综合征（NRDS）病死率
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080712';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002080712' as special_code ,
    COALESCE(max(case when t1.kpi_code='JX0100707' then t1.kpi_value end) ,0) as special_value,
    now() as update_time ,
    COALESCE(max(case when t1.kpi_code='JX0100707' then t1.kpi_value end) ,0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id;

---儿童哮喘病种例数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080801';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002080801' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX01008';

---儿童哮喘平均住院日
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080802';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002080802' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX0100801';

---儿童哮喘出院患者占用总床日数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080803';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002080803' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX0100802';

---儿童哮喘次均费用
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080805';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002080805' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX0100804';

---儿童哮喘总出院费用
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080806';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002080806' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX0100805';

---儿童哮喘死亡人数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080811';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002080811' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX0100808';

---儿童哮喘病死率
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080812';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002080812' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX0100807';

---住院患者手术人次数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002040102';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002040102' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX00401';

---出院患者手术占比
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002040103';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002040103' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX004';

---出院患者微创手术人次数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002040104';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002040104' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX00501';

---出院患者微创手术占比
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002040105';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002040105' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX005';

---日间手术人次数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002040106';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002040106' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX00301';

---择期手术人次数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002040107';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002040107' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX00302';

---日间手术占择期手术比例
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002040108';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002040108' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX003';

---I类切口手术部位感染人次数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002040306';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002040306' as special_code ,
    COALESCE(max(case when kpi_code = 'JX00901' then t1.kpi_value end),0) as special_value,
    now() as update_time ,
    COALESCE(max(case when kpi_code = 'JX00901' then t1.kpi_value end),0)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id;

---I类切口手术人次数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002040307';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002040307' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX00902';

---I类切口手术部位感染率
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002040308';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002040308' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX009';

---手术患者并发症发生例数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002040312';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002040312' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX00801';

---手术患者并发症发生率
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002040313';
insert into his_bi.special_master_m
select
    c_monthlist.month_id as month_id,
    'SP002040313' as special_code ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,
    now() as update_time ,
    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX008';

---新生儿呼吸窘迫综合征（NRDS）药品费用
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080707';
insert into his_bi.special_master_m
select
    left(t1.st_date,6) as month_id,
    'SP002080707' as special_code ,
    sum(t2.pham_fees) as special_value,
    now() as update_time ,
    sum(t2.pham_fees) as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_amount_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00128'
  and left(t1.st_date,6) = c_monthlist.month_id
group by left(t1.st_date,6);

---新生儿呼吸窘迫综合征（NRDS）卫生材料费用
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080709';
insert into his_bi.special_master_m
select
    left(t1.st_date,6) as month_id,
    'SP002080709' as special_code ,
    sum(t2.material_fees) as special_value,
    now() as update_time ,
    sum(t2.material_fees) as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_amount_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00128'
  and left(t1.st_date,6) = c_monthlist.month_id
group by left(t1.st_date,6);

---儿童哮喘材料费用
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080809';
insert into his_bi.special_master_m
select
    left(t1.st_date,6) as month_id,
    'SP002080809' as special_code ,
    sum(t2.material_fees) as special_value,
    now() as update_time ,
    sum(t2.material_fees) as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_amount_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00225'
  and left(t1.st_date,6) = c_monthlist.month_id
group by left(t1.st_date,6);

---儿童哮喘药品费用
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080807';
insert into his_bi.special_master_m
select
    left(t1.st_date,6) as month_id,
    'SP002080807' as special_code ,
    sum(t2.pham_fees) as special_value,
    now() as update_time ,
    sum(t2.pham_fees) as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_amount_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00225'
  and left(t1.st_date,6) = c_monthlist.month_id
group by left(t1.st_date,6);

---新生儿高胆红素血症7天重返
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002072006';
insert into his_bi.special_master_m
select
    c_monthlist.month_id ,
    'SP002072006' as special_code ,
    coalesce(count(1),0) as special_value,
    now() as update_time,
    coalesce(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.DWD_INP_MEDICAL_D t1
         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id=t2.pai_visit_id and t2.key='D00126'
where
        t1.key = 'D05026'
  and left(t1.st_date,6)=c_monthlist.month_id;



---特需门诊收入占比
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP006010207';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP006010207' as special_code,
    round((sum(case when t3.special_clinic_type='2' then t4.total_fees end) /sum(t4.total_fees))*100,5) as special_value,
    now() as update_time ,
    round((sum(case when t3.special_clinic_type='2' then t4.total_fees end) /sum(t4.total_fees))*100,5) as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.dw_outp_patient_info_m t1
        left join his_bi.v_system_special_clinic t3 on t1.outp_special_id = t3.special_clinic_id and t3.special_clinic_type='2'
        left join his_bi.dw_outp_patient_amount_m t4 on t1.patient_id = t4.patient_id and t1.visit_id = t4.visit_id
where
        t1.month_id=c_monthlist.month_id
group by t1.month_id;


---医疗服务收入（不含药品、耗材、检查检验收入）占医疗收入比例
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP006030101';
insert into his_bi.special_master_m
select
    t2.month_id,
    'SP006030101' as special_code ,
    round((sum(t1.value)/max(t2.kpi_value)*100),5) as special_value,
    now() as update_time,
    round((sum(t1.value)/max(t2.kpi_value)*100),5) as self_value,
    null as check_flag  ,
    null as check_comm
from
    (select
         t1.month_id,
         sum(t1.service_fees) as value
     from his_bi.dw_outp_patient_amount_m t1
     group by t1.month_id
     union all
     select
         t1.month_id,
         sum(t1.service_fees) as value
     from his_bi.dw_inp_patient_amount_m t1
     group by t1.month_id) t1
        left join his_bi.kpi_master_m t2 on t1.month_id = t2.month_id and t2.kpi_code='JX03701'
where
        t2.month_id=c_monthlist.month_id
group by t2.month_id;



---住院次均费用材料费用占比
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP008030202';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP008030202' as special_code,
    round(((sum(t1.material_fees)/count(1))/max(t2.special_value))*100,5) as special_value,
    now() as update_time ,
    round(((sum(t1.material_fees)/count(1))/max(t2.special_value))*100,5) as self_value  ,
    null as check_flag  ,
    null as check_comm
from  his_bi.dw_inp_patient_amount_m t1
          inner join his_bi.special_master_m t2 on t1.month_id = t2.month_id and t2.special_code = 'SP008030101'
where t1.month_id = c_monthlist.month_id and t2.month_id=c_monthlist.month_id;




---住院次均费用检查和检验费用占比
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP008030203';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP008030203' as special_code,
    coalesce(round((((sum(t1.inspect_fees)+sum(t1.check_fees))/count(1))/max(t2.special_value))*100,5),0)  as special_value,
    now() as update_time ,
    coalesce(round((((sum(t1.inspect_fees)+sum(t1.check_fees))/count(1))/max(t2.special_value))*100,5),0) as self_value  ,
    null as check_flag  ,
    null as check_comm
from  his_bi.dw_inp_patient_amount_m t1
          inner join his_bi.special_master_m t2 on t1.month_id = t2.month_id and t2.special_code = 'SP008030101'
where t1.month_id = c_monthlist.month_id and t2.month_id=c_monthlist.month_id;







---住院次均费用治疗费用占比
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP008030204';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP008030204' as special_code,
    round(((sum(t1.cur_fees)/count(1))/max(t2.special_value))*100,5) as special_value,
    now() as update_time ,
    round(((sum(t1.cur_fees)/count(1))/max(t2.special_value))*100,5) as self_value  ,
    null as check_flag  ,
    null as check_comm
from  his_bi.dw_inp_patient_amount_m t1
          inner join his_bi.special_master_m t2 on t1.month_id = t2.month_id and t2.special_code = 'SP008030101'
where t1.month_id = c_monthlist.month_id and t2.month_id=c_monthlist.month_id;


---急诊次均药费
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP008020103';
insert into his_bi.special_master_m
select
    t1.month_id,
    'SP008020103' as special_code,
    round(sum(t2.pham_fees)/count(1),5) as special_value,
    now() as update_time ,
    round(sum(t2.pham_fees)/count(1),5) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dw_outp_patient_info_m t1
         inner join his_bi.dw_outp_patient_amount_m t2 on t1.patient_id = t2.patient_id and t1.visit_id =t2.visit_id
where coalesce(is_emergency,0) = 1
  and t1.month_id = c_monthlist.month_id
group by t1.month_id;


---门急诊次均费用卫生材料费占比
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP008010207';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP008010207' as special_code,
    round(((sum(t1.material_fees)/count(1))/max(t2.special_value))*100,5) as special_value,
    now() as update_time ,
    round(((sum(t1.material_fees)/count(1))/max(t2.special_value))*100,5) as self_value  ,
    null as check_flag  ,
    null as check_comm
from  his_bi.dw_outp_patient_amount_m t1
          inner join his_bi.special_master_m t2 on t1.month_id = t2.month_id and t2.special_code = 'SP008010101'
where t1.month_id = c_monthlist.month_id and t2.month_id=c_monthlist.month_id;





---门急诊次均费用检查费占比
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP008010208';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP008010208' as special_code,
    round(((sum(t1.check_fees)/count(1))/max(t2.special_value))*100,5) as special_value,
    now() as update_time ,
    round(((sum(t1.check_fees)/count(1))/max(t2.special_value))*100,5) as self_value  ,
    null as check_flag  ,
    null as check_comm
from  his_bi.dw_outp_patient_amount_m t1
          inner join his_bi.special_master_m t2 on t1.month_id = t2.month_id and t2.special_code = 'SP008010101'
where t1.month_id = c_monthlist.month_id and t2.month_id=c_monthlist.month_id;


---急诊料费用占急诊收入的比重
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP006010204';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP006010204' as special_code,
    round((sum(t1.material_fees)/sum(t1.total_fees))*100,5) as special_value,
    now() as update_time ,
    round((sum(t1.material_fees)/sum(t1.total_fees))*100,5) as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.dw_outp_patient_info_m t
         inner join his_bi.dw_outp_patient_amount_m t1 on t.patient_id = t1.patient_id and t.visit_id=t1.visit_id
where t1.month_id = c_monthlist.month_id
  and coalesce(t.is_emergency, 0) = 1;

---门诊料费用占急诊收入的比重
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP006010203';
insert into his_bi.special_master_m
select
c_monthlist.month_id as month_id,
    'SP006010203' as special_code,
round((sum(t1.material_fees)/sum(t1.total_fees))*100,5) as special_value,
now() as update_time ,
    round((sum(t1.material_fees)/sum(t1.total_fees))*100,5) as self_value  ,
    null as check_flag  ,
    null as check_comm
from 
his_bi.dw_outp_patient_amount_m  t1
where
not exists(
select 1 from his_bi.dwd_outp_work_d t2
where left(t2.st_date,6) = c_monthlist.month_id
and t1.patient_id = t2.patient_id
and t1.visit_id = t2.visit_id
and t2.key = 'D00129'
) and t1.month_id = c_monthlist.month_id;


---门诊患者次均药费
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP008020102';
insert into his_bi.special_master_m
select
c_monthlist.month_id as month_id,
    'SP008020102' as special_code,
round((sum(t1.pham_fees)/count(1)),5) as special_value,
now() as update_time ,
    round((sum(t1.pham_fees)/count(1)),5) as self_value  ,
    null as check_flag  ,
    null as check_comm
from 
his_bi.dw_outp_patient_amount_m  t1
where
not exists(
select 1 from his_bi.dwd_outp_work_d t2
where left(t2.st_date,6) = c_monthlist.month_id
and t1.patient_id = t2.patient_id
and t1.visit_id = t2.visit_id
and t2.key = 'D00129'
) and t1.month_id = c_monthlist.month_id;



---门诊人次增减率
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001010104';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP001010104' as special_code ,
    coalesce(round(((sum(case when t1.month_id = c_monthlist.month_id then t1.special_value end)-
                     sum(case when t1.month_id = to_char(to_date(c_monthlist.month_id, 'yyyymm') -  interval '1' month,'yyyymm') then t1.special_value end))/
                    sum(case when t1.month_id = to_char(to_date(c_monthlist.month_id, 'yyyymm') -  interval '1' month,'yyyymm') then t1.special_value end))*100,5),0) as special_value,
    now() as update_time ,
    coalesce(round(((sum(case when t1.month_id = c_monthlist.month_id then t1.special_value end)-
                     sum(case when t1.month_id = to_char(to_date(c_monthlist.month_id, 'yyyymm') -  interval '1' month,'yyyymm') then t1.special_value end))/
                    sum(case when t1.month_id = to_char(to_date(c_monthlist.month_id, 'yyyymm') -  interval '1' month,'yyyymm') then t1.special_value end))*100,5),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.special_master_m t1
where t1.special_code='SP001010103'
  and  to_date(t1.month_id,'yyyymm')>= to_date(c_monthlist.month_id, 'yyyymm') -  interval '1' month
  and to_date(t1.month_id,'yyyymm')< to_date(c_monthlist.month_id, 'yyyymm') + interval '1' month;



---急诊人次环比增长率
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001010106';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP001010106' as special_code ,
    coalesce(round(((sum(case when t1.month_id = c_monthlist.month_id then t1.special_value end)-
                     sum(case when t1.month_id = to_char(to_date(c_monthlist.month_id, 'yyyymm') -  interval '1' month,'yyyymm') then t1.special_value end))/
                    sum(case when t1.month_id = to_char(to_date(c_monthlist.month_id, 'yyyymm') -  interval '1' month,'yyyymm') then t1.special_value end))*100,5),0) as special_value,
    now() as update_time ,
    coalesce(round(((sum(case when t1.month_id = c_monthlist.month_id then t1.special_value end)-
                     sum(case when t1.month_id = to_char(to_date(c_monthlist.month_id, 'yyyymm') -  interval '1' month,'yyyymm') then t1.special_value end))/
                    sum(case when t1.month_id = to_char(to_date(c_monthlist.month_id, 'yyyymm') -  interval '1' month,'yyyymm') then t1.special_value end))*100,5),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.special_master_m t1
where t1.special_code='SP001010105'
  and  to_date(t1.month_id,'yyyymm')>= to_date(c_monthlist.month_id, 'yyyymm') -  interval '1' month
  and to_date(t1.month_id,'yyyymm')< to_date(c_monthlist.month_id, 'yyyymm') + interval '1' month;


---门诊患者基本药物处方占比
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP004010601';
insert into his_bi.special_master_m
select
    t1.month_id,
    'SP004010601' as special_code,
    round((t1.value/t2.special_value)*100,5) as special_value,
    now() as update_time,
    round((t1.value/t2.special_value)*100,5)as self_value,
    null as check_flag  ,
    null as check_comm
from
    (select
         month_id,
         count(1) as value
     from
         his_bi.dw_outp_patient_amount_m
     where
             basic_fees<>0.00
     group by month_id
    )t1
        left join his_bi.special_master_m t2 on t1.month_id = t2. month_id and t2.special_code='SP001010101'
where
        t1.month_id=c_monthlist.month_id;




---住院患者基本药物处方占比
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP004010602';
insert into his_bi.special_master_m
select
    t1.month_id,
    'SP004010602' as special_code,
    round((t1.value/t2.special_value)*100,5) as special_value,
    now() as update_time,
    round((t1.value/t2.special_value)*100,5)as self_value,
    null as check_flag  ,
    null as check_comm
from
    (select
         month_id,
         count(1) as value
     from
         his_bi.dw_inp_patient_amount_m t1
     where
             basic_fees<>0.00
     group by month_id
    )t1
        left join his_bi.special_master_m t2 on t1.month_id = t2. month_id and t2.special_code='SP001020102'
where
        t1.month_id=c_monthlist.month_id;


---住院收入占医疗收入比例
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP006020302';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP006020302'  as special_code,
    COALESCE(max(case when t1.kpi_code='JX029' then t1.kpi_value end),0) as special_value,
    now() as update_time ,
    COALESCE(max(case when t1.kpi_code='JX029' then t1.kpi_value end),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id = c_monthlist.month_id;


---住院服务收入占比
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP006020303';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP006020303'  as special_code,
    round(((sum((case when t1.kpi_code='JX03101' then t1.kpi_value end )))*1.00/
           sum((case when t1.kpi_code='JX04002' then t1.kpi_value end )))*100,5) as special_value,
    now() as update_time ,
    round(((sum((case when t1.kpi_code='JX03101' then t1.kpi_value end )))*1.00/
           sum((case when t1.kpi_code='JX04002' then t1.kpi_value end )))*100,5) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id = c_monthlist.month_id;

---门诊收入同比增长率
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP006010401';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP006010401' as special_code ,
    coalesce(round(((sum(case when t1.month_id = c_monthlist.month_id then t1.special_value end)-
                     sum(case when t1.month_id = to_char(to_date(left(c_monthlist.month_id,4), 'yyyy') -  interval '1' year,'yyyy')||right(c_monthlist.month_id,2) then t1.special_value end))/
                    sum(case when t1.month_id =  to_char(to_date(left(c_monthlist.month_id,4), 'yyyy') -  interval '1' year,'yyyy')||right(c_monthlist.month_id,2) then t1.special_value end))*100,5),0) as special_value,
    now() as update_time ,
    coalesce(round(((sum(case when t1.month_id = c_monthlist.month_id then t1.special_value end)-
                     sum(case when t1.month_id = to_char(to_date(left(c_monthlist.month_id,4), 'yyyy') -  interval '1' year,'yyyy')||right(c_monthlist.month_id,2) then t1.special_value end))/
                    sum(case when t1.month_id =  to_char(to_date(left(c_monthlist.month_id,4), 'yyyy') -  interval '1' year,'yyyy')||right(c_monthlist.month_id,2) then t1.special_value end))*100,5),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.special_master_m t1
where t1.special_code='SP006010102'
  and  to_date(left(t1.month_id,4),'yyyy')>= to_date(left(c_monthlist.month_id,4), 'yyyy') -  interval '1' year
  and to_date(left(t1.month_id,4),'yyyy')< to_date(left(c_monthlist.month_id,4), 'yyyy') +  interval '1' year;





---急诊收入同比增长率
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP006010402';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP006010402' as special_code ,
    coalesce(round(((sum(case when t1.month_id = c_monthlist.month_id then t1.special_value end)-
                     sum(case when t1.month_id = to_char(to_date(left(c_monthlist.month_id,4), 'yyyy') -  interval '1' year,'yyyy')||right(c_monthlist.month_id,2) then t1.special_value end))/
                    sum(case when t1.month_id =  to_char(to_date(left(c_monthlist.month_id,4), 'yyyy') -  interval '1' year,'yyyy')||right(c_monthlist.month_id,2) then t1.special_value end))*100,5),0) as special_value,
    now() as update_time ,
    coalesce(round(((sum(case when t1.month_id = c_monthlist.month_id then t1.special_value end)-
                     sum(case when t1.month_id = to_char(to_date(left(c_monthlist.month_id,4), 'yyyy') -  interval '1' year,'yyyy')||right(c_monthlist.month_id,2) then t1.special_value end))/
                    sum(case when t1.month_id =  to_char(to_date(left(c_monthlist.month_id,4), 'yyyy') -  interval '1' year,'yyyy')||right(c_monthlist.month_id,2) then t1.special_value end))*100,5),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.special_master_m t1
where t1.special_code='SP006010103'
  and  to_date(left(t1.month_id,4),'yyyy')>= to_date(left(c_monthlist.month_id,4), 'yyyy') -  interval '1' year
  and to_date(left(t1.month_id,4),'yyyy')< to_date(left(c_monthlist.month_id,4), 'yyyy') +  interval '1' year;


---体检收入同比增长率
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP006040105';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP006040105' as special_code ,
    coalesce(round(((sum(case when t1.month_id = c_monthlist.month_id then t1.special_value end)-
                     sum(case when t1.month_id = to_char(to_date(left(c_monthlist.month_id,4), 'yyyy') -  interval '1' year,'yyyy')||right(c_monthlist.month_id,2) then t1.special_value end))/
                    sum(case when t1.month_id =  to_char(to_date(left(c_monthlist.month_id,4), 'yyyy') -  interval '1' year,'yyyy')||right(c_monthlist.month_id,2) then t1.special_value end))*100,5),0) as special_value,
    now() as update_time ,
    coalesce(round(((sum(case when t1.month_id = c_monthlist.month_id then t1.special_value end)-
                     sum(case when t1.month_id = to_char(to_date(left(c_monthlist.month_id,4), 'yyyy') -  interval '1' year,'yyyy')||right(c_monthlist.month_id,2) then t1.special_value end))/
                    sum(case when t1.month_id =  to_char(to_date(left(c_monthlist.month_id,4), 'yyyy') -  interval '1' year,'yyyy')||right(c_monthlist.month_id,2) then t1.special_value end))*100,5),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.special_master_m t1
where t1.special_code='SP006040101'
  and  to_date(left(t1.month_id,4),'yyyy')>= to_date(left(c_monthlist.month_id,4), 'yyyy') -  interval '1' year
  and to_date(left(t1.month_id,4),'yyyy')< to_date(left(c_monthlist.month_id,4), 'yyyy') +  interval '1' year;



---次均费用药品费占比
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP008030201';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP008030201' as special_code ,
    COALESCE(round((sum(case when special_code='SP008030102' then special_value end)/
                    sum(case when special_code='SP008030101' then special_value end))*100,5),0) as special_value,
    now() as update_time ,
    COALESCE(round((sum(case when special_code='SP008030102' then special_value end)/
                    sum(case when special_code='SP008030101' then special_value end))*100,5),0) as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.special_master_m
where
        month_id=c_monthlist.month_id;


---基本药物使用金额比例
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP004020201';
insert into his_bi.special_master_m
select
    t1.month_id,
    'SP004020201' as special_code,
    round((t1.basic_fees/t2.kpi_value)*100,5) as special_value,
    now() as update_time ,
    round((t1.basic_fees/t2.kpi_value)*100,5) as self_value,
    null as check_flag  ,
    null as check_comm
from
    (select
         t.month_id,
         sum(inp_basic_fees)+sum(outp_basic_fees) as basic_fees
     from
         (select
              month_id,
              sum(basic_fees) as inp_basic_fees,
              0 as outp_basic_fees
          from
              his_bi.dw_inp_patient_amount_m
          GROUP BY month_id
          union all
          select
              month_id,
              0 as inp_basic_fees,
              sum(basic_fees) as outp_basic_fees
          from
              his_bi.dw_outp_patient_amount_m
          GROUP BY month_id)t
     GROUP BY t.month_id)t1 left join his_bi.kpi_master_m t2 on t1.month_id = t2.month_id
        and t2.kpi_code = 'JX03102'
where
        t1.month_id =  c_monthlist.month_id;



---处方总数
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP004010403';
insert into his_bi.special_master_m
select
    c_monthlist.month_id,
    'SP004010403' as special_code ,
    sum(cf_num) as special_value,
    now() as update_time ,
    sum(cf_num) as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.dw_outp_patient_info_m
where
        month_id = c_monthlist.month_id;

---预约就诊率
delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001010203';
insert into his_bi.special_master_m
select
    t1.month_id,
    'SP001010203' as special_code ,
    round((count(1)/max(t2.special_value))*100,5) as special_value,
    now() as update_time ,
    round((count(1)/max(t2.special_value))*100,5) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dw_outp_patient_info_m t1
         left join his_bi.special_master_m t2 on t1.month_id = t2.month_id and t2.special_code='SP001010103'
where coalesce(t1.is_yygh,0)=1
  and coalesce(t1.is_visited,0)=1
  and t1.month_id = c_monthlist.month_id
group by t1.month_id;

   end loop;
   RETURN 'SUCCESS';  
END;
",['D00129'],"[""delete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001010703';\rinsert into his_bi.special_master_m\rselect\r    left(st_date,6) as month_id,\r    'SP001010703' as special_code,\r    sum(value) as special_value,\r    now() as update_time ,\r    sum(value) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_outp_quantity_d\rwhere\r        key = 'D01002'\r  and left(st_date,6)=c_monthlist.month_id\rGROUP BY\r    left(st_date,6);\r\r---一类切口甲级愈合数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002040301';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002040301' as special_code ,\r    value as special_value,\r    now() as update_time ,\r    value as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.v_operate_level\rwhere\r        month_id=c_monthlist.month_id\r  and healgrade='1';\r\r---一类切口愈合数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002040302';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002040302' as special_code ,\r    sum(value) as special_value,\r    now() as update_time ,\r    sum(value) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.v_operate_level\rwhere\r        month_id=c_monthlist.month_id;\r\r\r\r---一类切口丙愈合数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002040304';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002040304' as special_code ,\r    COALESCE(sum(value),0) as special_value,\r    now() as update_time ,\r    COALESCE(sum(value),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.v_operate_level\rwhere\r        month_id=c_monthlist.month_id\r  and healgrade='3';\r\r\r\r\r---I 类切口甲级率\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002040303';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP002040303' as special_code ,\r    COALESCE(round((sum(case when special_code='SP002040301' then special_value end)/\r                    sum(case when special_code='SP002040302' then special_value end))*100,5),0) as special_value,\r    now() as update_time,\r    COALESCE(round((sum(case when special_code='SP002040301' then special_value end)/\r                    sum(case when special_code='SP002040302' then special_value end))*100,5),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.special_master_m\rwhere\r        month_id=c_monthlist.month_id;\r\r\r---I 类切口感染率\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002040305';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP002040305' as special_code ,\r    COALESCE(round((sum(case when special_code='SP002040304' then special_value end)/\r                    sum(case when special_code='SP002040302' then special_value end))*100,5),0) as special_value,\r    now() as update_time,\r    COALESCE(round((sum(case when special_code='SP002040304' then special_value end)/\r                    sum(case when special_code='SP002040302' then special_value end))*100,5),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.special_master_m\rwhere\r        month_id=c_monthlist.month_id;\r\r---剖宫产出院患者术前平均住院日\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080104';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP002080104' as special_code ,\r    coalesce(sum(t2.sub_days)/max(t3.value),0) as special_value,\r    now() as update_time ,\r    coalesce(sum(t2.sub_days)/max(t3.value),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.DWD_INP_MEDICAL_D t1\r        inner join his_bi.v_cpoe_operate_first t2 on t1.patient_id = t2.bah and t1.visit_id\r        = t2.zycs and t1.key='D00183'  and t2.tag='1' left join\r    (\r        select\r            left(st_date,6) as month_id,\r            count(1) as value\r        from his_bi.DWD_INP_MEDICAL_D\r        where\r                key='D00183'\r        GROUP BY left(st_date,6)\r    )t3 on left(t1.st_date,6) = t3.month_id\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id;\r\r---异位妊娠出院患者术前平均住院日\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080304';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP002080304' as special_code ,\r    coalesce(sum(t2.sub_days)/max(t3.value),0) as special_value,\r    now() as update_time ,\r    coalesce(sum(t2.sub_days)/max(t3.value),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.DWD_INP_MEDICAL_D t1\r        inner join his_bi.v_cpoe_operate_first t2 on t1.patient_id = t2.bah and t1.visit_id\r        = t2.zycs and t1.key='D00113' and t2.tag='1' left join\r    (\r        select\r            left(st_date,6) as month_id,\r            count(1) as value\r        from his_bi.DWD_INP_MEDICAL_D\r        where\r                key='D00113'\r        GROUP BY left(st_date,6)\r    )t3 on left(t1.st_date,6) = t3.month_id\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id;\r\r---宫颈癌出院患者术前平均住院日\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080404';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP002080404' as special_code ,\r    coalesce(sum(t2.sub_days)/max(t3.value),0) as special_value,\r    now() as update_time ,\r    coalesce(sum(t2.sub_days)/max(t3.value),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.DWD_INP_MEDICAL_D t1\r        inner join his_bi.v_cpoe_operate_first t2 on t1.patient_id = t2.bah and t1.visit_id\r        = t2.zycs and t1.key='D00208'  and t2.tag='1' left join\r    (\r        select\r            left(st_date,6) as month_id,\r            count(1) as value\r        from his_bi.DWD_INP_MEDICAL_D\r        where\r                key='D00208'\r        GROUP BY left(st_date,6)\r    )t3 on left(t1.st_date,6) = t3.month_id\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id;\r\r---新生儿呼吸窘迫综合征（NRDS）出院患者术前平均住院日\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080704';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP002080704' as special_code ,\r    coalesce(sum(t2.sub_days)/max(t3.value),0) as special_value,\r    now() as update_time ,\r    coalesce(sum(t2.sub_days)/max(t3.value),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.DWD_INP_MEDICAL_D t1\r        inner join his_bi.v_cpoe_operate_first t2 on t1.patient_id = t2.bah and t1.visit_id\r        = t2.zycs and t1.key='D00128'  and t2.tag='1' left join\r    (\r        select\r            left(st_date,6) as month_id,\r            count(1) as value\r        from his_bi.DWD_INP_MEDICAL_D\r        where\r                key='D00128'\r        GROUP BY left(st_date,6)\r    )t3 on left(t1.st_date,6) = t3.month_id\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id;\r\r---社区获得性肺炎(住院、儿童)出院患者术前平均住院日\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080204';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP002080204' as special_code ,\r    coalesce(sum(t2.sub_days)/max(t3.value),0) as special_value,\r    now() as update_time ,\r    coalesce(sum(t2.sub_days)/max(t3.value),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.DWD_INP_MEDICAL_D t1\r        inner join his_bi.v_cpoe_operate_first t2 on t1.patient_id = t2.bah and t1.visit_id\r        = t2.zycs and t1.key='D00173'  and t2.tag='1' left join\r    (\r        select\r            left(st_date,6) as month_id,\r            count(1) as value\r        from his_bi.DWD_INP_MEDICAL_D\r        where\r                key='D00173'\r        GROUP BY left(st_date,6)\r    )t3 on left(t1.st_date,6) = t3.month_id\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id;\r\r---子宫肌瘤出院患者术前平均住院日\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080504';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP002080504' as special_code ,\r    coalesce(sum(t2.sub_days)/max(t3.value),0) as special_value,\r    now() as update_time ,\r    coalesce(sum(t2.sub_days)/max(t3.value),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.DWD_INP_MEDICAL_D t1\r        inner join his_bi.v_cpoe_operate_first t2 on t1.patient_id = t2.bah and t1.visit_id\r        = t2.zycs and t1.key='D00224'  and t2.tag='1' left join\r    (\r        select\r            left(st_date,6) as month_id,\r            count(1) as value\r        from his_bi.DWD_INP_MEDICAL_D\r        where\r                key='D00224'\r        GROUP BY left(st_date,6)\r    )t3 on left(t1.st_date,6) = t3.month_id\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id;\r\r---艾滋病、梅毒和乙肝母婴传播疾病出院患者术前平均住院日\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080604';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP002080604' as special_code ,\r    coalesce(sum(t2.sub_days)/max(t3.value),0) as special_value,\r    now() as update_time ,\r    coalesce(sum(t2.sub_days)/max(t3.value),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.DWD_INP_MEDICAL_D t1\r        inner join his_bi.v_cpoe_operate_first t2 on t1.patient_id = t2.bah and t1.visit_id\r        = t2.zycs and t1.key='D00210'  and t2.tag='1' left join\r    (\r        select\r            left(st_date,6) as month_id,\r            count(1) as value\r        from his_bi.DWD_INP_MEDICAL_D\r        where\r                key='D00210'\r        GROUP BY left(st_date,6)\r    )t3 on left(t1.st_date,6) = t3.month_id\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id;\r\r---儿童哮喘出院患者术前平均住院日\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080804';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP002080804' as special_code ,\r    coalesce(sum(t2.sub_days)/max(t3.value),0) as special_value,\r    now() as update_time ,\r    coalesce(sum(t2.sub_days)/max(t3.value),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.DWD_INP_MEDICAL_D t1\r        inner join his_bi.v_cpoe_operate_first t2 on t1.patient_id = t2.bah and t1.visit_id\r        = t2.zycs and t1.key='D00225'  and t2.tag='1' left join\r    (\r        select\r            left(st_date,6) as month_id,\r            count(1) as value\r        from his_bi.DWD_INP_MEDICAL_D\r        where\r                key='D00225'\r        GROUP BY left(st_date,6)\r    )t3 on left(t1.st_date,6) = t3.month_id\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id;\r\r\r---社区获得性肺炎(住院、儿童)药品费用\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080207';\rinsert into his_bi.special_master_m\rselect\r    left(t1.st_date,6) as month_id,\r    'SP002080207' as special_code ,\r    sum(t2.pham_fees) as special_value,\r    now() as update_time ,\r    sum(t2.pham_fees) as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_amount_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00173'\r  and left(t1.st_date,6) = c_monthlist.month_id\rgroup by left(t1.st_date,6);\r\r---子宫肌瘤药品费用\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080507';\rinsert into his_bi.special_master_m\rselect\r    left(t1.st_date,6) as month_id,\r    'SP002080507' as special_code ,\r    sum(t2.pham_fees) as special_value,\r    now() as update_time ,\r    sum(t2.pham_fees) as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_amount_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00224'\r  and left(t1.st_date,6) = c_monthlist.month_id\rgroup by left(t1.st_date,6);\r\r---艾滋病、梅毒和乙肝母婴传播疾病药品费用\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080607';\rinsert into his_bi.special_master_m\rselect\r    left(t1.st_date,6) as month_id,\r    'SP002080607' as special_code ,\r    sum(t2.pham_fees) as special_value,\r    now() as update_time ,\r    sum(t2.pham_fees) as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_amount_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00210'\r  and left(t1.st_date,6) = c_monthlist.month_id\rgroup by left(t1.st_date,6);\r\r\r\r---社区获得性肺炎(住院、儿童)材料费用\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080209';\rinsert into his_bi.special_master_m\rselect\r    left(t1.st_date,6) as month_id,\r    'SP002080209' as special_code ,\r    sum(t2.pham_fees) as special_value,\r    now() as update_time ,\r    sum(t2.pham_fees) as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_amount_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00173'\r  and left(t1.st_date,6) = c_monthlist.month_id\rgroup by left(t1.st_date,6);\r\r---子宫肌瘤材料费用\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080509';\rinsert into his_bi.special_master_m\rselect\r    left(t1.st_date,6) as month_id,\r    'SP002080509' as special_code ,\r    sum(t2.pham_fees) as special_value,\r    now() as update_time ,\r    sum(t2.pham_fees) as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_amount_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00224'\r  and left(t1.st_date,6) = c_monthlist.month_id\rgroup by left(t1.st_date,6);\r\r---艾滋病、梅毒和乙肝母婴传播疾病材料费用\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080609';\rinsert into his_bi.special_master_m\rselect\r    left(t1.st_date,6) as month_id,\r    'SP002080609' as special_code ,\r    sum(t2.pham_fees) as special_value,\r    now() as update_time ,\r    sum(t2.pham_fees) as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_amount_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00210'\r  and left(t1.st_date,6) = c_monthlist.month_id\rgroup by left(t1.st_date,6);\r\r\r---剖宫产药品费用\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080107';\rinsert into his_bi.special_master_m\rselect\r    left(t1.st_date,6) as month_id,\r    'SP002080107' as special_code ,\r    sum(t2.pham_fees) as special_value,\r    now() as update_time ,\r    sum(t2.pham_fees) as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.DWD_INP_MEDICAL_D t1\r         inner join his_bi.dw_inp_patient_amount_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00183'\r  and left(t1.st_date,6) = c_monthlist.month_id\rgroup by left(t1.st_date,6);\r\r---异位妊娠药品费用\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080307';\rinsert into his_bi.special_master_m\rselect\r    left(t1.st_date,6) as month_id,\r    'SP002080307' as special_code ,\r    sum(t2.pham_fees) as special_value,\r    now() as update_time ,\r    sum(t2.pham_fees) as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.DWD_INP_MEDICAL_D t1\r         inner join his_bi.dw_inp_patient_amount_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00113'\r  and left(t1.st_date,6) = c_monthlist.month_id\rgroup by left(t1.st_date,6);\r\r---宫颈癌药品费用\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080407';\rinsert into his_bi.special_master_m\rselect\r    left(t1.st_date,6) as month_id,\r    'SP002080407' as special_code ,\r    sum(t2.pham_fees) as special_value,\r    now() as update_time ,\r    sum(t2.pham_fees) as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.DWD_INP_MEDICAL_D t1\r         inner join his_bi.dw_inp_patient_amount_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00208'\r  and left(t1.st_date,6) = c_monthlist.month_id\rgroup by left(t1.st_date,6);\r\r\r---剖宫产材料费用\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080109';\rinsert into his_bi.special_master_m\rselect\r    left(t1.st_date,6) as month_id,\r    'SP002080109' as special_code ,\r    sum(t2.pham_fees) as special_value,\r    now() as update_time ,\r    sum(t2.pham_fees) as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.DWD_INP_MEDICAL_D t1\r         inner join his_bi.dw_inp_patient_amount_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00183'\r  and left(t1.st_date,6) = c_monthlist.month_id\rgroup by left(t1.st_date,6);\r\r---异位妊娠材料费用\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080309';\rinsert into his_bi.special_master_m\rselect\r    left(t1.st_date,6) as month_id,\r    'SP002080309' as special_code ,\r    sum(t2.pham_fees) as special_value,\r    now() as update_time ,\r    sum(t2.pham_fees) as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.DWD_INP_MEDICAL_D t1\r         inner join his_bi.dw_inp_patient_amount_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00113'\r  and left(t1.st_date,6) = c_monthlist.month_id\rgroup by left(t1.st_date,6);\r\r---宫颈癌材料费用\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080409';\rinsert into his_bi.special_master_m\rselect\r    left(t1.st_date,6) as month_id,\r    'SP002080409' as special_code ,\r    sum(t2.pham_fees) as special_value,\r    now() as update_time ,\r    sum(t2.pham_fees) as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.DWD_INP_MEDICAL_D t1\r         inner join his_bi.dw_inp_patient_amount_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00208'\r  and left(t1.st_date,6) = c_monthlist.month_id\rgroup by left(t1.st_date,6);\r\r\r\r\r---总诊疗人次数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001010101';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP001010101' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX03803';\r\r---1.产后出血死亡率\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070103';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP002070103' as special_code ,\r    case when  sum(case when special_code='SP002070101' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002070102' then special_value end)/\r                                                                                                          sum(case when special_code='SP002070101' then special_value end)),5),0) else 0 end as special_value,\r    now() as update_time ,\r    case when  sum(case when special_code='SP002070101' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002070102' then special_value end)/\r                                                                                                          sum(case when special_code='SP002070101' then special_value end)),5),0) else 0 end as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.special_master_m\rwhere\r        month_id=c_monthlist.month_id;\r\r---2.妊娠合并糖尿病死亡率\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070203';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP002070203' as special_code ,\r    case when  sum(case when special_code='SP002070201' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002070202' then special_value end)/\r                                                                                                          sum(case when special_code='SP002070201' then special_value end)),5),0) else 0 end as special_value,\r    now() as update_time ,\r    case when  sum(case when special_code='SP002070201' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002070202' then special_value end)/\r                                                                                                          sum(case when special_code='SP002070201' then special_value end)),5),0) else 0 end as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.special_master_m\rwhere\r        month_id=c_monthlist.month_id;\r\r---3.盆腔炎性疾病死亡率\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070303';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP002070303' as special_code ,\r    case when  sum(case when special_code='SP002070301' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002070302' then special_value end)/\r                                                                                                          sum(case when special_code='SP002070301' then special_value end)),5),0) else 0 end as special_value,\r    now() as update_time ,\r    case when  sum(case when special_code='SP002070301' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002070302' then special_value end)/\r                                                                                                          sum(case when special_code='SP002070301' then special_value end)),5),0) else 0 end as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.special_master_m\rwhere\r        month_id=c_monthlist.month_id;\r\r---4.异位妊娠死亡率\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070403';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP002070403' as special_code ,\r    case when  sum(case when special_code='SP002070401' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002070402' then special_value end)/\r                                                                                                          sum(case when special_code='SP002070401' then special_value end)),5),0) else 0 end as special_value,\r    now() as update_time ,\r    case when  sum(case when special_code='SP002070401' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002070402' then special_value end)/\r                                                                                                          sum(case when special_code='SP002070401' then special_value end)),5),0) else 0 end as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.special_master_m\rwhere\r        month_id=c_monthlist.month_id;\r\r---5.女性生殖器脱垂死亡率\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070503';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP002070503' as special_code ,\r    case when  sum(case when special_code='SP002070501' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002070502' then special_value end)/\r                                                                                                          sum(case when special_code='SP002070501' then special_value end)),5),0) else 0 end as special_value,\r    now() as update_time ,\r    case when  sum(case when special_code='SP002070501' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002070502' then special_value end)/\r                                                                                                          sum(case when special_code='SP002070501' then special_value end)),5),0) else 0 end as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.special_master_m\rwhere\r        month_id=c_monthlist.month_id;\r\r---6.直肠阴道隔子宫内膜异位症死亡率\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070603';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP002070603' as special_code ,\r    case when  sum(case when special_code='SP002070601' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002070602' then special_value end)/\r                                                                                                          sum(case when special_code='SP002070601' then special_value end)),5),0) else 0 end as special_value,\r    now() as update_time ,\r    case when  sum(case when special_code='SP002070601' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002070602' then special_value end)/\r                                                                                                          sum(case when special_code='SP002070601' then special_value end)),5),0) else 0 end as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.special_master_m\rwhere\r        month_id=c_monthlist.month_id;\r\r---7.妊娠滋养细胞疾病死亡率\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070703';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP002070703' as special_code ,\r    case when  sum(case when special_code='SP002070701' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002070702' then special_value end)/\r                                                                                                          sum(case when special_code='SP002070701' then special_value end)),5),0) else 0 end as special_value,\r    now() as update_time ,\r    case when  sum(case when special_code='SP002070701' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002070702' then special_value end)/\r                                                                                                          sum(case when special_code='SP002070701' then special_value end)),5),0) else 0 end as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.special_master_m\rwhere\r        month_id=c_monthlist.month_id;\r\r---8.重度卵巢过度刺激综合征死亡率\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070803';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP002070803' as special_code ,\r    case when  sum(case when special_code='SP002070801' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002070802' then special_value end)/\r                                                                                                          sum(case when special_code='SP002070801' then special_value end)),5),0) else 0 end as special_value,\r    now() as update_time ,\r    case when  sum(case when special_code='SP002070801' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002070802' then special_value end)/\r                                                                                                          sum(case when special_code='SP002070801' then special_value end)),5),0) else 0 end as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.special_master_m\rwhere\r        month_id=c_monthlist.month_id;\r\r---9.重度子痫前期死亡率\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070903';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP002070903' as special_code ,\r    case when  sum(case when special_code='SP002070901' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002070902' then special_value end)/\r                                                                                                          sum(case when special_code='SP002070901' then special_value end)),5),0) else 0 end as special_value,\r    now() as update_time ,\r    case when  sum(case when special_code='SP002070901' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002070902' then special_value end)/\r                                                                                                          sum(case when special_code='SP002070901' then special_value end)),5),0) else 0 end as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.special_master_m\rwhere\r        month_id=c_monthlist.month_id;\r\r---10.早产死亡率\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071003';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP002071003' as special_code ,\r    case when  sum(case when special_code='SP002071001' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002071002' then special_value end)/\r                                                                                                          sum(case when special_code='SP002071001' then special_value end)),5),0) else 0 end as special_value,\r    now() as update_time ,\r    case when  sum(case when special_code='SP002071001' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002071002' then special_value end)/\r                                                                                                          sum(case when special_code='SP002071001' then special_value end)),5),0) else 0 end as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.special_master_m\rwhere\r        month_id=c_monthlist.month_id;\r\r---11.多胎妊娠死亡率\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071103';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP002071103' as special_code ,\r    case when  sum(case when special_code='SP002071101' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002071102' then special_value end)/\r                                                                                                          sum(case when special_code='SP002071101' then special_value end)),5),0) else 0 end as special_value,\r    now() as update_time ,\r    case when  sum(case when special_code='SP002071101' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002071102' then special_value end)/\r                                                                                                          sum(case when special_code='SP002071101' then special_value end)),5),0) else 0 end as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.special_master_m\rwhere\r        month_id=c_monthlist.month_id;\r\r---12.胎膜早破死亡率\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071203';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP002071203' as special_code ,\r    case when  sum(case when special_code='SP002071201' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002071202' then special_value end)/\r                                                                                                          sum(case when special_code='SP002071201' then special_value end)),5),0) else 0 end as special_value,\r    now() as update_time ,\r    case when  sum(case when special_code='SP002071201' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002071202' then special_value end)/\r                                                                                                          sum(case when special_code='SP002071201' then special_value end)),5),0) else 0 end as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.special_master_m\rwhere\r        month_id=c_monthlist.month_id;\r\r---13.前置胎盘死亡率\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071303';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP002071303' as special_code ,\r    case when  sum(case when special_code='SP002071301' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002071302' then special_value end)/\r                                                                                                          sum(case when special_code='SP002071301' then special_value end)),5),0) else 0 end as special_value,\r    now() as update_time ,\r    case when  sum(case when special_code='SP002071301' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002071302' then special_value end)/\r                                                                                                          sum(case when special_code='SP002071301' then special_value end)),5),0) else 0 end as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.special_master_m\rwhere\r        month_id=c_monthlist.month_id;\r\r---14.胎盘早剥死亡率\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071403';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP002071403' as special_code ,\r    case when  sum(case when special_code='SP002071401' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002071402' then special_value end)/\r                                                                                                          sum(case when special_code='SP002071401' then special_value end)),5),0) else 0 end as special_value,\r    now() as update_time ,\r    case when  sum(case when special_code='SP002071401' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002071402' then special_value end)/\r                                                                                                          sum(case when special_code='SP002071401' then special_value end)),5),0) else 0 end as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.special_master_m\rwhere\r        month_id=c_monthlist.month_id;\r\r---15.新生儿窒息死亡率\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071503';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP002071503' as special_code ,\r    case when  sum(case when special_code='SP002071501' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002071502' then special_value end)/\r                                                                                                          sum(case when special_code='SP002071501' then special_value end)),5),0) else 0 end as special_value,\r    now() as update_time ,\r    case when  sum(case when special_code='SP002071501' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002071502' then special_value end)/\r                                                                                                          sum(case when special_code='SP002071501' then special_value end)),5),0) else 0 end as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.special_master_m\rwhere\r        month_id=c_monthlist.month_id;\r\r---16.新生儿呼吸窘迫死亡率\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071603';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP002071603' as special_code ,\r    case when  sum(case when special_code='SP002071601' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002071602' then special_value end)/\r                                                                                                          sum(case when special_code='SP002071601' then special_value end)),5),0) else 0 end as special_value,\r    now() as update_time ,\r    case when  sum(case when special_code='SP002071601' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002071602' then special_value end)/\r                                                                                                          sum(case when special_code='SP002071601' then special_value end)),5),0) else 0 end as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.special_master_m\rwhere\r        month_id=c_monthlist.month_id;\r\r---17.支气管肺炎死亡率\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071703';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP002071703' as special_code ,\r    case when  sum(case when special_code='SP002071701' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002071702' then special_value end)/\r                                                                                                          sum(case when special_code='SP002071701' then special_value end)),5),0) else 0 end as special_value,\r    now() as update_time ,\r    case when  sum(case when special_code='SP002071701' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002071702' then special_value end)/\r                                                                                                          sum(case when special_code='SP002071701' then special_value end)),5),0) else 0 end as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.special_master_m\rwhere\r        month_id=c_monthlist.month_id;\r\r---18.小儿腹泻病死亡率\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071803';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP002071803' as special_code ,\r    case when  sum(case when special_code='SP002071801' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002071802' then special_value end)/\r                                                                                                          sum(case when special_code='SP002071801' then special_value end)),5),0) else 0 end as special_value,\r    now() as update_time ,\r    case when  sum(case when special_code='SP002071801' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002071802' then special_value end)/\r                                                                                                          sum(case when special_code='SP002071801' then special_value end)),5),0) else 0 end as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.special_master_m\rwhere\r        month_id=c_monthlist.month_id;\r\r---19.低出生体重儿死亡率\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071903';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP002071903' as special_code ,\r    case when  sum(case when special_code='SP002071901' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002071902' then special_value end)/\r                                                                                                          sum(case when special_code='SP002071901' then special_value end)),5),0) else 0 end as special_value,\r    now() as update_time ,\r    case when  sum(case when special_code='SP002071901' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002071902' then special_value end)/\r                                                                                                          sum(case when special_code='SP002071901' then special_value end)),5),0) else 0 end as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.special_master_m\rwhere\r        month_id=c_monthlist.month_id;\r\r---20.新生儿高胆红素血症死亡率\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002072003';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP002072003' as special_code ,\r    case when  sum(case when special_code='SP002072001' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002072002' then special_value end)/\r                                                                                                          sum(case when special_code='SP002072001' then special_value end)),5),0) else 0 end as special_value,\r    now() as update_time ,\r    case when  sum(case when special_code='SP002072001' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP002072002' then special_value end)/\r                                                                                                          sum(case when special_code='SP002072001' then special_value end)),5),0) else 0 end as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.special_master_m\rwhere\r        month_id=c_monthlist.month_id;\r\r\r---门急诊人次\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001010102';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP001010102' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV007010201';\r\r\r---急诊人次\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001010105';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP001010105' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV007010202';\r\r\r\r---预约诊疗人次\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001010201';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP001010201' as special_code ,\r    sum(yyrs) as special_value,\r    now() as update_time ,\r    sum(yyrs)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dw_outp_special_clinic_type t1\rwhere\r        t1.month_id=c_monthlist.month_id;\r\r\r---门诊患者平均预约诊疗率\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001010202';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP001010202' as special_code ,\r    COALESCE(round((sum(case when special_code='SP001010201' then special_value end)/\r                    sum(case when special_code='SP001010101' then special_value end))*100,5),0) as special_value,\r    now() as update_time ,\r    COALESCE(round((sum(case when special_code='SP001010201' then special_value end)/\r                    sum(case when special_code='SP001010101' then special_value end))*100,5),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.special_master_m\rwhere month_id=c_monthlist.month_id;\r\r\r\r\r\r---普通门诊预约人次\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001010204';\rinsert into his_bi.special_master_m\rselect\r    t1.month_id,\r    'SP001010204' as special_code ,\r    t1.yyrs as special_value,\r    now() as update_time ,\r    t1.yyrs  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.dw_outp_special_clinic_type t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.special_clinic_type='1';\r\r\r---特需门诊预约人次\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001010205';\rinsert into his_bi.special_master_m\rselect\r    t1.month_id,\r    'SP001010205' as special_code ,\r    t1.yyrs as special_value,\r    now() as update_time ,\r    t1.yyrs  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.dw_outp_special_clinic_type t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.special_clinic_type='2';\r\r\r---专科门诊预约人次\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001010206';\rinsert into his_bi.special_master_m\rselect\r    t1.month_id,\r    'SP001010206' as special_code ,\r    t1.yyrs as special_value,\r    now() as update_time ,\r    t1.yyrs  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.dw_outp_special_clinic_type t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.special_clinic_type='3';\r\r\r---专病门诊预约人次\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001010207';\rinsert into his_bi.special_master_m\rselect\r    t1.month_id,\r    'SP001010207' as special_code ,\r    t1.yyrs as special_value,\r    now() as update_time ,\r    t1.yyrs  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.dw_outp_special_clinic_type t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.special_clinic_type='4';\r\r---妊娠合并糖尿病7天重返\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070206';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id ,\r    'SP002070206' as special_code ,\r    coalesce(count(1),0) as special_value,\r    now() as update_time,\r    coalesce(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.DWD_INP_MEDICAL_D t1\r         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id=t2.pai_visit_id and t2.key='D00114'\rwhere\r        t1.key = 'D05026'\r  and left(t1.st_date,6)=c_monthlist.month_id;\r\r---盆腔炎性疾病7天重返\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070306';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id ,\r    'SP002070306' as special_code ,\r    coalesce(count(1),0) as special_value,\r    now() as update_time,\r    coalesce(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.DWD_INP_MEDICAL_D t1\r         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id=t2.pai_visit_id and t2.key='D00116'\rwhere\r        t1.key = 'D05026'\r  and left(t1.st_date,6)=c_monthlist.month_id;\r\r---异位妊娠7天重返\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070406';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id ,\r    'SP002070406' as special_code ,\r    coalesce(count(1),0) as special_value,\r    now() as update_time,\r    coalesce(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.DWD_INP_MEDICAL_D t1\r         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id=t2.pai_visit_id and t2.key='D00113'\rwhere\r        t1.key = 'D05026'\r  and left(t1.st_date,6)=c_monthlist.month_id;\r\r---女性生殖器脱垂7天重返\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070506';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id ,\r    'SP002070506' as special_code ,\r    coalesce(count(1),0) as special_value,\r    now() as update_time,\r    coalesce(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.DWD_INP_MEDICAL_D t1\r         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id=t2.pai_visit_id and t2.key='D00117'\rwhere\r        t1.key = 'D05026'\r  and left(t1.st_date,6)=c_monthlist.month_id;\r\r---重度卵巢过度刺激综合征7天重返\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070806';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id ,\r    'SP002070806' as special_code ,\r    coalesce(count(1),0) as special_value,\r    now() as update_time,\r    coalesce(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.DWD_INP_MEDICAL_D t1\r         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id=t2.pai_visit_id and t2.key='D00121'\rwhere\r        t1.key = 'D05026'\r  and left(t1.st_date,6)=c_monthlist.month_id;\r\r---重度子痫前期7天重返\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070906';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id ,\r    'SP002070906' as special_code ,\r    coalesce(count(1),0) as special_value,\r    now() as update_time,\r    coalesce(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.DWD_INP_MEDICAL_D t1\r         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id=t2.pai_visit_id and t2.key='D00111'\rwhere\r        t1.key = 'D05026'\r  and left(t1.st_date,6)=c_monthlist.month_id;\r\r---早产7天重返\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071006';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id ,\r    'SP002071006' as special_code ,\r    coalesce(count(1),0) as special_value,\r    now() as update_time,\r    coalesce(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.DWD_INP_MEDICAL_D t1\r         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id=t2.pai_visit_id and t2.key='D00106'\rwhere\r        t1.key = 'D05026'\r  and left(t1.st_date,6)=c_monthlist.month_id;\r\r---多胎妊娠7天重返\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071106';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id ,\r    'SP002071106' as special_code ,\r    coalesce(count(1),0) as special_value,\r    now() as update_time,\r    coalesce(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.DWD_INP_MEDICAL_D t1\r         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id=t2.pai_visit_id and t2.key='D00107'\rwhere\r        t1.key = 'D05026'\r  and left(t1.st_date,6)=c_monthlist.month_id;\r\r---胎膜早破7天重返\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071206';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id ,\r    'SP002071206' as special_code ,\r    coalesce(count(1),0) as special_value,\r    now() as update_time,\r    coalesce(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.DWD_INP_MEDICAL_D t1\r         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id=t2.pai_visit_id and t2.key='D00108'\rwhere\r        t1.key = 'D05026'\r  and left(t1.st_date,6)=c_monthlist.month_id;\r\r---前置胎盘7天重返\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071306';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id ,\r    'SP002071306' as special_code ,\r    coalesce(count(1),0) as special_value,\r    now() as update_time,\r    coalesce(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.DWD_INP_MEDICAL_D t1\r         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id=t2.pai_visit_id and t2.key='D00109'\rwhere\r        t1.key = 'D05026'\r  and left(t1.st_date,6)=c_monthlist.month_id;\r\r---胎盘早剥7天重返\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071406';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id ,\r    'SP002071406' as special_code ,\r    coalesce(count(1),0) as special_value,\r    now() as update_time,\r    coalesce(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.DWD_INP_MEDICAL_D t1\r         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id=t2.pai_visit_id and t2.key='D00110'\rwhere\r        t1.key = 'D05026'\r  and left(t1.st_date,6)=c_monthlist.month_id;\r\r---新生儿窒息7天重返\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071506';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id ,\r    'SP002071506' as special_code ,\r    coalesce(count(1),0) as special_value,\r    now() as update_time,\r    coalesce(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.DWD_INP_MEDICAL_D t1\r         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id=t2.pai_visit_id and t2.key='D00127'\rwhere\r        t1.key = 'D05026'\r  and left(t1.st_date,6)=c_monthlist.month_id;\r\r---新生儿呼吸窘迫7天重返\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071606';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id ,\r    'SP002071606' as special_code ,\r    coalesce(count(1),0) as special_value,\r    now() as update_time,\r    coalesce(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.DWD_INP_MEDICAL_D t1\r         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id=t2.pai_visit_id and t2.key='D00128'\rwhere\r        t1.key = 'D05026'\r  and left(t1.st_date,6)=c_monthlist.month_id;\r\r---支气管肺炎7天重返\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071706';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id ,\r    'SP002071706' as special_code ,\r    coalesce(count(1),0) as special_value,\r    now() as update_time,\r    coalesce(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.DWD_INP_MEDICAL_D t1\r         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id=t2.pai_visit_id and t2.key='D00123'\rwhere\r        t1.key = 'D05026'\r  and left(t1.st_date,6)=c_monthlist.month_id;\r\r---小儿腹泻病7天重返\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071806';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id ,\r    'SP002071806' as special_code ,\r    coalesce(count(1),0) as special_value,\r    now() as update_time,\r    coalesce(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.DWD_INP_MEDICAL_D t1\r         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id=t2.pai_visit_id and t2.key='D00124'\rwhere\r        t1.key = 'D05026'\r  and left(t1.st_date,6)=c_monthlist.month_id;\r\r---低出生体重儿7天重返\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071906';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id ,\r    'SP002071906' as special_code ,\r    coalesce(count(1),0) as special_value,\r    now() as update_time,\r    coalesce(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.DWD_INP_MEDICAL_D t1\r         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id=t2.pai_visit_id and t2.key='D00125'\rwhere\r        t1.key = 'D05026'\r  and left(t1.st_date,6)=c_monthlist.month_id;\r\r\r---普通门诊预约率\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001010208';\rinsert into his_bi.special_master_m\rselect\r    t1.month_id,\r    'SP001010208' as special_code ,\r    round((t1.yyrs*1.00/t1.ghrs)*100,5) as special_value,\r    now() as update_time ,\r    round((t1.yyrs*1.00/t1.ghrs)*100,5) as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.dw_outp_special_clinic_type t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.special_clinic_type='1';\r\r\r---普通门诊预约率\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001010209';\rinsert into his_bi.special_master_m\rselect\r    t1.month_id,\r    'SP001010209' as special_code ,\r    round((t1.yyrs*1.00/t1.ghrs)*100,5) as special_value,\r    now() as update_time ,\r    round((t1.yyrs*1.00/t1.ghrs)*100,5) as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.dw_outp_special_clinic_type t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.special_clinic_type='2';\r\r\r---专科门诊预约率\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001010210';\rinsert into his_bi.special_master_m\rselect\r    t1.month_id,\r    'SP001010210' as special_code ,\r    round((t1.yyrs*1.00/t1.ghrs)*100,5) as special_value,\r    now() as update_time ,\r    round((t1.yyrs*1.00/t1.ghrs)*100,5) as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.dw_outp_special_clinic_type t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.special_clinic_type='3';\r\r\r\r---专病门诊预约率\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001010211';\rinsert into his_bi.special_master_m\rselect\r    t1.month_id,\r    'SP001010211' as special_code ,\r    round((t1.yyrs*1.00/t1.ghrs)*100,5) as special_value,\r    now() as update_time ,\r    round((t1.yyrs*1.00/t1.ghrs)*100,5) as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.dw_outp_special_clinic_type t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.special_clinic_type='4';\r\r\r\r---门诊患者预约后平均等待时间\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001010212';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP001010212' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX023';\r\r\r\r---复诊率\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001010401';\rinsert into his_bi.special_master_m\rselect\r    t1.month_id,\r    'SP001010401' as special_code ,\r    round((count(case when t1.return_visit=1 then 1 end )*1.0/count(1))*100,5) as special_value,\r    now() as update_time ,\r    round((count(case when t1.return_visit=1 then 1 end )*1.0/count(1))*100,5) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dw_outp_patient_info_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\rgroup by t1.month_id;\r\r\r\r---复诊预约率\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001010401';\rinsert into his_bi.special_master_m\rselect\r    t1.month_id,\r    'SP001010401' as special_code ,\r    round((count(case when t1.return_visit=1 then 1 end )*1.0/count(1))*100,5) as special_value,\r    now() as update_time ,\r    round((count(case when t1.return_visit=1 then 1 end )*1.0/count(1))*100,5) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dw_outp_patient_info_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\rgroup by t1.month_id;\r\r\r\r---复诊预约率\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001010402';\rinsert into his_bi.special_master_m\rselect\r    t1.month_id,\r    'SP001010402' as special_code ,\r    round((count(case when t1.return_visit=1 and is_yygh=1 then 1 end )*1.0/(count(case when t1.return_visit=1 then 1 end)))*100,5) as special_value,\r    now() as update_time ,\r    round((count(case when t1.return_visit=1 and is_yygh=1 then 1 end )*1.0/(count(case when t1.return_visit=1 then 1 end)))*100,5) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dw_outp_patient_info_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\rgroup by t1.month_id;\r\r\r\r---门诊人头人次比\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001010108';\rinsert into his_bi.special_master_m\rselect\r    t1.month_id,\r    'SP001010108' as special_code ,\r    count(distinct t1.outp_visit_id)*1.00/count(distinct t1.patient_id) as special_value,\r    now() as update_time ,\r    count(distinct t1.outp_visit_id)*1.00/count(distinct t1.patient_id) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dw_outp_patient_info_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\rgroup by t1.month_id;\r\r\r---门诊人头\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001010107';\rinsert into his_bi.special_master_m\rselect\r    t1.month_id,\r    'SP001010107' as special_code ,\r    count(distinct t1.patient_id) as special_value,\r    now() as update_time ,\r    count(distinct t1.patient_id) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dw_outp_patient_info_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\rgroup by t1.month_id;\r\r\r\r---急诊入院人次\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001020201';\rinsert into his_bi.special_master_m\rselect\r    to_char(t1.cyrq,'yyyymm') as month_id,\r    'SP001020201' as special_code ,\r    count(1) as special_value,\r    now() as update_time ,\r    count(1) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.ods_patient_medical_record t1\rwhere\r        t1.rytj = '1'\r  and to_char(t1.cyrq,'yyyymm') = c_monthlist.month_id\rgroup by  to_char(t1.cyrq,'yyyymm');\r\r\r\r---门诊入院人次\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001020202';\rinsert into his_bi.special_master_m\rselect\r    to_char(t1.cyrq,'yyyymm') as month_id,\r    'SP001020202' as special_code ,\r    count(1) as special_value,\r    now() as update_time ,\r    count(1) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.ods_patient_medical_record t1\rwhere\r        t1.rytj = '2'\r  and to_char(t1.cyrq,'yyyymm') = c_monthlist.month_id\rgroup by  to_char(t1.cyrq,'yyyymm');\r\r\r---其他医疗机构转入人次\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001020203';\rinsert into his_bi.special_master_m\rselect\r    to_char(t1.cyrq,'yyyymm') as month_id,\r    'SP001020203' as special_code ,\r    count(1) as special_value,\r    now() as update_time ,\r    count(1) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.ods_patient_medical_record t1\rwhere\r        t1.rytj = '3'\r  and to_char(t1.cyrq,'yyyymm') = c_monthlist.month_id\rgroup by  to_char(t1.cyrq,'yyyymm');\r\r\r\r\r---入院人次\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001020101';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP001020101' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV007010204';\r\r\r\r---出院人次\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001020102';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP001020102' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX00102';\r\r\r\r---出院人头\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001020103';\rinsert into his_bi.special_master_m\rselect\r    t1.month_id,\r    'SP001020103' as special_code ,\r    count(distinct t1.patient_id) as special_value,\r    now() as update_time ,\r    count(distinct t1.patient_id) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dw_inp_patient_info_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\rgroup by t1.month_id;\r\r\r\r\r---住院人头人次比\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001020104';\rinsert into his_bi.special_master_m\rselect\r    t1.month_id,\r    'SP001020104' as special_code ,\r    round((count(distinct pai_visit_id)*1.00/count(distinct patient_id))*100,5) as special_value,\r    now() as update_time ,\r    round((count(distinct pai_visit_id)*1.00/count(distinct patient_id))*100,5) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dw_inp_patient_info_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\rgroup by t1.month_id;\r\r\r\r----出院患者实际占用总床日数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001020105';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP001020105' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX04003';\r\r---年住院患者入院、出院人次\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001020106';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP001020106' as special_code ,\r    COALESCE(round((sum(case when special_code='SP001020101' then special_value end)+\r                    sum(case when special_code='SP001020102' then special_value end)),5),0) as special_value,\r    now() as update_time,\r    COALESCE(round((sum(case when special_code='SP001020101' then special_value end)+\r                    sum(case when special_code='SP001020102' then special_value end)),5),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.special_master_m\rwhere\r        month_id=c_monthlist.month_id;\r\r\r---门诊人次数与出院人次数比\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001020107';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP001020107' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX001';\r\r\r\r---每百门急诊入院人数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001020301';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP001020301' as special_code ,\r    round((max(t2.value)/( COALESCE(max(t1.level_value) ,0)))*100,5) as special_value,\r    now() as update_time ,\r    round((max(t2.value)/( COALESCE(max(t1.level_value) ,0)))*100,5)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\r         left join (\r    select\r        to_char(t1.cyrq,'yyyymm') as month_id,\r        count(1) as value\r    from his_bi.ods_patient_medical_record t1\r    where\r            t1.rytj in('1','2')\r    group by  to_char(t1.cyrq,'yyyymm')\r)t2 on t1.month_id = t2.month_id\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV007010201';\r\r\r---体检人次\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001040101';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP001040101' as special_code ,\r    case when count(1)=0 then 0 else count(1) end as special_value,\r    now() as update_time ,\r    count(1)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_outp_work_d\rwhere\r        key = 'D00131'\r  and left(st_date,6) = c_monthlist.month_id;\r\r\r\r---健康检查总费用\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001040102';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP001040102' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX03104';\r\r---健康检查次均费用\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001040103';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP001040103' as special_code ,\r    COALESCE(round((sum(case when special_code='SP001040102' then special_value end)/\r                    sum(case when special_code='SP001040101' then special_value end)),5),0) as special_value,\r    now() as update_time,\r    COALESCE(round((sum(case when special_code='SP001040102' then special_value end)/\r                    sum(case when special_code='SP001040101' then special_value end)),5),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.special_master_m\rwhere\r        month_id=c_monthlist.month_id;\r\r---年分娩产妇数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001050101';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP001050101' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV007010210';\r\r\r---活产数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001050102';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP001050102' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV007010211';\r\r\r\r----出入院主要诊断符合率\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002020201';\rinsert into his_bi.special_master_m\rselect\r    to_char(t1.cyrq,'yyyymm') as month_id,\r    'SP002020201' as special_code ,\r    round((sum(case when t1.rcfhbz= '1' then 1 end)*1.00/count(1))*100,5) as special_value,\r    now() as update_time ,\r    round((sum(case when t1.rcfhbz= '1' then 1 end)*1.00/count(1))*100,5) as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.ods_patient_medical_record t1\rwhere\r        to_char(t1.cyrq,'yyyymm')=c_monthlist.month_id\rgroup by to_char(t1.cyrq,'yyyymm');\r\r\r---门诊人次\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001010103';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP001010103' as special_code ,\r    (sum((case when t1.special_code='SP001010102' then t1.special_value end)))\r        -sum((case when t1.special_code='SP001010105' then t1.special_value end)) as special_value,\r    now() as update_time ,\r    (sum((case when t1.special_code='SP001010102' then t1.special_value end)))\r        -sum((case when t1.special_code='SP001010105' then t1.special_value end)) as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.special_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id;\r\r\r\r\r---特需门诊服务人次\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001010502';\rinsert into his_bi.special_master_m\rselect\r    month_id,\r    'SP001010502' as special_code ,\r    ghrs as special_value,\r    now() as update_time ,\r    ghrs as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.dw_outp_special_clinic_type\rwhere\r        month_id=c_monthlist.month_id\r  and special_clinic_type='2';\r\r\r---门诊人次(特需计算需要)\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001010503';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP001010503' as special_code ,\r    sum((case when t1.special_code='SP001010102' then t1.special_value end))\r        -sum((case when t1.special_code='SP001010105' then t1.special_value end)) as special_value,\r    now() as update_time ,\r    sum((case when t1.special_code='SP001010102' then t1.special_value end))\r        -sum((case when t1.special_code='SP001010105' then t1.special_value end)) as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.special_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id;\r\r\r\r---特需门诊服务人次数比例\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001010501';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP001010501' as special_code ,\r    COALESCE((sum(case when special_code='SP001010502' then special_value end)/\r              sum(case when special_code='SP001010503' then special_value end))*100,0) as special_value,\r    now() as update_time ,\r    COALESCE((sum(case when special_code='SP001010502' then special_value end)/\r              sum(case when special_code='SP001010503' then special_value end))*100,0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.special_master_m\rwhere\r        special_code in ('SP001010502','SP001010503')\r  and month_id=c_monthlist.month_id\rgroup by month_id;\r\r\r---一级手术\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002040201';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP002040201' as special_code ,\r    operation_count as special_value,\r    now() as update_time ,\r    operation_count as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.dw_inp_operation_level_m\rwhere\r        operation_level='一级手术'\r  and month_id=c_monthlist.month_id;\r\r\r\r---二级手术\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002040202';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP002040202' as special_code ,\r    operation_count as special_value,\r    now() as update_time ,\r    operation_count as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.dw_inp_operation_level_m\rwhere\r        operation_level='二级手术'\r  and month_id=c_monthlist.month_id;\r\r\r\r---三级手术\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002040203';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP002040203' as special_code ,\r    operation_count as special_value,\r    now() as update_time ,\r    operation_count as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.dw_inp_operation_level_m\rwhere\r        operation_level='三级手术'\r  and month_id=c_monthlist.month_id;\r\r\r\r---四级手术\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002040204';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP002040204' as special_code ,\r    operation_count as special_value,\r    now() as update_time ,\r    operation_count as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.dw_inp_operation_level_m\rwhere\r        operation_level='四级手术'\r  and month_id=c_monthlist.month_id;\r\r\r---三四级手术出院占比\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002040205';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP002040205' as special_code ,\r    round((sum(case when operation_level in ('四级手术' ,'三级手术') then operation_count end)/\r           sum(operation_count))*100,5) as special_value,\r    now() as update_time ,\r    round((sum(case when operation_level in ('四级手术' ,'三级手术') then operation_count end)/\r           sum(operation_count))*100,5) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.dw_inp_operation_level_m\rwhere\r        month_id=c_monthlist.month_id;\r\r\r\r---四级手术出院占比\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002040206';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP002040206' as special_code ,\r    round((sum(case when operation_level='四级手术' then operation_count end)/\r           sum(operation_count))*100,5) as special_value,\r    now() as update_time ,\r    round((sum(case when operation_level='四级手术' then operation_count end)/\r           sum(operation_count))*100,5) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.dw_inp_operation_level_m\rwhere\r        month_id=c_monthlist.month_id;\r\r---开具处方数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001010701';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id ,\r    'SP001010701' as special_code ,\r    sum(cf_num) as special_value,\r    now() as update_time,\r    sum(cf_num)  as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.dw_outp_patient_info_m\rwhere\r        month_id=c_monthlist.month_id\rGROUP BY month_id;\r\r\r\r---开具限制和特殊抗菌药物处方数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001010702';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP001010702' as special_code ,\r    sum(kjyw_cf_num) as special_value,\r    now() as update_time,\r    sum(kjyw_cf_num)  as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.dw_outp_patient_info_m\rwhere\r        month_id=c_monthlist.month_id\rGROUP BY month_id;\r\r\r\r---转入人次\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001030101';\rinsert into his_bi.special_master_m\rselect\r    to_char(cyrq,'yyyymm'),\r    'SP001030101' as special_code ,\r    sum(case when rytj = '3' then 1 end) as special_value,\r    now() as update_time,\r    sum(case when rytj = '3' then 1 end) as self_value,\r    null as check_flag,\r    null as check_comm\rfrom\r    his_bi.ods_patient_medical_record\rwhere\r        to_char(cyrq,'yyyymm')=c_monthlist.month_id\rGROUP BY to_char(cyrq,'yyyymm');\r\r\r\r---转出人次\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001030103';\rinsert into his_bi.special_master_m\rselect\r    to_char(cyrq,'yyyymm'),\r    'SP001030103' as special_code ,\r    sum(case when lyfs in ('3','2') then 1 end) as special_value,\r    now() as update_time,\r    sum(case when lyfs in ('3','2') then 1 end) as self_value,\r    null as check_flag,\r    null as check_comm\rfrom\r    his_bi.ods_patient_medical_record\rwhere\r        to_char(cyrq,'yyyymm')=c_monthlist.month_id\rGROUP BY to_char(cyrq,'yyyymm');\r\r\r\r---向下级医院（基层医疗机构）转出人次\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001030108';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id ,\r    'SP001030108' as special_code ,\r    COALESCE(sum(case when lyfs in ('3') then 1 end),0) as special_value,\r    now() as update_time,\r    COALESCE(sum(case when lyfs in ('3') then 1 end),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.ods_patient_medical_record\rwhere\r        to_char(cyrq,'yyyymm') = c_monthlist.month_id;\r\r\r\r\r---转入人次占入院人次比\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001030102';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP001030102' as special_code ,\r    COALESCE(round((sum(case when special_code='SP001030101' then special_value end)*1.00/\r                    sum(case when special_code='SP001020101' then special_value end))*100,5),0) as special_value,\r    now() as update_time,\r    COALESCE(round((sum(case when special_code='SP001030101' then special_value end)*1.00/\r                    sum(case when special_code='SP001020101' then special_value end))*100,5),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.special_master_m\rwhere\r        month_id=c_monthlist.month_id;\r\r\r---转出人次占出院人次比\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001030104';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP001030104' as special_code ,\r    COALESCE(round((sum(case when special_code='SP001030103' then special_value end)*1.00/\r                    sum(case when special_code='SP001020102' then special_value end))*100,5),0) as special_value,\r    now() as update_time,\r    COALESCE(round((sum(case when special_code='SP001030103' then special_value end)*1.00/\r                    sum(case when special_code='SP001020102' then special_value end))*100,5),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.special_master_m\rwhere\r        month_id=c_monthlist.month_id;\r\r\r\r---特需医疗服务量\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001010602';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP001010602' as special_code ,\r    sum(case when special_code='SP001010502' then special_value end) as special_value,\r    now() as update_time,\r    sum(case when special_code='SP001010502' then special_value end) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.special_master_m\rwhere\r        month_id=c_monthlist.month_id;\r\r\r\r---特需医疗服务量\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001010603';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP001010603' as special_code ,\r    sum(case when special_code='SP001010503' then special_value end) as special_value,\r    now() as update_time,\r    sum(case when special_code='SP001010503' then special_value end) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.special_master_m\rwhere\r        month_id=c_monthlist.month_id;\r\r\r---特需医疗服务占比\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001010601';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP001010601' as special_code ,\r    COALESCE(max(case when special_code='SP001010501' then special_value end) ,0) as special_value,\r    now() as update_time,\r    COALESCE(max(case when special_code='SP001010501' then special_value end) ,0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.special_master_m\rwhere\r        month_id=c_monthlist.month_id;\r\r\r\r---检查人次\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002030101';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP002030101' as special_code ,\r    sum(t1.value) as special_value,\r    now() as update_time,\r    sum(t1.value) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    (\r        select\r            month_id,\r            count(1) as value\r        from\r            his_bi.dw_inp_patient_amount_m\r        where\r                month_id=c_monthlist.month_id\r          and check_fees<>0\r        group by\r            month_id\r        union all\r        select\r            month_id,\r            count(1) as value\r        from\r            his_bi.dw_outp_patient_amount_m\r        where\r                month_id=c_monthlist.month_id\r          and check_fees<>0\r        group by\r            month_id)t1\rgroup by t1.month_id;\r\r\r\r---急诊死亡人数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002110102';\rinsert into his_bi.special_master_m\rselect  c_monthlist.month_id,\r        'SP002110102' as special_code ,\r        coalesce(count(1),0) as special_value,\r        now() as update_time,\r        coalesce(count(1),0)  as self_value,\r        null as check_flag  ,\r        null as check_comm\r\rfrom his_bi.dw_outp_patient_info_m t1\r         inner join his_bi.ods_patient_medical_record t2 on t1.patient_id = t2.bah and t1.visit_id = t2.zycs\rwhere t1.month_id =  c_monthlist.month_id\r  and coalesce(t1.is_emergency, 0) <> 0\r  and t2.lyfs = '5';\r\r\r---急诊人次数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002110103';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP002110103' as special_code ,\r    special_value ,\r    now() as update_time,\r    special_value as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.special_master_m\rwhere\r        month_id=c_monthlist.month_id\r  and special_code='SP001010105';\r\r\r\r---急诊病死率\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002110101';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP002110101' as special_code ,\r    COALESCE(round((sum(case when special_code='SP002110102' then special_value end)*1.00/\r                    sum(case when special_code='SP002110103' then special_value end))*100,5),0) as special_value,\r    now() as update_time,\r    COALESCE(round((sum(case when special_code='SP002110102' then special_value end)*1.00/\r                    sum(case when special_code='SP001020103' then special_value end))*100,5),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.special_master_m\rwhere\r        month_id=c_monthlist.month_id;\r\r\r---住院患者病死人数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002110201';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002110201' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV007010303';\r\r---新生儿患者病死率\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002110301';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002110301' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV007010311';\r\r---手术患者病死人数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002110402';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002110402' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV007010307';\r\r---手术患者出院人次\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002110403';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002110403' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV007010306';\r\r\r\r---住院患者总死亡率\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002110202';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP002110202' as special_code ,\r    COALESCE(round((sum(case when special_code='SP002110201' then special_value end)*1.00/\r                    sum(case when special_code='SP001020102' then special_value end))*100,5),0) as special_value,\r    now() as update_time,\r    COALESCE(round((sum(case when special_code='SP002110201' then special_value end)*1.00/\r                    sum(case when special_code='SP001020102' then special_value end))*100,5),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.special_master_m\rwhere\r        month_id=c_monthlist.month_id;\r\r\r\r---手术患者病死率\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002110401';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP002110401' as special_code ,\r    COALESCE(round((sum(case when special_code='SP002110402' then special_value end)*1.00/\r                    sum(case when special_code='SP002110403' then special_value end))*100,5),0) as special_value,\r    now() as update_time,\r    COALESCE(round((sum(case when special_code='SP002110402' then special_value end)*1.00/\r                    sum(case when special_code='SP002110403' then special_value end))*100,5),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.special_master_m\rwhere\r        month_id=c_monthlist.month_id;\r\r\r\r\r---新生儿死亡人数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002110302';\rinsert into his_bi.special_master_m\rselect\r    left(t1.st_date,6),\r    'SP002110302' as level_code ,\r    count(case when t1.value = '2' or t1.value = '3' then 1 end) as level_value,\r    now() as update_time ,\r    count(case when t1.value = '2' or t1.value = '3' then 1 end) as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.dwd_inp_quantity_d t1\rwhere\r        t1.key = 'D00157'\r  and left(t1.st_date,6) = c_monthlist.month_id\rgroup by left(t1.st_date,6);\r\r\r\r\r---新生儿患者出院人数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002110303';\rinsert into his_bi.special_master_m\rselect\r    left(t1.st_date,6),\r    'SP002110303' as level_code ,\r    count(1) as level_value,\r    now() as update_time ,\r    count(1) as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.dwd_inp_quantity_d t1\rwhere\r        t1.key = 'D00157'\r  and left(t1.st_date,6) = c_monthlist.month_id\rgroup by left(t1.st_date,6);\r\r\r\r---平均住院日\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP003010101';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP003010101' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV007010401';\r\r---病床使用率\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP003010102';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP003010102' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV007010403';\r\r---病床周转次数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP003010103';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP003010103' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV007010404';\r\r\r\r\r---急诊费用\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP006010103';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP006010103' as special_code,\r    sum(t1.total_fees) as special_value,\r    now() as update_time ,\r    sum(t1.total_fees) as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dw_outp_patient_amount_m t1 \rwhere\rexists(\rselect 1 from his_bi.dwd_outp_work_d t2\rwhere left(t2.st_date,6) = c_monthlist.month_id\rand t1.patient_id = t2.patient_id\rand t1.visit_id = t2.visit_id\rand t2.key = 'D00129'\r) and t1.month_id=c_monthlist.month_id;\r\r\r---全院药占比\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP004010101';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP004010101'  as special_code,\r    round(((sum((case when t1.kpi_code='JX03902' then t1.kpi_value end ))+\r            sum((case when t1.kpi_code='JX04102' then t1.kpi_value end )))*1.00/\r           sum((case when t1.kpi_code='JX03701' then t1.kpi_value end )))*100,5) as special_value,\r    now() as update_time ,\r    round(((sum((case when t1.kpi_code='JX03902' then t1.kpi_value end ))+\r            sum((case when t1.kpi_code='JX04102' then t1.kpi_value end )))*1.00/\r           sum((case when t1.kpi_code='JX03701' then t1.kpi_value end )))*100,5) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id = c_monthlist.month_id\rgroup by t1.month_id;\r\r\r---抗菌药物药占比\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP004010201';\rinsert into his_bi.special_master_m\rselect\r    t1.month_id,\r    'SP004010201' as special_code ,\r    round((sum(t1.value+t2.value)/sum(t3.kpi_value))*100,5) as special_value,\r    now() as update_time ,\r    round((sum(t1.value+t2.value)/sum(t3.kpi_value))*100,5) as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    (select\r         left(st_date,6) as month_id,\r         sum(value) as value\r     from his_bi.DWD_OUTP_INCOME_D\r     where key = 'D00025'---门诊\r     group by left(st_date,6))t1 left join\r    (select\r         left(st_date,6) as month_id,\r         sum(value) as value\r     from his_bi.dwd_inp_income_d\r     where key = 'D05011'---住院\r     group by left(st_date,6)) t2 on t1.month_id = t2.month_id\r                                 left join his_bi.kpi_master_m t3 on t1.month_id=t3.month_id and t3.kpi_code = 'JX03102'\rwhere\r        t1.month_id=c_monthlist.month_id\rgroup by t1.month_id;\r\r\r\r---门诊抗菌药物药占比\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP004010202';\rinsert into his_bi.special_master_m\rselect\r    t1.month_id,\r    'SP004010202' as special_code ,\r    round((sum(t1.value)/sum(t3.kpi_value))*100,5) as special_value,\r    now() as update_time ,\r    round((sum(t1.value)/sum(t3.kpi_value))*100,5) as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    (select\r         left(st_date,6) as month_id,\r         sum(value) as value\r     from his_bi.DWD_OUTP_INCOME_D\r     where key = 'D00025'---门诊\r     group by left(st_date,6))t1\r        left join his_bi.kpi_master_m t3 on t1.month_id=t3.month_id and t3.kpi_code = 'JX03902'\rwhere\r        t1.month_id=c_monthlist.month_id\rgroup by t1.month_id;\r\r\r\r---住院抗菌药物药占比\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP004010203';\rinsert into his_bi.special_master_m\rselect\r    t2.month_id,\r    'SP004010203' as special_code ,\r    round((sum(t2.value)/sum(t3.kpi_value))*100,5) as special_value,\r    now() as update_time ,\r    round((sum(t2.value)/sum(t3.kpi_value))*100,5) as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    (select\r         left(st_date,6) as month_id,\r         sum(value) as value\r     from his_bi.dwd_inp_income_d\r     where key = 'D05011'---住院\r     group by left(st_date,6)) t2\r        left join his_bi.kpi_master_m t3 on t2.month_id=t3.month_id and t3.kpi_code = 'JX04102'\rwhere\r        t2.month_id=c_monthlist.month_id\rgroup by t2.month_id;\r\r\r\r---门诊药占比\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP004010102';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP004010102'  as special_code,\r    round(((sum((case when t1.kpi_code='JX03902' then t1.kpi_value end )))*1.00/\r           sum((case when t1.kpi_code='JX03802' then t1.kpi_value end )))*100,5) as special_value,\r    now() as update_time ,\r    round(((sum((case when t1.kpi_code='JX03902' then t1.kpi_value end )))*1.00/\r           sum((case when t1.kpi_code='JX03802' then t1.kpi_value end )))*100,5) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id = c_monthlist.month_id\rgroup by t1.month_id;\r\r\r\r---住院药占比\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP004010103';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP004010103'  as special_code,\r    round(((sum((case when t1.kpi_code='JX04102' then t1.kpi_value end )))*1.00/\r           sum((case when t1.kpi_code='JX04002' then t1.kpi_value end )))*100,5) as special_value,\r    now() as update_time ,\r    round(((sum((case when t1.kpi_code='JX04102' then t1.kpi_value end )))*1.00/\r           sum((case when t1.kpi_code='JX04002' then t1.kpi_value end )))*100,5) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id = c_monthlist.month_id\rgroup by t1.month_id;\r\r\r---抗菌药物使用强度（DDDs）\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP004010501';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP004010501' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV0070514';\r\r\r\r---出院人数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP004010406';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP004010406' as special_code ,\r    COALESCE(max(case when special_code='SP001020102' then special_value end),0) as special_value,\r    now() as update_time,\r    COALESCE(max(case when special_code='SP001020102' then special_value end),0)as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.special_master_m\rwhere\r        month_id=c_monthlist.month_id;\r\r\r\r\r---刨宫产药品费用占比\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080108';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP002080108' as special_code ,\r    COALESCE(round((sum(case when special_code='SP002080107' then special_value end)/\r                    sum(case when special_code='SP002080106' then special_value end))*100,5),0) as special_value,\r    now() as update_time,\r    COALESCE(round((sum(case when special_code='SP002080107' then special_value end)/\r                    sum(case when special_code='SP002080106' then special_value end))*100,5),0)as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.special_master_m\rwhere\r        month_id=c_monthlist.month_id;\r\r\r\r---刨宫产材料费用占比\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080110';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP002080110' as special_code ,\r    COALESCE(round((sum(case when special_code='SP002080109' then special_value end)/\r                    sum(case when special_code='SP002080106' then special_value end))*100,5),0) as special_value,\r    now() as update_time,\r    COALESCE(round((sum(case when special_code='SP002080109' then special_value end)/\r                    sum(case when special_code='SP002080106' then special_value end))*100,5),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.special_master_m\rwhere\r        month_id=c_monthlist.month_id;\r\r\r\r---社区获得性肺炎药品费用占比\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080208';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP002080208' as special_code ,\r    COALESCE(round((sum(case when special_code='SP002080207' then special_value end)/\r                    sum(case when special_code='SP002080206' then special_value end))*100,5),0) as special_value,\r    now() as update_time,\r    COALESCE(round((sum(case when special_code='SP002080207' then special_value end)/\r                    sum(case when special_code='SP002080206' then special_value end))*100,5),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.special_master_m\rwhere\r        month_id=c_monthlist.month_id;\r\r\r\r---社区获得性肺炎材料费用占比\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080210';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP002080210' as special_code ,\r    COALESCE(round((sum(case when special_code='SP002080209' then special_value end)/\r                    sum(case when special_code='SP002080206' then special_value end))*100,5),0) as special_value,\r    now() as update_time,\r    COALESCE(round((sum(case when special_code='SP002080209' then special_value end)/\r                    sum(case when special_code='SP002080206' then special_value end))*100,5),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.special_master_m\rwhere\r        month_id=c_monthlist.month_id;\r\r\r\r\r---异位妊娠药品费用占比\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080308';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP002080308' as special_code ,\r    COALESCE(round((sum(case when special_code='SP002080307' then special_value end)/\r                    sum(case when special_code='SP002080306' then special_value end))*100,5),0) as special_value,\r    now() as update_time,\r    COALESCE(round((sum(case when special_code='SP002080307' then special_value end)/\r                    sum(case when special_code='SP002080306' then special_value end))*100,5),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.special_master_m\rwhere\r        month_id=c_monthlist.month_id;\r\r\r\r---异位妊娠材料费用占比\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080310';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP002080310' as special_code ,\r    COALESCE(round((sum(case when special_code='SP002080309' then special_value end)/\r                    sum(case when special_code='SP002080306' then special_value end))*100,5),0) as special_value,\r    now() as update_time,\r    COALESCE(round((sum(case when special_code='SP002080309' then special_value end)/\r                    sum(case when special_code='SP002080306' then special_value end))*100,5),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.special_master_m\rwhere\r        month_id=c_monthlist.month_id;\r\r\r\r---宫颈癌药品费用占比\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080408';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP002080408' as special_code ,\r    COALESCE(round((sum(case when special_code='SP002080407' then special_value end)/\r                    sum(case when special_code='SP002080406' then special_value end))*100,5),0) as special_value,\r    now() as update_time,\r    COALESCE(round((sum(case when special_code='SP002080407' then special_value end)/\r                    sum(case when special_code='SP002080406' then special_value end))*100,5),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.special_master_m\rwhere\r        month_id=c_monthlist.month_id;\r\r\r\r---宫颈癌材料费用占比\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080410';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP002080410' as special_code ,\r    COALESCE(round((sum(case when special_code='SP002080409' then special_value end)/\r                    sum(case when special_code='SP002080406' then special_value end))*100,5),0) as special_value,\r    now() as update_time,\r    COALESCE(round((sum(case when special_code='SP002080409' then special_value end)/\r                    sum(case when special_code='SP002080406' then special_value end))*100,5),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.special_master_m\rwhere\r        month_id=c_monthlist.month_id;\r\r\r\r---子宫肌瘤药品费用占比\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080508';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP002080508' as special_code ,\r    COALESCE(round((sum(case when special_code='SP002080507' then special_value end)/\r                    sum(case when special_code='SP002080506' then special_value end))*100,5),0) as special_value,\r    now() as update_time,\r    COALESCE(round((sum(case when special_code='SP002080507' then special_value end)/\r                    sum(case when special_code='SP002080506' then special_value end))*100,5),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.special_master_m\rwhere\r        month_id=c_monthlist.month_id;\r\r\r\r---子宫肌瘤材料费用占比\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080510';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP002080510' as special_code ,\r    COALESCE(round((sum(case when special_code='SP002080509' then special_value end)/\r                    sum(case when special_code='SP002080506' then special_value end))*100,5),0) as special_value,\r    now() as update_time,\r    COALESCE(round((sum(case when special_code='SP002080509' then special_value end)/\r                    sum(case when special_code='SP002080506' then special_value end))*100,5),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.special_master_m\rwhere\r        month_id=c_monthlist.month_id;\r\r\r\r\r---艾滋病、梅毒和乙肝母婴传播疾病药品费用占比\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080608';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP002080608' as special_code ,\r    COALESCE(round((sum(case when special_code='SP002080607' then special_value end)/\r                    sum(case when special_code='SP002080606' then special_value end))*100,5),0) as special_value,\r    now() as update_time,\r    COALESCE(round((sum(case when special_code='SP002080607' then special_value end)/\r                    sum(case when special_code='SP002080606' then special_value end))*100,5),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.special_master_m\rwhere\r        month_id=c_monthlist.month_id;\r\r\r\r---艾滋病、梅毒和乙肝母婴传播疾病材料费用占比\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080610';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP002080610' as special_code ,\r    COALESCE(round((sum(case when special_code='SP002080609' then special_value end)/\r                    sum(case when special_code='SP002080606' then special_value end))*100,5),0) as special_value,\r    now() as update_time,\r    COALESCE(round((sum(case when special_code='SP002080609' then special_value end)/\r                    sum(case when special_code='SP002080606' then special_value end))*100,5),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.special_master_m\rwhere\r        month_id=c_monthlist.month_id;\r\r\r\r\r\r---新生儿呼吸窘迫综合征（NRDS）药品费用占比\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080708';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP002080708' as special_code ,\r    round((sum(case when special_code='SP002080707' then special_value end)/\r           sum(case when special_code='SP002080706' then special_value end))*100,5) as special_value,\r    now() as update_time,\r    round((sum(case when special_code='SP002080707' then special_value end)/\r           sum(case when special_code='SP002080706' then special_value end))*100,5) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.special_master_m\rwhere\r        month_id=c_monthlist.month_id;\r\r\r\r---新生儿呼吸窘迫综合征（NRDS）材料费用占比\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080710';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP002080710' as special_code ,\r    round((sum(case when special_code='SP002080709' then special_value end)/\r           sum(case when special_code='SP002080706' then special_value end))*100,5) as special_value,\r    now() as update_time,\r    round((sum(case when special_code='SP002080709' then special_value end)/\r           sum(case when special_code='SP002080706' then special_value end))*100,5) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.special_master_m\rwhere\r        month_id=c_monthlist.month_id;\r\r\r\r\r---儿童哮喘药品费用占比\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080808';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP002080808' as special_code ,\r    COALESCE(round((sum(case when special_code='SP002080807' then special_value end)/\r                    sum(case when special_code='SP002080806' then special_value end))*100,5),0) as special_value,\r    now() as update_time,\r    COALESCE(round((sum(case when special_code='SP002080807' then special_value end)/\r                    sum(case when special_code='SP002080806' then special_value end))*100,5),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.special_master_m\rwhere\r        month_id=c_monthlist.month_id;\r\r\r\r---儿童哮喘材料费用占比\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080810';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP002080810' as special_code ,\r    COALESCE(round((sum(case when special_code='SP002080809' then special_value end)/\r                    sum(case when special_code='SP002080806' then special_value end))*100,5),0) as special_value,\r    now() as update_time,\r    COALESCE(round((sum(case when special_code='SP002080809' then special_value end)/\r                    sum(case when special_code='SP002080806' then special_value end))*100,5),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.special_master_m\rwhere\r        month_id=c_monthlist.month_id;\r\r\r---产后出血出院后7天重返例数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070106';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id ,\r    'SP002070106' as special_code ,\r    coalesce(count(1),0) as special_value,\r    now() as update_time,\r    coalesce(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.DWD_INP_MEDICAL_D t1\r         inner join his_bi.DWD_INP_QUANTITY_D t2 on t1.pai_visit_id=t2.pai_visit_id and t2.key='D00169'\rwhere\r        t1.key = 'D05026'\r  and left(t1.st_date,6)=c_monthlist.month_id;\r\r\r\r\r\r---门急诊收入\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP006010101';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP006010101' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX03802';\r\r---门诊药品收入\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP006010104';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP006010104' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX03902';\r\r---门诊收入占医疗收入比例\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP006010201';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP006010201' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX027';\r\r---住院收入\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP006020101';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP006020101' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX04002';\r\r\r\r\r---门诊收入\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP006010102';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP006010102' as special_code ,\r    round(sum(case when special_code='SP006010101' then special_value end)-\r          sum(case when special_code='SP006010103' then special_value end),5) as special_value,\r    now() as update_time,\r    round(sum(case when special_code='SP006010101' then special_value end)-\r          sum(case when special_code='SP006010103' then special_value end),5) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.special_master_m\rwhere\r        month_id=c_monthlist.month_id;\r\r---门急诊材料费用占门急诊收入的比重\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP006010205';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP006010205' as special_code,\r    round((sum(t1.material_fees)/sum(t1.total_fees))*100,5) as special_value,\r    now() as update_time ,\r    round((sum(t1.material_fees)/sum(t1.total_fees))*100,5) as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dw_outp_patient_amount_m t1\rwhere t1.month_id = c_monthlist.month_id;\r\r\r\r\r---门诊医疗服务收入占比\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP006010206';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP006010206' as special_code,\r    round((sum(t1.service_fees)/sum(t1.total_fees))*100,5) as special_value,\r    now() as update_time ,\r    round((sum(t1.service_fees)/sum(t1.total_fees))*100,5) as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.dw_outp_patient_amount_m t1\rwhere t1.month_id = c_monthlist.month_id;\r\r\r\r---百元门急诊收入消耗卫生材料（不含药品收入）\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP006010209';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP006010209' as special_code,\r    round((sum(t1.material_fees)/(sum(t1.total_fees)-sum(t1.pham_fees)))*100,5) as special_value,\r    now() as update_time ,\r    round((sum(t1.material_fees)/(sum(t1.total_fees)-sum(t1.pham_fees)))*100,5) as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.dw_outp_patient_amount_m t1\rwhere t1.month_id = c_monthlist.month_id;\r\r\r\r---个人体检收入\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP006040101';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP006040101' as special_code,\r    sum(t1.tj_fees) as special_value,\r    now() as update_time ,\r    sum(t1.tj_fees) as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.dw_outp_patient_amount_m t1\rwhere t1.month_id = c_monthlist.month_id;\r\r\r\r\r---均次体检费用\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP006040102';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP006040102' as special_code,\r    round(sum(t2.tj_fees)/max(t1.value),5) as special_value,\r    now() as update_time ,\r    round(sum(t2.tj_fees)/max(t1.value),5) as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    (select\r         left(t1.st_date,6) as month_id,\r         count(1) as value\r     from his_bi.dwd_outp_work_d t1 where t1.key = 'D00131'\r   and left(t1.st_date,6) = c_monthlist.month_id\r     group by left(t1.st_date,6))t1\r        left join \r    (\r    select\r    month_id,\r    sum(tj_fees) as tj_fees\r    from his_bi.dw_outp_patient_amount_m\r    where month_id = c_monthlist.month_id\r    group by month_id\r   )t2 on t1.month_id = t2.month_id;\r\r\r\r\r\r---体检收入占门急诊收入的比重\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP006040103';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP006040103' as special_code ,\r    COALESCE(round((sum(case when special_code='SP006040101' then special_value end)/\r                    sum(case when special_code='SP006010101' then special_value end))*100,5),0) as special_value,\r    now() as update_time ,\r    COALESCE(round((sum(case when special_code='SP006040101' then special_value end)/\r                    sum(case when special_code='SP006010101' then special_value end))*100,5),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.special_master_m\rwhere\r        special_code in ('SP006040101','SP006010101')\r  and month_id=c_monthlist.month_id;\r\r\r\r---体检收入环比增长率\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP006040104';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP006040104' as special_code ,\r    coalesce(round(((sum(case when t1.month_id = c_monthlist.month_id then t1.special_value end)-\r                     sum(case when t1.month_id = to_char(to_date(c_monthlist.month_id, 'yyyymm') -  interval '1' month,'yyyymm') then t1.special_value end))/\r                    sum(case when t1.month_id = to_char(to_date(c_monthlist.month_id, 'yyyymm') -  interval '1' month,'yyyymm') then t1.special_value end))*100,5),0) as special_value,\r    now() as update_time ,\r    coalesce(round(((sum(case when t1.month_id = c_monthlist.month_id then t1.special_value end)-\r                     sum(case when t1.month_id = to_char(to_date(c_monthlist.month_id, 'yyyymm') -  interval '1' month,'yyyymm') then t1.special_value end))/\r                    sum(case when t1.month_id = to_char(to_date(c_monthlist.month_id, 'yyyymm') -  interval '1' month,'yyyymm') then t1.special_value end))*100,5),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.special_master_m t1\rwhere t1.special_code='SP006040101'\r  and  to_date(t1.month_id,'yyyymm')>= to_date(c_monthlist.month_id, 'yyyymm') -  interval '1' month\r  and to_date(t1.month_id,'yyyymm')< to_date(c_monthlist.month_id, 'yyyymm') + interval '1' month;\r\r\r\r\r---辅助用药收入\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP006050101';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP006050101'  as special_code,\r    COALESCE(round(max(case when t1.kpi_code='JX03201' then t1.kpi_value end) ,5),0) as special_value,\r    now() as update_time ,\r    COALESCE(round(max(case when t1.kpi_code='JX03201' then t1.kpi_value end) ,5),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id = c_monthlist.month_id;\r\r\r---辅助用药收入占比\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP006050102';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP006050102'  as special_code,\r    COALESCE(round(max(case when t1.kpi_code='JX032' then t1.kpi_value end) ,5),0) as special_value,\r    now() as update_time ,\r    COALESCE(round(max(case when t1.kpi_code='JX032' then t1.kpi_value end) ,5),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id = c_monthlist.month_id;\r\r\r---医疗收入增幅\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP006080101';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP006080101' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as special_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX037';\r\r---门诊次均费用增幅\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP006080102';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP006080102' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as special_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX038';\r\r---门诊次均药品费用增幅\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP006080103';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP006080103' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as special_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX039';\r\r---住院次均费用增幅\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP006080104';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP006080104' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as special_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX040';\r\r---住院次均药品费用增幅\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP006080105';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP006080105' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as special_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX041';\r\r\r\r\r\r---门急诊次均费用\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP008010101';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP008010101' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as special_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX03801';\r\r\r\r\r\r---门诊患者次均费用\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP008010102';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP008010102' as special_code ,\r    COALESCE(round((sum(case when special_code='SP006010102' then special_value end)/\r                    sum(case when special_code='SP001010103' then special_value end)),5),0) as special_value,\r    now() as update_time ,\r    COALESCE(round((sum(case when special_code='SP006010102' then special_value end)/\r                    sum(case when special_code='SP001010103' then special_value end)),5),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.special_master_m\rwhere\r        special_code in ('SP006010102','SP001010103')\r  and month_id=c_monthlist.month_id;\r\r\r\r\r\r---急诊患者次均费用\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP008010103';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP008010103' as special_code ,\r    COALESCE(round((sum(case when special_code='SP006010103' then special_value end)/\r                    sum(case when special_code='SP001010105' then special_value end)),5),0) as special_value,\r    now() as update_time ,\r    COALESCE(round((sum(case when special_code='SP006010103' then special_value end)/\r                    sum(case when special_code='SP001010105' then special_value end)),5),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.special_master_m\rwhere\r        special_code in ('SP006010103','SP001010105')\r  and month_id=c_monthlist.month_id;\r\r\r\r\r\r---门急诊次均费用变动率\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP008010205';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP008010205' as special_code,\r    case when max(ff.last_jc_fees) <>0 then round((max(ff.jc_fees)-max(ff.last_jc_fees))/max(ff.last_jc_fees),4)*100 else null end as special_value,\r    now() as update_time,\r    case when max(ff.last_jc_fees) <>0 then round((max(ff.jc_fees)-max(ff.last_jc_fees))/max(ff.last_jc_fees),4)*100 else null end as self_value,\r    null as check_flag,\r    null as check_comm\rfrom\r    (\r        select\r            am.month_id as month_id,\r            round(sum(am.total_fees)/count(distinct am.outp_visit_id),2) as jc_fees,\r            0 as last_jc_fees\r        from his_bi.dw_outp_patient_info_m am\r        where 1=1\r          and am.month_id = c_monthlist.month_id\r        group by am.month_id\r        union\r        select\r            am.month_id as month_id,\r            0 as jc_fees,\r            round(sum(am.total_fees)/count(distinct am.outp_visit_id),2) as last_jc_fees\r        from his_bi.dw_outp_patient_info_m am\r        where 1=1\r          and am.month_id = TO_CHAR(to_date(c_monthlist.month_id,'yyyymm') + INTERVAL '-1 MONTH','yyyymm')\r        group by am.month_id\r    )ff;\r\r\r\r\r\r\r---门急诊次均费用药品费占比\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP008010206';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP008010206' as special_code ,\r    COALESCE(round((sum(case when kpi_code='JX03901' then kpi_value end)/\r                    sum(case when kpi_code='JX03801' then kpi_value end))*100,5),0) as special_value,\r    now() as update_time ,\r    COALESCE(round((sum(case when kpi_code='JX03901' then kpi_value end)/\r                    sum(case when kpi_code='JX03801' then kpi_value end))*100,5),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.kpi_master_m\rwhere\r        kpi_code in ('JX03801','JX03901')\r  and month_id=c_monthlist.month_id;\r\r\r\r---门急诊次均药费\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP008020101';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP008020101' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as special_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX03901';\r\r\r\r---门诊次均药费变动率\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP008020202';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP008020202' as special_code,\r    case when max(ff.last_jc_fees) <>0 then round((max(ff.jc_fees)-max(ff.last_jc_fees))/max(ff.last_jc_fees),4)*100 else null end as special_value,\r    now() as update_time,\r    case when max(ff.last_jc_fees) <>0 then round((max(ff.jc_fees)-max(ff.last_jc_fees))/max(ff.last_jc_fees),4)*100 else null end as self_value,\r    null as check_flag,\r    null as check_comm\rfrom\r    (\r        select\r            am.month_id as month_id,\r            am.kpi_value as jc_fees,\r            0 as last_jc_fees\r        from his_bi.kpi_master_m am\r        where 1=1\r          and am.month_id = c_monthlist.month_id\r          and am.kpi_code='JX03901'\r        group by am.month_id,am.kpi_value\r        union\r        select\r            am.month_id as month_id,\r            0 as jc_fees,\r            am.kpi_value as last_jc_fees\r        from his_bi.kpi_master_m am\r        where 1=1\r          and am.kpi_code='JX03901'\r          and am.month_id = TO_CHAR(to_date(c_monthlist.month_id,'yyyymm') + INTERVAL '-1 MONTH','yyyymm')\r        group by am.month_id, am.kpi_value\r    )ff;\r\r\r\r---门诊次均西药费\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP008020203';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP008020203' as special_code,\r    round((sum(t1.western_fees)/count(1)),5) as special_value,\r    now() as update_time ,\r    round((sum(t1.western_fees)/count(1)),5) as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom  his_bi.dw_outp_patient_amount_m t1\rwhere t1.month_id = c_monthlist.month_id;\r\r\r\r\r---门诊次均中药费\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP008020204';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP008020204' as special_code,\r    round((sum(t1.herb_fees)/count(1)),5) as special_value,\r    now() as update_time ,\r    round((sum(t1.herb_fees)/count(1)),5) as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom  his_bi.dw_outp_patient_amount_m t1\rwhere t1.month_id = c_monthlist.month_id;\r\r\r\r\r---门诊次均中成药费\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP008020205';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP008020205' as special_code,\r    round((sum(t1.chinese_patent_fees)/count(1)),5) as special_value,\r    now() as update_time ,\r    round((sum(t1.chinese_patent_fees)/count(1)),5) as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom  his_bi.dw_outp_patient_amount_m t1\rwhere t1.month_id = c_monthlist.month_id;\r\r\r\r\r---急诊次均西药费\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP008020206';\rinsert into his_bi.special_master_m\rselect\r    t1.month_id,\r    'SP008020206' as special_code,\r    round(sum(t2.western_fees)/count(1),5) as special_value,\r    now() as update_time ,\r    round(sum(t2.western_fees)/count(1),5) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dw_outp_patient_info_m t1\r         inner join his_bi.dw_outp_patient_amount_m t2 on t1.patient_id = t2.patient_id and t1.visit_id =t2.visit_id\rwhere coalesce(is_emergency,0) = 1\r  and t1.month_id = c_monthlist.month_id\rgroup by t1.month_id;\r\r\r\r\r\r---急诊次均中药费用\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP008020207';\rinsert into his_bi.special_master_m\rselect\r    t1.month_id,\r    'SP008020207' as special_code,\r    round(sum(t2.herb_fees)/count(1),5) as special_value,\r    now() as update_time ,\r    round(sum(t2.herb_fees)/count(1),5) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dw_outp_patient_info_m t1\r         inner join his_bi.dw_outp_patient_amount_m t2 on t1.patient_id = t2.patient_id and t1.visit_id =t2.visit_id\rwhere coalesce(is_emergency,0) = 1\r  and t1.month_id = c_monthlist.month_id\rgroup by t1.month_id;\r\r\r\r\r\r---急诊次均中成药费用\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP008020208';\rinsert into his_bi.special_master_m\rselect\r    t1.month_id,\r    'SP008020208' as special_code,\r    round(sum(t2.chinese_patent_fees)/count(1),5) as special_value,\r    now() as update_time ,\r    round(sum(t2.chinese_patent_fees)/count(1),5) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dw_outp_patient_info_m t1\r         inner join his_bi.dw_outp_patient_amount_m t2 on t1.patient_id = t2.patient_id and t1.visit_id =t2.visit_id\rwhere coalesce(is_emergency,0) = 1\r  and t1.month_id = c_monthlist.month_id\rgroup by t1.month_id;\r\r\r\r\r---门急诊次均西药占比\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP008020209';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP008020209' as special_code ,\r    case when  sum(case when special_code='SP008020101' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP008020203' then special_value end)/\r                    sum(case when special_code='SP008020101' then special_value end))*100,5),0) else 0 end as special_value,\r    now() as update_time ,\r    case when  sum(case when special_code='SP008020101' then special_value end) <> 0 then COALESCE(round((sum(case when special_code='SP008020203' then special_value end)/\r                    sum(case when special_code='SP008020101' then special_value end))*100,5),0) else 0 end as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.special_master_m\rwhere\r        special_code in ('SP008020203','SP008020101')\r  and month_id=c_monthlist.month_id;\r\r\r\r\r---门急诊次均中药费占比\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP008020210';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP008020210' as special_code ,\r    COALESCE(round((sum(case when special_code='SP008020204' then special_value end)/\r                    sum(case when special_code='SP008020101' then special_value end))*100,5),0) as special_value,\r    now() as update_time ,\r    COALESCE(round((sum(case when special_code='SP008020204' then special_value end)/\r                    sum(case when special_code='SP008020101' then special_value end))*100,5),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.special_master_m\rwhere\r        special_code in ('SP008020204','SP008020101')\r  and month_id=c_monthlist.month_id;\r\r\r\r\r---门急诊次均中成药费占比\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP008020211';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP008020211' as special_code ,\r    COALESCE(round((sum(case when special_code='SP008020205' then special_value end)/\r                    sum(case when special_code='SP008020101' then special_value end))*100,5),0) as special_value,\r    now() as update_time ,\r    COALESCE(round((sum(case when special_code='SP008020205' then special_value end)/\r                    sum(case when special_code='SP008020101' then special_value end))*100,5),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.special_master_m\rwhere\r        special_code in ('SP008020205','SP008020101')\r  and month_id=c_monthlist.month_id;\r\r\r\r\r---住院患者次均医药费用\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP008030101';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP008030101' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as special_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX04001';\r\r\r\r\r---住院患者次均药费\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP008030102';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP008030102' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as special_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX04101';\r\r\r\r\r\r\r---住院患者日均医药费用\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP008030103';\rinsert into his_bi.special_master_m\rselect\r    month_id,\r    'SP008030103' as special_code,\r    round(sum(total_fees)/sum(in_days),5) as special_value,\r    now() as update_time ,\r    round(sum(total_fees)/sum(in_days),5) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dw_inp_patient_info_m\rwhere\r        month_id=c_monthlist.month_id\rgroup by month_id;\r\r\r\r---住院收入增长率\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP006020102';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP006020102' as special_code ,\r    coalesce(round(((sum(case when t1.month_id = c_monthlist.month_id then t1.kpi_value end)-\r                     sum(case when t1.month_id = to_char(to_date(c_monthlist.month_id, 'yyyymm') -  interval '1' month,'yyyymm') then t1.kpi_value end))/\r                    sum(case when t1.month_id = to_char(to_date(c_monthlist.month_id, 'yyyymm') -  interval '1' month,'yyyymm') then t1.kpi_value end))*100,5),0) as special_value,\r    now() as update_time ,\r    coalesce(round(((sum(case when t1.month_id = c_monthlist.month_id then t1.kpi_value end)-\r                     sum(case when t1.month_id = to_char(to_date(c_monthlist.month_id, 'yyyymm') -  interval '1' month,'yyyymm') then t1.kpi_value end))/\r                    sum(case when t1.month_id = to_char(to_date(c_monthlist.month_id, 'yyyymm') -  interval '1' month,'yyyymm') then t1.kpi_value end))*100,5),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere t1.kpi_code='JX04002'\r  and  to_date(t1.month_id,'yyyymm')>= to_date(c_monthlist.month_id, 'yyyymm') -  interval '1' month\r  and to_date(t1.month_id,'yyyymm')< to_date(c_monthlist.month_id, 'yyyymm') + interval '1' month;\r\r\r\r\r---医疗服务收入（不含药品、耗材、检查检验收入）占医疗收入比例\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP006030101';\rinsert into his_bi.special_master_m\rselect\r    t2.month_id,\r    'SP006030101' as special_code ,\r    round((sum(t1.value)/max(t2.kpi_value)*100),5) as special_value,\r    now() as update_time,\r    round((sum(t1.value)/max(t2.kpi_value)*100),5) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    (select\r         t1.month_id,\r         sum(t1.service_fees) as value\r     from his_bi.dw_outp_patient_amount_m t1\r     group by t1.month_id\r     union all\r     select\r         t1.month_id,\r         sum(t1.service_fees) as value\r     from his_bi.dw_inp_patient_amount_m t1\r     group by t1.month_id) t1\r        left join his_bi.kpi_master_m t2 on t1.month_id = t2.month_id and t2.kpi_code='JX03701'\rwhere\r        t2.month_id=c_monthlist.month_id\rgroup by t2.month_id;\r\r\r---产后出血总例数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070101';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002070101' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702010101';\r\r---产后出血死亡例数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070102';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002070102' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702010102';\r\r---产后出血平均住院日\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070104';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002070104' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702010103';\r\r---产后出血平均住院费用\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070105';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002070105' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702010104';\r\r---产后出血15天再住院率（包括计划内及非计划重返）\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070107';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002070107' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702010106';\r\r---产后出血31天再住院率（包括计划内及非计划重返）\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070108';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002070108' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702010107';\r\r---妊娠合并糖尿病总例数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070201';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002070201' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702010201';\r\r---妊娠合并糖尿病死亡例数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070202';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002070202' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702010202';\r\r---妊娠合并糖尿病平均住院日\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070204';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002070204' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702010203';\r\r---妊娠合并糖尿病平均住院费用\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070205';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002070205' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702010204';\r\r---妊娠合并糖尿病15天再住院率（包括计划内及非计划重返）\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070207';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002070207' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702010206';\r\r---妊娠合并糖尿病31天再住院率（包括计划内及非计划重返）\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070208';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002070208' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702010207';\r\r---盆腔炎性疾病总例数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070301';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002070301' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702010301';\r\r---盆腔炎性疾病死亡例数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070302';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002070302' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702010302';\r\r---盆腔炎性疾病平均住院日\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070304';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002070304' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702010303';\r\r---盆腔炎性疾病平均住院费用\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070305';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002070305' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702010304';\r\r---盆腔炎性疾病15天再住院率（包括计划内及非计划重返）\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070307';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002070307' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702010306';\r\r---盆腔炎性疾病31天再住院率（包括计划内及非计划重返）\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070308';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002070308' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702010307';\r\r---异位妊娠总例数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070401';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002070401' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702010401';\r\r---异位妊娠死亡例数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070402';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002070402' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702010402';\r\r---异位妊娠平均住院日\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070404';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002070404' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702010403';\r\r---异位妊娠平均住院费用\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070405';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002070405' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702010404';\r\r---异位妊娠15天再住院率（包括计划内及非计划重返）\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070407';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002070407' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702010406';\r\r---异位妊娠31天再住院率（包括计划内及非计划重返）\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070408';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002070408' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702010407';\r\r---女性生殖器脱垂总例数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070501';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002070501' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702010501';\r\r---女性生殖器脱垂死亡例数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070502';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002070502' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r    COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702010502';\r\r---女性生殖器脱垂平均住院日\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070504';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002070504' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702010503';\r\r---女性生殖器脱垂平均住院费用\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070505';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002070505' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702010504';\r\r---女性生殖器脱垂15天再住院率（包括计划内及非计划重返）\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070507';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002070507' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702010506';\r\r---女性生殖器脱垂31天再住院率（包括计划内及非计划重返）\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070508';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002070508' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702010507';\r\r---直肠阴道隔子宫内膜异位症总例数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070601';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002070601' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702010601';\r\r---直肠阴道隔子宫内膜异位症死亡例数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070602';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002070602' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702010602';\r\r---直肠阴道隔子宫内膜异位症平均住院日\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070604';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002070604' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702010603';\r\r---直肠阴道隔子宫内膜异位症平均住院费用\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070605';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002070605' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702010604';\r\r---直肠阴道隔子宫内膜异位症15天再住院率（包括计划内及非计划重返）\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070607';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002070607' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702010606';\r\r---直肠阴道隔子宫内膜异位症31天再住院率（包括计划内及非计划重返）\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070608';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002070608' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702010607';\r\r---妊娠滋养细胞疾病总例数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070701';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002070701' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702010701';\r\r---妊娠滋养细胞疾病死亡例数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070702';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002070702' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702010702';\r\r---妊娠滋养细胞疾病平均住院日\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070704';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002070704' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702010703';\r\r---妊娠滋养细胞疾病平均住院费用\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070705';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002070705' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702010704';\r\r---妊娠滋养细胞疾病15天再住院率（包括计划内及非计划重返）\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070707';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002070707' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702010706';\r\r---妊娠滋养细胞疾病31天再住院率（包括计划内及非计划重返）\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070708';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002070708' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702010707';\r\r---重度卵巢过度刺激综合征总例数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070801';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002070801' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702010801';\r\r---重度卵巢过度刺激综合征死亡例数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070802';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002070802' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702010802';\r\r---重度卵巢过度刺激综合征平均住院日\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070804';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002070804' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702010803';\r\r---重度卵巢过度刺激综合征平均住院费用\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070805';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002070805' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702010804';\r\r---重度卵巢过度刺激综合征15天再住院率（包括计划内及非计划重返）\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070807';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002070807' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702010806';\r\r---重度卵巢过度刺激综合征31天再住院率（包括计划内及非计划重返）\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070808';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002070808' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702010807';\r\r---重度子痫前期总例数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070901';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002070901' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702010901';\r\r---重度子痫前期死亡例数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070902';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002070902' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702010902';\r\r---重度子痫前期平均住院日\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070904';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002070904' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702010903';\r\r---重度子痫前期平均住院费用\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070905';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002070905' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702010904';\r\r---重度子痫前期15天再住院率（包括计划内及非计划重返）\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070907';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002070907' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702010906';\r\r---重度子痫前期31天再住院率（包括计划内及非计划重返）\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002070908';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002070908' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702010907';\r\r---早产总例数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071001';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002071001' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702011001';\r\r---早产死亡例数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071002';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002071002' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702011002';\r\r---早产平均住院日\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071004';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002071004' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702011003';\r\r---早产平均住院费用\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071005';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002071005' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702011004';\r\r---早产15天再住院率（包括计划内及非计划重返）\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071007';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002071007' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702011006';\r\r---早产31天再住院率（包括计划内及非计划重返）\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071008';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002071008' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702011007';\r\r---多胎妊娠总例数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071101';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002071101' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702011101';\r\r---多胎妊娠死亡例数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071102';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002071102' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702011102';\r\r---多胎妊娠平均住院日\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071104';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002071104' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702011103';\r\r---多胎妊娠平均住院费用\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071105';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002071105' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702011104';\r\r---多胎妊娠15天再住院率（包括计划内及非计划重返）\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071107';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002071107' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702011106';\r\r---多胎妊娠31天再住院率（包括计划内及非计划重返）\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071108';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002071108' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702011107';\r\r---胎膜早破总例数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071201';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002071201' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702011201';\r\r---胎膜早破死亡例数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071202';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002071202' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702011202';\r\r---胎膜早破平均住院日\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071204';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002071204' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702011203';\r\r---胎膜早破平均住院费用\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071205';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002071205' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702011204';\r\r---胎膜早破15天再住院率（包括计划内及非计划重返）\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071207';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002071207' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702011206';\r\r---胎膜早破31天再住院率（包括计划内及非计划重返）\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071208';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002071208' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702011207';\r\r---前置胎盘总例数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071301';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002071301' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702011301';\r\r---前置胎盘死亡例数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071302';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002071302' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702011302';\r\r---前置胎盘平均住院日\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071304';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002071304' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702011303';\r\r---前置胎盘平均住院费用\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071305';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002071305' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702011304';\r\r---前置胎盘15天再住院率（包括计划内及非计划重返）\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071307';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002071307' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702011306';\r\r---前置胎盘31天再住院率（包括计划内及非计划重返）\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071308';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002071308' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702011307';\r\r---胎盘早剥总例数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071401';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002071401' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702011401';\r\r---胎盘早剥死亡例数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071402';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002071402' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702011402';\r\r---胎盘早剥平均住院日\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071404';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002071404' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702011403';\r\r---胎盘早剥平均住院费用\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071405';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002071405' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702011404';\r\r---胎盘早剥15天再住院率（包括计划内及非计划重返）\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071407';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002071407' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702011406';\r\r---胎盘早剥31天再住院率（包括计划内及非计划重返）\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071408';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002071408' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702011407';\r\r---新生儿窒息总例数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071501';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002071501' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702011501';\r\r---新生儿窒息死亡例数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071502';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002071502' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702011502';\r\r---新生儿窒息平均住院日\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071504';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002071504' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702011503';\r\r---新生儿窒息平均住院费用\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071505';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002071505' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702011504';\r\r---新生儿窒息15天再住院率（包括计划内及非计划重返）\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071507';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002071507' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702011506';\r\r---新生儿窒息31天再住院率（包括计划内及非计划重返）\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071508';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002071508' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702011507';\r\r---新生儿呼吸窘迫总例数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071601';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002071601' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702011601';\r\r---新生儿呼吸窘迫死亡例数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071602';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002071602' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702011602';\r\r---新生儿呼吸窘迫平均住院日\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071604';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002071604' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702011603';\r\r---新生儿呼吸窘迫平均住院费用\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071605';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002071605' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702011604';\r\r---新生儿呼吸窘迫15天再住院率（包括计划内及非计划重返）\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071607';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002071607' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702011606';\r\r---新生儿呼吸窘迫31天再住院率（包括计划内及非计划重返）\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071608';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002071608' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702011607';\r\r---支气管肺炎总例数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071701';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002071701' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702011701';\r\r---支气管肺炎死亡例数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071702';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002071702' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702011702';\r\r---支气管肺炎平均住院日\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071704';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002071704' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702011703';\r\r---支气管肺炎平均住院费用\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071705';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002071705' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702011704';\r\r---支气管肺炎15天再住院率（包括计划内及非计划重返）\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071707';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002071707' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702011706';\r\r---支气管肺炎31天再住院率（包括计划内及非计划重返）\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071708';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002071708' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702011707';\r\r---小儿腹泻病总例数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071801';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002071801' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702011801';\r\r---小儿腹泻病死亡例数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071802';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002071802' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702011802';\r\r---小儿腹泻病平均住院日\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071804';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002071804' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702011803';\r\r---小儿腹泻病平均住院费用\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071805';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002071805' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702011804';\r\r---小儿腹泻病15天再住院率（包括计划内及非计划重返）\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071807';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002071807' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702011806';\r\r---小儿腹泻病31天再住院率（包括计划内及非计划重返）\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071808';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002071808' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702011807';\r\r---低出生体重儿总例数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071901';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002071901' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702011901';\r\r---低出生体重儿死亡例数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071902';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002071902' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702011902';\r\r---低出生体重儿平均住院日\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071904';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002071904' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702011903';\r\r---低出生体重儿平均住院费用\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071905';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002071905' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702011904';\r\r---低出生体重儿15天再住院率（包括计划内及非计划重返）\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071907';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002071907' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702011906';\r\r---低出生体重儿31天再住院率（包括计划内及非计划重返）\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002071908';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002071908' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702011907';\r\r---新生儿高胆红素血症总例数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002072001';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002072001' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702012021';\r\r---新生儿高胆红素血症死亡例数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002072002';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002072002' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702012022';\r\r---新生儿高胆红素血症平均住院日\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002072004';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002072004' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702012023';\r\r---新生儿高胆红素血症平均住院费用\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002072005';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002072005' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702012024';\r\r---新生儿高胆红素血症15天再住院率（包括计划内及非计划重返）\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002072007';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002072007' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702012026';\r\r---新生儿高胆红素血症31天再住院率（包括计划内及非计划重返）\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002072008';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002072008' as special_code ,\r     COALESCE(max(t1.level_value) ,0) as special_value,\r    now() as update_time ,\r     COALESCE(max(t1.level_value) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.level_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code='LV00702012027';\r---剖宫产病种例数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080101';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002080101' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX01001';\r\r---剖宫产平均住院日\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080102';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002080102' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX0100101';\r\r---剖宫产出院患者占用总床日数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080103';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002080103' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX0100102';\r\r---剖宫产次均费用\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080105';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002080105' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX0100104';\r\r---剖宫产总出院费用\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080106';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002080106' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX0100105';\r\r---剖宫产死亡人数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080111';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002080111' as special_code ,\r    COALESCE(case when t1.kpi_code='JX0100108' then t1.kpi_value end,0) as special_value,\r    now() as update_time ,\r    COALESCE(case when t1.kpi_code='JX0100108' then t1.kpi_value end,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id;\r\r---剖宫产病死率\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080112';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002080112' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX0100107';\r\r---社区获得性肺炎(住院、儿童)病种例数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080201';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002080201' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX01002';\r\r---社区获得性肺炎(住院、儿童)平均住院日\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080202';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002080202' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX0100201';\r\r---社区获得性肺炎(住院、儿童)出院患者占用总床日数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080203';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002080203' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX0100202';\r\r---社区获得性肺炎(住院、儿童)次均费用\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080205';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002080205' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX0100204';\r\r---社区获得性肺炎(住院、儿童)总出院费用\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080206';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002080206' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX0100205';\r\r---社区获得性肺炎(住院、儿童)死亡人数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080211';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002080211' as special_code ,\r    COALESCE(max(case when t1.kpi_code='JX0100208' then t1.kpi_value end) ,0) as special_value,\r    now() as update_time ,\r    COALESCE(max(case when t1.kpi_code='JX0100208' then t1.kpi_value end) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id;\r\r---社区获得性肺炎(住院、儿童)病死率\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080212';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002080212' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX0100207';\r\r---异位妊娠病种例数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080301';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002080301' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX01003';\r\r---异位妊娠平均住院日\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080302';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002080302' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX0100301';\r\r---异位妊娠出院患者占用总床日数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080303';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002080303' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX0100302';\r\r---异位妊娠次均费用\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080305';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002080305' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX0100304';\r\r---异位妊娠总出院费用\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080306';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002080306' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX0100305';\r\r---异位妊娠死亡人数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080311';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002080311' as special_code ,\r    COALESCE(max(case when t1.kpi_code='JX0100308' then t1.kpi_value end) ,0) as special_value,\r    now() as update_time ,\r    COALESCE(max(case when t1.kpi_code='JX0100308' then t1.kpi_value end) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id;\r\r---异位妊娠病死率\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080312';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002080312' as special_code ,\r    COALESCE(max(case when t1.kpi_code='JX0100307' then t1.kpi_value end) ,0) as special_value,\r    now() as update_time ,\r    COALESCE(max(case when t1.kpi_code='JX0100307' then t1.kpi_value end) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id;\r\r---宫颈癌病种例数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080401';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002080401' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX01004';\r\r---宫颈癌平均住院日\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080402';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002080402' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX0100401';\r\r---宫颈癌出院患者占用总床日数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080403';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002080403' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX0100402';\r\r---宫颈癌次均费用\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080405';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002080405' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX0100404';\r\r---宫颈癌总出院费用\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080406';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002080406' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX0100405';\r\r---宫颈癌死亡人数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080411';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002080411' as special_code ,\r    COALESCE(max(case when t1.kpi_code='JX0100408' then t1.kpi_value end) ,0) as special_value,\r    now() as update_time ,\r    COALESCE(max(case when t1.kpi_code='JX0100408' then t1.kpi_value end) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id;\r\r---宫颈癌病死率\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080412';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002080412' as special_code ,\r    COALESCE(max(case when t1.kpi_code='JX0100407' then t1.kpi_value end) ,0) as special_value,\r    now() as update_time ,\r    COALESCE(max(case when t1.kpi_code='JX0100407' then t1.kpi_value end) ,0) as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id;\r\r---子宫肌瘤病种例数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080501';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002080501' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX01005';\r\r---子宫肌瘤平均住院日\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080502';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002080502' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX0100501';\r\r---子宫肌瘤出院患者占用总床日数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080503';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002080503' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX0100502';\r\r---子宫肌瘤次均费用\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080505';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002080505' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX0100504';\r\r---子宫肌瘤总出院费用\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080506';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002080506' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX0100505';\r\r---子宫肌瘤死亡人数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080511';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002080511' as special_code ,\r    COALESCE(max(case when t1.kpi_code='JX0100508' then t1.kpi_value end) ,0) as special_value,\r    now() as update_time ,\r    COALESCE(max(case when t1.kpi_code='JX0100508' then t1.kpi_value end) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id;\r\r---子宫肌瘤病死率\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080512';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002080512' as special_code ,\r    COALESCE(max(case when t1.kpi_code='JX0100507' then t1.kpi_value end) ,0) as special_value,\r    now() as update_time ,\r    COALESCE(max(case when t1.kpi_code='JX0100507' then t1.kpi_value end) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id;\r\r---艾滋病、梅毒和乙肝母婴传播疾病病种例数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080601';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002080601' as special_code ,\r    COALESCE(max(case when t1.kpi_code='JX01006' then t1.kpi_value end) ,0) as special_value,\r    now() as update_time ,\r    COALESCE(max(case when t1.kpi_code='JX01006' then t1.kpi_value end) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id;\r\r---艾滋病、梅毒和乙肝母婴传播疾病平均住院日\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080602';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002080602' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX0100601';\r\r---艾滋病、梅毒和乙肝母婴传播疾病出院患者占用总床日数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080603';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002080603' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX0100602';\r\r---艾滋病、梅毒和乙肝母婴传播疾病次均费用\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080605';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002080605' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX0100604';\r\r---艾滋病、梅毒和乙肝母婴传播疾病总出院费用\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080606';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002080606' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX0100605';\r\r---艾滋病、梅毒和乙肝母婴传播疾病死亡人数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080611';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002080611' as special_code ,\r    COALESCE(max(case when t1.kpi_code='JX0100608' then t1.kpi_value end) ,0) as special_value,\r    now() as update_time ,\r    COALESCE(max(case when t1.kpi_code='JX0100608' then t1.kpi_value end) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id;\r\r---艾滋病、梅毒和乙肝母婴传播疾病病死率\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080612';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002080612' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX0100607';\r\r---新生儿呼吸窘迫综合征（NRDS）病种例数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080701';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002080701' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX01007';\r\r---新生儿呼吸窘迫综合征（NRDS）平均住院日\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080702';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002080702' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX0100701';\r\r---新生儿呼吸窘迫综合征（NRDS）出院患者占用总床日数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080703';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002080703' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX0100702';\r\r---新生儿呼吸窘迫综合征（NRDS）次均费用\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080705';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002080705' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX0100704';\r\r---新生儿呼吸窘迫综合征（NRDS）总出院费用\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080706';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002080706' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX0100705';\r\r---新生儿呼吸窘迫综合征（NRDS）死亡人数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080711';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002080711' as special_code ,\r    COALESCE(max(case when t1.kpi_code='JX0100708' then t1.kpi_value end) ,0) as special_value,\r    now() as update_time ,\r    COALESCE(max(case when t1.kpi_code='JX0100708' then t1.kpi_value end) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id;\r\r---新生儿呼吸窘迫综合征（NRDS）病死率\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080712';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002080712' as special_code ,\r    COALESCE(max(case when t1.kpi_code='JX0100707' then t1.kpi_value end) ,0) as special_value,\r    now() as update_time ,\r    COALESCE(max(case when t1.kpi_code='JX0100707' then t1.kpi_value end) ,0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id;\r\r---儿童哮喘病种例数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080801';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002080801' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX01008';\r\r---儿童哮喘平均住院日\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080802';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002080802' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX0100801';\r\r---儿童哮喘出院患者占用总床日数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080803';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002080803' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX0100802';\r\r---儿童哮喘次均费用\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080805';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002080805' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX0100804';\r\r---儿童哮喘总出院费用\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080806';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002080806' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX0100805';\r\r---儿童哮喘死亡人数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080811';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002080811' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX0100808';\r\r---儿童哮喘病死率\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080812';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002080812' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX0100807';\r\r---住院患者手术人次数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002040102';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002040102' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX00401';\r\r---出院患者手术占比\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002040103';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002040103' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX004';\r\r---出院患者微创手术人次数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002040104';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002040104' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX00501';\r\r---出院患者微创手术占比\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002040105';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002040105' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX005';\r\r---日间手术人次数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002040106';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002040106' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX00301';\r\r---择期手术人次数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002040107';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002040107' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX00302';\r\r---日间手术占择期手术比例\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002040108';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002040108' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX003';\r\r---I类切口手术部位感染人次数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002040306';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002040306' as special_code ,\r    COALESCE(max(case when kpi_code = 'JX00901' then t1.kpi_value end),0) as special_value,\r    now() as update_time ,\r    COALESCE(max(case when kpi_code = 'JX00901' then t1.kpi_value end),0)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id;\r\r---I类切口手术人次数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002040307';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002040307' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX00902';\r\r---I类切口手术部位感染率\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002040308';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002040308' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX009';\r\r---手术患者并发症发生例数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002040312';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002040312' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX00801';\r\r---手术患者并发症发生率\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002040313';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'SP002040313' as special_code ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end as special_value,\r    now() as update_time ,\r    case when coalesce(t1.kpi_value,0)=0 then 0 else t1.kpi_value end  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX008';\r\r---新生儿呼吸窘迫综合征（NRDS）药品费用\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080707';\rinsert into his_bi.special_master_m\rselect\r    left(t1.st_date,6) as month_id,\r    'SP002080707' as special_code ,\r    sum(t2.pham_fees) as special_value,\r    now() as update_time ,\r    sum(t2.pham_fees) as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_amount_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00128'\r  and left(t1.st_date,6) = c_monthlist.month_id\rgroup by left(t1.st_date,6);\r\r---新生儿呼吸窘迫综合征（NRDS）卫生材料费用\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080709';\rinsert into his_bi.special_master_m\rselect\r    left(t1.st_date,6) as month_id,\r    'SP002080709' as special_code ,\r    sum(t2.material_fees) as special_value,\r    now() as update_time ,\r    sum(t2.material_fees) as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_amount_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00128'\r  and left(t1.st_date,6) = c_monthlist.month_id\rgroup by left(t1.st_date,6);\r\r---儿童哮喘材料费用\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080809';\rinsert into his_bi.special_master_m\rselect\r    left(t1.st_date,6) as month_id,\r    'SP002080809' as special_code ,\r    sum(t2.material_fees) as special_value,\r    now() as update_time ,\r    sum(t2.material_fees) as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_amount_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00225'\r  and left(t1.st_date,6) = c_monthlist.month_id\rgroup by left(t1.st_date,6);\r\r---儿童哮喘药品费用\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002080807';\rinsert into his_bi.special_master_m\rselect\r    left(t1.st_date,6) as month_id,\r    'SP002080807' as special_code ,\r    sum(t2.pham_fees) as special_value,\r    now() as update_time ,\r    sum(t2.pham_fees) as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_amount_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00225'\r  and left(t1.st_date,6) = c_monthlist.month_id\rgroup by left(t1.st_date,6);\r\r---新生儿高胆红素血症7天重返\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP002072006';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id ,\r    'SP002072006' as special_code ,\r    coalesce(count(1),0) as special_value,\r    now() as update_time,\r    coalesce(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.DWD_INP_MEDICAL_D t1\r         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id=t2.pai_visit_id and t2.key='D00126'\rwhere\r        t1.key = 'D05026'\r  and left(t1.st_date,6)=c_monthlist.month_id;\r\r\r\r---特需门诊收入占比\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP006010207';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP006010207' as special_code,\r    round((sum(case when t3.special_clinic_type='2' then t4.total_fees end) /sum(t4.total_fees))*100,5) as special_value,\r    now() as update_time ,\r    round((sum(case when t3.special_clinic_type='2' then t4.total_fees end) /sum(t4.total_fees))*100,5) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.dw_outp_patient_info_m t1\r        left join his_bi.v_system_special_clinic t3 on t1.outp_special_id = t3.special_clinic_id and t3.special_clinic_type='2'\r        left join his_bi.dw_outp_patient_amount_m t4 on t1.patient_id = t4.patient_id and t1.visit_id = t4.visit_id\rwhere\r        t1.month_id=c_monthlist.month_id\rgroup by t1.month_id;\r\r\r---医疗服务收入（不含药品、耗材、检查检验收入）占医疗收入比例\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP006030101';\rinsert into his_bi.special_master_m\rselect\r    t2.month_id,\r    'SP006030101' as special_code ,\r    round((sum(t1.value)/max(t2.kpi_value)*100),5) as special_value,\r    now() as update_time,\r    round((sum(t1.value)/max(t2.kpi_value)*100),5) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    (select\r         t1.month_id,\r         sum(t1.service_fees) as value\r     from his_bi.dw_outp_patient_amount_m t1\r     group by t1.month_id\r     union all\r     select\r         t1.month_id,\r         sum(t1.service_fees) as value\r     from his_bi.dw_inp_patient_amount_m t1\r     group by t1.month_id) t1\r        left join his_bi.kpi_master_m t2 on t1.month_id = t2.month_id and t2.kpi_code='JX03701'\rwhere\r        t2.month_id=c_monthlist.month_id\rgroup by t2.month_id;\r\r\r\r---住院次均费用材料费用占比\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP008030202';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP008030202' as special_code,\r    round(((sum(t1.material_fees)/count(1))/max(t2.special_value))*100,5) as special_value,\r    now() as update_time ,\r    round(((sum(t1.material_fees)/count(1))/max(t2.special_value))*100,5) as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom  his_bi.dw_inp_patient_amount_m t1\r          inner join his_bi.special_master_m t2 on t1.month_id = t2.month_id and t2.special_code = 'SP008030101'\rwhere t1.month_id = c_monthlist.month_id and t2.month_id=c_monthlist.month_id;\r\r\r\r\r---住院次均费用检查和检验费用占比\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP008030203';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP008030203' as special_code,\r    coalesce(round((((sum(t1.inspect_fees)+sum(t1.check_fees))/count(1))/max(t2.special_value))*100,5),0)  as special_value,\r    now() as update_time ,\r    coalesce(round((((sum(t1.inspect_fees)+sum(t1.check_fees))/count(1))/max(t2.special_value))*100,5),0) as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom  his_bi.dw_inp_patient_amount_m t1\r          inner join his_bi.special_master_m t2 on t1.month_id = t2.month_id and t2.special_code = 'SP008030101'\rwhere t1.month_id = c_monthlist.month_id and t2.month_id=c_monthlist.month_id;\r\r\r\r\r\r\r\r---住院次均费用治疗费用占比\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP008030204';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP008030204' as special_code,\r    round(((sum(t1.cur_fees)/count(1))/max(t2.special_value))*100,5) as special_value,\r    now() as update_time ,\r    round(((sum(t1.cur_fees)/count(1))/max(t2.special_value))*100,5) as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom  his_bi.dw_inp_patient_amount_m t1\r          inner join his_bi.special_master_m t2 on t1.month_id = t2.month_id and t2.special_code = 'SP008030101'\rwhere t1.month_id = c_monthlist.month_id and t2.month_id=c_monthlist.month_id;\r\r\r---急诊次均药费\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP008020103';\rinsert into his_bi.special_master_m\rselect\r    t1.month_id,\r    'SP008020103' as special_code,\r    round(sum(t2.pham_fees)/count(1),5) as special_value,\r    now() as update_time ,\r    round(sum(t2.pham_fees)/count(1),5) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dw_outp_patient_info_m t1\r         inner join his_bi.dw_outp_patient_amount_m t2 on t1.patient_id = t2.patient_id and t1.visit_id =t2.visit_id\rwhere coalesce(is_emergency,0) = 1\r  and t1.month_id = c_monthlist.month_id\rgroup by t1.month_id;\r\r\r---门急诊次均费用卫生材料费占比\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP008010207';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP008010207' as special_code,\r    round(((sum(t1.material_fees)/count(1))/max(t2.special_value))*100,5) as special_value,\r    now() as update_time ,\r    round(((sum(t1.material_fees)/count(1))/max(t2.special_value))*100,5) as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom  his_bi.dw_outp_patient_amount_m t1\r          inner join his_bi.special_master_m t2 on t1.month_id = t2.month_id and t2.special_code = 'SP008010101'\rwhere t1.month_id = c_monthlist.month_id and t2.month_id=c_monthlist.month_id;\r\r\r\r\r\r---门急诊次均费用检查费占比\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP008010208';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP008010208' as special_code,\r    round(((sum(t1.check_fees)/count(1))/max(t2.special_value))*100,5) as special_value,\r    now() as update_time ,\r    round(((sum(t1.check_fees)/count(1))/max(t2.special_value))*100,5) as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom  his_bi.dw_outp_patient_amount_m t1\r          inner join his_bi.special_master_m t2 on t1.month_id = t2.month_id and t2.special_code = 'SP008010101'\rwhere t1.month_id = c_monthlist.month_id and t2.month_id=c_monthlist.month_id;\r\r\r---急诊料费用占急诊收入的比重\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP006010204';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP006010204' as special_code,\r    round((sum(t1.material_fees)/sum(t1.total_fees))*100,5) as special_value,\r    now() as update_time ,\r    round((sum(t1.material_fees)/sum(t1.total_fees))*100,5) as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dw_outp_patient_info_m t\r         inner join his_bi.dw_outp_patient_amount_m t1 on t.patient_id = t1.patient_id and t.visit_id=t1.visit_id\rwhere t1.month_id = c_monthlist.month_id\r  and coalesce(t.is_emergency, 0) = 1;\r\r---门诊料费用占急诊收入的比重\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP006010203';\rinsert into his_bi.special_master_m\rselect\rc_monthlist.month_id as month_id,\r    'SP006010203' as special_code,\rround((sum(t1.material_fees)/sum(t1.total_fees))*100,5) as special_value,\rnow() as update_time ,\r    round((sum(t1.material_fees)/sum(t1.total_fees))*100,5) as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom \rhis_bi.dw_outp_patient_amount_m  t1\rwhere\rnot exists(\rselect 1 from his_bi.dwd_outp_work_d t2\rwhere left(t2.st_date,6) = c_monthlist.month_id\rand t1.patient_id = t2.patient_id\rand t1.visit_id = t2.visit_id\rand t2.key = 'D00129'\r) and t1.month_id = c_monthlist.month_id;\r\r\r---门诊患者次均药费\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP008020102';\rinsert into his_bi.special_master_m\rselect\rc_monthlist.month_id as month_id,\r    'SP008020102' as special_code,\rround((sum(t1.pham_fees)/count(1)),5) as special_value,\rnow() as update_time ,\r    round((sum(t1.pham_fees)/count(1)),5) as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom \rhis_bi.dw_outp_patient_amount_m  t1\rwhere\rnot exists(\rselect 1 from his_bi.dwd_outp_work_d t2\rwhere left(t2.st_date,6) = c_monthlist.month_id\rand t1.patient_id = t2.patient_id\rand t1.visit_id = t2.visit_id\rand t2.key = 'D00129'\r) and t1.month_id = c_monthlist.month_id;\r\r\r\r---门诊人次增减率\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001010104';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP001010104' as special_code ,\r    coalesce(round(((sum(case when t1.month_id = c_monthlist.month_id then t1.special_value end)-\r                     sum(case when t1.month_id = to_char(to_date(c_monthlist.month_id, 'yyyymm') -  interval '1' month,'yyyymm') then t1.special_value end))/\r                    sum(case when t1.month_id = to_char(to_date(c_monthlist.month_id, 'yyyymm') -  interval '1' month,'yyyymm') then t1.special_value end))*100,5),0) as special_value,\r    now() as update_time ,\r    coalesce(round(((sum(case when t1.month_id = c_monthlist.month_id then t1.special_value end)-\r                     sum(case when t1.month_id = to_char(to_date(c_monthlist.month_id, 'yyyymm') -  interval '1' month,'yyyymm') then t1.special_value end))/\r                    sum(case when t1.month_id = to_char(to_date(c_monthlist.month_id, 'yyyymm') -  interval '1' month,'yyyymm') then t1.special_value end))*100,5),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.special_master_m t1\rwhere t1.special_code='SP001010103'\r  and  to_date(t1.month_id,'yyyymm')>= to_date(c_monthlist.month_id, 'yyyymm') -  interval '1' month\r  and to_date(t1.month_id,'yyyymm')< to_date(c_monthlist.month_id, 'yyyymm') + interval '1' month;\r\r\r\r---急诊人次环比增长率\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001010106';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP001010106' as special_code ,\r    coalesce(round(((sum(case when t1.month_id = c_monthlist.month_id then t1.special_value end)-\r                     sum(case when t1.month_id = to_char(to_date(c_monthlist.month_id, 'yyyymm') -  interval '1' month,'yyyymm') then t1.special_value end))/\r                    sum(case when t1.month_id = to_char(to_date(c_monthlist.month_id, 'yyyymm') -  interval '1' month,'yyyymm') then t1.special_value end))*100,5),0) as special_value,\r    now() as update_time ,\r    coalesce(round(((sum(case when t1.month_id = c_monthlist.month_id then t1.special_value end)-\r                     sum(case when t1.month_id = to_char(to_date(c_monthlist.month_id, 'yyyymm') -  interval '1' month,'yyyymm') then t1.special_value end))/\r                    sum(case when t1.month_id = to_char(to_date(c_monthlist.month_id, 'yyyymm') -  interval '1' month,'yyyymm') then t1.special_value end))*100,5),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.special_master_m t1\rwhere t1.special_code='SP001010105'\r  and  to_date(t1.month_id,'yyyymm')>= to_date(c_monthlist.month_id, 'yyyymm') -  interval '1' month\r  and to_date(t1.month_id,'yyyymm')< to_date(c_monthlist.month_id, 'yyyymm') + interval '1' month;\r\r\r---门诊患者基本药物处方占比\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP004010601';\rinsert into his_bi.special_master_m\rselect\r    t1.month_id,\r    'SP004010601' as special_code,\r    round((t1.value/t2.special_value)*100,5) as special_value,\r    now() as update_time,\r    round((t1.value/t2.special_value)*100,5)as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    (select\r         month_id,\r         count(1) as value\r     from\r         his_bi.dw_outp_patient_amount_m\r     where\r             basic_fees<>0.00\r     group by month_id\r    )t1\r        left join his_bi.special_master_m t2 on t1.month_id = t2. month_id and t2.special_code='SP001010101'\rwhere\r        t1.month_id=c_monthlist.month_id;\r\r\r\r\r---住院患者基本药物处方占比\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP004010602';\rinsert into his_bi.special_master_m\rselect\r    t1.month_id,\r    'SP004010602' as special_code,\r    round((t1.value/t2.special_value)*100,5) as special_value,\r    now() as update_time,\r    round((t1.value/t2.special_value)*100,5)as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    (select\r         month_id,\r         count(1) as value\r     from\r         his_bi.dw_inp_patient_amount_m t1\r     where\r             basic_fees<>0.00\r     group by month_id\r    )t1\r        left join his_bi.special_master_m t2 on t1.month_id = t2. month_id and t2.special_code='SP001020102'\rwhere\r        t1.month_id=c_monthlist.month_id;\r\r\r---住院收入占医疗收入比例\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP006020302';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP006020302'  as special_code,\r    COALESCE(max(case when t1.kpi_code='JX029' then t1.kpi_value end),0) as special_value,\r    now() as update_time ,\r    COALESCE(max(case when t1.kpi_code='JX029' then t1.kpi_value end),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id = c_monthlist.month_id;\r\r\r---住院服务收入占比\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP006020303';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP006020303'  as special_code,\r    round(((sum((case when t1.kpi_code='JX03101' then t1.kpi_value end )))*1.00/\r           sum((case when t1.kpi_code='JX04002' then t1.kpi_value end )))*100,5) as special_value,\r    now() as update_time ,\r    round(((sum((case when t1.kpi_code='JX03101' then t1.kpi_value end )))*1.00/\r           sum((case when t1.kpi_code='JX04002' then t1.kpi_value end )))*100,5) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id = c_monthlist.month_id;\r\r---门诊收入同比增长率\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP006010401';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP006010401' as special_code ,\r    coalesce(round(((sum(case when t1.month_id = c_monthlist.month_id then t1.special_value end)-\r                     sum(case when t1.month_id = to_char(to_date(left(c_monthlist.month_id,4), 'yyyy') -  interval '1' year,'yyyy')||right(c_monthlist.month_id,2) then t1.special_value end))/\r                    sum(case when t1.month_id =  to_char(to_date(left(c_monthlist.month_id,4), 'yyyy') -  interval '1' year,'yyyy')||right(c_monthlist.month_id,2) then t1.special_value end))*100,5),0) as special_value,\r    now() as update_time ,\r    coalesce(round(((sum(case when t1.month_id = c_monthlist.month_id then t1.special_value end)-\r                     sum(case when t1.month_id = to_char(to_date(left(c_monthlist.month_id,4), 'yyyy') -  interval '1' year,'yyyy')||right(c_monthlist.month_id,2) then t1.special_value end))/\r                    sum(case when t1.month_id =  to_char(to_date(left(c_monthlist.month_id,4), 'yyyy') -  interval '1' year,'yyyy')||right(c_monthlist.month_id,2) then t1.special_value end))*100,5),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.special_master_m t1\rwhere t1.special_code='SP006010102'\r  and  to_date(left(t1.month_id,4),'yyyy')>= to_date(left(c_monthlist.month_id,4), 'yyyy') -  interval '1' year\r  and to_date(left(t1.month_id,4),'yyyy')< to_date(left(c_monthlist.month_id,4), 'yyyy') +  interval '1' year;\r\r\r\r\r\r---急诊收入同比增长率\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP006010402';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP006010402' as special_code ,\r    coalesce(round(((sum(case when t1.month_id = c_monthlist.month_id then t1.special_value end)-\r                     sum(case when t1.month_id = to_char(to_date(left(c_monthlist.month_id,4), 'yyyy') -  interval '1' year,'yyyy')||right(c_monthlist.month_id,2) then t1.special_value end))/\r                    sum(case when t1.month_id =  to_char(to_date(left(c_monthlist.month_id,4), 'yyyy') -  interval '1' year,'yyyy')||right(c_monthlist.month_id,2) then t1.special_value end))*100,5),0) as special_value,\r    now() as update_time ,\r    coalesce(round(((sum(case when t1.month_id = c_monthlist.month_id then t1.special_value end)-\r                     sum(case when t1.month_id = to_char(to_date(left(c_monthlist.month_id,4), 'yyyy') -  interval '1' year,'yyyy')||right(c_monthlist.month_id,2) then t1.special_value end))/\r                    sum(case when t1.month_id =  to_char(to_date(left(c_monthlist.month_id,4), 'yyyy') -  interval '1' year,'yyyy')||right(c_monthlist.month_id,2) then t1.special_value end))*100,5),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.special_master_m t1\rwhere t1.special_code='SP006010103'\r  and  to_date(left(t1.month_id,4),'yyyy')>= to_date(left(c_monthlist.month_id,4), 'yyyy') -  interval '1' year\r  and to_date(left(t1.month_id,4),'yyyy')< to_date(left(c_monthlist.month_id,4), 'yyyy') +  interval '1' year;\r\r\r---体检收入同比增长率\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP006040105';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP006040105' as special_code ,\r    coalesce(round(((sum(case when t1.month_id = c_monthlist.month_id then t1.special_value end)-\r                     sum(case when t1.month_id = to_char(to_date(left(c_monthlist.month_id,4), 'yyyy') -  interval '1' year,'yyyy')||right(c_monthlist.month_id,2) then t1.special_value end))/\r                    sum(case when t1.month_id =  to_char(to_date(left(c_monthlist.month_id,4), 'yyyy') -  interval '1' year,'yyyy')||right(c_monthlist.month_id,2) then t1.special_value end))*100,5),0) as special_value,\r    now() as update_time ,\r    coalesce(round(((sum(case when t1.month_id = c_monthlist.month_id then t1.special_value end)-\r                     sum(case when t1.month_id = to_char(to_date(left(c_monthlist.month_id,4), 'yyyy') -  interval '1' year,'yyyy')||right(c_monthlist.month_id,2) then t1.special_value end))/\r                    sum(case when t1.month_id =  to_char(to_date(left(c_monthlist.month_id,4), 'yyyy') -  interval '1' year,'yyyy')||right(c_monthlist.month_id,2) then t1.special_value end))*100,5),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.special_master_m t1\rwhere t1.special_code='SP006040101'\r  and  to_date(left(t1.month_id,4),'yyyy')>= to_date(left(c_monthlist.month_id,4), 'yyyy') -  interval '1' year\r  and to_date(left(t1.month_id,4),'yyyy')< to_date(left(c_monthlist.month_id,4), 'yyyy') +  interval '1' year;\r\r\r\r---次均费用药品费占比\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP008030201';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP008030201' as special_code ,\r    COALESCE(round((sum(case when special_code='SP008030102' then special_value end)/\r                    sum(case when special_code='SP008030101' then special_value end))*100,5),0) as special_value,\r    now() as update_time ,\r    COALESCE(round((sum(case when special_code='SP008030102' then special_value end)/\r                    sum(case when special_code='SP008030101' then special_value end))*100,5),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.special_master_m\rwhere\r        month_id=c_monthlist.month_id;\r\r\r---基本药物使用金额比例\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP004020201';\rinsert into his_bi.special_master_m\rselect\r    t1.month_id,\r    'SP004020201' as special_code,\r    round((t1.basic_fees/t2.kpi_value)*100,5) as special_value,\r    now() as update_time ,\r    round((t1.basic_fees/t2.kpi_value)*100,5) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    (select\r         t.month_id,\r         sum(inp_basic_fees)+sum(outp_basic_fees) as basic_fees\r     from\r         (select\r              month_id,\r              sum(basic_fees) as inp_basic_fees,\r              0 as outp_basic_fees\r          from\r              his_bi.dw_inp_patient_amount_m\r          GROUP BY month_id\r          union all\r          select\r              month_id,\r              0 as inp_basic_fees,\r              sum(basic_fees) as outp_basic_fees\r          from\r              his_bi.dw_outp_patient_amount_m\r          GROUP BY month_id)t\r     GROUP BY t.month_id)t1 left join his_bi.kpi_master_m t2 on t1.month_id = t2.month_id\r        and t2.kpi_code = 'JX03102'\rwhere\r        t1.month_id =  c_monthlist.month_id;\r\r\r\r---处方总数\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP004010403';\rinsert into his_bi.special_master_m\rselect\r    c_monthlist.month_id,\r    'SP004010403' as special_code ,\r    sum(cf_num) as special_value,\r    now() as update_time ,\r    sum(cf_num) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.dw_outp_patient_info_m\rwhere\r        month_id = c_monthlist.month_id;\r\r---预约就诊率\rdelete from his_bi.special_master_m where month_id = c_monthlist.month_id and special_code = 'SP001010203';\rinsert into his_bi.special_master_m\rselect\r    t1.month_id,\r    'SP001010203' as special_code ,\r    round((count(1)/max(t2.special_value))*100,5) as special_value,\r    now() as update_time ,\r    round((count(1)/max(t2.special_value))*100,5) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dw_outp_patient_info_m t1\r         left join his_bi.special_master_m t2 on t1.month_id = t2.month_id and t2.special_code='SP001010103'\rwhere coalesce(t1.is_yygh,0)=1\r  and coalesce(t1.is_visited,0)=1\r  and t1.month_id = c_monthlist.month_id\rgroup by t1.month_id;\r\r  ""]",['上报指标函数\r   ']
253,his_bi,fun_dwd_D05008_d_16743,"
/***
函数名称：住院患者西药费
    作用：统计某天患者西药费
  开发人：wy 2020-06-10
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D05008  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_income_d
	 where key = 'D05008';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D05008';
	
  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
	select 
			 'D05008',
			 coalesce(sum(t.charges),0),
			 t.patient_id,
			 t.visit_id,
			 t.pai_visit_id,
			 now(),
			'住院患者西药费',
			to_char(t.enter_date,'yyyymmdd') AS st_date
	from his_bi.bms_bill_item t
	left join his_bi.pts_pai_visit t1 on t.pai_visit_id = t1.pai_visit_id
	where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')
	and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
	and t.in_out_flag = 'I' --只统计住院患者
	and t.subj_code  = 'J01'
	and t.charges<>0
	group by to_char(t.enter_date,'yyyymmdd'),
				 t.patient_id,
				 t.visit_id,
				 t.pai_visit_id
				 having coalesce(sum(t.charges),0)<>0;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D05008'],"[""delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D05008';\r \r  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r select \r    'D05008',\r    coalesce(sum(t.charges),0),\r    t.patient_id,\r    t.visit_id,\r    t.pai_visit_id,\r    now(),\r   '住院患者西药费',\r   to_char(t.enter_date,'yyyymmdd') AS st_date\r from his_bi.bms_bill_item t\r left join his_bi.pts_pai_visit t1 on t.pai_visit_id = t1.pai_visit_id\r where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1\r and t.in_out_flag = 'I' --只统计住院患者\r and t.subj_code  = 'J01'\r and t.charges<>0\r group by to_char(t.enter_date,'yyyymmdd'),\r     t.patient_id,\r     t.visit_id,\r     t.pai_visit_id\r     having coalesce(sum(t.charges),0)<>0;\r \r ""]",['住院患者西药费\r   ']
254,his_bi,fun_dwd_D05009_d_16744,"
/***
函数名称：住院患者中成药费
    作用：统计某天患者中成药费
  开发人：wy 2020-06-10
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D05009  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_income_d
	 where key = 'D05009';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D05009';
	
  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
	select 
			 'D05009',
			 coalesce(sum(t.charges),0),
			 t.patient_id,
			 t.visit_id,
			 t.pai_visit_id,
			 now(),
			'住院患者中成药费',
			to_char(t.enter_date,'yyyymmdd') AS st_date
	from his_bi.bms_bill_item t
	left join his_bi.pts_pai_visit t1 on t.pai_visit_id = t1.pai_visit_id
	where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')
	and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
	and t.in_out_flag = 'I' --只统计住院患者
	and t.subj_code  = 'J02'
	and t.charges<>0
	group by to_char(t.enter_date,'yyyymmdd'),
				 t.patient_id,
				 t.visit_id,
				 t.pai_visit_id
				 having coalesce(sum(t.charges),0)<>0;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D05009'],"[""delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D05009';\r \r  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r select \r    'D05009',\r    coalesce(sum(t.charges),0),\r    t.patient_id,\r    t.visit_id,\r    t.pai_visit_id,\r    now(),\r   '住院患者中成药费',\r   to_char(t.enter_date,'yyyymmdd') AS st_date\r from his_bi.bms_bill_item t\r left join his_bi.pts_pai_visit t1 on t.pai_visit_id = t1.pai_visit_id\r where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1\r and t.in_out_flag = 'I' --只统计住院患者\r and t.subj_code  = 'J02'\r and t.charges<>0\r group by to_char(t.enter_date,'yyyymmdd'),\r     t.patient_id,\r     t.visit_id,\r     t.pai_visit_id\r     having coalesce(sum(t.charges),0)<>0;\r \r ""]",['住院患者中成药费\r   ']
255,his_bi,fun_dwd_D05010_d_16745,"
/***
函数名称：住院患者草药费
    作用：统计某天患者草药费
  开发人：wy 2020-06-10
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D05010  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_income_d
	 where key = 'D05010';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D05010';
	
  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
	select 
			 'D05010',
			 coalesce(sum(t.charges),0),
			 t.patient_id,
			 t.visit_id,
			 t.pai_visit_id,
			 now(),
			'住院患者草药费',
			to_char(t.enter_date,'yyyymmdd') AS st_date
	from his_bi.bms_bill_item t
	left join his_bi.pts_pai_visit t1 on t.pai_visit_id = t1.pai_visit_id
	where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')
	and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
	and t.in_out_flag = 'I' --只统计住院患者
	and t.subj_code  = 'J03'
	and t.charges<>0
	group by to_char(t.enter_date,'yyyymmdd'),
				 t.patient_id,
				 t.visit_id,
				 t.pai_visit_id
				 having coalesce(sum(t.charges),0)<>0;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D05010'],"[""delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D05010';\r \r  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r select \r    'D05010',\r    coalesce(sum(t.charges),0),\r    t.patient_id,\r    t.visit_id,\r    t.pai_visit_id,\r    now(),\r   '住院患者草药费',\r   to_char(t.enter_date,'yyyymmdd') AS st_date\r from his_bi.bms_bill_item t\r left join his_bi.pts_pai_visit t1 on t.pai_visit_id = t1.pai_visit_id\r where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1\r and t.in_out_flag = 'I' --只统计住院患者\r and t.subj_code  = 'J03'\r and t.charges<>0\r group by to_char(t.enter_date,'yyyymmdd'),\r     t.patient_id,\r     t.visit_id,\r     t.pai_visit_id\r     having coalesce(sum(t.charges),0)<>0;\r \r ""]",['住院患者草药费\r   ']
256,his_bi,fun_dwd_D05011_d_16746,"
/***
函数名称：住院患者抗菌药物费
    作用：统计某天患者抗菌药物费
  开发人：wy 2020-06-10
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D05011  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_income_d
	 where key = 'D05011';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D05011';
	
  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
	select 
			 'D05011',
			 coalesce(sum(t.charges),0),
			 t.patient_id,
			 t.visit_id,
			 t.pai_visit_id,
			 now(),
			'住院患者抗菌药物费',
			to_char(t.enter_date,'yyyymmdd') AS st_date
	from his_bi.bms_bill_item t
	left join his_bi.pts_pai_visit t1 on t.pai_visit_id = t1.pai_visit_id
	where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')
	and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
	and t.in_out_flag = 'I' --只统计住院患者
	and t.item_class in ('A','B','N')
	and exists (select 1 from his_bi.dms_pham_cust_def_cont 
			           where cont_type_id = 'TJ0055' 
									 and pham_std_code = t.item_code)
	and t.charges<>0
	group by to_char(t.enter_date,'yyyymmdd'),
				 t.patient_id,
				 t.visit_id,
				 t.pai_visit_id
				 having coalesce(sum(t.charges),0)<>0;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D05011'],"[""delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D05011';\r \r  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r select \r    'D05011',\r    coalesce(sum(t.charges),0),\r    t.patient_id,\r    t.visit_id,\r    t.pai_visit_id,\r    now(),\r   '住院患者抗菌药物费',\r   to_char(t.enter_date,'yyyymmdd') AS st_date\r from his_bi.bms_bill_item t\r left join his_bi.pts_pai_visit t1 on t.pai_visit_id = t1.pai_visit_id\r where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1\r and t.in_out_flag = 'I' --只统计住院患者\r and t.item_class in ('A','B','N')\r and exists (select 1 from his_bi.dms_pham_cust_def_cont \r              where cont_type_id = 'TJ0055' \r          and pham_std_code = t.item_code)\r and t.charges<>0\r group by to_char(t.enter_date,'yyyymmdd'),\r     t.patient_id,\r     t.visit_id,\r     t.pai_visit_id\r     having coalesce(sum(t.charges),0)<>0;\r \r ""]",['住院患者抗菌药物费\r   ']
257,his_bi,fun_dwd_D05012_d_16747,"
/***
函数名称：住院患者辅助用药费
    作用：统计某天患者辅助用药费
  开发人：wy 2020-06-10
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D05012  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_income_d
	 where key = 'D05012';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D05012';
	
  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
	select 
			 'D05012',
			 coalesce(sum(t.charges),0),
			 t.patient_id,
			 t.visit_id,
			 t.pai_visit_id,
			 now(),
			'住院患者辅助用药费',
			to_char(t.enter_date,'yyyymmdd') AS st_date
	from his_bi.bms_bill_item t
	left join his_bi.pts_pai_visit t1 on t.pai_visit_id = t1.pai_visit_id
	where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')
	and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
	and t.in_out_flag = 'I' --只统计住院患者
	and t.item_class in ('A','B','N')
	and t.item_code in (select pham_std_code from his_bi.dms_pham_cust_def_cont 
			                   where cont_name like '%辅助药品%')
	and t.charges<>0
	group by to_char(t.enter_date,'yyyymmdd'),
				 t.patient_id,
				 t.visit_id,
				 t.pai_visit_id
				 having coalesce(sum(t.charges),0)<>0;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D05012'],"[""delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D05012';\r \r  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r select \r    'D05012',\r    coalesce(sum(t.charges),0),\r    t.patient_id,\r    t.visit_id,\r    t.pai_visit_id,\r    now(),\r   '住院患者辅助用药费',\r   to_char(t.enter_date,'yyyymmdd') AS st_date\r from his_bi.bms_bill_item t\r left join his_bi.pts_pai_visit t1 on t.pai_visit_id = t1.pai_visit_id\r where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1\r and t.in_out_flag = 'I' --只统计住院患者\r and t.item_class in ('A','B','N')\r and t.item_code in (select pham_std_code from his_bi.dms_pham_cust_def_cont \r                      where cont_name like '%辅助药品%')\r and t.charges<>0\r group by to_char(t.enter_date,'yyyymmdd'),\r     t.patient_id,\r     t.visit_id,\r     t.pai_visit_id\r     having coalesce(sum(t.charges),0)<>0;\r \r ""]",['住院患者辅助用药费\r   ']
258,his_bi,fun_dwd_D05013_d_16748,"
/***
函数名称：住院患者基本药物费
    作用：统计某天患者基本药物费
  开发人：wy 2020-06-10
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D05013  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_income_d
	 where key = 'D05013';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D05013';
	
  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
	select 
			 'D05013',
			 coalesce(sum(t.charges),0),
			 t.patient_id,
			 t.visit_id,
			 t.pai_visit_id,
			 now(),
			'住院患者基本药物费',
			to_char(t.enter_date,'yyyymmdd') AS st_date
	from his_bi.bms_bill_item t
	left join his_bi.pts_pai_visit t1 on t.pai_visit_id = t1.pai_visit_id
	where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')
	and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
	and t.in_out_flag = 'I' --只统计住院患者
	and t.item_class in ('A','B','N')
	and t.item_code in (select pham_std_code from his_bi.dms_pham_basic_info where basic_pham='1')
	and t.charges<>0
	group by to_char(t.enter_date,'yyyymmdd'),
				 t.patient_id,
				 t.visit_id,
				 t.pai_visit_id
				 having coalesce(sum(t.charges),0)<>0;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D05013'],"[""delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D05013';\r \r  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r select \r    'D05013',\r    coalesce(sum(t.charges),0),\r    t.patient_id,\r    t.visit_id,\r    t.pai_visit_id,\r    now(),\r   '住院患者基本药物费',\r   to_char(t.enter_date,'yyyymmdd') AS st_date\r from his_bi.bms_bill_item t\r left join his_bi.pts_pai_visit t1 on t.pai_visit_id = t1.pai_visit_id\r where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1\r and t.in_out_flag = 'I' --只统计住院患者\r and t.item_class in ('A','B','N')\r and t.item_code in (select pham_std_code from his_bi.dms_pham_basic_info where basic_pham='1')\r and t.charges<>0\r group by to_char(t.enter_date,'yyyymmdd'),\r     t.patient_id,\r     t.visit_id,\r     t.pai_visit_id\r     having coalesce(sum(t.charges),0)<>0;\r \r ""]",['住院患者基本药物费\r   ']
259,his_bi,fun_dwd_D05014_d_16749,"
/***
函数名称：住院患者重点监控药品费
    作用：统计某天患者重点监控药品费
  开发人：wy 2020-06-10
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D05014  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_income_d
	 where key = 'D05014';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D05014';
	
  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
	select 
			 'D05014',
			 coalesce(sum(t.charges),0),
			 t.patient_id,
			 t.visit_id,
			 t.pai_visit_id,
			 now(),
			'住院患者重点监控药品费',
			to_char(t.enter_date,'yyyymmdd') AS st_date
	from his_bi.bms_bill_item t
	left join his_bi.pts_pai_visit t1 on t.pai_visit_id = t1.pai_visit_id
	where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')
	and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
	and t.in_out_flag = 'I' --只统计住院患者
	and t.item_class in ('A','B','N')
	and exists (select 1 from his_bi.dms_pham_cust_def_cont 
			           where cont_name like '%重点监控药品%'
									 and pham_std_code = t.item_code)
	and t.charges<>0
	group by to_char(t.enter_date,'yyyymmdd'),
				 t.patient_id,
				 t.visit_id,
				 t.pai_visit_id
				 having coalesce(sum(t.charges),0)<>0;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D05014'],"[""delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D05014';\r \r  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r select \r    'D05014',\r    coalesce(sum(t.charges),0),\r    t.patient_id,\r    t.visit_id,\r    t.pai_visit_id,\r    now(),\r   '住院患者重点监控药品费',\r   to_char(t.enter_date,'yyyymmdd') AS st_date\r from his_bi.bms_bill_item t\r left join his_bi.pts_pai_visit t1 on t.pai_visit_id = t1.pai_visit_id\r where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1\r and t.in_out_flag = 'I' --只统计住院患者\r and t.item_class in ('A','B','N')\r and exists (select 1 from his_bi.dms_pham_cust_def_cont \r              where cont_name like '%重点监控药品%'\r          and pham_std_code = t.item_code)\r and t.charges<>0\r group by to_char(t.enter_date,'yyyymmdd'),\r     t.patient_id,\r     t.visit_id,\r     t.pai_visit_id\r     having coalesce(sum(t.charges),0)<>0;\r \r ""]",['住院患者重点监控药品费\r   ']
260,his_bi,fun_dwd_D05015_d_16750,"
/***
函数名称：住院患者非限制级抗菌药物费
    作用：统计某天患者非限制级抗菌药物费
  开发人：wy 2020-06-10
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D05015  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_income_d
	 where key = 'D05015';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D05015';
	
  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
	select 
			 'D05015',
			 coalesce(sum(t.charges),0),
			 t.patient_id,
			 t.visit_id,
			 t.pai_visit_id,
			 now(),
			'住院患者非限制级抗菌药物费',
			to_char(t.enter_date,'yyyymmdd') AS st_date
	from his_bi.bms_bill_item t
	left join his_bi.pts_pai_visit t1 on t.pai_visit_id = t1.pai_visit_id
	where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')
	and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
	and t.in_out_flag = 'I' --只统计住院患者
	and t.item_class in ('A','B','N')
	and exists (select 1 from his_bi.dms_pham_cust_def_cont 
			           where cont_type_id = 'TJ0055'
								   and cont_value = '1' --只统计非限制级抗菌药物
									 and pham_std_code = t.item_code)
	and t.charges<>0
	group by to_char(t.enter_date,'yyyymmdd'),
				 t.patient_id,
				 t.visit_id,
				 t.pai_visit_id
				 having coalesce(sum(t.charges),0)<>0;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D05015'],"[""delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D05015';\r \r  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r select \r    'D05015',\r    coalesce(sum(t.charges),0),\r    t.patient_id,\r    t.visit_id,\r    t.pai_visit_id,\r    now(),\r   '住院患者非限制级抗菌药物费',\r   to_char(t.enter_date,'yyyymmdd') AS st_date\r from his_bi.bms_bill_item t\r left join his_bi.pts_pai_visit t1 on t.pai_visit_id = t1.pai_visit_id\r where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1\r and t.in_out_flag = 'I' --只统计住院患者\r and t.item_class in ('A','B','N')\r and exists (select 1 from his_bi.dms_pham_cust_def_cont \r              where cont_type_id = 'TJ0055'\r           and cont_value = '1' --只统计非限制级抗菌药物\r          and pham_std_code = t.item_code)\r and t.charges<>0\r group by to_char(t.enter_date,'yyyymmdd'),\r     t.patient_id,\r     t.visit_id,\r     t.pai_visit_id\r     having coalesce(sum(t.charges),0)<>0;\r \r ""]",['住院患者非限制级抗菌药物费\r   ']
261,his_bi,fun_dwd_D05016_d_16751,"
/***
函数名称：住院患者限制级抗菌药物费
    作用：统计某天患者限制级抗菌药物费
  开发人：wy 2020-06-10
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D05016  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_income_d
	 where key = 'D05016';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D05016';
	
  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
	select 
			 'D05016',
			 coalesce(sum(t.charges),0),
			 t.patient_id,
			 t.visit_id,
			 t.pai_visit_id,
			 now(),
			'住院患者限制级抗菌药物费',
			to_char(t.enter_date,'yyyymmdd') AS st_date
	from his_bi.bms_bill_item t
	left join his_bi.pts_pai_visit t1 on t.pai_visit_id = t1.pai_visit_id
	where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')
	and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
	and t.in_out_flag = 'I' --只统计住院患者
	and t.item_class in ('A','B','N')
	and exists (select 1 from his_bi.dms_pham_cust_def_cont 
			           where cont_type_id = 'TJ0055'
								   and cont_value = '2' --只统计限制级抗菌药物
									 and pham_std_code = t.item_code)
	and t.charges<>0
	group by to_char(t.enter_date,'yyyymmdd'),
				 t.patient_id,
				 t.visit_id,
				 t.pai_visit_id
				 having coalesce(sum(t.charges),0)<>0;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D05016'],"[""delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D05016';\r \r  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r select \r    'D05016',\r    coalesce(sum(t.charges),0),\r    t.patient_id,\r    t.visit_id,\r    t.pai_visit_id,\r    now(),\r   '住院患者限制级抗菌药物费',\r   to_char(t.enter_date,'yyyymmdd') AS st_date\r from his_bi.bms_bill_item t\r left join his_bi.pts_pai_visit t1 on t.pai_visit_id = t1.pai_visit_id\r where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1\r and t.in_out_flag = 'I' --只统计住院患者\r and t.item_class in ('A','B','N')\r and exists (select 1 from his_bi.dms_pham_cust_def_cont \r              where cont_type_id = 'TJ0055'\r           and cont_value = '2' --只统计限制级抗菌药物\r          and pham_std_code = t.item_code)\r and t.charges<>0\r group by to_char(t.enter_date,'yyyymmdd'),\r     t.patient_id,\r     t.visit_id,\r     t.pai_visit_id\r     having coalesce(sum(t.charges),0)<>0;\r \r ""]",['住院患者限制级抗菌药物费\r   ']
262,his_bi,fun_dwd_D05017_d_16752,"
/***
函数名称：住院患者特殊级抗菌药物费
    作用：统计某天患者特殊级抗菌药物费
  开发人：wy 2020-06-10
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D05017  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_income_d
	 where key = 'D05017';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D05017';
	
  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
	select 
			 'D05017',
			 coalesce(sum(t.charges),0),
			 t.patient_id,
			 t.visit_id,
			 t.pai_visit_id,
			 now(),
			'住院患者特殊级抗菌药物费',
			to_char(t.enter_date,'yyyymmdd') AS st_date
	from his_bi.bms_bill_item t
	left join his_bi.pts_pai_visit t1 on t.pai_visit_id = t1.pai_visit_id
	where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')
	and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
	and t.in_out_flag = 'I' --只统计住院患者
	and t.item_class in ('A','B','N')
	and exists (select 1 from his_bi.dms_pham_cust_def_cont 
			           where cont_type_id = 'TJ0055'
								   and cont_value = '3' --只统计特殊级抗菌药物
									 and pham_std_code = t.item_code)
	and t.charges<>0
	group by to_char(t.enter_date,'yyyymmdd'),
				 t.patient_id,
				 t.visit_id,
				 t.pai_visit_id
				 having coalesce(sum(t.charges),0)<>0;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D05017'],"[""delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D05017';\r \r  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r select \r    'D05017',\r    coalesce(sum(t.charges),0),\r    t.patient_id,\r    t.visit_id,\r    t.pai_visit_id,\r    now(),\r   '住院患者特殊级抗菌药物费',\r   to_char(t.enter_date,'yyyymmdd') AS st_date\r from his_bi.bms_bill_item t\r left join his_bi.pts_pai_visit t1 on t.pai_visit_id = t1.pai_visit_id\r where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1\r and t.in_out_flag = 'I' --只统计住院患者\r and t.item_class in ('A','B','N')\r and exists (select 1 from his_bi.dms_pham_cust_def_cont \r              where cont_type_id = 'TJ0055'\r           and cont_value = '3' --只统计特殊级抗菌药物\r          and pham_std_code = t.item_code)\r and t.charges<>0\r group by to_char(t.enter_date,'yyyymmdd'),\r     t.patient_id,\r     t.visit_id,\r     t.pai_visit_id\r     having coalesce(sum(t.charges),0)<>0;\r \r ""]",['住院患者特殊级抗菌药物费\r   ']
263,his_bi,fun_dwd_D05018_d_16753,"
/***
函数名称：住院患者护理费
    作用：统计某天患者护理费
  开发人：wy 2020-06-10
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D05018  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_income_d
	 where key = 'D05018';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D05018';
	
  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
	select 
			 'D05018',
			 coalesce(sum(t.charges),0),
			 t.patient_id,
			 t.visit_id,
			 t.pai_visit_id,
			 now(),
			'住院患者护理费',
			to_char(t.enter_date,'yyyymmdd') AS st_date
	from his_bi.bms_bill_item t
	left join his_bi.pts_pai_visit t1 on t.pai_visit_id = t1.pai_visit_id
	where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')
	and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
	and t.in_out_flag = 'I' --只统计住院患者
	and t.subj_code = 'H01'
	and t.charges<>0
	group by to_char(t.enter_date,'yyyymmdd'),
				 t.patient_id,
				 t.visit_id,
				 t.pai_visit_id
				 having coalesce(sum(t.charges),0)<>0;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D05018'],"[""delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D05018';\r \r  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r select \r    'D05018',\r    coalesce(sum(t.charges),0),\r    t.patient_id,\r    t.visit_id,\r    t.pai_visit_id,\r    now(),\r   '住院患者护理费',\r   to_char(t.enter_date,'yyyymmdd') AS st_date\r from his_bi.bms_bill_item t\r left join his_bi.pts_pai_visit t1 on t.pai_visit_id = t1.pai_visit_id\r where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1\r and t.in_out_flag = 'I' --只统计住院患者\r and t.subj_code = 'H01'\r and t.charges<>0\r group by to_char(t.enter_date,'yyyymmdd'),\r     t.patient_id,\r     t.visit_id,\r     t.pai_visit_id\r     having coalesce(sum(t.charges),0)<>0;\r \r ""]",['住院患者护理费\r   ']
264,his_bi,fun_dwd_D05019_d_16754,"
/***
函数名称：住院患者手术费
    作用：统计某天患者手术费
  开发人：wy 2020-06-10
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D05019  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_income_d
	 where key = 'D05019';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D05019';
	
  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
	select 
			 'D05019',
			 coalesce(sum(t.charges),0),
			 t.patient_id,
			 t.visit_id,
			 t.pai_visit_id,
			 now(),
			'住院患者手术费',
			to_char(t.enter_date,'yyyymmdd') AS st_date
	from his_bi.bms_bill_item t
	left join his_bi.pts_pai_visit t1 on t.pai_visit_id = t1.pai_visit_id
	where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')
	and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
	and t.in_out_flag = 'I' --只统计住院患者
	and t.subj_code = 'G01'
	and t.charges<>0
	group by to_char(t.enter_date,'yyyymmdd'),
				 t.patient_id,
				 t.visit_id,
				 t.pai_visit_id
				 having coalesce(sum(t.charges),0)<>0;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D05019'],"[""delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D05019';\r \r  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r select \r    'D05019',\r    coalesce(sum(t.charges),0),\r    t.patient_id,\r    t.visit_id,\r    t.pai_visit_id,\r    now(),\r   '住院患者手术费',\r   to_char(t.enter_date,'yyyymmdd') AS st_date\r from his_bi.bms_bill_item t\r left join his_bi.pts_pai_visit t1 on t.pai_visit_id = t1.pai_visit_id\r where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1\r and t.in_out_flag = 'I' --只统计住院患者\r and t.subj_code = 'G01'\r and t.charges<>0\r group by to_char(t.enter_date,'yyyymmdd'),\r     t.patient_id,\r     t.visit_id,\r     t.pai_visit_id\r     having coalesce(sum(t.charges),0)<>0;\r \r ""]",['住院患者手术费\r   ']
265,his_bi,fun_level_master_m_16772,"
/***
函数名称：三级公立绩效指标函数
    作用：三级公立绩效指标函数
  开发人：leslie 2020年7月29日
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
  c_monthlist   record;
  o_start_month varchar;
  o_end_month   varchar;
  i_start_month varchar;
  i_end_month   varchar;
  i_count       int4;
BEGIN
    /*
同比计算步入2021年后的模板--影响的指标kpi_code in ('JX037','JX038','JX040')
select
    c_monthlist.month_id,
    '目标编码' as kpi_code ,
    coalesce(round(((sum(case when c_monthlist.month_id = c_monthlist.month_id then t1.kpi_value end)-
                     sum(case when c_monthlist.month_id = to_char(to_date(left(c_monthlist.month_id,4), 'yyyy') -  interval '1' year,'yyyy')||right(c_monthlist.month_id,2) then t1.kpi_value end))/
                    sum(case when c_monthlist.month_id =  to_char(to_date(left(c_monthlist.month_id,4), 'yyyy') -  interval '1' year,'yyyy')||right(c_monthlist.month_id,2) then t1.kpi_value end))*100,5),0) as kpi_value,
    now() as update_time ,
    coalesce(round(((sum(case when c_monthlist.month_id = c_monthlist.month_id then t1.kpi_value end)-
                     sum(case when c_monthlist.month_id = to_char(to_date(left(c_monthlist.month_id,4), 'yyyy') -  interval '1' year,'yyyy')||right(c_monthlist.month_id,2) then t1.kpi_value end))/
                    sum(case when c_monthlist.month_id =  to_char(to_date(left(c_monthlist.month_id,4), 'yyyy') -  interval '1' year,'yyyy')||right(c_monthlist.month_id,2) then t1.kpi_value end))*100,5),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where t1.kpi_code='基于同比的编码' ---例子：基于医疗收入同比  这里填JX03106
  and  to_date(left(c_monthlist.month_id,4),'yyyy')>= to_date(left(c_monthlist.month_id,4), 'yyyy') -  interval '1' year
  and to_date(left(c_monthlist.month_id,4),'yyyy')< to_date(left(c_monthlist.month_id,4), 'yyyy') +  interval '1' year;
*/
    
  /*如果指标没有历史指标数据，甘肃默认以202001开始计算，结束月份以当前月份往前推1个月*/
  select count(1),to_char((date_trunc('month', now()) + interval '-1 month'),'yyyymm')
           into i_count,i_end_month
    from his_bi.kpi_master_m;
   
  if(i_count = 0)
    then 
      i_start_month := c_monthlist.month_id;
      --raise notice '0 i_start_month is: %', i_start_month;
  else if(i_count > 0)
    then
      i_start_month := i_end_month;
      --raise notice '1 i_start_month is: %', i_start_month;
  end if;
  end if;
    
  if(length(trim(v_start_month)) = 0 and length(trim(v_end_month)) = 0)
  /*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前月份前1个月为截止月份 */
    then 
      o_start_month := i_start_month;
      o_end_month := i_end_month;
      --raise notice '2 o_start_month is: %', o_start_month;
      --raise notice '2 o_end_month is: %', o_end_month;
  else if (length(trim(v_start_month)) <> 0 and length(trim(v_end_month)) <> 0)
  /*PG function 如果参入任何参数，那么以实际入参为准*/
    then 
      o_start_month := v_start_month;
      o_end_month := v_end_month;
      --raise notice '3 o_start_month is: %', o_start_month;
      --raise notice '3 o_end_month is: %', o_end_month;
  end if;
  end if;
      for c_monthlist in (select distinct month_id from his_bi.dim_date_info where month_id >= o_start_month and month_id <= o_end_month order by month_id)
    loop
    --raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
   delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV007010201';
insert into his_bi.level_master_m
select
    t1.month_id,
    'LV007010201' as level_code ,
COALESCE(count(1),0) as level_value,
    now() as update_time ,
COALESCE(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dw_outp_patient_info_m t1
where
        t1.month_id=c_monthlist.month_id and
        coalesce(t1.is_tj,0)=0
group by month_id;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV007010202';
insert into his_bi.level_master_m
select
    t1.month_id,
    'LV007010202' as level_code ,
COALESCE(count(1),0) as level_value,
    now() as update_time ,
COALESCE(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dw_outp_patient_info_m t1
where
        t1.month_id=c_monthlist.month_id and
        coalesce(t1.is_emergency,0)<>0
group by month_id;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV007010204';
insert into his_bi.level_master_m
select
    replace(left(stat_date::text,7),'-','') as month_id,
    'LV007010204' as level_code ,
COALESCE(sum(c_num),0) as level_value,
    now() as update_time ,
COALESCE(sum(c_num),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dw_inp_dept_work_d t1
where
        replace(left(stat_date::text,7),'-','')=c_monthlist.month_id
group by replace(left(stat_date::text,7),'-','');

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV007010205';
insert into his_bi.level_master_m
select
    t1.month_id as month_id,
    'LV007010205' as level_code ,
COALESCE(count(1),0) as level_value,
    now() as update_time ,
COALESCE(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dw_inp_patient_info_m t1
where
        t1.month_id=c_monthlist.month_id
group by t1.month_id;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV007010206';
insert into his_bi.level_master_m
select
    replace(left(stat_date::text,7),'-','') as month_id,
    'LV007010206' as level_code ,
COALESCE(sum(bed_used),0) as level_value,
    now() as update_time ,
COALESCE(sum(bed_used),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dw_inp_dept_work_d t1
where
        replace(left(stat_date::text,7),'-','')=c_monthlist.month_id
group by replace(left(stat_date::text,7),'-','');

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV007010207';
insert into his_bi.level_master_m
select
    t1.month_id as month_id,
    'LV007010207' as level_code ,
COALESCE(count(1),0) as level_value,
    now() as update_time ,
COALESCE(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dw_inp_patient_info_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.is_sshz = '1'
group by t1.month_id;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV007010208';
insert into his_bi.level_master_m
select
    t1.month_id as month_id,
    'LV007010208' as level_code ,
COALESCE(count(1),0) as level_value,
    now() as update_time ,
COALESCE(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dw_outp_patient_amount_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.operation_fees >0
group by t1.month_id;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV007010210';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV007010210' as level_code ,
COALESCE(count(1),0) as level_value,
    now() as update_time ,
COALESCE(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.DWD_INP_QUANTITY_D t1
where
        left(t1.st_date,6)=c_monthlist.month_id
  and t1.key = 'D00159'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV007010211';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV007010211' as level_code ,
COALESCE(count(1),0) as level_value,
    now() as update_time ,
COALESCE(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_quantity_d t1
where
        left(t1.st_date,6)=c_monthlist.month_id
  and t1.key = 'D00157'
  and t1.value not in ('2','3')
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV007010302';
insert into his_bi.level_master_m
select
    replace(left(t2.cyrq::text,7),'-','')  as month_id,
    'LV007010302' as level_code ,
COALESCE(count(1),0) as level_value,
    now() as update_time ,
COALESCE(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from
    (select
         distinct
         patient_id,
         visit_id
     from
         his_bi.dwd_inp_medical_d
     where
             key = 'D00191')t1 inner join his_bi.ods_patient_medical_record t2 on t1.patient_id = t2.bah and  t1.visit_id = t2.zycs
where
        replace(left(t2.cyrq::text,7),'-','')=c_monthlist.month_id
  and t2.sqysh = '1'
group by replace(left(t2.cyrq::text,7),'-','') ;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV007010303';
insert into his_bi.level_master_m
select
   c_monthlist.month_id,
    'LV007010303' as level_code ,
COALESCE(count(1),0) as level_value,
    now() as update_time ,
COALESCE(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dw_inp_patient_info_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.lyfs='5';

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV007010304';
insert into his_bi.level_master_m
select
    t1.month_id,
    'LV007010304' as level_code ,
COALESCE(count(1),0) as level_value,
    now() as update_time ,
COALESCE(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dw_inp_patient_info_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.lyfs<>'4'
group by t1.month_id ;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV007010305';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV007010305' as level_code ,
COALESCE(count(1),0) as level_value,
    now() as update_time ,
COALESCE(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dw_inp_patient_info_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.is_sshz = '1';

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV007010306';
insert into his_bi.level_master_m
select
    to_char(t1.cyrq,'yyyymm') as month_id,
    'LV007010306' as level_code ,
COALESCE(count(1),0) as level_value,
    now() as update_time ,
COALESCE(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.ods_patient_medical_record t1
         inner join his_bi.ods_patient_opertion_info t2 on t1.brxh = t2.brxh
where
        to_char(t1.cyrq,'yyyymm') =c_monthlist.month_id
group by to_char(t1.cyrq,'yyyymm') ;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV007010307';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV007010307' as level_code ,
COALESCE(count(1),0) as level_value,
    now() as update_time ,
COALESCE(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dw_inp_patient_info_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.is_sshz = '1'
  and t1.lyfs='5';

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV007010308';
insert into his_bi.level_master_m
select
    t1.month_id as month_id,
    'LV007010308' as level_code ,
COALESCE(count(1),0) as level_value,
    now() as update_time ,
COALESCE(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dw_inp_patient_info_m t1
         inner join his_bi.ods_patient_medical_record t2 on t1.patient_id = t2.bah and t1.visit_id = t2.zycs
where
        t1.month_id=c_monthlist.month_id
  and t1.is_wzhz = '1'
  and t2.qjcs<>'0'
group by t1.month_id;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV007010309';
insert into his_bi.level_master_m
select
    t1.month_id as month_id,
    'LV007010309' as level_code ,
COALESCE(t2.qjcs,0) as level_value,
    now() as update_time ,
COALESCE(t2.qjcs,0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dw_inp_patient_info_m t1
         inner join his_bi.ods_patient_medical_record t2 on t1.patient_id = t2.bah and t1.visit_id = t2.zycs
where
        t1.month_id=c_monthlist.month_id
  and t1.is_wzhz = '1'
  and t2.qjcs<>'0';

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV007010310';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV007010310' as level_code ,
COALESCE(count(1),0) as level_value,
    now() as update_time ,
COALESCE(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dw_inp_patient_info_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.is_wzhz = '1'
  and t1.lyfs='5';

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV007010311';
insert into his_bi.level_master_m
select
    c_monthlist.month_id,
    'LV007010311' as level_code ,
COALESCE(cast((count(case when t1.value = '2' or t1.value = '3' then 1 end)*1.00/count(1)) as decimal(10,5))*100,0) as level_value,
    now() as update_time ,
    cast((count(case when t1.value = '2' or t1.value = '3' then 1 end)*1.00/count(1)) as decimal(10,5))*100  as self_value  ,
    null as check_flag  ,
    null as check_comm
from
    his_bi.dwd_inp_quantity_d t1
where
        t1.key = 'D00157'
  and left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV007010312';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV007010312' as level_code ,
COALESCE(sum(t2.qjcs),0) as level_value,
    now() as update_time ,
COALESCE(sum(t2.qjcs),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.DWD_INP_QUANTITY_D t1
         inner join his_bi.ods_patient_medical_record t2 on t1.patient_id = t2.bah and t1.visit_id = t2.zycs
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00159'
  and coalesce(t2.qjcs,0)<>0
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV007010313';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV007010313' as level_code ,
COALESCE(count(1),0) as level_value,
    now() as update_time ,
COALESCE(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.DWD_INP_QUANTITY_D t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00159'
  and t2.is_wzhz = '1'
  and coalesce(t2.lyfs::text,'0')='5'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV007010401';
insert into his_bi.level_master_m
select
    t1.month_id as month_id,
    'LV007010401' as level_code ,
COALESCE(sum(t1.in_days)/count(1),0) as level_value,
    now() as update_time ,
COALESCE(sum(t1.in_days)/count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dw_inp_patient_info_m t1
where
        t1.month_id=c_monthlist.month_id
group by t1.month_id;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010101';
insert into his_bi.level_master_m
select
    left(st_date,6) as month_id,
    'LV00702010101' as level_code ,
COALESCE(count(1),0) as level_value,
    now() as update_time ,
COALESCE(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d
where
        key = 'D00105'
  and left(st_date,6) = c_monthlist.month_id
group by left(st_date,6);

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010201';
insert into his_bi.level_master_m
select
    left(st_date,6) as month_id,
    'LV00702010201' as level_code ,
COALESCE(count(1),0) as level_value,
    now() as update_time ,
COALESCE(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d
where
        key = 'D00114'
  and left(st_date,6) = c_monthlist.month_id
group by left(st_date,6);

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010301';
insert into his_bi.level_master_m
select
    left(st_date,6) as month_id,
    'LV00702010301' as level_code ,
COALESCE(count(1),0) as level_value,
    now() as update_time ,
COALESCE(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d
where
        key = 'D00116'
  and left(st_date,6) = c_monthlist.month_id
group by left(st_date,6);

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010401';
insert into his_bi.level_master_m
select
    left(st_date,6) as month_id,
    'LV00702010401' as level_code ,
COALESCE(count(1),0) as level_value,
    now() as update_time ,
COALESCE(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d
where
        key = 'D00113'
  and left(st_date,6) = c_monthlist.month_id
group by left(st_date,6);

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010501';
insert into his_bi.level_master_m
select
    left(st_date,6) as month_id,
    'LV00702010501' as level_code ,
COALESCE(count(1),0) as level_value,
    now() as update_time ,
COALESCE(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d
where
        key = 'D00117'
  and left(st_date,6) = c_monthlist.month_id
group by left(st_date,6);

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010801';
insert into his_bi.level_master_m
select
   c_monthlist.month_id as month_id,
    'LV00702010801' as level_code ,
COALESCE(count(1),0) as level_value,
    now() as update_time ,
COALESCE(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d
where
        key = 'D00121'
  and left(st_date,6) = c_monthlist.month_id;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010901';
insert into his_bi.level_master_m
select
    left(st_date,6) as month_id,
    'LV00702010901' as level_code ,
COALESCE(count(1),0) as level_value,
    now() as update_time ,
COALESCE(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d
where
        key = 'D00111'
  and left(st_date,6) = c_monthlist.month_id
group by left(st_date,6);

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011001';
insert into his_bi.level_master_m
select
    left(st_date,6) as month_id,
    'LV00702011001' as level_code ,
COALESCE(count(1),0) as level_value,
    now() as update_time ,
COALESCE(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d
where
        key = 'D00106'
  and left(st_date,6) = c_monthlist.month_id
group by left(st_date,6);

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011101';
insert into his_bi.level_master_m
select
    left(st_date,6) as month_id,
    'LV00702011101' as level_code ,
COALESCE(count(1),0) as level_value,
    now() as update_time ,
COALESCE(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d
where
        key = 'D00107'
  and left(st_date,6) = c_monthlist.month_id
group by left(st_date,6);

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011201';
insert into his_bi.level_master_m
select
    left(st_date,6) as month_id,
    'LV00702011201' as level_code ,
COALESCE(count(1),0) as level_value,
    now() as update_time ,
COALESCE(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d
where
        key = 'D00108'
  and left(st_date,6) = c_monthlist.month_id
group by left(st_date,6);

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011301';
insert into his_bi.level_master_m
select
    left(st_date,6) as month_id,
    'LV00702011301' as level_code ,
COALESCE(count(1),0) as level_value,
    now() as update_time ,
COALESCE(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d
where
        key = 'D00109'
  and left(st_date,6) = c_monthlist.month_id
group by left(st_date,6);

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011401';
insert into his_bi.level_master_m
select
    left(st_date,6) as month_id,
    'LV00702011401' as level_code ,
COALESCE(count(1),0) as level_value,
    now() as update_time ,
COALESCE(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d
where
        key = 'D00110'
  and left(st_date,6) = c_monthlist.month_id
group by left(st_date,6);

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011501';
insert into his_bi.level_master_m
select
    left(st_date,6) as month_id,
    'LV00702011501' as level_code ,
COALESCE(count(1),0) as level_value,
    now() as update_time ,
COALESCE(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d
where
        key = 'D00127'
  and left(st_date,6) = c_monthlist.month_id
group by left(st_date,6);

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011601';
insert into his_bi.level_master_m
select
    left(st_date,6) as month_id,
    'LV00702011601' as level_code ,
COALESCE(count(1),0) as level_value,
    now() as update_time ,
COALESCE(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d
where
        key = 'D00128'
  and left(st_date,6) = c_monthlist.month_id
group by left(st_date,6);

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011701';
insert into his_bi.level_master_m
select
    left(st_date,6) as month_id,
    'LV00702011701' as level_code ,
COALESCE(count(1),0) as level_value,
    now() as update_time ,
COALESCE(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d
where
        key = 'D00123'
  and left(st_date,6) = c_monthlist.month_id
group by left(st_date,6);

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011801';
insert into his_bi.level_master_m
select
    left(st_date,6) as month_id,
    'LV00702011801' as level_code ,
COALESCE(count(1),0) as level_value,
    now() as update_time ,
COALESCE(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d
where
        key = 'D00124'
  and left(st_date,6) = c_monthlist.month_id
group by left(st_date,6);

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011901';
insert into his_bi.level_master_m
select
    left(st_date,6) as month_id,
    'LV00702011901' as level_code ,
COALESCE(count(1),0) as level_value,
    now() as update_time ,
COALESCE(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d
where
        key = 'D00125'
  and left(st_date,6) = c_monthlist.month_id
group by left(st_date,6);

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702012021';
insert into his_bi.level_master_m
select
    left(st_date,6) as month_id,
    'LV00702012021' as level_code ,
COALESCE(count(1),0) as level_value,
    now() as update_time ,
COALESCE(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d
where
        key = 'D00126'
  and left(st_date,6) = c_monthlist.month_id
group by left(st_date,6);

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010102';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702010102' as level_code ,
COALESCE(count(1),0) as level_value,
    now() as update_time ,
COALESCE(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00105'
  and left(t1.st_date,6) = c_monthlist.month_id
  and t2.lyfs = '5'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010202';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702010202' as level_code ,
COALESCE(count(1),0) as level_value,
    now() as update_time ,
COALESCE(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00114'
  and left(t1.st_date,6) = c_monthlist.month_id
  and t2.lyfs = '5'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010302';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702010302' as level_code ,
COALESCE(count(1),0) as level_value,
    now() as update_time ,
COALESCE(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00116'
  and left(t1.st_date,6) = c_monthlist.month_id
  and t2.lyfs = '5'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010402';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702010402' as level_code ,
COALESCE(count(1),0) as level_value,
    now() as update_time ,
COALESCE(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00113'
  and left(t1.st_date,6) = c_monthlist.month_id
  and t2.lyfs = '5'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010502';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702010502' as level_code ,
COALESCE(count(1),0) as level_value,
    now() as update_time ,
COALESCE(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00117'
  and left(t1.st_date,6) = c_monthlist.month_id
  and t2.lyfs = '5'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010802';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702010802' as level_code ,
COALESCE(count(1),0) as level_value,
    now() as update_time ,
COALESCE(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00121'
  and left(t1.st_date,6) = c_monthlist.month_id
  and t2.lyfs = '5'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010902';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702010902' as level_code ,
COALESCE(count(1),0) as level_value,
    now() as update_time ,
COALESCE(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00111'
  and left(t1.st_date,6) = c_monthlist.month_id
  and t2.lyfs = '5'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011002';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702011002' as level_code ,
COALESCE(count(1),0) as level_value,
    now() as update_time ,
COALESCE(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00106'
  and left(t1.st_date,6) = c_monthlist.month_id
  and t2.lyfs = '5'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011102';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702011102' as level_code ,
COALESCE(count(1),0) as level_value,
    now() as update_time ,
COALESCE(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00107'
  and left(t1.st_date,6) = c_monthlist.month_id
  and t2.lyfs = '5'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011202';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702011202' as level_code ,
COALESCE(count(1),0) as level_value,
    now() as update_time ,
COALESCE(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00108'
  and left(t1.st_date,6) = c_monthlist.month_id
  and t2.lyfs = '5'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011302';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702011302' as level_code ,
COALESCE(count(1),0) as level_value,
    now() as update_time ,
COALESCE(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00109'
  and left(t1.st_date,6) = c_monthlist.month_id
  and t2.lyfs = '5'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011402';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702011402' as level_code ,
COALESCE(count(1),0) as level_value,
    now() as update_time ,
COALESCE(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00110'
  and left(t1.st_date,6) = c_monthlist.month_id
  and t2.lyfs = '5'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011502';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702011502' as level_code ,
COALESCE(count(1),0) as level_value,
    now() as update_time ,
COALESCE(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00127'
  and left(t1.st_date,6) = c_monthlist.month_id
  and t2.lyfs = '5'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011602';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702011602' as level_code ,
COALESCE(count(1),0) as level_value,
    now() as update_time ,
COALESCE(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00128'
  and left(t1.st_date,6) = c_monthlist.month_id
  and t2.lyfs = '5'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011702';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702011702' as level_code ,
COALESCE(count(1),0) as level_value,
    now() as update_time ,
COALESCE(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00123'
  and left(t1.st_date,6) = c_monthlist.month_id
  and t2.lyfs = '5'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011802';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702011802' as level_code ,
COALESCE(count(1),0) as level_value,
    now() as update_time ,
COALESCE(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00124'
  and left(t1.st_date,6) = c_monthlist.month_id
  and t2.lyfs = '5'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011902';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702011902' as level_code ,
COALESCE(count(1),0) as level_value,
    now() as update_time ,
COALESCE(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00125'
  and left(t1.st_date,6) = c_monthlist.month_id
  and t2.lyfs = '5'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702012022';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702012022' as level_code ,
COALESCE(count(1),0) as level_value,
    now() as update_time ,
COALESCE(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00126'
  and left(t1.st_date,6) = c_monthlist.month_id
  and t2.lyfs = '5'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010103';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702010103' as level_code ,
COALESCE(sum(t2.in_days)/count(1),0) as level_value,
    now() as update_time ,
COALESCE(sum(t2.in_days)/count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00105'
  and left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010203';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702010203' as level_code ,
COALESCE(sum(t2.in_days)/count(1),0) as level_value,
    now() as update_time ,
COALESCE(sum(t2.in_days)/count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00114'
  and left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010303';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702010303' as level_code ,
COALESCE(sum(t2.in_days)/count(1),0) as level_value,
    now() as update_time ,
COALESCE(sum(t2.in_days)/count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00116'
  and left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010403';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702010403' as level_code ,
COALESCE(sum(t2.in_days)/count(1),0) as level_value,
    now() as update_time ,
COALESCE(sum(t2.in_days)/count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00113'
  and left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010503';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702010503' as level_code ,
COALESCE(sum(t2.in_days)/count(1),0) as level_value,
    now() as update_time ,
COALESCE(sum(t2.in_days)/count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00117'
  and left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010803';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702010803' as level_code ,
COALESCE(sum(t2.in_days)/count(1),0) as level_value,
    now() as update_time ,
COALESCE(sum(t2.in_days)/count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00121'
  and left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010903';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702010903' as level_code ,
COALESCE(sum(t2.in_days)/count(1),0) as level_value,
    now() as update_time ,
COALESCE(sum(t2.in_days)/count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00111'
  and left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011003';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702011003' as level_code ,
COALESCE(sum(t2.in_days)/count(1),0) as level_value,
    now() as update_time ,
COALESCE(sum(t2.in_days)/count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00106'
  and left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011103';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702011103' as level_code ,
COALESCE(sum(t2.in_days)/count(1),0) as level_value,
    now() as update_time ,
COALESCE(sum(t2.in_days)/count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00107'
  and left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011203';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702011203' as level_code ,
COALESCE(sum(t2.in_days)/count(1),0) as level_value,
    now() as update_time ,
COALESCE(sum(t2.in_days)/count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00108'
  and left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011303';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702011303' as level_code ,
COALESCE(sum(t2.in_days)/count(1),0) as level_value,
    now() as update_time ,
COALESCE(sum(t2.in_days)/count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00109'
  and left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011403';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702011403' as level_code ,
COALESCE(sum(t2.in_days)/count(1),0) as level_value,
    now() as update_time ,
COALESCE(sum(t2.in_days)/count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00110'
  and left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011503';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702011503' as level_code ,
COALESCE(sum(t2.in_days)/count(1),0) as level_value,
    now() as update_time ,
COALESCE(sum(t2.in_days)/count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00127'
  and left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011603';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702011603' as level_code ,
COALESCE(sum(t2.in_days)/count(1),0) as level_value,
    now() as update_time ,
COALESCE(sum(t2.in_days)/count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00128'
  and left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011703';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702011703' as level_code ,
COALESCE(sum(t2.in_days)/count(1),0) as level_value,
    now() as update_time ,
COALESCE(sum(t2.in_days)/count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00123'
  and left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011803';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702011803' as level_code ,
COALESCE(sum(t2.in_days)/count(1),0) as level_value,
    now() as update_time ,
COALESCE(sum(t2.in_days)/count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00124'
  and left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011903';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702011903' as level_code ,
COALESCE(sum(t2.in_days)/count(1),0) as level_value,
    now() as update_time ,
COALESCE(sum(t2.in_days)/count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00125'
  and left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702012023';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702012023' as level_code ,
COALESCE(sum(t2.in_days)/count(1),0) as level_value,
    now() as update_time ,
COALESCE(sum(t2.in_days)/count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00126'
  and left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010104';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702010104' as level_code ,
COALESCE(round(sum(t2.total_fees)/count(1),4),0) as level_value,
    now() as update_time ,
COALESCE(round(sum(t2.total_fees)/count(1),4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00105'
  and left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010204';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702010204' as level_code ,
COALESCE(round(sum(t2.total_fees)/count(1),4),0) as level_value,
    now() as update_time ,
COALESCE(round(sum(t2.total_fees)/count(1),4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00114'
  and left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010304';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702010304' as level_code ,
COALESCE(round(sum(t2.total_fees)/count(1),4),0) as level_value,
    now() as update_time ,
COALESCE(round(sum(t2.total_fees)/count(1),4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00116'
  and left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010404';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702010404' as level_code ,
COALESCE(round(sum(t2.total_fees)/count(1),4),0) as level_value,
    now() as update_time ,
COALESCE(round(sum(t2.total_fees)/count(1),4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00113'
  and left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010504';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702010504' as level_code ,
COALESCE(round(sum(t2.total_fees)/count(1),4),0) as level_value,
    now() as update_time ,
COALESCE(round(sum(t2.total_fees)/count(1),4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00117'
  and left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010804';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702010804' as level_code ,
COALESCE(round(sum(t2.total_fees)/count(1),4),0) as level_value,
    now() as update_time ,
COALESCE(round(sum(t2.total_fees)/count(1),4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00121'
  and left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010904';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702010904' as level_code ,
COALESCE(round(sum(t2.total_fees)/count(1),4),0) as level_value,
    now() as update_time ,
COALESCE(round(sum(t2.total_fees)/count(1),4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00111'
  and left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011004';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702011004' as level_code ,
COALESCE(round(sum(t2.total_fees)/count(1),4),0) as level_value,
    now() as update_time ,
COALESCE(round(sum(t2.total_fees)/count(1),4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00106'
  and left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011104';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702011104' as level_code ,
COALESCE(round(sum(t2.total_fees)/count(1),4),0) as level_value,
    now() as update_time ,
COALESCE(round(sum(t2.total_fees)/count(1),4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00107'
  and left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011204';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702011204' as level_code ,
COALESCE(round(sum(t2.total_fees)/count(1),4),0) as level_value,
    now() as update_time ,
COALESCE(round(sum(t2.total_fees)/count(1),4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00108'
  and left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011304';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702011304' as level_code ,
COALESCE(round(sum(t2.total_fees)/count(1),4),0) as level_value,
    now() as update_time ,
COALESCE(round(sum(t2.total_fees)/count(1),4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00109'
  and left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011404';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702011404' as level_code ,
COALESCE(round(sum(t2.total_fees)/count(1),4),0) as level_value,
    now() as update_time ,
COALESCE(round(sum(t2.total_fees)/count(1),4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00110'
  and left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011504';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702011504' as level_code ,
COALESCE(round(sum(t2.total_fees)/count(1),4),0) as level_value,
    now() as update_time ,
COALESCE(round(sum(t2.total_fees)/count(1),4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00127'
  and left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011604';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702011604' as level_code ,
COALESCE(round(sum(t2.total_fees)/count(1),4),0) as level_value,
    now() as update_time ,
COALESCE(round(sum(t2.total_fees)/count(1),4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00128'
  and left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011704';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702011704' as level_code ,
COALESCE(round(sum(t2.total_fees)/count(1),4),0) as level_value,
    now() as update_time ,
COALESCE(round(sum(t2.total_fees)/count(1),4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00123'
  and left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011804';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702011804' as level_code ,
COALESCE(round(sum(t2.total_fees)/count(1),4),0) as level_value,
    now() as update_time ,
COALESCE(round(sum(t2.total_fees)/count(1),4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00124'
  and left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011904';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702011904' as level_code ,
COALESCE(round(sum(t2.total_fees)/count(1),4),0) as level_value,
    now() as update_time ,
COALESCE(round(sum(t2.total_fees)/count(1),4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00125'
  and left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702012024';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702012024' as level_code ,
COALESCE(round(sum(t2.total_fees)/count(1),4),0) as level_value,
    now() as update_time ,
COALESCE(round(sum(t2.total_fees)/count(1),4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id
where
        key = 'D00126'
  and left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010106';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702010106' as level_code ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00105' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,
    now() as update_time ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00105' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00215'
where
        left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010206';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702010206' as level_code ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00114' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,
    now() as update_time ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00114' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00215'
where
        left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010306';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702010306' as level_code ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00116' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,
    now() as update_time ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00116' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00215'
where
        left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010406';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702010406' as level_code ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00113' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,
    now() as update_time ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00113' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00215'
where
        left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010506';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702010506' as level_code ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00117' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,
    now() as update_time ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00117' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00215'
where
        left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010806';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702010806' as level_code ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00121' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,
    now() as update_time ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00121' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00215'
where
        left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010906';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702010906' as level_code ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00111' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,
    now() as update_time ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00111' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00215'
where
        left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011006';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702011006' as level_code ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00106' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,
    now() as update_time ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00106' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00215'
where
        left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011106';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702011106' as level_code ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00107' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,
    now() as update_time ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00107' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00215'
where
        left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011206';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702011206' as level_code ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00108' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,
    now() as update_time ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00108' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00215'
where
        left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011306';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702011306' as level_code ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00109' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,
    now() as update_time ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00109' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00215'
where
        left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011406';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702011406' as level_code ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00110' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,
    now() as update_time ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00110' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00215'
where
        left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011506';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702011506' as level_code ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00127' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,
    now() as update_time ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00127' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00215'
where
        left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011606';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702011606' as level_code ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00128' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,
    now() as update_time ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00128' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00215'
where
        left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011706';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702011706' as level_code ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00123' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,
    now() as update_time ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00123' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00215'
where
        left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011806';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702011806' as level_code ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00124' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,
    now() as update_time ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00124' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00215'
where
        left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011906';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702011906' as level_code ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00125' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,
    now() as update_time ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00125' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00215'
where
        left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702012026';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702012026' as level_code ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00126' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,
    now() as update_time ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00126' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00215'
where
        left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010107';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702010107' as level_code ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00105' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,
    now() as update_time ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00105' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00216'
where
        left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010207';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702010207' as level_code ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00114' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,
    now() as update_time ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00114' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00216'
where
        left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010307';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702010307' as level_code ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00116' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,
    now() as update_time ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00116' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00216'
where
        left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010407';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702010407' as level_code ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00113' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,
    now() as update_time ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00113' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00216'
where
        left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010507';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702010507' as level_code ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00117' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,
    now() as update_time ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00117' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00216'
where
        left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010807';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702010807' as level_code ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00121' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,
    now() as update_time ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00121' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00216'
where
        left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010907';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702010907' as level_code ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00111' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,
    now() as update_time ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00111' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00216'
where
        left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011007';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702011007' as level_code ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00106' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,
    now() as update_time ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00106' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00216'
where
        left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011107';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702011107' as level_code ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00107' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,
    now() as update_time ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00107' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00216'
where
        left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011207';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702011207' as level_code ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00108' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,
    now() as update_time ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00108' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00216'
where
        left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011307';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702011307' as level_code ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00109' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,
    now() as update_time ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00109' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00216'
where
        left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011407';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702011407' as level_code ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00110' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,
    now() as update_time ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00110' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00216'
where
        left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011507';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702011507' as level_code ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00127' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,
    now() as update_time ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00127' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00216'
where
        left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011607';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702011607' as level_code ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00128' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,
    now() as update_time ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00128' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00216'
where
        left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011707';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702011707' as level_code ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00123' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,
    now() as update_time ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00123' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00216'
where
        left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011807';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702011807' as level_code ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00124' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,
    now() as update_time ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00124' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00216'
where
        left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011907';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702011907' as level_code ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00125' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,
    now() as update_time ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00125' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00216'
where
        left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702012027';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702012027' as level_code ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00126' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,
    now() as update_time ,
COALESCE(round(coalesce(sum(case when t1.key = 'D00126' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00216'
where
        left(t1.st_date,6) = c_monthlist.month_id
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV007010402';
insert into his_bi.level_master_m
select
    replace(left(stat_date::text,7),'-','') as month_id,
    'LV007010402' as level_code,
    sum(bed_used_ending)/(sum(t1.sy_num)/(DATE_PART('days', DATE_TRUNC('month',t1.stat_date)+ '1 MONTH'::INTERVAL
- '1 DAY'::INTERVAL))) as level_value,
    now() as update_time ,
    sum(bed_used_ending)/(sum(t1.sy_num)/(DATE_PART('days', DATE_TRUNC('month',t1.stat_date)+ '1 MONTH'::INTERVAL
        - '1 DAY'::INTERVAL)))  as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dw_inp_dept_work_d t1
where
        replace(left(stat_date::text,7),'-','')  = c_monthlist.month_id
group by (DATE_PART('days', DATE_TRUNC('month',t1.stat_date)+ '1 MONTH'::INTERVAL
        - '1 DAY'::INTERVAL)),replace(left(stat_date::text,7),'-','');

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020101';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702020101' as level_code ,
COALESCE(count( distinct t1.pai_visit_id),0) as level_value,
    now() as update_time ,
COALESCE(count( distinct t1.pai_visit_id),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00182'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020201';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702020201' as level_code ,
COALESCE(count( distinct t1.pai_visit_id),0) as level_value,
    now() as update_time ,
COALESCE(count( distinct t1.pai_visit_id),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00193'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020301';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702020301' as level_code ,
COALESCE(count( distinct t1.pai_visit_id),0) as level_value,
    now() as update_time ,
COALESCE(count( distinct t1.pai_visit_id),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00194'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020401';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702020401' as level_code ,
COALESCE(count( distinct t1.pai_visit_id),0) as level_value,
    now() as update_time ,
COALESCE(count( distinct t1.pai_visit_id),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00183'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020501';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702020501' as level_code ,
COALESCE(count( distinct t1.pai_visit_id),0) as level_value,
    now() as update_time ,
COALESCE(count( distinct t1.pai_visit_id),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00196'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020601';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702020601' as level_code ,
COALESCE(count( distinct t1.pai_visit_id),0) as level_value,
    now() as update_time ,
COALESCE(count( distinct t1.pai_visit_id),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00197'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020701';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702020701' as level_code ,
COALESCE(count( distinct t1.pai_visit_id),0) as level_value,
    now() as update_time ,
COALESCE(count( distinct t1.pai_visit_id),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00198'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020801';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702020801' as level_code ,
COALESCE(count( distinct t1.pai_visit_id),0) as level_value,
    now() as update_time ,
COALESCE(count( distinct t1.pai_visit_id),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00199'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020901';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702020901' as level_code ,
COALESCE(count( distinct t1.pai_visit_id),0) as level_value,
    now() as update_time ,
COALESCE(count( distinct t1.pai_visit_id),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00200'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702021001';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702021001' as level_code ,
COALESCE(count( distinct t1.pai_visit_id),0) as level_value,
    now() as update_time ,
COALESCE(count( distinct t1.pai_visit_id),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00201'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702021101';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702021101' as level_code ,
COALESCE(count( distinct t1.pai_visit_id),0) as level_value,
    now() as update_time ,
COALESCE(count( distinct t1.pai_visit_id),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00202'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702021201';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702021201' as level_code ,
COALESCE(count( distinct t1.pai_visit_id),0) as level_value,
    now() as update_time ,
COALESCE(count( distinct t1.pai_visit_id),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00203'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702021301';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702021301' as level_code ,
COALESCE(count( distinct t1.pai_visit_id),0) as level_value,
    now() as update_time ,
COALESCE(count( distinct t1.pai_visit_id),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00204'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020102';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702020102' as level_code ,
COALESCE(count( distinct t1.pai_visit_id),0) as level_value,
    now() as update_time ,
COALESCE(count( distinct t1.pai_visit_id),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00182'
  and t2.lyfs = '5'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020202';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702020202' as level_code ,
COALESCE(count( distinct t1.pai_visit_id),0) as level_value,
    now() as update_time ,
COALESCE(count( distinct t1.pai_visit_id),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00193'
  and t2.lyfs = '5'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020302';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702020302' as level_code ,
COALESCE(count( distinct t1.pai_visit_id),0) as level_value,
    now() as update_time ,
COALESCE(count( distinct t1.pai_visit_id),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00194'
  and t2.lyfs = '5'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020402';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702020402' as level_code ,
COALESCE(count( distinct t1.pai_visit_id),0) as level_value,
    now() as update_time ,
COALESCE(count( distinct t1.pai_visit_id),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00183'
  and t2.lyfs = '5'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020502';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702020502' as level_code ,
COALESCE(count( distinct t1.pai_visit_id),0) as level_value,
    now() as update_time ,
COALESCE(count( distinct t1.pai_visit_id),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00196'
  and t2.lyfs = '5'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020602';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702020602' as level_code ,
COALESCE(count( distinct t1.pai_visit_id),0) as level_value,
    now() as update_time ,
COALESCE(count( distinct t1.pai_visit_id),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00197'
  and t2.lyfs = '5'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020702';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702020702' as level_code ,
COALESCE(count( distinct t1.pai_visit_id),0) as level_value,
    now() as update_time ,
COALESCE(count( distinct t1.pai_visit_id),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00198'
  and t2.lyfs = '5'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020802';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702020802' as level_code ,
COALESCE(count( distinct t1.pai_visit_id),0) as level_value,
    now() as update_time ,
COALESCE(count( distinct t1.pai_visit_id),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00199'
  and t2.lyfs = '5'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020902';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702020902' as level_code ,
COALESCE(count( distinct t1.pai_visit_id),0) as level_value,
    now() as update_time ,
COALESCE(count( distinct t1.pai_visit_id),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00200'
  and t2.lyfs = '5'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702021002';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702021002' as level_code ,
COALESCE(count( distinct t1.pai_visit_id),0) as level_value,
    now() as update_time ,
COALESCE(count( distinct t1.pai_visit_id),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00201'
  and t2.lyfs = '5'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702021102';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702021102' as level_code ,
COALESCE(count( distinct t1.pai_visit_id),0) as level_value,
    now() as update_time ,
COALESCE(count( distinct t1.pai_visit_id),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00202'
  and t2.lyfs = '5'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702021202';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702021202' as level_code ,
COALESCE(count( distinct t1.pai_visit_id),0) as level_value,
    now() as update_time ,
COALESCE(count( distinct t1.pai_visit_id),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00203'
  and t2.lyfs = '5'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702021302';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702021302' as level_code ,
COALESCE(count( distinct t1.pai_visit_id),0) as level_value,
    now() as update_time ,
COALESCE(count( distinct t1.pai_visit_id),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00204'
  and t2.lyfs = '5'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020103';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702020103' as level_code ,
COALESCE(sum(t2.in_days)/count(distinct t1.pai_visit_id),0) as level_value,
    now() as update_time ,
COALESCE(sum(t2.in_days)/count(distinct t1.pai_visit_id),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00182'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020203';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702020203' as level_code ,
COALESCE(sum(t2.in_days)/count(distinct t1.pai_visit_id),0) as level_value,
    now() as update_time ,
COALESCE(sum(t2.in_days)/count(distinct t1.pai_visit_id),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00193'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020303';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702020303' as level_code ,
COALESCE(sum(t2.in_days)/count(distinct t1.pai_visit_id),0) as level_value,
    now() as update_time ,
COALESCE(sum(t2.in_days)/count(distinct t1.pai_visit_id),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00194'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020403';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702020403' as level_code ,
COALESCE(sum(t2.in_days)/count(distinct t1.pai_visit_id),0) as level_value,
    now() as update_time ,
COALESCE(sum(t2.in_days)/count(distinct t1.pai_visit_id),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00183'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020503';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702020503' as level_code ,
COALESCE(sum(t2.in_days)/count(distinct t1.pai_visit_id),0) as level_value,
    now() as update_time ,
COALESCE(sum(t2.in_days)/count(distinct t1.pai_visit_id),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00196'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020603';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702020603' as level_code ,
COALESCE(sum(t2.in_days)/count(distinct t1.pai_visit_id),0) as level_value,
    now() as update_time ,
COALESCE(sum(t2.in_days)/count(distinct t1.pai_visit_id),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00197'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020703';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702020703' as level_code ,
COALESCE(sum(t2.in_days)/count(distinct t1.pai_visit_id),0) as level_value,
    now() as update_time ,
COALESCE(sum(t2.in_days)/count(distinct t1.pai_visit_id),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00198'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020803';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702020803' as level_code ,
COALESCE(sum(t2.in_days)/count(distinct t1.pai_visit_id),0) as level_value,
    now() as update_time ,
COALESCE(sum(t2.in_days)/count(distinct t1.pai_visit_id),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00199'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020903';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702020903' as level_code ,
COALESCE(sum(t2.in_days)/count(distinct t1.pai_visit_id),0) as level_value,
    now() as update_time ,
COALESCE(sum(t2.in_days)/count(distinct t1.pai_visit_id),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00200'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702021003';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702021003' as level_code ,
COALESCE(sum(t2.in_days)/count(distinct t1.pai_visit_id),0) as level_value,
    now() as update_time ,
COALESCE(sum(t2.in_days)/count(distinct t1.pai_visit_id),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00201'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702021103';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702021103' as level_code ,
COALESCE(sum(t2.in_days)/count(distinct t1.pai_visit_id),0) as level_value,
    now() as update_time ,
COALESCE(sum(t2.in_days)/count(distinct t1.pai_visit_id),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00202'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702021203';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702021203' as level_code ,
COALESCE(sum(t2.in_days)/count(distinct t1.pai_visit_id),0) as level_value,
    now() as update_time ,
COALESCE(sum(t2.in_days)/count(distinct t1.pai_visit_id),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00203'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702021303';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702021303' as level_code ,
COALESCE(sum(t2.in_days)/count(distinct t1.pai_visit_id),0) as level_value,
    now() as update_time ,
COALESCE(sum(t2.in_days)/count(distinct t1.pai_visit_id),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00204'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020104';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702020104' as level_code ,
COALESCE(round(sum(t2.total_fees)/count(distinct t1.pai_visit_id),4),0) as level_value,
    now() as update_time ,
COALESCE(round(sum(t2.total_fees)/count(distinct t1.pai_visit_id),4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00182'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020204';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702020204' as level_code ,
COALESCE(round(sum(t2.total_fees)/count(distinct t1.pai_visit_id),4),0) as level_value,
    now() as update_time ,
COALESCE(round(sum(t2.total_fees)/count(distinct t1.pai_visit_id),4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00193'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020304';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702020304' as level_code ,
COALESCE(round(sum(t2.total_fees)/count(distinct t1.pai_visit_id),4),0) as level_value,
    now() as update_time ,
COALESCE(round(sum(t2.total_fees)/count(distinct t1.pai_visit_id),4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00194'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020404';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702020404' as level_code ,
COALESCE(round(sum(t2.total_fees)/count(distinct t1.pai_visit_id),4),0) as level_value,
    now() as update_time ,
COALESCE(round(sum(t2.total_fees)/count(distinct t1.pai_visit_id),4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00183'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020504';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702020504' as level_code ,
COALESCE(round(sum(t2.total_fees)/count(distinct t1.pai_visit_id),4),0) as level_value,
    now() as update_time ,
COALESCE(round(sum(t2.total_fees)/count(distinct t1.pai_visit_id),4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00196'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020604';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702020604' as level_code ,
COALESCE(round(sum(t2.total_fees)/count(distinct t1.pai_visit_id),4),0) as level_value,
    now() as update_time ,
COALESCE(round(sum(t2.total_fees)/count(distinct t1.pai_visit_id),4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00197'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020704';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702020704' as level_code ,
COALESCE(round(sum(t2.total_fees)/count(distinct t1.pai_visit_id),4),0) as level_value,
    now() as update_time ,
COALESCE(round(sum(t2.total_fees)/count(distinct t1.pai_visit_id),4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00198'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020804';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702020804' as level_code ,
COALESCE(round(sum(t2.total_fees)/count(distinct t1.pai_visit_id),4),0) as level_value,
    now() as update_time ,
COALESCE(round(sum(t2.total_fees)/count(distinct t1.pai_visit_id),4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00199'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020904';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702020904' as level_code ,
COALESCE(round(sum(t2.total_fees)/count(distinct t1.pai_visit_id),4),0) as level_value,
    now() as update_time ,
COALESCE(round(sum(t2.total_fees)/count(distinct t1.pai_visit_id),4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00200'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702021004';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702021004' as level_code ,
COALESCE(round(sum(t2.total_fees)/count(distinct t1.pai_visit_id),4),0) as level_value,
    now() as update_time ,
COALESCE(round(sum(t2.total_fees)/count(distinct t1.pai_visit_id),4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00201'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702021104';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702021104' as level_code ,
COALESCE(round(sum(t2.total_fees)/count(distinct t1.pai_visit_id),4),0) as level_value,
    now() as update_time ,
COALESCE(round(sum(t2.total_fees)/count(distinct t1.pai_visit_id),4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00202'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702021204';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702021204' as level_code ,
COALESCE(round(sum(t2.total_fees)/count(distinct t1.pai_visit_id),4),0) as level_value,
    now() as update_time ,
COALESCE(round(sum(t2.total_fees)/count(distinct t1.pai_visit_id),4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00203'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702021304';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702021304' as level_code ,
COALESCE(round(sum(t2.total_fees)/count(distinct t1.pai_visit_id),4),0) as level_value,
    now() as update_time ,
COALESCE(round(sum(t2.total_fees)/count(distinct t1.pai_visit_id),4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00204'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020106';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702020106' as level_code ,
COALESCE(count(distinct t1.pai_visit_id),0) as level_value,
    now() as update_time ,
COALESCE(count(distinct t1.pai_visit_id),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key in ('D05024','D5025')
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00182'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020206';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702020206' as level_code ,
COALESCE(count(distinct t1.pai_visit_id),0) as level_value,
    now() as update_time ,
COALESCE(count(distinct t1.pai_visit_id),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key in ('D05024','D5025')
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00193'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020306';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702020306' as level_code ,
COALESCE(count(distinct t1.pai_visit_id),0) as level_value,
    now() as update_time ,
COALESCE(count(distinct t1.pai_visit_id),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key in ('D05024','D5025')
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00194'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020406';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702020406' as level_code ,
COALESCE(count(distinct t1.pai_visit_id),0) as level_value,
    now() as update_time ,
COALESCE(count(distinct t1.pai_visit_id),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key in ('D05024','D5025')
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00183'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020506';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702020506' as level_code ,
COALESCE(count(distinct t1.pai_visit_id),0) as level_value,
    now() as update_time ,
COALESCE(count(distinct t1.pai_visit_id),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key in ('D05024','D5025')
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00196'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020606';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702020606' as level_code ,
COALESCE(count(distinct t1.pai_visit_id),0) as level_value,
    now() as update_time ,
COALESCE(count(distinct t1.pai_visit_id),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key in ('D05024','D5025')
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00197'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020706';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702020706' as level_code ,
COALESCE(count(distinct t1.pai_visit_id),0) as level_value,
    now() as update_time ,
COALESCE(count(distinct t1.pai_visit_id),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key in ('D05024','D5025')
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00198'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020806';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702020806' as level_code ,
COALESCE(count(distinct t1.pai_visit_id),0) as level_value,
    now() as update_time ,
COALESCE(count(distinct t1.pai_visit_id),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key in ('D05024','D5025')
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00199'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020906';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702020906' as level_code ,
COALESCE(count(distinct t1.pai_visit_id),0) as level_value,
    now() as update_time ,
COALESCE(count(distinct t1.pai_visit_id),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key in ('D05024','D5025')
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00200'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702021006';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702021006' as level_code ,
COALESCE(count(distinct t1.pai_visit_id),0) as level_value,
    now() as update_time ,
COALESCE(count(distinct t1.pai_visit_id),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key in ('D05024','D5025')
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00201'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702021106';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702021106' as level_code ,
COALESCE(count(distinct t1.pai_visit_id),0) as level_value,
    now() as update_time ,
COALESCE(count(distinct t1.pai_visit_id),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key in ('D05024','D5025')
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00202'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702021206';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702021206' as level_code ,
COALESCE(count(distinct t1.pai_visit_id),0) as level_value,
    now() as update_time ,
COALESCE(count(distinct t1.pai_visit_id),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key in ('D05024','D5025')
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00203'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702021306';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702021306' as level_code ,
COALESCE(count(distinct t1.pai_visit_id),0) as level_value,
    now() as update_time ,
COALESCE(count(distinct t1.pai_visit_id),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key in ('D05024','D5025')
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00204'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702040301';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702040301' as level_code ,
COALESCE(count(  t1.pai_visit_id),0) as level_value,
    now() as update_time ,
COALESCE(count(  t1.pai_visit_id),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id
where
        t1.key = 'D00048'
  and left(t1.st_date,6)=c_monthlist.month_id
  --and t2.lyfs = '5'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702040302';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702040302' as level_code ,
COALESCE(count(  t1.pai_visit_id),0) as level_value,
    now() as update_time ,
COALESCE(count(  t1.pai_visit_id),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id
where
        t1.key = 'D00044'
  and left(t1.st_date,6)=c_monthlist.month_id
  and t2.lyfs = '5'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702040303';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702040303' as level_code ,
COALESCE(count(  distinct t1.pai_visit_id),0) as level_value,
    now() as update_time ,
COALESCE(count( distinct t1.pai_visit_id),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
     --inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id
where
        t1.key = 'D00226'
  and left(t1.st_date,6)=c_monthlist.month_id
  --and t2.lyfs = '5'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702040307';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702040307' as level_code ,
COALESCE(count(  distinct t1.pai_visit_id),0) as level_value,
    now() as update_time ,
COALESCE(count( distinct t1.pai_visit_id),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
     --inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id
where
        t1.key = 'D00227'
  and left(t1.st_date,6)=c_monthlist.month_id
  --and t2.lyfs = '5'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702040309';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702040309' as level_code ,
COALESCE(count(  distinct t1.pai_visit_id),0) as level_value,
    now() as update_time ,
COALESCE(count( distinct t1.pai_visit_id),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
     --inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id
where
        t1.key = 'D00229'
  and left(t1.st_date,6)=c_monthlist.month_id
  --and t2.lyfs = '5'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702040314';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702040314' as level_code ,
COALESCE(count(  distinct t1.pai_visit_id),0) as level_value,
    now() as update_time ,
COALESCE(count( distinct t1.pai_visit_id),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
     --inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id
where
        t1.key = 'D00228'
  and left(t1.st_date,6)=c_monthlist.month_id
  --and t2.lyfs = '5'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702040401';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702040401' as level_code ,
COALESCE(count(  distinct t1.pai_visit_id),0) as level_value,
    now() as update_time ,
COALESCE(count( distinct t1.pai_visit_id),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
     --inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id
where
        t1.key = 'D00231'
  and left(t1.st_date,6)=c_monthlist.month_id
  --and t2.lyfs = '5'
;
---新生儿产伤占活产婴儿数比例（%）
delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702040402';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702040402' as level_code ,
COALESCE(round((count(t1.pai_visit_id)*1.00 / max(t2.value))*100,4),0) as level_value,
    now() as update_time ,
    round((count(t1.pai_visit_id)*1.00 / max(t2.value))*100,4)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         left join (
    select
        left(st_date,6) as month_id,
        count(1) as value
    from his_bi.dwd_inp_quantity_d
    where
            key = 'D00157'
      and value = '1'
    group by left(st_date,6)
)t2 on left(t1.st_date,6) = t2.month_id
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00231';
---非器械辅助阴道分娩产伤占阴道分娩人数比例（%）
delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702040404';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702040404' as level_code ,
COALESCE(round((count(t1.pai_visit_id)*1.00 / max(t2.value))*100,4),0) as level_value,
    now() as update_time ,
    round((count(t1.pai_visit_id)*1.00 / max(t2.value))*100,4)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         left join (
    select
        left(st_date,6) as month_id,
        count(1) as value
    from his_bi.dwd_inp_quantity_d
    where
            key = 'D00161'
      and value not in('1','2')
    group by left(st_date,6)
)t2 on left(t1.st_date,6) = t2.month_id
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00042';
---器械辅助阴道分娩产伤占阴道分娩人数比例（%）
delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702040406';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702040406' as level_code ,
COALESCE(round((count(t1.pai_visit_id)*1.00 / max(t2.value))*100,4),0) as level_value,
    now() as update_time ,
    round((count(t1.pai_visit_id)*1.00 / max(t2.value))*100,4)  as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         left join (
    select
        left(st_date,6) as month_id,
        count(1) as value
    from his_bi.dwd_inp_quantity_d
    where
            key = 'D00161'
      and value not in('1','2')
    group by left(st_date,6)
)t2 on left(t1.st_date,6) = t2.month_id
where
        left(t1.st_date,6) = c_monthlist.month_id
  and t1.key = 'D00233'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702040403';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702040403' as level_code ,
COALESCE(count(  distinct t1.pai_visit_id),0) as level_value,
    now() as update_time ,
COALESCE(count( distinct t1.pai_visit_id),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
     --inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id
where
        t1.key = 'D00042'
  and left(t1.st_date,6)=c_monthlist.month_id
  --and t2.lyfs = '5'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702040405';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702040405' as level_code ,
COALESCE(count(  distinct t1.pai_visit_id),0) as level_value,
    now() as update_time ,
COALESCE(count( distinct t1.pai_visit_id),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
     --inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id
where
        t1.key = 'D00233'
  and left(t1.st_date,6)=c_monthlist.month_id
  --and t2.lyfs = '5'
;
---手术后伤口裂开、感染占手术人数比例（%）
delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702040304';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702040304' as level_code ,
case when count(distinct t2.pai_visit_id) <> 0 then COALESCE(round(count(  distinct t1.pai_visit_id)*1.00/count(distinct t2.pai_visit_id)*100,4),0) else 0 end as level_value,
    now() as update_time ,
case when count(distinct t2.pai_visit_id) <> 0 then COALESCE(round(count(  distinct t1.pai_visit_id)*1.00/count(distinct t2.pai_visit_id)*100,4),0) else 0 end  as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dwd_inp_medical_d t2 on left(t1.st_date,6) = left(t2.st_date,6) and t2.key='D00048'
where
        t1.key = 'D00226'
  and left(t1.st_date,6)=c_monthlist.month_id
  --and t2.lyfs = '5'
;
---手术后出血或血肿占手术人数比例（%）
delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702040307';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702040307' as level_code ,
case when count(distinct t2.pai_visit_id) <>0 then COALESCE(round(count(  distinct t1.pai_visit_id)*1.00/count(distinct t2.pai_visit_id)*100,4),0) else 0 end as level_value,
    now() as update_time ,
case when count(distinct t2.pai_visit_id) <>0 then COALESCE(round(count(  distinct t1.pai_visit_id)*1.00/count(distinct t2.pai_visit_id)*100,4),0) else 0 end as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dwd_inp_medical_d t2 on left(t1.st_date,6) = left(t2.st_date,6) and t2.key='D00048'
where
        t1.key = 'D00227'
  and left(t1.st_date,6)=c_monthlist.month_id
  --and t2.lyfs = '5'
;
---手术后呼吸衰竭占手术人数比例（%）
delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702040310';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702040310' as level_code ,
case when count(distinct t2.pai_visit_id) <>0 then COALESCE(round(count(  distinct t1.pai_visit_id)*1.00/count(distinct t2.pai_visit_id)*100,4),0) else 0 end as level_value,
    now() as update_time ,
case when count(distinct t2.pai_visit_id) <>0 then COALESCE(round(count(  distinct t1.pai_visit_id)*1.00/count(distinct t2.pai_visit_id)*100,4),0) else 0 end as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
         inner join his_bi.dwd_inp_medical_d t2 on left(t1.st_date,6) = left(t2.st_date,6) and t2.key='D00048'
where
        t1.key = 'D00229'
  and left(t1.st_date,6)=c_monthlist.month_id
  --and t2.lyfs = '5'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702040607';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702040607' as level_code ,
COALESCE(count(  distinct t1.pai_visit_id),0) as level_value,
    now() as update_time ,
COALESCE(count(  distinct t1.pai_visit_id),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
     --inner join his_bi.dwd_inp_medical_d t2 on left(t1.st_date,6) = left(t2.st_date,6) and t2.key='D00048'
where
        t1.key = 'D00121'
  and left(t1.st_date,6)=c_monthlist.month_id
  --and t2.lyfs = '5'
;
---多胎妊娠（非自然）例数
delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702040608';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV00702040608' as level_code ,
COALESCE(count(  distinct t1.pai_visit_id),0) as level_value,
    now() as update_time ,
COALESCE(count(  distinct t1.pai_visit_id),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dwd_inp_medical_d t1
     --inner join his_bi.dwd_inp_medical_d t2 on left(t1.st_date,6) = left(t2.st_date,6) and t2.key='D00048'
where
        t1.key = 'D00107'
  and left(t1.st_date,6)=c_monthlist.month_id
  --and t2.lyfs = '5'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV007010501';
insert into his_bi.level_master_m
select
    t1.month_id as month_id,
    'LV007010501' as level_code ,
COALESCE(t1.kpi_value,0) as level_value,
    now() as update_time ,
    t1.kpi_value   as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX03801';

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV007010502';
insert into his_bi.level_master_m
select
    t1.month_id as month_id,
    'LV007010502' as level_code ,
COALESCE(t1.kpi_value,0) as level_value,
    now() as update_time ,
    t1.kpi_value   as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX03901';

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV007010503';
insert into his_bi.level_master_m
select
    am.month_id as month_id,
    'LV007010503' as level_code,
COALESCE(round(sum(am.total_fees)/count(distinct am.pai_visit_id),5),0) as level_value,
    now() as update_time,
    round(sum(am.total_fees)/count(distinct am.pai_visit_id),5) as self_value,
    null as check_flag,
    null as check_comm
from his_bi.dw_inp_patient_amount_m am
where 1=1
  and am.month_id = c_monthlist.month_id
group by am.month_id;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV007010504';
insert into his_bi.level_master_m
select
    t1.month_id as month_id,
    'LV007010504' as level_code ,
COALESCE(t1.kpi_value,0) as level_value,
    now() as update_time ,
    t1.kpi_value   as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX04101';

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV0070501';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV0070501' as level_code ,
COALESCE(sum(t1.value),0) as level_value,
    now() as update_time ,
COALESCE(sum(t1.value),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.DWD_OUTP_QUANTITY_D t1
--inner join his_bi.dwd_inp_medical_d t2 on left(t1.st_date,6) = left(t2.st_date,6) and t2.key='D00048'
where
        t1.key = 'D00036'
  and left(t1.st_date,6)=c_monthlist.month_id
--and t2.lyfs = '5'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV0070502';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV0070502' as level_code ,
COALESCE(sum(t1.value),0) as level_value,
    now() as update_time ,
COALESCE(sum(t1.value),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.DWD_OUTP_QUANTITY_D t1
--inner join his_bi.dwd_inp_medical_d t2 on left(t1.st_date,6) = left(t2.st_date,6) and t2.key='D00048'
where
        t1.key = 'D00035'
  and left(t1.st_date,6)=c_monthlist.month_id
--and t2.lyfs = '5'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV0070504';
insert into his_bi.level_master_m
select
    c_monthlist.month_id as month_id,
    'LV0070504' as level_code ,
COALESCE(sum(t1.value),0) as level_value,
    now() as update_time ,
COALESCE(sum(t1.value),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.DWD_OUTP_QUANTITY_D t1
--inner join his_bi.dwd_inp_medical_d t2 on left(t1.st_date,6) = left(t2.st_date,6) and t2.key='D00048'
where
        t1.key = 'D00037'
  and left(t1.st_date,6)=c_monthlist.month_id
--and t2.lyfs = '5'
;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV0070507';
insert into his_bi.level_master_m
select
    t1.month_id as month_id,
    'LV0070507' as level_code ,
COALESCE(round(sum(t1.kpi_value)/10000,5),0) as level_value,
    now() as update_time ,
    round(sum(t1.kpi_value)/10000,5) as self_value  ,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code in('JX02701','JX02901')
group by t1.month_id;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV0070506';
insert into his_bi.level_master_m
select
    t1.month_id as month_id,
    'LV0070506' as level_code ,
COALESCE(round(sum(t1.kpi_value)/10000,5),0) as level_value,
    now() as update_time ,
COALESCE(round(sum(t1.kpi_value)/10000,5),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code in('JX03902','JX04102')
group by t1.month_id;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV0070509';
insert into his_bi.level_master_m
select
    t1.month_id,
    'LV0070509' as level_code ,
COALESCE(round(sum(t1.value+t2.value)/10000,5),0) as level_value,
    now() as update_time ,
COALESCE(round(sum(t1.value+t2.value)/10000,5),0) as self_value,
    null as check_flag  ,
    null as check_comm
from
    (select
         left(st_date,6) as month_id,
         sum(value) as value
     from his_bi.DWD_OUTP_INCOME_D
     where key = 'D00025'
     group by left(st_date,6))t1 left join
    (select
         left(st_date,6) as month_id,
         sum(value) as value
     from his_bi.dwd_inp_income_d
     where key = 'D05011'
     group by left(st_date,6)) t2 on t1.month_id = t2.month_id
where
        t1.month_id=c_monthlist.month_id
group by t1.month_id;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV0070514';
insert into his_bi.level_master_m
select
    t1.month_id as month_id,
    'LV0070514' as level_code ,
COALESCE(t1.kpi_value,0) as level_value,
    now() as update_time ,
COALESCE(t1.kpi_value,0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX017';

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV0070515';
insert into his_bi.level_master_m
select
    t1.month_id as month_id,
    'LV0070515' as level_code ,
COALESCE(round((count(case when t1.kjyw_cf_num >0 then 1 end)*1.0/count(distinct t1.outp_visit_id))*100,4),0) as level_value,
    now() as update_time ,
COALESCE(round((count(case when t1.kjyw_cf_num >0 then 1 end)*1.0/count(distinct t1.outp_visit_id))*100,4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.dw_outp_patient_info_m t1
where
        COALESCE(is_tj,0)=0
  and t1.month_id=c_monthlist.month_id
GROUP BY
    t1.month_id;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV0070516';
insert into his_bi.level_master_m
select
    t1.month_id as month_id,
    'LV0070516' as level_code ,
COALESCE(round((count(case when t1.kjyw_cf_num >0 then 1 end)*1.0/count(distinct t1.outp_visit_id))*100,4),0) as level_value,
    now() as update_time ,
COALESCE(round((count(case when t1.kjyw_cf_num >0 then 1 end)*1.0/count(distinct t1.outp_visit_id))*100,4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.dw_outp_patient_info_m t1
where
        COALESCE(is_tj,0)=0
  and t1.month_id=c_monthlist.month_id
  and is_emergency = 1
GROUP BY
    t1.month_id;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV0070517';
insert into his_bi.level_master_m
select
    t1.month_id as month_id,
    'LV0070517' as level_code ,
COALESCE(round((count(case when t1.is_use_sykjyw >0 then 1 end)*1.0/count(distinct t1.pai_visit_id))*100,4),0) as level_value,
    now() as update_time ,
COALESCE(round((count(case when t1.is_use_sykjyw >0 then 1 end)*1.0/count(distinct t1.pai_visit_id))*100,4),0) as self_value,
    null as check_flag  ,
    null as check_comm
from
    his_bi.dw_inp_patient_info_m t1
where
        t1.month_id=c_monthlist.month_id
GROUP BY
    t1.month_id;
---药费收入占医疗总收入比重（%）
delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV0070508';
insert into his_bi.level_master_m
select
    t1.month_id,
    'LV0070508' as kpi_code,
    COALESCE(round(COALESCE(max(t2.level_value),0)/max(t1.level_value),5)*100,0) as kpi_value,
    now() as update_time,
    COALESCE(round(COALESCE(max(t2.level_value),0)/max(t1.level_value),5)*100,0) as self_value,
    null as check_flag,
    null as check_comm
from
    his_bi.level_master_m t1
        left join his_bi.level_master_m t2 on t1.level_code = t2.level_code and t1.month_id = t2.month_id
        and t2.level_code='LV0070506'
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code in('LV0070506','LV0070507')
group by
    t1.month_id;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV007010203';
insert into his_bi.level_master_m
select
    t1.month_id,
    'LV007010203' as level_code ,
COALESCE(count(1),0) as level_value,
    now() as update_time ,
COALESCE(count(1),0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.dw_outp_patient_info_m t1
where
        t1.month_id=c_monthlist.month_id and
        t1.is_keep = '1'
group by month_id;
----抗菌药处方数/每百张门诊处方(%)
delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV0070503';
insert into his_bi.level_master_m
select
    t1.month_id,
    'LV0070503' as kpi_code,
COALESCE(round(COALESCE(max(t2.level_value),0)/max(t1.level_value),5)*100,0) as level_value,
    now() as update_time,
    COALESCE(round(COALESCE(max(t2.level_value),0)/max(t1.level_value),5)*100,0) as self_value,
    null as check_flag,
    null as check_comm
from
    his_bi.level_master_m t1
        left join his_bi.level_master_m t2 on t1.level_code = t2.level_code and t1.month_id = t2.month_id
        and t2.level_code='LV0070501'
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code in('LV0070501','LV0070502')
group by
    t1.month_id;
----注射剂处方数/每百张门诊处方(%)
delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV0070505';
insert into his_bi.level_master_m
select
    t1.month_id,
    'LV0070505' as kpi_code,
COALESCE(round(COALESCE(max(t2.level_value),0)/max(t1.level_value),5)*100,0) as level_value,
    now() as update_time,
    COALESCE(round(COALESCE(max(t2.level_value),0)/max(t1.level_value),5)*100,0) as self_value,
    null as check_flag,
    null as check_comm
from
    his_bi.level_master_m t1
        left join his_bi.level_master_m t2 on t1.level_code = t2.level_code and t1.month_id = t2.month_id
        and t2.level_code='LV0070504'
where
        t1.month_id=c_monthlist.month_id
  and t1.level_code in('LV0070504','LV0070502')
group by
    t1.month_id;

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV007010403';
insert into his_bi.level_master_m
select
    t1.month_id as month_id,
    'LV007010403' as level_code ,
COALESCE(t1.kpi_value,0) as level_value,
    now() as update_time ,
COALESCE(t1.kpi_value,0) as self_value,
    null as check_flag  ,
    null as check_comm
from his_bi.kpi_master_m t1
where
        t1.month_id=c_monthlist.month_id
  and t1.kpi_code='JX080';

delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV007010404';
insert into his_bi.level_master_m
select
    replace(left(stat_date::text,7),'-','') as month_id,
    'LV007010404' as level_code ,
    case when sum(sy_num) = 0 then 0 else (sum(actual_f_num))/(sum(sy_num)/(DATE_PART('days', DATE_TRUNC('month',t1.stat_date)+ '1 MONTH'::INTERVAL
- '1 DAY'::INTERVAL))) end as level_value,
    now() as update_time ,
    case when sum(sy_num) = 0 then 0 else (sum(actual_f_num))/(sum(sy_num)/(DATE_PART('days', DATE_TRUNC('month',t1.stat_date)+ '1 MONTH'::INTERVAL
    - '1 DAY'::INTERVAL))) end as self_value ,
    null as check_flag  ,
    null as check_comm
from his_bi.dw_inp_dept_work_d t1
where
        replace(left(stat_date::text,7),'-','')=c_monthlist.month_id
group by replace(left(stat_date::text,7),'-',''),DATE_PART('days', DATE_TRUNC('month',t1.stat_date)+ '1 MONTH'::INTERVAL
    - '1 DAY'::INTERVAL);

   end loop;
   RETURN 'SUCCESS';  
END;
",['D05011'],"[""delete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV007010201';\rinsert into his_bi.level_master_m\rselect\r    t1.month_id,\r    'LV007010201' as level_code ,\rCOALESCE(count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dw_outp_patient_info_m t1\rwhere\r        t1.month_id=c_monthlist.month_id and\r        coalesce(t1.is_tj,0)=0\rgroup by month_id;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV007010202';\rinsert into his_bi.level_master_m\rselect\r    t1.month_id,\r    'LV007010202' as level_code ,\rCOALESCE(count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dw_outp_patient_info_m t1\rwhere\r        t1.month_id=c_monthlist.month_id and\r        coalesce(t1.is_emergency,0)<>0\rgroup by month_id;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV007010204';\rinsert into his_bi.level_master_m\rselect\r    replace(left(stat_date::text,7),'-','') as month_id,\r    'LV007010204' as level_code ,\rCOALESCE(sum(c_num),0) as level_value,\r    now() as update_time ,\rCOALESCE(sum(c_num),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dw_inp_dept_work_d t1\rwhere\r        replace(left(stat_date::text,7),'-','')=c_monthlist.month_id\rgroup by replace(left(stat_date::text,7),'-','');\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV007010205';\rinsert into his_bi.level_master_m\rselect\r    t1.month_id as month_id,\r    'LV007010205' as level_code ,\rCOALESCE(count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dw_inp_patient_info_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\rgroup by t1.month_id;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV007010206';\rinsert into his_bi.level_master_m\rselect\r    replace(left(stat_date::text,7),'-','') as month_id,\r    'LV007010206' as level_code ,\rCOALESCE(sum(bed_used),0) as level_value,\r    now() as update_time ,\rCOALESCE(sum(bed_used),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dw_inp_dept_work_d t1\rwhere\r        replace(left(stat_date::text,7),'-','')=c_monthlist.month_id\rgroup by replace(left(stat_date::text,7),'-','');\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV007010207';\rinsert into his_bi.level_master_m\rselect\r    t1.month_id as month_id,\r    'LV007010207' as level_code ,\rCOALESCE(count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dw_inp_patient_info_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.is_sshz = '1'\rgroup by t1.month_id;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV007010208';\rinsert into his_bi.level_master_m\rselect\r    t1.month_id as month_id,\r    'LV007010208' as level_code ,\rCOALESCE(count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dw_outp_patient_amount_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.operation_fees >0\rgroup by t1.month_id;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV007010210';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV007010210' as level_code ,\rCOALESCE(count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.DWD_INP_QUANTITY_D t1\rwhere\r        left(t1.st_date,6)=c_monthlist.month_id\r  and t1.key = 'D00159'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV007010211';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV007010211' as level_code ,\rCOALESCE(count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_quantity_d t1\rwhere\r        left(t1.st_date,6)=c_monthlist.month_id\r  and t1.key = 'D00157'\r  and t1.value not in ('2','3')\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV007010302';\rinsert into his_bi.level_master_m\rselect\r    replace(left(t2.cyrq::text,7),'-','')  as month_id,\r    'LV007010302' as level_code ,\rCOALESCE(count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    (select\r         distinct\r         patient_id,\r         visit_id\r     from\r         his_bi.dwd_inp_medical_d\r     where\r             key = 'D00191')t1 inner join his_bi.ods_patient_medical_record t2 on t1.patient_id = t2.bah and  t1.visit_id = t2.zycs\rwhere\r        replace(left(t2.cyrq::text,7),'-','')=c_monthlist.month_id\r  and t2.sqysh = '1'\rgroup by replace(left(t2.cyrq::text,7),'-','') ;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV007010303';\rinsert into his_bi.level_master_m\rselect\r   c_monthlist.month_id,\r    'LV007010303' as level_code ,\rCOALESCE(count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dw_inp_patient_info_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.lyfs='5';\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV007010304';\rinsert into his_bi.level_master_m\rselect\r    t1.month_id,\r    'LV007010304' as level_code ,\rCOALESCE(count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dw_inp_patient_info_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.lyfs<>'4'\rgroup by t1.month_id ;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV007010305';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV007010305' as level_code ,\rCOALESCE(count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dw_inp_patient_info_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.is_sshz = '1';\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV007010306';\rinsert into his_bi.level_master_m\rselect\r    to_char(t1.cyrq,'yyyymm') as month_id,\r    'LV007010306' as level_code ,\rCOALESCE(count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.ods_patient_medical_record t1\r         inner join his_bi.ods_patient_opertion_info t2 on t1.brxh = t2.brxh\rwhere\r        to_char(t1.cyrq,'yyyymm') =c_monthlist.month_id\rgroup by to_char(t1.cyrq,'yyyymm') ;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV007010307';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV007010307' as level_code ,\rCOALESCE(count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dw_inp_patient_info_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.is_sshz = '1'\r  and t1.lyfs='5';\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV007010308';\rinsert into his_bi.level_master_m\rselect\r    t1.month_id as month_id,\r    'LV007010308' as level_code ,\rCOALESCE(count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dw_inp_patient_info_m t1\r         inner join his_bi.ods_patient_medical_record t2 on t1.patient_id = t2.bah and t1.visit_id = t2.zycs\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.is_wzhz = '1'\r  and t2.qjcs<>'0'\rgroup by t1.month_id;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV007010309';\rinsert into his_bi.level_master_m\rselect\r    t1.month_id as month_id,\r    'LV007010309' as level_code ,\rCOALESCE(t2.qjcs,0) as level_value,\r    now() as update_time ,\rCOALESCE(t2.qjcs,0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dw_inp_patient_info_m t1\r         inner join his_bi.ods_patient_medical_record t2 on t1.patient_id = t2.bah and t1.visit_id = t2.zycs\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.is_wzhz = '1'\r  and t2.qjcs<>'0';\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV007010310';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV007010310' as level_code ,\rCOALESCE(count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dw_inp_patient_info_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.is_wzhz = '1'\r  and t1.lyfs='5';\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV007010311';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id,\r    'LV007010311' as level_code ,\rCOALESCE(cast((count(case when t1.value = '2' or t1.value = '3' then 1 end)*1.00/count(1)) as decimal(10,5))*100,0) as level_value,\r    now() as update_time ,\r    cast((count(case when t1.value = '2' or t1.value = '3' then 1 end)*1.00/count(1)) as decimal(10,5))*100  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.dwd_inp_quantity_d t1\rwhere\r        t1.key = 'D00157'\r  and left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV007010312';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV007010312' as level_code ,\rCOALESCE(sum(t2.qjcs),0) as level_value,\r    now() as update_time ,\rCOALESCE(sum(t2.qjcs),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.DWD_INP_QUANTITY_D t1\r         inner join his_bi.ods_patient_medical_record t2 on t1.patient_id = t2.bah and t1.visit_id = t2.zycs\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00159'\r  and coalesce(t2.qjcs,0)<>0\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV007010313';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV007010313' as level_code ,\rCOALESCE(count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.DWD_INP_QUANTITY_D t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00159'\r  and t2.is_wzhz = '1'\r  and coalesce(t2.lyfs::text,'0')='5'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV007010401';\rinsert into his_bi.level_master_m\rselect\r    t1.month_id as month_id,\r    'LV007010401' as level_code ,\rCOALESCE(sum(t1.in_days)/count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(sum(t1.in_days)/count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dw_inp_patient_info_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\rgroup by t1.month_id;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010101';\rinsert into his_bi.level_master_m\rselect\r    left(st_date,6) as month_id,\r    'LV00702010101' as level_code ,\rCOALESCE(count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d\rwhere\r        key = 'D00105'\r  and left(st_date,6) = c_monthlist.month_id\rgroup by left(st_date,6);\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010201';\rinsert into his_bi.level_master_m\rselect\r    left(st_date,6) as month_id,\r    'LV00702010201' as level_code ,\rCOALESCE(count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d\rwhere\r        key = 'D00114'\r  and left(st_date,6) = c_monthlist.month_id\rgroup by left(st_date,6);\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010301';\rinsert into his_bi.level_master_m\rselect\r    left(st_date,6) as month_id,\r    'LV00702010301' as level_code ,\rCOALESCE(count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d\rwhere\r        key = 'D00116'\r  and left(st_date,6) = c_monthlist.month_id\rgroup by left(st_date,6);\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010401';\rinsert into his_bi.level_master_m\rselect\r    left(st_date,6) as month_id,\r    'LV00702010401' as level_code ,\rCOALESCE(count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d\rwhere\r        key = 'D00113'\r  and left(st_date,6) = c_monthlist.month_id\rgroup by left(st_date,6);\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010501';\rinsert into his_bi.level_master_m\rselect\r    left(st_date,6) as month_id,\r    'LV00702010501' as level_code ,\rCOALESCE(count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d\rwhere\r        key = 'D00117'\r  and left(st_date,6) = c_monthlist.month_id\rgroup by left(st_date,6);\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010801';\rinsert into his_bi.level_master_m\rselect\r   c_monthlist.month_id as month_id,\r    'LV00702010801' as level_code ,\rCOALESCE(count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d\rwhere\r        key = 'D00121'\r  and left(st_date,6) = c_monthlist.month_id;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010901';\rinsert into his_bi.level_master_m\rselect\r    left(st_date,6) as month_id,\r    'LV00702010901' as level_code ,\rCOALESCE(count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d\rwhere\r        key = 'D00111'\r  and left(st_date,6) = c_monthlist.month_id\rgroup by left(st_date,6);\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011001';\rinsert into his_bi.level_master_m\rselect\r    left(st_date,6) as month_id,\r    'LV00702011001' as level_code ,\rCOALESCE(count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d\rwhere\r        key = 'D00106'\r  and left(st_date,6) = c_monthlist.month_id\rgroup by left(st_date,6);\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011101';\rinsert into his_bi.level_master_m\rselect\r    left(st_date,6) as month_id,\r    'LV00702011101' as level_code ,\rCOALESCE(count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d\rwhere\r        key = 'D00107'\r  and left(st_date,6) = c_monthlist.month_id\rgroup by left(st_date,6);\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011201';\rinsert into his_bi.level_master_m\rselect\r    left(st_date,6) as month_id,\r    'LV00702011201' as level_code ,\rCOALESCE(count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d\rwhere\r        key = 'D00108'\r  and left(st_date,6) = c_monthlist.month_id\rgroup by left(st_date,6);\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011301';\rinsert into his_bi.level_master_m\rselect\r    left(st_date,6) as month_id,\r    'LV00702011301' as level_code ,\rCOALESCE(count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d\rwhere\r        key = 'D00109'\r  and left(st_date,6) = c_monthlist.month_id\rgroup by left(st_date,6);\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011401';\rinsert into his_bi.level_master_m\rselect\r    left(st_date,6) as month_id,\r    'LV00702011401' as level_code ,\rCOALESCE(count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d\rwhere\r        key = 'D00110'\r  and left(st_date,6) = c_monthlist.month_id\rgroup by left(st_date,6);\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011501';\rinsert into his_bi.level_master_m\rselect\r    left(st_date,6) as month_id,\r    'LV00702011501' as level_code ,\rCOALESCE(count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d\rwhere\r        key = 'D00127'\r  and left(st_date,6) = c_monthlist.month_id\rgroup by left(st_date,6);\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011601';\rinsert into his_bi.level_master_m\rselect\r    left(st_date,6) as month_id,\r    'LV00702011601' as level_code ,\rCOALESCE(count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d\rwhere\r        key = 'D00128'\r  and left(st_date,6) = c_monthlist.month_id\rgroup by left(st_date,6);\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011701';\rinsert into his_bi.level_master_m\rselect\r    left(st_date,6) as month_id,\r    'LV00702011701' as level_code ,\rCOALESCE(count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d\rwhere\r        key = 'D00123'\r  and left(st_date,6) = c_monthlist.month_id\rgroup by left(st_date,6);\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011801';\rinsert into his_bi.level_master_m\rselect\r    left(st_date,6) as month_id,\r    'LV00702011801' as level_code ,\rCOALESCE(count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d\rwhere\r        key = 'D00124'\r  and left(st_date,6) = c_monthlist.month_id\rgroup by left(st_date,6);\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011901';\rinsert into his_bi.level_master_m\rselect\r    left(st_date,6) as month_id,\r    'LV00702011901' as level_code ,\rCOALESCE(count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d\rwhere\r        key = 'D00125'\r  and left(st_date,6) = c_monthlist.month_id\rgroup by left(st_date,6);\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702012021';\rinsert into his_bi.level_master_m\rselect\r    left(st_date,6) as month_id,\r    'LV00702012021' as level_code ,\rCOALESCE(count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d\rwhere\r        key = 'D00126'\r  and left(st_date,6) = c_monthlist.month_id\rgroup by left(st_date,6);\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010102';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702010102' as level_code ,\rCOALESCE(count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00105'\r  and left(t1.st_date,6) = c_monthlist.month_id\r  and t2.lyfs = '5'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010202';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702010202' as level_code ,\rCOALESCE(count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00114'\r  and left(t1.st_date,6) = c_monthlist.month_id\r  and t2.lyfs = '5'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010302';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702010302' as level_code ,\rCOALESCE(count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00116'\r  and left(t1.st_date,6) = c_monthlist.month_id\r  and t2.lyfs = '5'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010402';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702010402' as level_code ,\rCOALESCE(count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00113'\r  and left(t1.st_date,6) = c_monthlist.month_id\r  and t2.lyfs = '5'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010502';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702010502' as level_code ,\rCOALESCE(count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00117'\r  and left(t1.st_date,6) = c_monthlist.month_id\r  and t2.lyfs = '5'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010802';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702010802' as level_code ,\rCOALESCE(count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00121'\r  and left(t1.st_date,6) = c_monthlist.month_id\r  and t2.lyfs = '5'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010902';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702010902' as level_code ,\rCOALESCE(count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00111'\r  and left(t1.st_date,6) = c_monthlist.month_id\r  and t2.lyfs = '5'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011002';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702011002' as level_code ,\rCOALESCE(count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00106'\r  and left(t1.st_date,6) = c_monthlist.month_id\r  and t2.lyfs = '5'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011102';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702011102' as level_code ,\rCOALESCE(count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00107'\r  and left(t1.st_date,6) = c_monthlist.month_id\r  and t2.lyfs = '5'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011202';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702011202' as level_code ,\rCOALESCE(count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00108'\r  and left(t1.st_date,6) = c_monthlist.month_id\r  and t2.lyfs = '5'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011302';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702011302' as level_code ,\rCOALESCE(count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00109'\r  and left(t1.st_date,6) = c_monthlist.month_id\r  and t2.lyfs = '5'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011402';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702011402' as level_code ,\rCOALESCE(count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00110'\r  and left(t1.st_date,6) = c_monthlist.month_id\r  and t2.lyfs = '5'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011502';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702011502' as level_code ,\rCOALESCE(count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00127'\r  and left(t1.st_date,6) = c_monthlist.month_id\r  and t2.lyfs = '5'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011602';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702011602' as level_code ,\rCOALESCE(count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00128'\r  and left(t1.st_date,6) = c_monthlist.month_id\r  and t2.lyfs = '5'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011702';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702011702' as level_code ,\rCOALESCE(count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00123'\r  and left(t1.st_date,6) = c_monthlist.month_id\r  and t2.lyfs = '5'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011802';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702011802' as level_code ,\rCOALESCE(count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00124'\r  and left(t1.st_date,6) = c_monthlist.month_id\r  and t2.lyfs = '5'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011902';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702011902' as level_code ,\rCOALESCE(count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00125'\r  and left(t1.st_date,6) = c_monthlist.month_id\r  and t2.lyfs = '5'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702012022';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702012022' as level_code ,\rCOALESCE(count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00126'\r  and left(t1.st_date,6) = c_monthlist.month_id\r  and t2.lyfs = '5'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010103';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702010103' as level_code ,\rCOALESCE(sum(t2.in_days)/count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(sum(t2.in_days)/count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00105'\r  and left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010203';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702010203' as level_code ,\rCOALESCE(sum(t2.in_days)/count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(sum(t2.in_days)/count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00114'\r  and left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010303';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702010303' as level_code ,\rCOALESCE(sum(t2.in_days)/count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(sum(t2.in_days)/count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00116'\r  and left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010403';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702010403' as level_code ,\rCOALESCE(sum(t2.in_days)/count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(sum(t2.in_days)/count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00113'\r  and left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010503';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702010503' as level_code ,\rCOALESCE(sum(t2.in_days)/count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(sum(t2.in_days)/count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00117'\r  and left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010803';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702010803' as level_code ,\rCOALESCE(sum(t2.in_days)/count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(sum(t2.in_days)/count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00121'\r  and left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010903';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702010903' as level_code ,\rCOALESCE(sum(t2.in_days)/count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(sum(t2.in_days)/count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00111'\r  and left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011003';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702011003' as level_code ,\rCOALESCE(sum(t2.in_days)/count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(sum(t2.in_days)/count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00106'\r  and left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011103';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702011103' as level_code ,\rCOALESCE(sum(t2.in_days)/count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(sum(t2.in_days)/count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00107'\r  and left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011203';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702011203' as level_code ,\rCOALESCE(sum(t2.in_days)/count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(sum(t2.in_days)/count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00108'\r  and left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011303';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702011303' as level_code ,\rCOALESCE(sum(t2.in_days)/count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(sum(t2.in_days)/count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00109'\r  and left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011403';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702011403' as level_code ,\rCOALESCE(sum(t2.in_days)/count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(sum(t2.in_days)/count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00110'\r  and left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011503';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702011503' as level_code ,\rCOALESCE(sum(t2.in_days)/count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(sum(t2.in_days)/count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00127'\r  and left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011603';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702011603' as level_code ,\rCOALESCE(sum(t2.in_days)/count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(sum(t2.in_days)/count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00128'\r  and left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011703';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702011703' as level_code ,\rCOALESCE(sum(t2.in_days)/count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(sum(t2.in_days)/count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00123'\r  and left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011803';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702011803' as level_code ,\rCOALESCE(sum(t2.in_days)/count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(sum(t2.in_days)/count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00124'\r  and left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011903';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702011903' as level_code ,\rCOALESCE(sum(t2.in_days)/count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(sum(t2.in_days)/count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00125'\r  and left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702012023';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702012023' as level_code ,\rCOALESCE(sum(t2.in_days)/count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(sum(t2.in_days)/count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00126'\r  and left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010104';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702010104' as level_code ,\rCOALESCE(round(sum(t2.total_fees)/count(1),4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(sum(t2.total_fees)/count(1),4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00105'\r  and left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010204';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702010204' as level_code ,\rCOALESCE(round(sum(t2.total_fees)/count(1),4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(sum(t2.total_fees)/count(1),4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00114'\r  and left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010304';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702010304' as level_code ,\rCOALESCE(round(sum(t2.total_fees)/count(1),4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(sum(t2.total_fees)/count(1),4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00116'\r  and left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010404';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702010404' as level_code ,\rCOALESCE(round(sum(t2.total_fees)/count(1),4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(sum(t2.total_fees)/count(1),4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00113'\r  and left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010504';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702010504' as level_code ,\rCOALESCE(round(sum(t2.total_fees)/count(1),4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(sum(t2.total_fees)/count(1),4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00117'\r  and left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010804';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702010804' as level_code ,\rCOALESCE(round(sum(t2.total_fees)/count(1),4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(sum(t2.total_fees)/count(1),4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00121'\r  and left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010904';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702010904' as level_code ,\rCOALESCE(round(sum(t2.total_fees)/count(1),4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(sum(t2.total_fees)/count(1),4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00111'\r  and left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011004';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702011004' as level_code ,\rCOALESCE(round(sum(t2.total_fees)/count(1),4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(sum(t2.total_fees)/count(1),4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00106'\r  and left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011104';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702011104' as level_code ,\rCOALESCE(round(sum(t2.total_fees)/count(1),4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(sum(t2.total_fees)/count(1),4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00107'\r  and left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011204';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702011204' as level_code ,\rCOALESCE(round(sum(t2.total_fees)/count(1),4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(sum(t2.total_fees)/count(1),4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00108'\r  and left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011304';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702011304' as level_code ,\rCOALESCE(round(sum(t2.total_fees)/count(1),4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(sum(t2.total_fees)/count(1),4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00109'\r  and left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011404';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702011404' as level_code ,\rCOALESCE(round(sum(t2.total_fees)/count(1),4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(sum(t2.total_fees)/count(1),4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00110'\r  and left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011504';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702011504' as level_code ,\rCOALESCE(round(sum(t2.total_fees)/count(1),4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(sum(t2.total_fees)/count(1),4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00127'\r  and left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011604';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702011604' as level_code ,\rCOALESCE(round(sum(t2.total_fees)/count(1),4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(sum(t2.total_fees)/count(1),4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00128'\r  and left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011704';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702011704' as level_code ,\rCOALESCE(round(sum(t2.total_fees)/count(1),4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(sum(t2.total_fees)/count(1),4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00123'\r  and left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011804';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702011804' as level_code ,\rCOALESCE(round(sum(t2.total_fees)/count(1),4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(sum(t2.total_fees)/count(1),4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00124'\r  and left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011904';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702011904' as level_code ,\rCOALESCE(round(sum(t2.total_fees)/count(1),4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(sum(t2.total_fees)/count(1),4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00125'\r  and left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702012024';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702012024' as level_code ,\rCOALESCE(round(sum(t2.total_fees)/count(1),4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(sum(t2.total_fees)/count(1),4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.patient_id = t2.patient_id and t1.visit_id = t2.visit_id\rwhere\r        key = 'D00126'\r  and left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010106';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702010106' as level_code ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00105' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00105' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00215'\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010206';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702010206' as level_code ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00114' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00114' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00215'\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010306';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702010306' as level_code ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00116' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00116' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00215'\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010406';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702010406' as level_code ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00113' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00113' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00215'\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010506';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702010506' as level_code ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00117' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00117' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00215'\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010806';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702010806' as level_code ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00121' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00121' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00215'\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010906';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702010906' as level_code ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00111' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00111' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00215'\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011006';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702011006' as level_code ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00106' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00106' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00215'\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011106';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702011106' as level_code ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00107' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00107' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00215'\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011206';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702011206' as level_code ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00108' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00108' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00215'\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011306';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702011306' as level_code ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00109' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00109' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00215'\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011406';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702011406' as level_code ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00110' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00110' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00215'\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011506';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702011506' as level_code ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00127' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00127' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00215'\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011606';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702011606' as level_code ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00128' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00128' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00215'\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011706';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702011706' as level_code ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00123' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00123' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00215'\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011806';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702011806' as level_code ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00124' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00124' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00215'\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011906';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702011906' as level_code ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00125' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00125' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00215'\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702012026';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702012026' as level_code ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00126' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00126' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00215'\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010107';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702010107' as level_code ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00105' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00105' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00216'\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010207';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702010207' as level_code ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00114' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00114' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00216'\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010307';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702010307' as level_code ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00116' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00116' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00216'\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010407';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702010407' as level_code ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00113' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00113' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00216'\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010507';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702010507' as level_code ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00117' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00117' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00216'\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010807';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702010807' as level_code ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00121' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00121' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00216'\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702010907';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702010907' as level_code ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00111' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00111' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00216'\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011007';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702011007' as level_code ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00106' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00106' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00216'\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011107';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702011107' as level_code ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00107' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00107' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00216'\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011207';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702011207' as level_code ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00108' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00108' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00216'\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011307';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702011307' as level_code ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00109' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00109' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00216'\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011407';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702011407' as level_code ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00110' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00110' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00216'\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011507';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702011507' as level_code ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00127' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00127' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00216'\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011607';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702011607' as level_code ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00128' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00128' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00216'\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011707';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702011707' as level_code ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00123' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00123' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00216'\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011807';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702011807' as level_code ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00124' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00124' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00216'\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702011907';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702011907' as level_code ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00125' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00125' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00216'\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702012027';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702012027' as level_code ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00126' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(coalesce(sum(case when t1.key = 'D00126' then 1 end)*1.00/ count(t2.pai_visit_id),0)*100,4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key = 'D00216'\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV007010402';\rinsert into his_bi.level_master_m\rselect\r    replace(left(stat_date::text,7),'-','') as month_id,\r    'LV007010402' as level_code,\r    sum(bed_used_ending)/(sum(t1.sy_num)/(DATE_PART('days', DATE_TRUNC('month',t1.stat_date)+ '1 MONTH'::INTERVAL\r- '1 DAY'::INTERVAL))) as level_value,\r    now() as update_time ,\r    sum(bed_used_ending)/(sum(t1.sy_num)/(DATE_PART('days', DATE_TRUNC('month',t1.stat_date)+ '1 MONTH'::INTERVAL\r        - '1 DAY'::INTERVAL)))  as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dw_inp_dept_work_d t1\rwhere\r        replace(left(stat_date::text,7),'-','')  = c_monthlist.month_id\rgroup by (DATE_PART('days', DATE_TRUNC('month',t1.stat_date)+ '1 MONTH'::INTERVAL\r        - '1 DAY'::INTERVAL)),replace(left(stat_date::text,7),'-','');\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020101';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702020101' as level_code ,\rCOALESCE(count( distinct t1.pai_visit_id),0) as level_value,\r    now() as update_time ,\rCOALESCE(count( distinct t1.pai_visit_id),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00182'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020201';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702020201' as level_code ,\rCOALESCE(count( distinct t1.pai_visit_id),0) as level_value,\r    now() as update_time ,\rCOALESCE(count( distinct t1.pai_visit_id),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00193'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020301';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702020301' as level_code ,\rCOALESCE(count( distinct t1.pai_visit_id),0) as level_value,\r    now() as update_time ,\rCOALESCE(count( distinct t1.pai_visit_id),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00194'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020401';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702020401' as level_code ,\rCOALESCE(count( distinct t1.pai_visit_id),0) as level_value,\r    now() as update_time ,\rCOALESCE(count( distinct t1.pai_visit_id),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00183'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020501';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702020501' as level_code ,\rCOALESCE(count( distinct t1.pai_visit_id),0) as level_value,\r    now() as update_time ,\rCOALESCE(count( distinct t1.pai_visit_id),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00196'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020601';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702020601' as level_code ,\rCOALESCE(count( distinct t1.pai_visit_id),0) as level_value,\r    now() as update_time ,\rCOALESCE(count( distinct t1.pai_visit_id),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00197'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020701';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702020701' as level_code ,\rCOALESCE(count( distinct t1.pai_visit_id),0) as level_value,\r    now() as update_time ,\rCOALESCE(count( distinct t1.pai_visit_id),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00198'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020801';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702020801' as level_code ,\rCOALESCE(count( distinct t1.pai_visit_id),0) as level_value,\r    now() as update_time ,\rCOALESCE(count( distinct t1.pai_visit_id),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00199'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020901';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702020901' as level_code ,\rCOALESCE(count( distinct t1.pai_visit_id),0) as level_value,\r    now() as update_time ,\rCOALESCE(count( distinct t1.pai_visit_id),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00200'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702021001';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702021001' as level_code ,\rCOALESCE(count( distinct t1.pai_visit_id),0) as level_value,\r    now() as update_time ,\rCOALESCE(count( distinct t1.pai_visit_id),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00201'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702021101';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702021101' as level_code ,\rCOALESCE(count( distinct t1.pai_visit_id),0) as level_value,\r    now() as update_time ,\rCOALESCE(count( distinct t1.pai_visit_id),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00202'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702021201';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702021201' as level_code ,\rCOALESCE(count( distinct t1.pai_visit_id),0) as level_value,\r    now() as update_time ,\rCOALESCE(count( distinct t1.pai_visit_id),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00203'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702021301';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702021301' as level_code ,\rCOALESCE(count( distinct t1.pai_visit_id),0) as level_value,\r    now() as update_time ,\rCOALESCE(count( distinct t1.pai_visit_id),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00204'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020102';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702020102' as level_code ,\rCOALESCE(count( distinct t1.pai_visit_id),0) as level_value,\r    now() as update_time ,\rCOALESCE(count( distinct t1.pai_visit_id),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00182'\r  and t2.lyfs = '5'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020202';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702020202' as level_code ,\rCOALESCE(count( distinct t1.pai_visit_id),0) as level_value,\r    now() as update_time ,\rCOALESCE(count( distinct t1.pai_visit_id),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00193'\r  and t2.lyfs = '5'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020302';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702020302' as level_code ,\rCOALESCE(count( distinct t1.pai_visit_id),0) as level_value,\r    now() as update_time ,\rCOALESCE(count( distinct t1.pai_visit_id),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00194'\r  and t2.lyfs = '5'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020402';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702020402' as level_code ,\rCOALESCE(count( distinct t1.pai_visit_id),0) as level_value,\r    now() as update_time ,\rCOALESCE(count( distinct t1.pai_visit_id),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00183'\r  and t2.lyfs = '5'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020502';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702020502' as level_code ,\rCOALESCE(count( distinct t1.pai_visit_id),0) as level_value,\r    now() as update_time ,\rCOALESCE(count( distinct t1.pai_visit_id),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00196'\r  and t2.lyfs = '5'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020602';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702020602' as level_code ,\rCOALESCE(count( distinct t1.pai_visit_id),0) as level_value,\r    now() as update_time ,\rCOALESCE(count( distinct t1.pai_visit_id),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00197'\r  and t2.lyfs = '5'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020702';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702020702' as level_code ,\rCOALESCE(count( distinct t1.pai_visit_id),0) as level_value,\r    now() as update_time ,\rCOALESCE(count( distinct t1.pai_visit_id),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00198'\r  and t2.lyfs = '5'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020802';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702020802' as level_code ,\rCOALESCE(count( distinct t1.pai_visit_id),0) as level_value,\r    now() as update_time ,\rCOALESCE(count( distinct t1.pai_visit_id),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00199'\r  and t2.lyfs = '5'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020902';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702020902' as level_code ,\rCOALESCE(count( distinct t1.pai_visit_id),0) as level_value,\r    now() as update_time ,\rCOALESCE(count( distinct t1.pai_visit_id),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00200'\r  and t2.lyfs = '5'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702021002';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702021002' as level_code ,\rCOALESCE(count( distinct t1.pai_visit_id),0) as level_value,\r    now() as update_time ,\rCOALESCE(count( distinct t1.pai_visit_id),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00201'\r  and t2.lyfs = '5'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702021102';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702021102' as level_code ,\rCOALESCE(count( distinct t1.pai_visit_id),0) as level_value,\r    now() as update_time ,\rCOALESCE(count( distinct t1.pai_visit_id),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00202'\r  and t2.lyfs = '5'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702021202';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702021202' as level_code ,\rCOALESCE(count( distinct t1.pai_visit_id),0) as level_value,\r    now() as update_time ,\rCOALESCE(count( distinct t1.pai_visit_id),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00203'\r  and t2.lyfs = '5'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702021302';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702021302' as level_code ,\rCOALESCE(count( distinct t1.pai_visit_id),0) as level_value,\r    now() as update_time ,\rCOALESCE(count( distinct t1.pai_visit_id),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00204'\r  and t2.lyfs = '5'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020103';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702020103' as level_code ,\rCOALESCE(sum(t2.in_days)/count(distinct t1.pai_visit_id),0) as level_value,\r    now() as update_time ,\rCOALESCE(sum(t2.in_days)/count(distinct t1.pai_visit_id),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00182'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020203';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702020203' as level_code ,\rCOALESCE(sum(t2.in_days)/count(distinct t1.pai_visit_id),0) as level_value,\r    now() as update_time ,\rCOALESCE(sum(t2.in_days)/count(distinct t1.pai_visit_id),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00193'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020303';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702020303' as level_code ,\rCOALESCE(sum(t2.in_days)/count(distinct t1.pai_visit_id),0) as level_value,\r    now() as update_time ,\rCOALESCE(sum(t2.in_days)/count(distinct t1.pai_visit_id),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00194'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020403';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702020403' as level_code ,\rCOALESCE(sum(t2.in_days)/count(distinct t1.pai_visit_id),0) as level_value,\r    now() as update_time ,\rCOALESCE(sum(t2.in_days)/count(distinct t1.pai_visit_id),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00183'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020503';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702020503' as level_code ,\rCOALESCE(sum(t2.in_days)/count(distinct t1.pai_visit_id),0) as level_value,\r    now() as update_time ,\rCOALESCE(sum(t2.in_days)/count(distinct t1.pai_visit_id),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00196'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020603';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702020603' as level_code ,\rCOALESCE(sum(t2.in_days)/count(distinct t1.pai_visit_id),0) as level_value,\r    now() as update_time ,\rCOALESCE(sum(t2.in_days)/count(distinct t1.pai_visit_id),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00197'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020703';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702020703' as level_code ,\rCOALESCE(sum(t2.in_days)/count(distinct t1.pai_visit_id),0) as level_value,\r    now() as update_time ,\rCOALESCE(sum(t2.in_days)/count(distinct t1.pai_visit_id),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00198'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020803';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702020803' as level_code ,\rCOALESCE(sum(t2.in_days)/count(distinct t1.pai_visit_id),0) as level_value,\r    now() as update_time ,\rCOALESCE(sum(t2.in_days)/count(distinct t1.pai_visit_id),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00199'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020903';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702020903' as level_code ,\rCOALESCE(sum(t2.in_days)/count(distinct t1.pai_visit_id),0) as level_value,\r    now() as update_time ,\rCOALESCE(sum(t2.in_days)/count(distinct t1.pai_visit_id),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00200'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702021003';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702021003' as level_code ,\rCOALESCE(sum(t2.in_days)/count(distinct t1.pai_visit_id),0) as level_value,\r    now() as update_time ,\rCOALESCE(sum(t2.in_days)/count(distinct t1.pai_visit_id),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00201'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702021103';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702021103' as level_code ,\rCOALESCE(sum(t2.in_days)/count(distinct t1.pai_visit_id),0) as level_value,\r    now() as update_time ,\rCOALESCE(sum(t2.in_days)/count(distinct t1.pai_visit_id),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00202'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702021203';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702021203' as level_code ,\rCOALESCE(sum(t2.in_days)/count(distinct t1.pai_visit_id),0) as level_value,\r    now() as update_time ,\rCOALESCE(sum(t2.in_days)/count(distinct t1.pai_visit_id),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00203'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702021303';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702021303' as level_code ,\rCOALESCE(sum(t2.in_days)/count(distinct t1.pai_visit_id),0) as level_value,\r    now() as update_time ,\rCOALESCE(sum(t2.in_days)/count(distinct t1.pai_visit_id),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00204'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020104';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702020104' as level_code ,\rCOALESCE(round(sum(t2.total_fees)/count(distinct t1.pai_visit_id),4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(sum(t2.total_fees)/count(distinct t1.pai_visit_id),4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00182'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020204';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702020204' as level_code ,\rCOALESCE(round(sum(t2.total_fees)/count(distinct t1.pai_visit_id),4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(sum(t2.total_fees)/count(distinct t1.pai_visit_id),4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00193'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020304';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702020304' as level_code ,\rCOALESCE(round(sum(t2.total_fees)/count(distinct t1.pai_visit_id),4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(sum(t2.total_fees)/count(distinct t1.pai_visit_id),4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00194'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020404';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702020404' as level_code ,\rCOALESCE(round(sum(t2.total_fees)/count(distinct t1.pai_visit_id),4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(sum(t2.total_fees)/count(distinct t1.pai_visit_id),4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00183'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020504';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702020504' as level_code ,\rCOALESCE(round(sum(t2.total_fees)/count(distinct t1.pai_visit_id),4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(sum(t2.total_fees)/count(distinct t1.pai_visit_id),4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00196'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020604';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702020604' as level_code ,\rCOALESCE(round(sum(t2.total_fees)/count(distinct t1.pai_visit_id),4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(sum(t2.total_fees)/count(distinct t1.pai_visit_id),4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00197'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020704';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702020704' as level_code ,\rCOALESCE(round(sum(t2.total_fees)/count(distinct t1.pai_visit_id),4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(sum(t2.total_fees)/count(distinct t1.pai_visit_id),4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00198'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020804';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702020804' as level_code ,\rCOALESCE(round(sum(t2.total_fees)/count(distinct t1.pai_visit_id),4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(sum(t2.total_fees)/count(distinct t1.pai_visit_id),4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00199'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020904';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702020904' as level_code ,\rCOALESCE(round(sum(t2.total_fees)/count(distinct t1.pai_visit_id),4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(sum(t2.total_fees)/count(distinct t1.pai_visit_id),4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00200'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702021004';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702021004' as level_code ,\rCOALESCE(round(sum(t2.total_fees)/count(distinct t1.pai_visit_id),4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(sum(t2.total_fees)/count(distinct t1.pai_visit_id),4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00201'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702021104';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702021104' as level_code ,\rCOALESCE(round(sum(t2.total_fees)/count(distinct t1.pai_visit_id),4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(sum(t2.total_fees)/count(distinct t1.pai_visit_id),4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00202'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702021204';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702021204' as level_code ,\rCOALESCE(round(sum(t2.total_fees)/count(distinct t1.pai_visit_id),4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(sum(t2.total_fees)/count(distinct t1.pai_visit_id),4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00203'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702021304';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702021304' as level_code ,\rCOALESCE(round(sum(t2.total_fees)/count(distinct t1.pai_visit_id),4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(sum(t2.total_fees)/count(distinct t1.pai_visit_id),4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00204'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020106';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702020106' as level_code ,\rCOALESCE(count(distinct t1.pai_visit_id),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(distinct t1.pai_visit_id),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key in ('D05024','D5025')\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00182'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020206';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702020206' as level_code ,\rCOALESCE(count(distinct t1.pai_visit_id),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(distinct t1.pai_visit_id),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key in ('D05024','D5025')\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00193'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020306';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702020306' as level_code ,\rCOALESCE(count(distinct t1.pai_visit_id),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(distinct t1.pai_visit_id),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key in ('D05024','D5025')\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00194'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020406';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702020406' as level_code ,\rCOALESCE(count(distinct t1.pai_visit_id),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(distinct t1.pai_visit_id),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key in ('D05024','D5025')\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00183'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020506';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702020506' as level_code ,\rCOALESCE(count(distinct t1.pai_visit_id),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(distinct t1.pai_visit_id),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key in ('D05024','D5025')\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00196'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020606';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702020606' as level_code ,\rCOALESCE(count(distinct t1.pai_visit_id),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(distinct t1.pai_visit_id),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key in ('D05024','D5025')\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00197'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020706';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702020706' as level_code ,\rCOALESCE(count(distinct t1.pai_visit_id),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(distinct t1.pai_visit_id),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key in ('D05024','D5025')\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00198'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020806';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702020806' as level_code ,\rCOALESCE(count(distinct t1.pai_visit_id),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(distinct t1.pai_visit_id),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key in ('D05024','D5025')\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00199'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702020906';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702020906' as level_code ,\rCOALESCE(count(distinct t1.pai_visit_id),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(distinct t1.pai_visit_id),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key in ('D05024','D5025')\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00200'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702021006';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702021006' as level_code ,\rCOALESCE(count(distinct t1.pai_visit_id),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(distinct t1.pai_visit_id),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key in ('D05024','D5025')\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00201'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702021106';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702021106' as level_code ,\rCOALESCE(count(distinct t1.pai_visit_id),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(distinct t1.pai_visit_id),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key in ('D05024','D5025')\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00202'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702021206';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702021206' as level_code ,\rCOALESCE(count(distinct t1.pai_visit_id),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(distinct t1.pai_visit_id),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key in ('D05024','D5025')\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00203'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702021306';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702021306' as level_code ,\rCOALESCE(count(distinct t1.pai_visit_id),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(distinct t1.pai_visit_id),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dwd_inp_medical_d t2 on t1.pai_visit_id = t2.pai_visit_id and t2.key in ('D05024','D5025')\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00204'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702040301';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702040301' as level_code ,\rCOALESCE(count(  t1.pai_visit_id),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(  t1.pai_visit_id),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id\rwhere\r        t1.key = 'D00048'\r  and left(t1.st_date,6)=c_monthlist.month_id\r  --and t2.lyfs = '5'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702040302';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702040302' as level_code ,\rCOALESCE(count(  t1.pai_visit_id),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(  t1.pai_visit_id),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id\rwhere\r        t1.key = 'D00044'\r  and left(t1.st_date,6)=c_monthlist.month_id\r  and t2.lyfs = '5'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702040303';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702040303' as level_code ,\rCOALESCE(count(  distinct t1.pai_visit_id),0) as level_value,\r    now() as update_time ,\rCOALESCE(count( distinct t1.pai_visit_id),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r     --inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id\rwhere\r        t1.key = 'D00226'\r  and left(t1.st_date,6)=c_monthlist.month_id\r  --and t2.lyfs = '5'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702040307';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702040307' as level_code ,\rCOALESCE(count(  distinct t1.pai_visit_id),0) as level_value,\r    now() as update_time ,\rCOALESCE(count( distinct t1.pai_visit_id),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r     --inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id\rwhere\r        t1.key = 'D00227'\r  and left(t1.st_date,6)=c_monthlist.month_id\r  --and t2.lyfs = '5'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702040309';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702040309' as level_code ,\rCOALESCE(count(  distinct t1.pai_visit_id),0) as level_value,\r    now() as update_time ,\rCOALESCE(count( distinct t1.pai_visit_id),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r     --inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id\rwhere\r        t1.key = 'D00229'\r  and left(t1.st_date,6)=c_monthlist.month_id\r  --and t2.lyfs = '5'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702040314';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702040314' as level_code ,\rCOALESCE(count(  distinct t1.pai_visit_id),0) as level_value,\r    now() as update_time ,\rCOALESCE(count( distinct t1.pai_visit_id),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r     --inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id\rwhere\r        t1.key = 'D00228'\r  and left(t1.st_date,6)=c_monthlist.month_id\r  --and t2.lyfs = '5'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702040401';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702040401' as level_code ,\rCOALESCE(count(  distinct t1.pai_visit_id),0) as level_value,\r    now() as update_time ,\rCOALESCE(count( distinct t1.pai_visit_id),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r     --inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id\rwhere\r        t1.key = 'D00231'\r  and left(t1.st_date,6)=c_monthlist.month_id\r  --and t2.lyfs = '5'\r;\r---新生儿产伤占活产婴儿数比例（%）\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702040402';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702040402' as level_code ,\rCOALESCE(round((count(t1.pai_visit_id)*1.00 / max(t2.value))*100,4),0) as level_value,\r    now() as update_time ,\r    round((count(t1.pai_visit_id)*1.00 / max(t2.value))*100,4)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         left join (\r    select\r        left(st_date,6) as month_id,\r        count(1) as value\r    from his_bi.dwd_inp_quantity_d\r    where\r            key = 'D00157'\r      and value = '1'\r    group by left(st_date,6)\r)t2 on left(t1.st_date,6) = t2.month_id\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00231';\r---非器械辅助阴道分娩产伤占阴道分娩人数比例（%）\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702040404';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702040404' as level_code ,\rCOALESCE(round((count(t1.pai_visit_id)*1.00 / max(t2.value))*100,4),0) as level_value,\r    now() as update_time ,\r    round((count(t1.pai_visit_id)*1.00 / max(t2.value))*100,4)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         left join (\r    select\r        left(st_date,6) as month_id,\r        count(1) as value\r    from his_bi.dwd_inp_quantity_d\r    where\r            key = 'D00161'\r      and value not in('1','2')\r    group by left(st_date,6)\r)t2 on left(t1.st_date,6) = t2.month_id\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00042';\r---器械辅助阴道分娩产伤占阴道分娩人数比例（%）\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702040406';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702040406' as level_code ,\rCOALESCE(round((count(t1.pai_visit_id)*1.00 / max(t2.value))*100,4),0) as level_value,\r    now() as update_time ,\r    round((count(t1.pai_visit_id)*1.00 / max(t2.value))*100,4)  as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         left join (\r    select\r        left(st_date,6) as month_id,\r        count(1) as value\r    from his_bi.dwd_inp_quantity_d\r    where\r            key = 'D00161'\r      and value not in('1','2')\r    group by left(st_date,6)\r)t2 on left(t1.st_date,6) = t2.month_id\rwhere\r        left(t1.st_date,6) = c_monthlist.month_id\r  and t1.key = 'D00233'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702040403';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702040403' as level_code ,\rCOALESCE(count(  distinct t1.pai_visit_id),0) as level_value,\r    now() as update_time ,\rCOALESCE(count( distinct t1.pai_visit_id),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r     --inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id\rwhere\r        t1.key = 'D00042'\r  and left(t1.st_date,6)=c_monthlist.month_id\r  --and t2.lyfs = '5'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702040405';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702040405' as level_code ,\rCOALESCE(count(  distinct t1.pai_visit_id),0) as level_value,\r    now() as update_time ,\rCOALESCE(count( distinct t1.pai_visit_id),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r     --inner join his_bi.dw_inp_patient_info_m t2 on t1.pai_visit_id = t2.pai_visit_id\rwhere\r        t1.key = 'D00233'\r  and left(t1.st_date,6)=c_monthlist.month_id\r  --and t2.lyfs = '5'\r;\r---手术后伤口裂开、感染占手术人数比例（%）\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702040304';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702040304' as level_code ,\rcase when count(distinct t2.pai_visit_id) <> 0 then COALESCE(round(count(  distinct t1.pai_visit_id)*1.00/count(distinct t2.pai_visit_id)*100,4),0) else 0 end as level_value,\r    now() as update_time ,\rcase when count(distinct t2.pai_visit_id) <> 0 then COALESCE(round(count(  distinct t1.pai_visit_id)*1.00/count(distinct t2.pai_visit_id)*100,4),0) else 0 end  as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dwd_inp_medical_d t2 on left(t1.st_date,6) = left(t2.st_date,6) and t2.key='D00048'\rwhere\r        t1.key = 'D00226'\r  and left(t1.st_date,6)=c_monthlist.month_id\r  --and t2.lyfs = '5'\r;\r---手术后出血或血肿占手术人数比例（%）\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702040307';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702040307' as level_code ,\rcase when count(distinct t2.pai_visit_id) <>0 then COALESCE(round(count(  distinct t1.pai_visit_id)*1.00/count(distinct t2.pai_visit_id)*100,4),0) else 0 end as level_value,\r    now() as update_time ,\rcase when count(distinct t2.pai_visit_id) <>0 then COALESCE(round(count(  distinct t1.pai_visit_id)*1.00/count(distinct t2.pai_visit_id)*100,4),0) else 0 end as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dwd_inp_medical_d t2 on left(t1.st_date,6) = left(t2.st_date,6) and t2.key='D00048'\rwhere\r        t1.key = 'D00227'\r  and left(t1.st_date,6)=c_monthlist.month_id\r  --and t2.lyfs = '5'\r;\r---手术后呼吸衰竭占手术人数比例（%）\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702040310';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702040310' as level_code ,\rcase when count(distinct t2.pai_visit_id) <>0 then COALESCE(round(count(  distinct t1.pai_visit_id)*1.00/count(distinct t2.pai_visit_id)*100,4),0) else 0 end as level_value,\r    now() as update_time ,\rcase when count(distinct t2.pai_visit_id) <>0 then COALESCE(round(count(  distinct t1.pai_visit_id)*1.00/count(distinct t2.pai_visit_id)*100,4),0) else 0 end as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r         inner join his_bi.dwd_inp_medical_d t2 on left(t1.st_date,6) = left(t2.st_date,6) and t2.key='D00048'\rwhere\r        t1.key = 'D00229'\r  and left(t1.st_date,6)=c_monthlist.month_id\r  --and t2.lyfs = '5'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702040607';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702040607' as level_code ,\rCOALESCE(count(  distinct t1.pai_visit_id),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(  distinct t1.pai_visit_id),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r     --inner join his_bi.dwd_inp_medical_d t2 on left(t1.st_date,6) = left(t2.st_date,6) and t2.key='D00048'\rwhere\r        t1.key = 'D00121'\r  and left(t1.st_date,6)=c_monthlist.month_id\r  --and t2.lyfs = '5'\r;\r---多胎妊娠（非自然）例数\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV00702040608';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV00702040608' as level_code ,\rCOALESCE(count(  distinct t1.pai_visit_id),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(  distinct t1.pai_visit_id),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dwd_inp_medical_d t1\r     --inner join his_bi.dwd_inp_medical_d t2 on left(t1.st_date,6) = left(t2.st_date,6) and t2.key='D00048'\rwhere\r        t1.key = 'D00107'\r  and left(t1.st_date,6)=c_monthlist.month_id\r  --and t2.lyfs = '5'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV007010501';\rinsert into his_bi.level_master_m\rselect\r    t1.month_id as month_id,\r    'LV007010501' as level_code ,\rCOALESCE(t1.kpi_value,0) as level_value,\r    now() as update_time ,\r    t1.kpi_value   as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX03801';\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV007010502';\rinsert into his_bi.level_master_m\rselect\r    t1.month_id as month_id,\r    'LV007010502' as level_code ,\rCOALESCE(t1.kpi_value,0) as level_value,\r    now() as update_time ,\r    t1.kpi_value   as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX03901';\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV007010503';\rinsert into his_bi.level_master_m\rselect\r    am.month_id as month_id,\r    'LV007010503' as level_code,\rCOALESCE(round(sum(am.total_fees)/count(distinct am.pai_visit_id),5),0) as level_value,\r    now() as update_time,\r    round(sum(am.total_fees)/count(distinct am.pai_visit_id),5) as self_value,\r    null as check_flag,\r    null as check_comm\rfrom his_bi.dw_inp_patient_amount_m am\rwhere 1=1\r  and am.month_id = c_monthlist.month_id\rgroup by am.month_id;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV007010504';\rinsert into his_bi.level_master_m\rselect\r    t1.month_id as month_id,\r    'LV007010504' as level_code ,\rCOALESCE(t1.kpi_value,0) as level_value,\r    now() as update_time ,\r    t1.kpi_value   as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX04101';\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV0070501';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV0070501' as level_code ,\rCOALESCE(sum(t1.value),0) as level_value,\r    now() as update_time ,\rCOALESCE(sum(t1.value),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.DWD_OUTP_QUANTITY_D t1\r--inner join his_bi.dwd_inp_medical_d t2 on left(t1.st_date,6) = left(t2.st_date,6) and t2.key='D00048'\rwhere\r        t1.key = 'D00036'\r  and left(t1.st_date,6)=c_monthlist.month_id\r--and t2.lyfs = '5'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV0070502';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV0070502' as level_code ,\rCOALESCE(sum(t1.value),0) as level_value,\r    now() as update_time ,\rCOALESCE(sum(t1.value),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.DWD_OUTP_QUANTITY_D t1\r--inner join his_bi.dwd_inp_medical_d t2 on left(t1.st_date,6) = left(t2.st_date,6) and t2.key='D00048'\rwhere\r        t1.key = 'D00035'\r  and left(t1.st_date,6)=c_monthlist.month_id\r--and t2.lyfs = '5'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV0070504';\rinsert into his_bi.level_master_m\rselect\r    c_monthlist.month_id as month_id,\r    'LV0070504' as level_code ,\rCOALESCE(sum(t1.value),0) as level_value,\r    now() as update_time ,\rCOALESCE(sum(t1.value),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.DWD_OUTP_QUANTITY_D t1\r--inner join his_bi.dwd_inp_medical_d t2 on left(t1.st_date,6) = left(t2.st_date,6) and t2.key='D00048'\rwhere\r        t1.key = 'D00037'\r  and left(t1.st_date,6)=c_monthlist.month_id\r--and t2.lyfs = '5'\r;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV0070507';\rinsert into his_bi.level_master_m\rselect\r    t1.month_id as month_id,\r    'LV0070507' as level_code ,\rCOALESCE(round(sum(t1.kpi_value)/10000,5),0) as level_value,\r    now() as update_time ,\r    round(sum(t1.kpi_value)/10000,5) as self_value  ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code in('JX02701','JX02901')\rgroup by t1.month_id;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV0070506';\rinsert into his_bi.level_master_m\rselect\r    t1.month_id as month_id,\r    'LV0070506' as level_code ,\rCOALESCE(round(sum(t1.kpi_value)/10000,5),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(sum(t1.kpi_value)/10000,5),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code in('JX03902','JX04102')\rgroup by t1.month_id;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV0070509';\rinsert into his_bi.level_master_m\rselect\r    t1.month_id,\r    'LV0070509' as level_code ,\rCOALESCE(round(sum(t1.value+t2.value)/10000,5),0) as level_value,\r    now() as update_time ,\rCOALESCE(round(sum(t1.value+t2.value)/10000,5),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    (select\r         left(st_date,6) as month_id,\r         sum(value) as value\r     from his_bi.DWD_OUTP_INCOME_D\r     where key = 'D00025'\r     group by left(st_date,6))t1 left join\r    (select\r         left(st_date,6) as month_id,\r         sum(value) as value\r     from his_bi.dwd_inp_income_d\r     where key = 'D05011'\r     group by left(st_date,6)) t2 on t1.month_id = t2.month_id\rwhere\r        t1.month_id=c_monthlist.month_id\rgroup by t1.month_id;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV0070514';\rinsert into his_bi.level_master_m\rselect\r    t1.month_id as month_id,\r    'LV0070514' as level_code ,\rCOALESCE(t1.kpi_value,0) as level_value,\r    now() as update_time ,\rCOALESCE(t1.kpi_value,0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX017';\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV0070515';\rinsert into his_bi.level_master_m\rselect\r    t1.month_id as month_id,\r    'LV0070515' as level_code ,\rCOALESCE(round((count(case when t1.kjyw_cf_num >0 then 1 end)*1.0/count(distinct t1.outp_visit_id))*100,4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round((count(case when t1.kjyw_cf_num >0 then 1 end)*1.0/count(distinct t1.outp_visit_id))*100,4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.dw_outp_patient_info_m t1\rwhere\r        COALESCE(is_tj,0)=0\r  and t1.month_id=c_monthlist.month_id\rGROUP BY\r    t1.month_id;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV0070516';\rinsert into his_bi.level_master_m\rselect\r    t1.month_id as month_id,\r    'LV0070516' as level_code ,\rCOALESCE(round((count(case when t1.kjyw_cf_num >0 then 1 end)*1.0/count(distinct t1.outp_visit_id))*100,4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round((count(case when t1.kjyw_cf_num >0 then 1 end)*1.0/count(distinct t1.outp_visit_id))*100,4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.dw_outp_patient_info_m t1\rwhere\r        COALESCE(is_tj,0)=0\r  and t1.month_id=c_monthlist.month_id\r  and is_emergency = 1\rGROUP BY\r    t1.month_id;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV0070517';\rinsert into his_bi.level_master_m\rselect\r    t1.month_id as month_id,\r    'LV0070517' as level_code ,\rCOALESCE(round((count(case when t1.is_use_sykjyw >0 then 1 end)*1.0/count(distinct t1.pai_visit_id))*100,4),0) as level_value,\r    now() as update_time ,\rCOALESCE(round((count(case when t1.is_use_sykjyw >0 then 1 end)*1.0/count(distinct t1.pai_visit_id))*100,4),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom\r    his_bi.dw_inp_patient_info_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\rGROUP BY\r    t1.month_id;\r---药费收入占医疗总收入比重（%）\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV0070508';\rinsert into his_bi.level_master_m\rselect\r    t1.month_id,\r    'LV0070508' as kpi_code,\r    COALESCE(round(COALESCE(max(t2.level_value),0)/max(t1.level_value),5)*100,0) as kpi_value,\r    now() as update_time,\r    COALESCE(round(COALESCE(max(t2.level_value),0)/max(t1.level_value),5)*100,0) as self_value,\r    null as check_flag,\r    null as check_comm\rfrom\r    his_bi.level_master_m t1\r        left join his_bi.level_master_m t2 on t1.level_code = t2.level_code and t1.month_id = t2.month_id\r        and t2.level_code='LV0070506'\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code in('LV0070506','LV0070507')\rgroup by\r    t1.month_id;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV007010203';\rinsert into his_bi.level_master_m\rselect\r    t1.month_id,\r    'LV007010203' as level_code ,\rCOALESCE(count(1),0) as level_value,\r    now() as update_time ,\rCOALESCE(count(1),0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dw_outp_patient_info_m t1\rwhere\r        t1.month_id=c_monthlist.month_id and\r        t1.is_keep = '1'\rgroup by month_id;\r----抗菌药处方数/每百张门诊处方(%)\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV0070503';\rinsert into his_bi.level_master_m\rselect\r    t1.month_id,\r    'LV0070503' as kpi_code,\rCOALESCE(round(COALESCE(max(t2.level_value),0)/max(t1.level_value),5)*100,0) as level_value,\r    now() as update_time,\r    COALESCE(round(COALESCE(max(t2.level_value),0)/max(t1.level_value),5)*100,0) as self_value,\r    null as check_flag,\r    null as check_comm\rfrom\r    his_bi.level_master_m t1\r        left join his_bi.level_master_m t2 on t1.level_code = t2.level_code and t1.month_id = t2.month_id\r        and t2.level_code='LV0070501'\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code in('LV0070501','LV0070502')\rgroup by\r    t1.month_id;\r----注射剂处方数/每百张门诊处方(%)\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV0070505';\rinsert into his_bi.level_master_m\rselect\r    t1.month_id,\r    'LV0070505' as kpi_code,\rCOALESCE(round(COALESCE(max(t2.level_value),0)/max(t1.level_value),5)*100,0) as level_value,\r    now() as update_time,\r    COALESCE(round(COALESCE(max(t2.level_value),0)/max(t1.level_value),5)*100,0) as self_value,\r    null as check_flag,\r    null as check_comm\rfrom\r    his_bi.level_master_m t1\r        left join his_bi.level_master_m t2 on t1.level_code = t2.level_code and t1.month_id = t2.month_id\r        and t2.level_code='LV0070504'\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.level_code in('LV0070504','LV0070502')\rgroup by\r    t1.month_id;\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV007010403';\rinsert into his_bi.level_master_m\rselect\r    t1.month_id as month_id,\r    'LV007010403' as level_code ,\rCOALESCE(t1.kpi_value,0) as level_value,\r    now() as update_time ,\rCOALESCE(t1.kpi_value,0) as self_value,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.kpi_master_m t1\rwhere\r        t1.month_id=c_monthlist.month_id\r  and t1.kpi_code='JX080';\r\rdelete from his_bi.level_master_m where month_id = c_monthlist.month_id and level_code = 'LV007010404';\rinsert into his_bi.level_master_m\rselect\r    replace(left(stat_date::text,7),'-','') as month_id,\r    'LV007010404' as level_code ,\r    case when sum(sy_num) = 0 then 0 else (sum(actual_f_num))/(sum(sy_num)/(DATE_PART('days', DATE_TRUNC('month',t1.stat_date)+ '1 MONTH'::INTERVAL\r- '1 DAY'::INTERVAL))) end as level_value,\r    now() as update_time ,\r    case when sum(sy_num) = 0 then 0 else (sum(actual_f_num))/(sum(sy_num)/(DATE_PART('days', DATE_TRUNC('month',t1.stat_date)+ '1 MONTH'::INTERVAL\r    - '1 DAY'::INTERVAL))) end as self_value ,\r    null as check_flag  ,\r    null as check_comm\rfrom his_bi.dw_inp_dept_work_d t1\rwhere\r        replace(left(stat_date::text,7),'-','')=c_monthlist.month_id\rgroup by replace(left(stat_date::text,7),'-',''),DATE_PART('days', DATE_TRUNC('month',t1.stat_date)+ '1 MONTH'::INTERVAL\r    - '1 DAY'::INTERVAL);\r\r  ""]",['三级公立绩效指标函数\r   ']
266,his_bi,fun_dwd_D05020_d_16755,"
/***
函数名称：住院患者替代食品费
    作用：统计某天患者替代食品费
  开发人：wy 2020-06-10
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D05020  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_income_d
	 where key = 'D05020';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D05020';
	
  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
	select 
			 'D05020',
			 coalesce(sum(t.charges),0),
			 t.patient_id,
			 t.visit_id,
			 t.pai_visit_id,
			 now(),
			'住院患者替代食品费',
			to_char(t.enter_date,'yyyymmdd') AS st_date
	from his_bi.bms_bill_item t
	left join his_bi.pts_pai_visit t1 on t.pai_visit_id = t1.pai_visit_id
	where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')
	and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
	and t.in_out_flag = 'I' --只统计住院患者
	and t.subj_code = 'P'
	and t.charges<>0
	group by to_char(t.enter_date,'yyyymmdd'),
				 t.patient_id,
				 t.visit_id,
				 t.pai_visit_id
				 having coalesce(sum(t.charges),0)<>0;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D05020'],"[""delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D05020';\r \r  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r select \r    'D05020',\r    coalesce(sum(t.charges),0),\r    t.patient_id,\r    t.visit_id,\r    t.pai_visit_id,\r    now(),\r   '住院患者替代食品费',\r   to_char(t.enter_date,'yyyymmdd') AS st_date\r from his_bi.bms_bill_item t\r left join his_bi.pts_pai_visit t1 on t.pai_visit_id = t1.pai_visit_id\r where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1\r and t.in_out_flag = 'I' --只统计住院患者\r and t.subj_code = 'P'\r and t.charges<>0\r group by to_char(t.enter_date,'yyyymmdd'),\r     t.patient_id,\r     t.visit_id,\r     t.pai_visit_id\r     having coalesce(sum(t.charges),0)<>0;\r \r ""]",['住院患者替代食品费\r   ']
267,his_bi,fun_dwd_D05021_d_16756,"
/***
函数名称：住院患者院内调剂
    作用：统计某天患者院内调剂
  开发人：wy 2020-06-10
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D05021  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_income_d
	 where key = 'D05021';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D05021';
	
  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
	select 
			 'D05021',
			 coalesce(sum(t.charges),0),
			 t.patient_id,
			 t.visit_id,
			 t.pai_visit_id,
			 now(),
			'住院患者院内调剂',
			to_char(t.enter_date,'yyyymmdd') AS st_date
	from his_bi.bms_bill_item t
	left join his_bi.pts_pai_visit t1 on t.pai_visit_id = t1.pai_visit_id
	where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')
	and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
	and t.in_out_flag = 'I' --只统计住院患者
	and t.subj_code = 'O'
	and t.charges<>0
	group by to_char(t.enter_date,'yyyymmdd'),
				 t.patient_id,
				 t.visit_id,
				 t.pai_visit_id
				 having coalesce(sum(t.charges),0)<>0;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D05021'],"[""delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D05021';\r \r  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r select \r    'D05021',\r    coalesce(sum(t.charges),0),\r    t.patient_id,\r    t.visit_id,\r    t.pai_visit_id,\r    now(),\r   '住院患者院内调剂',\r   to_char(t.enter_date,'yyyymmdd') AS st_date\r from his_bi.bms_bill_item t\r left join his_bi.pts_pai_visit t1 on t.pai_visit_id = t1.pai_visit_id\r where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1\r and t.in_out_flag = 'I' --只统计住院患者\r and t.subj_code = 'O'\r and t.charges<>0\r group by to_char(t.enter_date,'yyyymmdd'),\r     t.patient_id,\r     t.visit_id,\r     t.pai_visit_id\r     having coalesce(sum(t.charges),0)<>0;\r \r ""]",['住院患者院内调剂\r   ']
268,his_bi,fun_dwd_D05022_d_16757,"
/***
函数名称：住院患者其他费用
    作用：统计某天患者其他费用
  开发人：wy 2020-06-10
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D05022  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_income_d
	 where key = 'D05022';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D05022';
	
  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
	select 
			 'D05022',
			 coalesce(sum(t.charges),0),
			 t.patient_id,
			 t.visit_id,
			 t.pai_visit_id,
			 now(),
			'住院患者其他费用',
			to_char(t.enter_date,'yyyymmdd') AS st_date
	from his_bi.bms_bill_item t
	left join his_bi.pts_pai_visit t1 on t.pai_visit_id = t1.pai_visit_id
	where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')
	and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
	and t.in_out_flag = 'I' --只统计住院患者
	and t.subj_code not in('I01','J01','J02','J03','E01','D01','F01','B01','H01','G01','P','O','C01')
	and t.charges<>0
	group by to_char(t.enter_date,'yyyymmdd'),
				 t.patient_id,
				 t.visit_id,
				 t.pai_visit_id
	having coalesce(sum(t.charges),0)<>0;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D05022'],"[""delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D05022';\r \r  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r select \r    'D05022',\r    coalesce(sum(t.charges),0),\r    t.patient_id,\r    t.visit_id,\r    t.pai_visit_id,\r    now(),\r   '住院患者其他费用',\r   to_char(t.enter_date,'yyyymmdd') AS st_date\r from his_bi.bms_bill_item t\r left join his_bi.pts_pai_visit t1 on t.pai_visit_id = t1.pai_visit_id\r where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1\r and t.in_out_flag = 'I' --只统计住院患者\r and t.subj_code not in('I01','J01','J02','J03','E01','D01','F01','B01','H01','G01','P','O','C01')\r and t.charges<>0\r group by to_char(t.enter_date,'yyyymmdd'),\r     t.patient_id,\r     t.visit_id,\r     t.pai_visit_id\r having coalesce(sum(t.charges),0)<>0;\r \r ""]",['住院患者其他费用\r   ']
269,his_bi,fun_dwd_D05023_d_16758,"
/***
函数名称：住院患者床位费
    作用：统计某天住院患者床位费
  开发人：wy 2020-06-10
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D05023  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_income_d
	 where key = 'D05023';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D05023';
	
  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
	select 
			 'D05023',
			 coalesce(sum(t.charges),0),
			 t.patient_id,
			 t.visit_id,
			 t.pai_visit_id,
			 now(),
			'住院患者床位费',
			to_char(t.enter_date,'yyyymmdd') AS st_date
	from his_bi.bms_bill_item t
	left join his_bi.pts_pai_visit t1 on t.pai_visit_id = t1.pai_visit_id
	where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')
	and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
	and t.in_out_flag = 'I' --只统计住院患者
	and t.subj_code = 'C01'
	and t.charges<>0
	group by to_char(t.enter_date,'yyyymmdd'),
				 t.patient_id,
				 t.visit_id,
				 t.pai_visit_id
	having coalesce(sum(t.charges),0)<>0			 
				 ;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D05023'],"[""delete from his_bi.dwd_inp_income_d where st_date = c_daylist.day_id and key = 'D05023';\r \r  INSERT into his_bi.dwd_inp_income_d(key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r select \r    'D05023',\r    coalesce(sum(t.charges),0),\r    t.patient_id,\r    t.visit_id,\r    t.pai_visit_id,\r    now(),\r   '住院患者床位费',\r   to_char(t.enter_date,'yyyymmdd') AS st_date\r from his_bi.bms_bill_item t\r left join his_bi.pts_pai_visit t1 on t.pai_visit_id = t1.pai_visit_id\r where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1\r and t.in_out_flag = 'I' --只统计住院患者\r and t.subj_code = 'C01'\r and t.charges<>0\r group by to_char(t.enter_date,'yyyymmdd'),\r     t.patient_id,\r     t.visit_id,\r     t.pai_visit_id\r having coalesce(sum(t.charges),0)<>0    \r     ;\r \r ""]",['住院患者床位费\r   ']
270,his_bi,fun_dwd_D05024_d_16759,"
/***
函数名称：符合重点手术ICD编码的48小时内非计划再手术患者(三级妇幼等级评审)
    作用：符合重点手术ICD编码的48小时内非计划再手术患者(三级妇幼等级评审)
  开发人：肖斌 2020-06-16
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D05024  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据


***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D05024';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D05024';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
  SELECT 
		'D05024' as key,
		count(1) as value,
		pai.patient_id,
		pai.visit_id,
		pai.pai_visit_id,
		Now () as insert_date,
	  '重点手术48小时重返' remark ,
		to_char(a.surgerydate,'yyyymmdd') as st_date
FROM
	(
	SELECT
		* 
	FROM
		his_bi.ods_patient_opertion_info op 
	WHERE
		op.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')
		AND op.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 
		AND EXISTS ( SELECT 1 FROM his_bi.dim_icd_biz_rules r WHERE r.type_code = 'SJFY_DJPS_ZDSS' AND r.icd_9 = op.surgerycode ) 
		AND EXISTS (
		SELECT
			1 
		FROM
			his_bi.ods_patient_opertion_info o 
		WHERE
			substr( op.surgerycode, 1, 4 ) = substr( o.surgerycode, 1, 4 ) 
			AND op.patient_id = o.patient_id 
			AND op.visit_id = o.visit_id 
			AND op.surgerydate < o.surgerydate 
			AND o.surgerydate <= op.surgerydate + '48 HOUR' 
		) UNION ALL
	SELECT
		* 
	FROM
		his_bi.ods_patient_opertion_info op 
	WHERE
		op.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')
		AND op.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 
		AND op.surgerycode IN ( '68.402', '68.405' ) 
		AND EXISTS (
		SELECT
			1 
		FROM
			his_bi.ods_patient_opertion_info T 
		WHERE
			T.surgerycode IN ( '40.5903', '40.5905' ) 
			AND T.patient_id = op.patient_id 
			AND T.visit_id = op.visit_id 
		) 
		AND EXISTS (
		SELECT
			1 
		FROM
			his_bi.ods_patient_opertion_info o 
		WHERE
			substr( op.surgerycode, 1, 4 ) = substr( o.surgerycode, 1, 4 ) 
			AND op.patient_id = o.patient_id 
			AND op.visit_id = o.visit_id 
			AND op.surgerydate < o.surgerydate 
			AND o.surgerydate <= op.surgerydate + '48 HOUR' 
		))
	A LEFT JOIN his_bi.pts_pai_visit pai ON A.patient_id = pai.patient_id 
	AND A.visit_id = pai.visit_id 
GROUP BY
	pai.patient_id,
		pai.visit_id,
		pai.pai_visit_id,
		insert_date,
		remark ,
		st_date;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D05024'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D05024';\r \r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r  SELECT \r  'D05024' as key,\r  count(1) as value,\r  pai.patient_id,\r  pai.visit_id,\r  pai.pai_visit_id,\r  Now () as insert_date,\r   '重点手术48小时重返' remark ,\r  to_char(a.surgerydate,'yyyymmdd') as st_date\rFROM\r (\r SELECT\r  * \r FROM\r  his_bi.ods_patient_opertion_info op \r WHERE\r  op.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')\r  AND op.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 \r  AND EXISTS ( SELECT 1 FROM his_bi.dim_icd_biz_rules r WHERE r.type_code = 'SJFY_DJPS_ZDSS' AND r.icd_9 = op.surgerycode ) \r  AND EXISTS (\r  SELECT\r   1 \r  FROM\r   his_bi.ods_patient_opertion_info o \r  WHERE\r   substr( op.surgerycode, 1, 4 ) = substr( o.surgerycode, 1, 4 ) \r   AND op.patient_id = o.patient_id \r   AND op.visit_id = o.visit_id \r   AND op.surgerydate < o.surgerydate \r   AND o.surgerydate <= op.surgerydate + '48 HOUR' \r  ) UNION ALL\r SELECT\r  * \r FROM\r  his_bi.ods_patient_opertion_info op \r WHERE\r  op.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')\r  AND op.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 \r  AND op.surgerycode IN ( '68.402', '68.405' ) \r  AND EXISTS (\r  SELECT\r   1 \r  FROM\r   his_bi.ods_patient_opertion_info T \r  WHERE\r   T.surgerycode IN ( '40.5903', '40.5905' ) \r   AND T.patient_id = op.patient_id \r   AND T.visit_id = op.visit_id \r  ) \r  AND EXISTS (\r  SELECT\r   1 \r  FROM\r   his_bi.ods_patient_opertion_info o \r  WHERE\r   substr( op.surgerycode, 1, 4 ) = substr( o.surgerycode, 1, 4 ) \r   AND op.patient_id = o.patient_id \r   AND op.visit_id = o.visit_id \r   AND op.surgerydate < o.surgerydate \r   AND o.surgerydate <= op.surgerydate + '48 HOUR' \r  ))\r A LEFT JOIN his_bi.pts_pai_visit pai ON A.patient_id = pai.patient_id \r AND A.visit_id = pai.visit_id \rGROUP BY\r pai.patient_id,\r  pai.visit_id,\r  pai.pai_visit_id,\r  insert_date,\r  remark ,\r  st_date;\r \r ""]",['符合重点手术ICD编码的48小时内非计划再手术患者(三级妇幼等级评审)\r   ']
271,his_bi,fun_dwd_D05025_d_16761,"
/***
函数名称：符合重点手术ICD编码的3-31天内非计划再手术患者(三级妇幼等级评审)
    作用：符合重点手术ICD编码的3-31天内非计划再手术患者(三级妇幼等级评审)
  开发人：肖斌 2020-06-16
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D05025  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据


***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D05025';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D05025';
	
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
  SELECT 
		'D05025' as key,
		count(1) as value,
		pai.patient_id,
		pai.visit_id,
		pai.pai_visit_id,
		Now () as insert_date,
	  '重点手术3-31天重返' remark ,
		to_char(a.surgerydate,'yyyymmdd') as st_date
FROM
	(SELECT
	* 
FROM
	his_bi.ods_patient_opertion_info op 
WHERE
	op.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')
	AND op.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 
	AND EXISTS ( SELECT 1 FROM his_bi.dim_icd_biz_rules r WHERE r.type_code = 'SJFY_DJPS_ZDSS' AND r.icd_9 = op.surgerycode ) 
	AND EXISTS (
	SELECT
		1 
	FROM
		his_bi.ods_patient_opertion_info o 
	WHERE
		substr( op.surgerycode, 1, 4 ) = substr( o.surgerycode, 1, 4 ) 
		AND op.patient_id = o.patient_id 
		AND op.visit_id = o.visit_id 
		AND o.surgerydate > op.surgerydate + '48 HOUR' 
		AND o.surgerydate <= op.surgerydate + '744 HOUR' 
	) UNION ALL
SELECT
	* 
FROM
	his_bi.ods_patient_opertion_info op 
WHERE
	op.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')
	AND op.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 
	and op.surgerycode IN ( '68.402', '68.405' ) 
	AND EXISTS (
	SELECT
		1 
	FROM
		his_bi.ods_patient_opertion_info T 
	WHERE
		T.surgerycode IN ( '40.5903', '40.5905' ) 
		AND T.patient_id = op.patient_id 
		AND T.visit_id = op.visit_id 
	) 
	AND EXISTS (
	SELECT
		1 
	FROM
		his_bi.ods_patient_opertion_info o 
	WHERE
		substr( op.surgerycode, 1, 4 ) = substr( o.surgerycode, 1, 4 ) 
		AND op.patient_id = o.patient_id 
		AND op.visit_id = o.visit_id 
		AND op.surgerydate < o.surgerydate 
	AND o.surgerydate <= op.surgerydate + '48 HOUR' 
	))	A LEFT JOIN his_bi.pts_pai_visit pai ON A.patient_id = pai.patient_id 
	AND A.visit_id = pai.visit_id 
GROUP BY
	pai.patient_id,
		pai.visit_id,
		pai.pai_visit_id,
		insert_date,
		remark ,
		st_date;

 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D05025'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D05025';\r \r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r  SELECT \r  'D05025' as key,\r  count(1) as value,\r  pai.patient_id,\r  pai.visit_id,\r  pai.pai_visit_id,\r  Now () as insert_date,\r   '重点手术3-31天重返' remark ,\r  to_char(a.surgerydate,'yyyymmdd') as st_date\rFROM\r (SELECT\r * \rFROM\r his_bi.ods_patient_opertion_info op \rWHERE\r op.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')\r AND op.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 \r AND EXISTS ( SELECT 1 FROM his_bi.dim_icd_biz_rules r WHERE r.type_code = 'SJFY_DJPS_ZDSS' AND r.icd_9 = op.surgerycode ) \r AND EXISTS (\r SELECT\r  1 \r FROM\r  his_bi.ods_patient_opertion_info o \r WHERE\r  substr( op.surgerycode, 1, 4 ) = substr( o.surgerycode, 1, 4 ) \r  AND op.patient_id = o.patient_id \r  AND op.visit_id = o.visit_id \r  AND o.surgerydate > op.surgerydate + '48 HOUR' \r  AND o.surgerydate <= op.surgerydate + '744 HOUR' \r ) UNION ALL\rSELECT\r * \rFROM\r his_bi.ods_patient_opertion_info op \rWHERE\r op.surgerydate >= to_date(c_daylist.day_id,'yyyyMMdd')\r AND op.surgerydate <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 \r and op.surgerycode IN ( '68.402', '68.405' ) \r AND EXISTS (\r SELECT\r  1 \r FROM\r  his_bi.ods_patient_opertion_info T \r WHERE\r  T.surgerycode IN ( '40.5903', '40.5905' ) \r  AND T.patient_id = op.patient_id \r  AND T.visit_id = op.visit_id \r ) \r AND EXISTS (\r SELECT\r  1 \r FROM\r  his_bi.ods_patient_opertion_info o \r WHERE\r  substr( op.surgerycode, 1, 4 ) = substr( o.surgerycode, 1, 4 ) \r  AND op.patient_id = o.patient_id \r  AND op.visit_id = o.visit_id \r  AND op.surgerydate < o.surgerydate \r AND o.surgerydate <= op.surgerydate + '48 HOUR' \r )) A LEFT JOIN his_bi.pts_pai_visit pai ON A.patient_id = pai.patient_id \r AND A.visit_id = pai.visit_id \rGROUP BY\r pai.patient_id,\r  pai.visit_id,\r  pai.pai_visit_id,\r  insert_date,\r  remark ,\r  st_date;\r\r \r ""]",['符合重点手术ICD编码的3-31天内非计划再手术患者(三级妇幼等级评审)\r   ']
272,his_bi,fun_dwd_D05026_d_16763,"
/***
函数名称：7天内重返（国家标准）
    作用：统计某天住院患者7-15天重返
  开发人：liuf 2020-06-16
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D05026  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
	/*住院数据，每次运行当前日期前15天出院的患者，因为病案首页归档有2周左右的延迟*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 15,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_inp_medical_d 
	 where key = 'D05026';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D05026';
	
	/*key = 'D00207' and value = 2 表示'C00' 到 'C97'诊断的 全部肿瘤*/
  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,
																			 remark,st_date) 
  select distinct 'D05026',
				 1 , 
				 patient_id,
				 visit_id,
				 pai_visit_id,
				 now(),
				 '重疾患者2-7天重返（国家标准）',
			  st_date
	from (
				select a.pai_visit_id,d.bah as patient_id,d.zycs as visit_id,to_char(d.cyrq,'yyyymmdd') as st_date
					from his_bi.ods_patient_medical_record d 
					left join	his_bi.pts_pai_visit a on (d.bah =a.patient_id and d.zycs =a.visit_id)
				 inner join his_bi.v_inp_return_patient t 
						on d.bah = t.patient_id 
					 and d.zycs > t.visit_id 
					 and to_date(to_char(d.ryrq ,'yyyymmdd'),'yyyymmdd') >
							 to_date(to_char(t.discharge_dept_date,'yyyymmdd'),'yyyymmdd')
					 and to_date(to_char(d.ryrq,'yyyymmdd'),'yyyymmdd') - 7 <=
							 to_date(to_char(t.discharge_dept_date,'yyyymmdd'),'yyyymmdd')  
				 where not exists (select 1 from his_bi.ods_patient_diag_info where d.brxh=brxh
															and diagdiseasecodestr in ('Z51.0','Z51.1','Z51.2','Z51.5','Z51.8'))    
					 and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')
					and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 
  ) s ; /*多次重返患者，出院当天只打一次重返标志*/
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00207'],"[""delete from his_bi.dwd_inp_medical_d  where st_date = c_daylist.day_id and key = 'D05026';\r \r /*key = 'D00207' and value = 2 表示'C00' 到 'C97'诊断的 全部肿瘤*/\r  INSERT into his_bi.dwd_inp_medical_d (key,value,patient_id,visit_id,pai_visit_id,insert_date,\r                    remark,st_date) \r  select distinct 'D05026',\r     1 , \r     patient_id,\r     visit_id,\r     pai_visit_id,\r     now(),\r     '重疾患者2-7天重返（国家标准）',\r     st_date\r from (\r    select a.pai_visit_id,d.bah as patient_id,d.zycs as visit_id,to_char(d.cyrq,'yyyymmdd') as st_date\r     from his_bi.ods_patient_medical_record d \r     left join his_bi.pts_pai_visit a on (d.bah =a.patient_id and d.zycs =a.visit_id)\r     inner join his_bi.v_inp_return_patient t \r      on d.bah = t.patient_id \r      and d.zycs > t.visit_id \r      and to_date(to_char(d.ryrq ,'yyyymmdd'),'yyyymmdd') >\r        to_date(to_char(t.discharge_dept_date,'yyyymmdd'),'yyyymmdd')\r      and to_date(to_char(d.ryrq,'yyyymmdd'),'yyyymmdd') - 7 <=\r        to_date(to_char(t.discharge_dept_date,'yyyymmdd'),'yyyymmdd')  \r     where not exists (select 1 from his_bi.ods_patient_diag_info where d.brxh=brxh\r               and diagdiseasecodestr in ('Z51.0','Z51.1','Z51.2','Z51.5','Z51.8'))    \r      and d.cyrq >= to_date(c_daylist.day_id,'yyyyMMdd')\r     and d.cyrq <  to_date(c_daylist.day_id,'yyyyMMdd') + 1 \r  ) s ; /*多次重返患者，出院当天只打一次重返标志*/\r \r ""]",['7天内重返（国家标准）\r   ']
273,his_bi,timeadd_16774,"  
/***
用于时间加减相应的时间段
参数：
$1 时间运算格式，分为：ss（秒）,mi（分钟）,hour（小时）,day（天）,week（周）,month（月）,year（年）
$2 时间运算间隔，整型，正负均可
$3 本地时间，常用now()代替
***/
DECLARE  
   YEAR_CONST Char(15) := 'year';  
   MONTH_CONST Char(15) := 'month';  
   WEEK_CONST Char(15) := 'week';  
   DAY_CONST Char(15) := 'day';  
   HOUR_CONST Char(15) := 'hour';  
   MIN_CONST Char(15) :='mi';  
   SECOND_CONST Char(15) :='ss';  
   dateTemp timestamp;  
   intervals interval;  
BEGIN  
   IF lower($1) = lower(YEAR_CONST) THEN  
       select cast(cast(incrementvalue as character varying) || ' year' as interval) into intervals;  
   ELSEIF lower($1) = lower(MONTH_CONST) THEN  
       select cast(cast(incrementvalue as character varying) || ' months' as interval) into intervals;  
   ELSEIF lower($1) = lower(WEEK_CONST) THEN  
       select cast(cast(incrementvalue as character varying) || ' week' as interval) into intervals;  
   ELSEIF lower($1) = lower(DAY_CONST) THEN  
       select cast(cast(incrementvalue as character varying) || ' day' as interval) into intervals;  
   ELSEIF lower($1) = lower(HOUR_CONST) THEN  
       select cast(cast(incrementvalue as character varying) || ' hour' as interval) into intervals;  
   ELSEIF lower($1) = lower(MIN_CONST) THEN  
       select cast(cast(incrementvalue as character varying) || ' minute' as interval) into intervals;  
   ELSEIF lower($1) = lower(SECOND_CONST) THEN  
       select cast(cast(incrementvalue as character varying) || ' second' as interval) into intervals;     
   END IF;  
  
   dateTemp:= inputdate + intervals;  
  
   RETURN dateTemp;  
END;  
",[],[],[]
274,his_bi,trunc_16775,"
declare
 v_timestamp timestamp := null;
 v_formart varchar(10) := upper(p_formart);
begin
 if p_timestamp is not null then
  if v_formart in ('YYYY', 'YEAR') then
   -- 当前年的第一天(YYYY-01-01 00:00:00)
   v_timestamp := date_trunc('year', p_timestamp);
  elsif v_formart in ('MONTH', 'MON', 'MM', 'RM') then
   -- 当前月第一天(YYYY-MM-01 00:00:00)
   v_timestamp := date_trunc('month', p_timestamp);
  elsif v_formart in ('DD', 'DAY', 'DY') then
   -- 当天(YYYY-MM-DD 00:00:00)
   v_timestamp := date_trunc('day', p_timestamp);
  elsif v_formart = 'D' then
   -- 当前周第一天[周日为第一天](YYYY-MM-DD 00:00:00)
   v_timestamp := (date_trunc('WEEK', p_timestamp) - interval'1 day');
  elsif v_formart in ('W1', 'W2', 'W3', 'W4', 'W5', 'W6', 'W7') then
   -- 当前周第几天[周日为第一天](YYYY-MM-DD 00:00:00)
   v_timestamp := date_trunc('WEEK', p_timestamp)::date + substr(v_formart, 2, 1)::integer - 2;
  elsif v_formart ~ '^D\+?[0-9]*$' then
   -- 当年第几天(YYYY-MM-DD 00:00:00)
   if substr(v_formart, 2, length(v_formart)-1)::integer between 1 and 366 then
    v_timestamp := date_trunc('year', p_timestamp)::date + substr(v_formart, 2, length(v_formart)-1)::integer - 1;
    if date_trunc('year', v_timestamp)::date > date_trunc('year', p_timestamp)::date then
     v_timestamp := date_trunc('year', v_timestamp)::date - interval'1 day';
    end if;
   else
    raise exception 'U-2001 [%] is not recognize. please enter ""D[1~366]""', p_formart;
   end if;
  elsif v_formart in ('HH', 'HH24') then
   v_timestamp := date_trunc('hour', p_timestamp);
  elsif v_formart = 'HH12' then
   v_timestamp := to_char(p_timestamp, 'yyyy-mm-dd hh12:00:00')::timestamp;
  elsif v_formart in ('MINUTE', 'MI') then
   v_timestamp := date_trunc('minute', p_timestamp);
  elsif v_formart = 'CC' then
   v_timestamp := to_date((trunc(date_part('years', p_timestamp)::integer/100)*100+1)::varchar, 'yyyy');
  elsif v_formart in ('HELP', '?') then
   raise exception 'U-2001 please enter formart code in ( YYYY|YEAR, MONTH|MON|MM|RM, DD|DAY|DY, D, W[1~7], D[1~366], HH|HH24, HH12, MINUTE|MI, CC )';
  else
   raise exception 'U-2001 [%] is not recognize. you can try [help]', p_formart;
  end if;
 else
  v_timestamp := p_timestamp;
 end if;
 return v_timestamp;
end;
",[],[],[]
275,his_bi,fun_dwd_D00145_d_16625,"
/***
函数名称：门诊体检费
    作用：统计某天门诊体检费（费用以会计科目统计）
  开发人：wy 2020-05-10
命名规范：FUN_模型层级(DWD或者DW)_KPI编码_日期类型D或者M，D表示按天统计，M表示按月统计
 KPI编码：D00145  根据原子指标编码规划来的
    入参：v_start_date，v_end_date  格式均为yyyymmdd，可以一次运行多天的数据
***/
DECLARE
	c_daylist record;
	o_start_date varchar;
	o_end_date varchar;
	i_start_date varchar;
	i_end_date varchar;
	i_count  int4;
BEGIN

  /*如果指标没有历史指标数据，甘肃默认以20200101开始计算*/
  select count(1),to_char(to_date(to_char(now(),'yyyymmdd'),'yyyymmdd') - 1,'yyyymmdd')
         into i_count,i_end_date
	  from his_bi.dwd_outp_income_d
	 where key = 'D00145';
	 
  if(i_count = 0)
	  then 
		  i_start_date := '20200101';
			--raise notice '0 i_start_date is: %', i_start_date;
	else if(i_count > 0)
	  then
		  i_start_date := i_end_date;
			--raise notice '1 i_start_date is: %', i_start_date;
  end if;
	end if;
		
  if(length(trim(v_start_date)) = 0 and length(trim(v_end_date)) = 0)
	/*kettle 调用时，如果不设置参数，默认传入 空字符串，那么默认取当前日期后退一天 */
	  then 
	    o_start_date := i_start_date;
	    o_end_date := i_end_date;
			--raise notice '2 o_start_date is: %', o_start_date;
			--raise notice '2 o_end_date is: %', o_end_date;
	else if (length(trim(v_start_date)) <> 0 and length(trim(v_end_date)) <> 0)
	/*PG function 如果参入任何参数，那么以实际入参为准*/
	  then 
		  o_start_date := v_start_date;
	    o_end_date := v_end_date;
			--raise notice '3 o_start_date is: %', o_start_date;
			--raise notice '3 o_end_date is: %', o_end_date;
	end if;
	end if;
	
	for c_daylist in (select day_id from his_bi.dim_date_info where day_id >= o_start_date and day_id <= o_end_date order by day_id)
	loop 
	
	--raise notice '4 c_daylist.day_id is: %', c_daylist.day_id;
	
	delete from his_bi.dwd_outp_income_d where st_date = c_daylist.day_id and key = 'D00145';
	
  INSERT into his_bi.dwd_outp_income_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,
																			 remark,st_date) 
  select 
				 'D00145',
				 coalesce(sum(t.charges),0),
				 t.patient_id,
				 t.visit_id,
				 t.pai_visit_id,
         now(),
			  '门诊体检费',
			  to_char(t.enter_date,'yyyymmdd') AS st_date
   from his_bi.bms_bill_item t
  where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')
    and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1
    and t.in_out_flag = 'O' --只统计门诊患者
	and t.subj_code in('T01')  --体检费
	and t.charges<>0
  group by to_char(t.enter_date,'yyyymmdd'),
					 t.patient_id,
					 t.visit_id,
				   t.pai_visit_id;
 
	 end loop;
   RETURN 'SUCCESS';  
END;
  ",['D00145'],"[""delete from his_bi.dwd_outp_income_d where st_date = c_daylist.day_id and key = 'D00145';\r \r  INSERT into his_bi.dwd_outp_income_d(key,value,patient_id,visit_id,outp_visit_id,insert_date,\r                    remark,st_date) \r  select \r     'D00145',\r     coalesce(sum(t.charges),0),\r     t.patient_id,\r     t.visit_id,\r     t.pai_visit_id,\r         now(),\r     '门诊体检费',\r     to_char(t.enter_date,'yyyymmdd') AS st_date\r   from his_bi.bms_bill_item t\r  where t.enter_date >= to_date(c_daylist.day_id,'yyyyMMdd')\r    and t.enter_date <  to_date(c_daylist.day_id,'yyyyMMdd')+1\r    and t.in_out_flag = 'O' --只统计门诊患者\r and t.subj_code in('T01')  --体检费\r and t.charges<>0\r  group by to_char(t.enter_date,'yyyymmdd'),\r      t.patient_id,\r      t.visit_id,\r       t.pai_visit_id;\r \r ""]",['门诊体检费\r   ']
